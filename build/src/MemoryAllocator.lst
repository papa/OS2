GAS LISTING /tmp/ccmr5N1h.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator10initMemoryEv
   9              	_ZN15MemoryAllocator10initMemoryEv:
  10              	.LFB27:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 4/27/22.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** #include "../h/Riscv.hpp"
   7:src/MemoryAllocator.cpp **** #include "../h/KConsole.hpp"
   8:src/MemoryAllocator.cpp **** 
   9:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::headAllocated = 0;
  10:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::headFree = 0;
  11:src/MemoryAllocator.cpp **** int MemoryAllocator::memoryInitiliaized = 0;
  12:src/MemoryAllocator.cpp **** 
  13:src/MemoryAllocator.cpp **** void *MemoryAllocator::mem_alloc(size_t size)
  14:src/MemoryAllocator.cpp **** {
  15:src/MemoryAllocator.cpp ****     return tryToAllocateFragment(size);
  16:src/MemoryAllocator.cpp **** }
  17:src/MemoryAllocator.cpp **** 
  18:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::mem_free(void * addr)
  19:src/MemoryAllocator.cpp **** {
  20:src/MemoryAllocator.cpp ****     return tryToFreeSegment(addr);
  21:src/MemoryAllocator.cpp **** }
  22:src/MemoryAllocator.cpp **** 
  23:src/MemoryAllocator.cpp **** void MemoryAllocator::initMemory()
  24:src/MemoryAllocator.cpp **** {
  12              		.loc 1 24 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  25:src/MemoryAllocator.cpp ****     if(memoryInitiliaized == 1)
  20              		.loc 1 25 5
  21              		.loc 1 25 27 is_stmt 0
  22 000c 17070000 		lw	a4,.LANCHOR0
  22      03270700 
  23              		.loc 1 25 5
  24 0014 93071000 		li	a5,1
  25 0018 6302F704 		beq	a4,a5,.L1
  26:src/MemoryAllocator.cpp ****         return;
  27:src/MemoryAllocator.cpp ****     memoryInitiliaized = 1;
  26              		.loc 1 27 5 is_stmt 1
  27              		.loc 1 27 24 is_stmt 0
  28 001c 97070000 		lla	a5,.LANCHOR0
  28      93870700 
  29 0024 13071000 		li	a4,1
GAS LISTING /tmp/ccmr5N1h.s 			page 2


  30 0028 23A0E700 		sw	a4,0(a5)
  28:src/MemoryAllocator.cpp ****     headAllocated = 0;
  31              		.loc 1 28 5 is_stmt 1
  32              		.loc 1 28 19 is_stmt 0
  33 002c 23B40700 		sd	zero,8(a5)
  29:src/MemoryAllocator.cpp ****     headFree = (BlockHeader*)HEAP_START_ADDR;
  34              		.loc 1 29 5 is_stmt 1
  35              		.loc 1 29 14 is_stmt 0
  36 0030 17070000 		la	a4,HEAP_START_ADDR
  36      03370700 
  37 0038 03370700 		ld	a4,0(a4)
  38 003c 23B8E700 		sd	a4,16(a5)
  30:src/MemoryAllocator.cpp ****     headFree->next = 0;
  39              		.loc 1 30 5 is_stmt 1
  40              		.loc 1 30 20 is_stmt 0
  41 0040 23340700 		sd	zero,8(a4)
  31:src/MemoryAllocator.cpp ****     headFree->size = (size_t)((size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1 - sizeof(BlockHea
  42              		.loc 1 31 5 is_stmt 1
  43              		.loc 1 31 53 is_stmt 0
  44 0044 97070000 		la	a5,HEAP_END_ADDR
  44      83B70700 
  45 004c 83B70700 		ld	a5,0(a5)
  46 0050 B387E740 		sub	a5,a5,a4
  47              		.loc 1 31 83
  48 0054 938717FF 		addi	a5,a5,-15
  49              		.loc 1 31 20
  50 0058 2330F700 		sd	a5,0(a4)
  51              	.L1:
  32:src/MemoryAllocator.cpp **** }
  52              		.loc 1 32 1
  53 005c 03348100 		ld	s0,8(sp)
  54              		.cfi_restore 8
  55              		.cfi_def_cfa 2, 16
  56 0060 13010101 		addi	sp,sp,16
  57              		.cfi_def_cfa_offset 0
  58 0064 67800000 		jr	ra
  59              		.cfi_endproc
  60              	.LFE27:
  62              		.align	2
  63              		.globl	_ZN15MemoryAllocator17insertAllFragmentEPvmS0_
  65              	_ZN15MemoryAllocator17insertAllFragmentEPvmS0_:
  66              	.LFB28:
  33:src/MemoryAllocator.cpp **** 
  34:src/MemoryAllocator.cpp **** void MemoryAllocator::insertAllFragment(void *addr, size_t size, void* nxtAddr)
  35:src/MemoryAllocator.cpp **** {
  67              		.loc 1 35 1 is_stmt 1
  68              		.cfi_startproc
  69              	.LVL0:
  70 0068 130101FD 		addi	sp,sp,-48
  71              		.cfi_def_cfa_offset 48
  72 006c 23341102 		sd	ra,40(sp)
  73 0070 23308102 		sd	s0,32(sp)
  74 0074 233C9100 		sd	s1,24(sp)
  75 0078 23382101 		sd	s2,16(sp)
  76 007c 23343101 		sd	s3,8(sp)
  77              		.cfi_offset 1, -8
  78              		.cfi_offset 8, -16
GAS LISTING /tmp/ccmr5N1h.s 			page 3


  79              		.cfi_offset 9, -24
  80              		.cfi_offset 18, -32
  81              		.cfi_offset 19, -40
  82 0080 13040103 		addi	s0,sp,48
  83              		.cfi_def_cfa 8, 0
  84 0084 93040500 		mv	s1,a0
  85 0088 93890500 		mv	s3,a1
  86 008c 13090600 		mv	s2,a2
  36:src/MemoryAllocator.cpp ****     initMemory();
  87              		.loc 1 36 5
  88              		.loc 1 36 15 is_stmt 0
  89 0090 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
  89      E7800000 
  90              	.LVL1:
  37:src/MemoryAllocator.cpp ****     BlockHeader* newAllocated = (BlockHeader*)addr;
  91              		.loc 1 37 5 is_stmt 1
  38:src/MemoryAllocator.cpp ****     newAllocated->next = 0;
  92              		.loc 1 38 5
  93              		.loc 1 38 24 is_stmt 0
  94 0098 23B40400 		sd	zero,8(s1)
  39:src/MemoryAllocator.cpp ****     newAllocated->size = size;
  95              		.loc 1 39 5 is_stmt 1
  96              		.loc 1 39 24 is_stmt 0
  97 009c 23B03401 		sd	s3,0(s1)
  40:src/MemoryAllocator.cpp ****     if(headAllocated == 0)
  98              		.loc 1 40 5 is_stmt 1
  99              	.LBB2:
 100              		.loc 1 40 22 is_stmt 0
 101 00a0 97070000 		ld	a5,.LANCHOR0+8
 101      83B70700 
 102              		.loc 1 40 5
 103 00a8 638E0702 		beqz	a5,.L9
 104              	.LBE2:
  41:src/MemoryAllocator.cpp ****     {
  42:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
  43:src/MemoryAllocator.cpp ****     }
  44:src/MemoryAllocator.cpp ****     else if(nxtAddr <= HEAP_END_ADDR)
 105              		.loc 1 44 10 is_stmt 1
 106              	.LBB6:
 107              	.LBB3:
 108              		.loc 1 44 21 is_stmt 0
 109 00ac 17070000 		la	a4,HEAP_END_ADDR
 109      03370700 
 110 00b4 03370700 		ld	a4,0(a4)
 111              		.loc 1 44 10
 112 00b8 636C2703 		bltu	a4,s2,.L7
 113              	.LBB4:
  45:src/MemoryAllocator.cpp ****     {
  46:src/MemoryAllocator.cpp ****         BlockHeader * allFrag = (BlockHeader*)nxtAddr;
 114              		.loc 1 46 9 is_stmt 1
 115              	.LVL2:
  47:src/MemoryAllocator.cpp ****         newAllocated->next = allFrag->next;
 116              		.loc 1 47 9
 117              		.loc 1 47 39 is_stmt 0
 118 00bc 83378900 		ld	a5,8(s2)
 119              		.loc 1 47 28
 120 00c0 23B4F400 		sd	a5,8(s1)
GAS LISTING /tmp/ccmr5N1h.s 			page 4


  48:src/MemoryAllocator.cpp ****         allFrag->next = newAllocated;
 121              		.loc 1 48 9 is_stmt 1
 122              		.loc 1 48 23 is_stmt 0
 123 00c4 23349900 		sd	s1,8(s2)
 124              	.LVL3:
 125              	.L4:
 126              	.LBE4:
 127              	.LBE3:
 128              	.LBE6:
  49:src/MemoryAllocator.cpp ****     }
  50:src/MemoryAllocator.cpp ****     else
  51:src/MemoryAllocator.cpp ****     {
  52:src/MemoryAllocator.cpp ****         newAllocated->next = headAllocated;
  53:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
  54:src/MemoryAllocator.cpp ****     }
  55:src/MemoryAllocator.cpp **** }
 129              		.loc 1 55 1
 130 00c8 83308102 		ld	ra,40(sp)
 131              		.cfi_remember_state
 132              		.cfi_restore 1
 133 00cc 03340102 		ld	s0,32(sp)
 134              		.cfi_restore 8
 135              		.cfi_def_cfa 2, 48
 136 00d0 83348101 		ld	s1,24(sp)
 137              		.cfi_restore 9
 138              	.LVL4:
 139 00d4 03390101 		ld	s2,16(sp)
 140              		.cfi_restore 18
 141              	.LVL5:
 142 00d8 83398100 		ld	s3,8(sp)
 143              		.cfi_restore 19
 144              	.LVL6:
 145 00dc 13010103 		addi	sp,sp,48
 146              		.cfi_def_cfa_offset 0
 147 00e0 67800000 		jr	ra
 148              	.LVL7:
 149              	.L9:
 150              		.cfi_restore_state
 151              	.LBB7:
  42:src/MemoryAllocator.cpp ****     }
 152              		.loc 1 42 9 is_stmt 1
  42:src/MemoryAllocator.cpp ****     }
 153              		.loc 1 42 23 is_stmt 0
 154 00e4 97070000 		sd	s1,.LANCHOR0+8,a5
 154      23B09700 
 155 00ec 6FF0DFFD 		j	.L4
 156              	.L7:
 157              	.LBB5:
  52:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
 158              		.loc 1 52 9 is_stmt 1
  52:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
 159              		.loc 1 52 28 is_stmt 0
 160 00f0 23B4F400 		sd	a5,8(s1)
  53:src/MemoryAllocator.cpp ****     }
 161              		.loc 1 53 9 is_stmt 1
  53:src/MemoryAllocator.cpp ****     }
 162              		.loc 1 53 23 is_stmt 0
GAS LISTING /tmp/ccmr5N1h.s 			page 5


 163 00f4 97070000 		sd	s1,.LANCHOR0+8,a5
 163      23B09700 
 164              	.LBE5:
 165              	.LBE7:
 166              		.loc 1 55 1
 167 00fc 6FF0DFFC 		j	.L4
 168              		.cfi_endproc
 169              	.LFE28:
 171              		.align	2
 172              		.globl	_ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm
 174              	_ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm:
 175              	.LFB29:
  56:src/MemoryAllocator.cpp **** 
  57:src/MemoryAllocator.cpp **** void MemoryAllocator::insertNewAllocatedFragment(void *addr, size_t size)
  58:src/MemoryAllocator.cpp **** {
 176              		.loc 1 58 1 is_stmt 1
 177              		.cfi_startproc
 178              	.LVL8:
 179 0100 130101FE 		addi	sp,sp,-32
 180              		.cfi_def_cfa_offset 32
 181 0104 233C1100 		sd	ra,24(sp)
 182 0108 23388100 		sd	s0,16(sp)
 183 010c 23349100 		sd	s1,8(sp)
 184 0110 23302101 		sd	s2,0(sp)
 185              		.cfi_offset 1, -8
 186              		.cfi_offset 8, -16
 187              		.cfi_offset 9, -24
 188              		.cfi_offset 18, -32
 189 0114 13040102 		addi	s0,sp,32
 190              		.cfi_def_cfa 8, 0
 191 0118 93040500 		mv	s1,a0
 192 011c 13890500 		mv	s2,a1
  59:src/MemoryAllocator.cpp ****     initMemory();
 193              		.loc 1 59 5
 194              		.loc 1 59 15 is_stmt 0
 195 0120 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 195      E7800000 
 196              	.LVL9:
  60:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 197              		.loc 1 60 5 is_stmt 1
  61:src/MemoryAllocator.cpp ****     BlockHeader* curr =  headAllocated;
 198              		.loc 1 61 5
 199              		.loc 1 61 18 is_stmt 0
 200 0128 97070000 		ld	a5,.LANCHOR0+8
 200      83B70700 
 201              	.LVL10:
  62:src/MemoryAllocator.cpp ****     BlockHeader* newAllocated = (BlockHeader*)addr;
 202              		.loc 1 62 5 is_stmt 1
  63:src/MemoryAllocator.cpp ****     newAllocated->next = 0;
 203              		.loc 1 63 5
 204              		.loc 1 63 24 is_stmt 0
 205 0130 23B40400 		sd	zero,8(s1)
  64:src/MemoryAllocator.cpp ****     newAllocated->size = size;
 206              		.loc 1 64 5 is_stmt 1
 207              		.loc 1 64 24 is_stmt 0
 208 0134 23B02401 		sd	s2,0(s1)
  60:src/MemoryAllocator.cpp ****     BlockHeader* curr =  headAllocated;
GAS LISTING /tmp/ccmr5N1h.s 			page 6


 209              		.loc 1 60 18
 210 0138 13070000 		li	a4,0
 211              	.LVL11:
 212              	.L13:
  65:src/MemoryAllocator.cpp ****     while(curr != 0)
 213              		.loc 1 65 5 is_stmt 1
 214              		.loc 1 65 16
 215 013c 638C0700 		beqz	a5,.L11
  66:src/MemoryAllocator.cpp ****     {
  67:src/MemoryAllocator.cpp ****         if((void*)curr > addr)
 216              		.loc 1 67 9
 217 0140 63E8F400 		bgtu	a5,s1,.L17
  68:src/MemoryAllocator.cpp ****         {
  69:src/MemoryAllocator.cpp ****             newAllocated->next = curr;
  70:src/MemoryAllocator.cpp ****             break;
  71:src/MemoryAllocator.cpp ****         }
  72:src/MemoryAllocator.cpp ****         prev = curr;
 218              		.loc 1 72 9
 219              	.LVL12:
  73:src/MemoryAllocator.cpp ****         curr = curr->next;
 220              		.loc 1 73 9
  72:src/MemoryAllocator.cpp ****         curr = curr->next;
 221              		.loc 1 72 14 is_stmt 0
 222 0144 13870700 		mv	a4,a5
 223              		.loc 1 73 14
 224 0148 83B78700 		ld	a5,8(a5)
 225              	.LVL13:
  65:src/MemoryAllocator.cpp ****     {
 226              		.loc 1 65 5
 227 014c 6FF01FFF 		j	.L13
 228              	.L17:
  69:src/MemoryAllocator.cpp ****             break;
 229              		.loc 1 69 13 is_stmt 1
  69:src/MemoryAllocator.cpp ****             break;
 230              		.loc 1 69 32 is_stmt 0
 231 0150 23B4F400 		sd	a5,8(s1)
  70:src/MemoryAllocator.cpp ****         }
 232              		.loc 1 70 13 is_stmt 1
 233              	.L11:
  74:src/MemoryAllocator.cpp ****     }
  75:src/MemoryAllocator.cpp **** 
  76:src/MemoryAllocator.cpp ****     if(prev == 0)
 234              		.loc 1 76 5
 235 0154 63000702 		beqz	a4,.L18
  77:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
  78:src/MemoryAllocator.cpp ****     else
  79:src/MemoryAllocator.cpp ****         prev->next = newAllocated;
 236              		.loc 1 79 9
 237              		.loc 1 79 20 is_stmt 0
 238 0158 23349700 		sd	s1,8(a4)
 239              	.LVL14:
 240              	.L10:
  80:src/MemoryAllocator.cpp **** }
 241              		.loc 1 80 1
 242 015c 83308101 		ld	ra,24(sp)
 243              		.cfi_remember_state
 244              		.cfi_restore 1
GAS LISTING /tmp/ccmr5N1h.s 			page 7


 245 0160 03340101 		ld	s0,16(sp)
 246              		.cfi_restore 8
 247              		.cfi_def_cfa 2, 32
 248 0164 83348100 		ld	s1,8(sp)
 249              		.cfi_restore 9
 250              	.LVL15:
 251 0168 03390100 		ld	s2,0(sp)
 252              		.cfi_restore 18
 253              	.LVL16:
 254 016c 13010102 		addi	sp,sp,32
 255              		.cfi_def_cfa_offset 0
 256 0170 67800000 		jr	ra
 257              	.LVL17:
 258              	.L18:
 259              		.cfi_restore_state
  77:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
 260              		.loc 1 77 9 is_stmt 1
  77:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
 261              		.loc 1 77 23 is_stmt 0
 262 0174 97070000 		sd	s1,.LANCHOR0+8,a5
 262      23B09700 
 263              	.LVL18:
 264 017c 6FF01FFE 		j	.L10
 265              		.cfi_endproc
 266              	.LFE29:
 268              		.align	2
 269              		.globl	_ZN15MemoryAllocator21tryToAllocateFragmentEm
 271              	_ZN15MemoryAllocator21tryToAllocateFragmentEm:
 272              	.LFB30:
  81:src/MemoryAllocator.cpp **** 
  82:src/MemoryAllocator.cpp **** void* MemoryAllocator::tryToAllocateFragment(size_t size)
  83:src/MemoryAllocator.cpp **** {
 273              		.loc 1 83 1 is_stmt 1
 274              		.cfi_startproc
 275              	.LVL19:
 276 0180 130101FE 		addi	sp,sp,-32
 277              		.cfi_def_cfa_offset 32
 278 0184 233C1100 		sd	ra,24(sp)
 279 0188 23388100 		sd	s0,16(sp)
 280 018c 23349100 		sd	s1,8(sp)
 281 0190 23302101 		sd	s2,0(sp)
 282              		.cfi_offset 1, -8
 283              		.cfi_offset 8, -16
 284              		.cfi_offset 9, -24
 285              		.cfi_offset 18, -32
 286 0194 13040102 		addi	s0,sp,32
 287              		.cfi_def_cfa 8, 0
 288 0198 13090500 		mv	s2,a0
  84:src/MemoryAllocator.cpp ****     initMemory();
 289              		.loc 1 84 5
 290              		.loc 1 84 15 is_stmt 0
 291 019c 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 291      E7800000 
 292              	.LVL20:
  85:src/MemoryAllocator.cpp ****     uint64 retval = 0;
 293              		.loc 1 85 5 is_stmt 1
  86:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
GAS LISTING /tmp/ccmr5N1h.s 			page 8


 294              		.loc 1 86 5
  87:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 295              		.loc 1 87 5
 296              		.loc 1 87 18 is_stmt 0
 297 01a4 97040000 		ld	s1,.LANCHOR0+16
 297      83B40400 
 298              	.LVL21:
  86:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 299              		.loc 1 86 18
 300 01ac 13070000 		li	a4,0
 301              	.LVL22:
 302              	.L28:
  88:src/MemoryAllocator.cpp ****     while(curr != 0)
 303              		.loc 1 88 5 is_stmt 1
 304              		.loc 1 88 16
 305 01b0 6380040C 		beqz	s1,.L29
 306              	.LBB8:
  89:src/MemoryAllocator.cpp ****     {
  90:src/MemoryAllocator.cpp ****         if(curr->size >= size)
 307              		.loc 1 90 9
 308              	.LBB9:
 309              		.loc 1 90 18 is_stmt 0
 310 01b4 83B70400 		ld	a5,0(s1)
 311              		.loc 1 90 9
 312 01b8 63F82701 		bgeu	a5,s2,.L31
 313              	.LBE9:
  91:src/MemoryAllocator.cpp ****         {
  92:src/MemoryAllocator.cpp ****             void* oldAddr = curr;
  93:src/MemoryAllocator.cpp ****             void* newAddr = ((char*)curr + size + sizeof(BlockHeader));
  94:src/MemoryAllocator.cpp ****             void* nxtAllFrag = ((char*)curr + curr->size + sizeof(BlockHeader));
  95:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
  96:src/MemoryAllocator.cpp ****             {
  97:src/MemoryAllocator.cpp ****                 uint64 size2 = curr->size - size;
  98:src/MemoryAllocator.cpp **** 
  99:src/MemoryAllocator.cpp ****                 if(size2 > sizeof(BlockHeader))
 100:src/MemoryAllocator.cpp ****                 {
 101:src/MemoryAllocator.cpp ****                     BlockHeader *newFree = (BlockHeader *) newAddr;
 102:src/MemoryAllocator.cpp ****                     newFree->next = curr->next;
 103:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 104:src/MemoryAllocator.cpp ****                     if (prev != 0)
 105:src/MemoryAllocator.cpp ****                         prev->next = newFree;
 106:src/MemoryAllocator.cpp ****                     else
 107:src/MemoryAllocator.cpp ****                         headFree = newFree;
 108:src/MemoryAllocator.cpp ****                 }
 109:src/MemoryAllocator.cpp ****                 else
 110:src/MemoryAllocator.cpp ****                 {
 111:src/MemoryAllocator.cpp ****                     size+=size2;
 112:src/MemoryAllocator.cpp ****                     if(prev != 0)
 113:src/MemoryAllocator.cpp ****                         prev->next = curr->next;
 114:src/MemoryAllocator.cpp ****                     else
 115:src/MemoryAllocator.cpp ****                         headFree = curr->next;
 116:src/MemoryAllocator.cpp ****                 }
 117:src/MemoryAllocator.cpp ****             }
 118:src/MemoryAllocator.cpp ****             else
 119:src/MemoryAllocator.cpp ****             {
 120:src/MemoryAllocator.cpp ****                 if(prev != 0)
 121:src/MemoryAllocator.cpp ****                     prev->next = 0;
GAS LISTING /tmp/ccmr5N1h.s 			page 9


 122:src/MemoryAllocator.cpp ****                 else
 123:src/MemoryAllocator.cpp ****                     headFree = 0;
 124:src/MemoryAllocator.cpp ****             }
 125:src/MemoryAllocator.cpp ****             insertAllFragment(oldAddr, size, nxtAllFrag);
 126:src/MemoryAllocator.cpp ****             //insertNewAllocatedFragment(oldAddr, size);
 127:src/MemoryAllocator.cpp ****             uint64 oldA = (uint64)((char*)oldAddr + sizeof(BlockHeader));
 128:src/MemoryAllocator.cpp ****             retval = oldA;
 129:src/MemoryAllocator.cpp ****             break;
 130:src/MemoryAllocator.cpp ****         }
 131:src/MemoryAllocator.cpp ****         prev = curr;
 314              		.loc 1 131 9 is_stmt 1
 315              	.LVL23:
 132:src/MemoryAllocator.cpp ****         curr = curr->next;
 316              		.loc 1 132 9
 131:src/MemoryAllocator.cpp ****         curr = curr->next;
 317              		.loc 1 131 14 is_stmt 0
 318 01bc 13870400 		mv	a4,s1
 319              		.loc 1 132 14
 320 01c0 83B48400 		ld	s1,8(s1)
 321              	.LVL24:
 322              	.LBE8:
  88:src/MemoryAllocator.cpp ****     {
 323              		.loc 1 88 5
 324 01c4 6FF0DFFE 		j	.L28
 325              	.L31:
 326              	.LBB17:
 327              	.LBB16:
 328              	.LBB10:
  92:src/MemoryAllocator.cpp ****             void* newAddr = ((char*)curr + size + sizeof(BlockHeader));
 329              		.loc 1 92 13 is_stmt 1
 330              	.LVL25:
  93:src/MemoryAllocator.cpp ****             void* nxtAllFrag = ((char*)curr + curr->size + sizeof(BlockHeader));
 331              		.loc 1 93 13
  93:src/MemoryAllocator.cpp ****             void* nxtAllFrag = ((char*)curr + curr->size + sizeof(BlockHeader));
 332              		.loc 1 93 49 is_stmt 0
 333 01c8 93060901 		addi	a3,s2,16
  93:src/MemoryAllocator.cpp ****             void* nxtAllFrag = ((char*)curr + curr->size + sizeof(BlockHeader));
 334              		.loc 1 93 19
 335 01cc B386D400 		add	a3,s1,a3
 336              	.LVL26:
  94:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
 337              		.loc 1 94 13 is_stmt 1
  94:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
 338              		.loc 1 94 58 is_stmt 0
 339 01d0 13860701 		addi	a2,a5,16
  94:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
 340              		.loc 1 94 19
 341 01d4 3386C400 		add	a2,s1,a2
 342              	.LVL27:
  95:src/MemoryAllocator.cpp ****             {
 343              		.loc 1 95 13 is_stmt 1
 344              	.LBB11:
  95:src/MemoryAllocator.cpp ****             {
 345              		.loc 1 95 24 is_stmt 0
 346 01d8 97050000 		la	a1,HEAP_END_ADDR
 346      83B50500 
 347 01e0 83B50500 		ld	a1,0(a1)
GAS LISTING /tmp/ccmr5N1h.s 			page 10


  95:src/MemoryAllocator.cpp ****             {
 348              		.loc 1 95 13
 349 01e4 63E0D506 		bltu	a1,a3,.L22
 350              	.LBB12:
  97:src/MemoryAllocator.cpp **** 
 351              		.loc 1 97 17 is_stmt 1
  97:src/MemoryAllocator.cpp **** 
 352              		.loc 1 97 24 is_stmt 0
 353 01e8 B3852741 		sub	a1,a5,s2
 354              	.LVL28:
  99:src/MemoryAllocator.cpp ****                 {
 355              		.loc 1 99 17 is_stmt 1
 356              	.LBB13:
 357 01ec 13050001 		li	a0,16
 358 01f0 6376B502 		bleu	a1,a0,.L23
 359              	.LBB14:
 101:src/MemoryAllocator.cpp ****                     newFree->next = curr->next;
 360              		.loc 1 101 21
 361              	.LVL29:
 102:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 362              		.loc 1 102 21
 102:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 363              		.loc 1 102 43 is_stmt 0
 364 01f4 83B78400 		ld	a5,8(s1)
 102:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 365              		.loc 1 102 35
 366 01f8 23B4F600 		sd	a5,8(a3)
 103:src/MemoryAllocator.cpp ****                     if (prev != 0)
 367              		.loc 1 103 21 is_stmt 1
 103:src/MemoryAllocator.cpp ****                     if (prev != 0)
 368              		.loc 1 103 43 is_stmt 0
 369 01fc 938505FF 		addi	a1,a1,-16
 370              	.LVL30:
 103:src/MemoryAllocator.cpp ****                     if (prev != 0)
 371              		.loc 1 103 35
 372 0200 23B0B600 		sd	a1,0(a3)
 104:src/MemoryAllocator.cpp ****                         prev->next = newFree;
 373              		.loc 1 104 21 is_stmt 1
 374 0204 63060700 		beqz	a4,.L24
 105:src/MemoryAllocator.cpp ****                     else
 375              		.loc 1 105 25
 105:src/MemoryAllocator.cpp ****                     else
 376              		.loc 1 105 36 is_stmt 0
 377 0208 2334D700 		sd	a3,8(a4)
 378 020c 6F000004 		j	.L25
 379              	.L24:
 107:src/MemoryAllocator.cpp ****                 }
 380              		.loc 1 107 25 is_stmt 1
 107:src/MemoryAllocator.cpp ****                 }
 381              		.loc 1 107 34 is_stmt 0
 382 0210 97070000 		sd	a3,.LANCHOR0+16,a5
 382      23B0D700 
 383 0218 6F004003 		j	.L25
 384              	.LVL31:
 385              	.L23:
 386              	.LBE14:
 111:src/MemoryAllocator.cpp ****                     if(prev != 0)
GAS LISTING /tmp/ccmr5N1h.s 			page 11


 387              		.loc 1 111 21 is_stmt 1
 112:src/MemoryAllocator.cpp ****                         prev->next = curr->next;
 388              		.loc 1 112 21
 389 021c 630A0700 		beqz	a4,.L26
 113:src/MemoryAllocator.cpp ****                     else
 390              		.loc 1 113 25
 113:src/MemoryAllocator.cpp ****                     else
 391              		.loc 1 113 44 is_stmt 0
 392 0220 83B68400 		ld	a3,8(s1)
 393              	.LVL32:
 113:src/MemoryAllocator.cpp ****                     else
 394              		.loc 1 113 36
 395 0224 2334D700 		sd	a3,8(a4)
 111:src/MemoryAllocator.cpp ****                     if(prev != 0)
 396              		.loc 1 111 25
 397 0228 13890700 		mv	s2,a5
 398              	.LVL33:
 399 022c 6F000002 		j	.L25
 400              	.LVL34:
 401              	.L26:
 115:src/MemoryAllocator.cpp ****                 }
 402              		.loc 1 115 25 is_stmt 1
 115:src/MemoryAllocator.cpp ****                 }
 403              		.loc 1 115 42 is_stmt 0
 404 0230 03B78400 		ld	a4,8(s1)
 405              	.LVL35:
 115:src/MemoryAllocator.cpp ****                 }
 406              		.loc 1 115 34
 407 0234 97060000 		sd	a4,.LANCHOR0+16,a3
 407      23B0E600 
 408              	.LVL36:
 111:src/MemoryAllocator.cpp ****                     if(prev != 0)
 409              		.loc 1 111 25
 410 023c 13890700 		mv	s2,a5
 411              	.LVL37:
 412 0240 6F00C000 		j	.L25
 413              	.LVL38:
 414              	.L22:
 415              	.LBE13:
 416              	.LBE12:
 120:src/MemoryAllocator.cpp ****                     prev->next = 0;
 417              		.loc 1 120 17 is_stmt 1
 418 0244 63000702 		beqz	a4,.L27
 121:src/MemoryAllocator.cpp ****                 else
 419              		.loc 1 121 21
 121:src/MemoryAllocator.cpp ****                 else
 420              		.loc 1 121 32 is_stmt 0
 421 0248 23340700 		sd	zero,8(a4)
 422              	.LVL39:
 423              	.L25:
 424              	.LBE11:
 125:src/MemoryAllocator.cpp ****             //insertNewAllocatedFragment(oldAddr, size);
 425              		.loc 1 125 13 is_stmt 1
 125:src/MemoryAllocator.cpp ****             //insertNewAllocatedFragment(oldAddr, size);
 426              		.loc 1 125 30 is_stmt 0
 427 024c 93050900 		mv	a1,s2
 428 0250 13850400 		mv	a0,s1
GAS LISTING /tmp/ccmr5N1h.s 			page 12


 429 0254 97000000 		call	_ZN15MemoryAllocator17insertAllFragmentEPvmS0_
 429      E7800000 
 430              	.LVL40:
 127:src/MemoryAllocator.cpp ****             retval = oldA;
 431              		.loc 1 127 13 is_stmt 1
 127:src/MemoryAllocator.cpp ****             retval = oldA;
 432              		.loc 1 127 51 is_stmt 0
 433 025c 13850401 		addi	a0,s1,16
 434              	.LVL41:
 128:src/MemoryAllocator.cpp ****             break;
 435              		.loc 1 128 13 is_stmt 1
 129:src/MemoryAllocator.cpp ****         }
 436              		.loc 1 129 13
 437 0260 6F004001 		j	.L20
 438              	.LVL42:
 439              	.L27:
 440              	.LBB15:
 123:src/MemoryAllocator.cpp ****             }
 441              		.loc 1 123 21
 123:src/MemoryAllocator.cpp ****             }
 442              		.loc 1 123 30 is_stmt 0
 443 0264 97070000 		sd	zero,.LANCHOR0+16,a5
 443      23B00700 
 444 026c 6FF01FFE 		j	.L25
 445              	.LVL43:
 446              	.L29:
 447              	.LBE15:
 448              	.LBE10:
 449              	.LBE16:
 450              	.LBE17:
  85:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 451              		.loc 1 85 12
 452 0270 13050000 		li	a0,0
 453              	.LVL44:
 454              	.L20:
 133:src/MemoryAllocator.cpp ****     }
 134:src/MemoryAllocator.cpp **** 
 135:src/MemoryAllocator.cpp ****     return (void*)retval;
 455              		.loc 1 135 5 is_stmt 1
 136:src/MemoryAllocator.cpp **** }
 456              		.loc 1 136 1 is_stmt 0
 457 0274 83308101 		ld	ra,24(sp)
 458              		.cfi_restore 1
 459 0278 03340101 		ld	s0,16(sp)
 460              		.cfi_restore 8
 461              		.cfi_def_cfa 2, 32
 462 027c 83348100 		ld	s1,8(sp)
 463              		.cfi_restore 9
 464              	.LVL45:
 465 0280 03390100 		ld	s2,0(sp)
 466              		.cfi_restore 18
 467              	.LVL46:
 468 0284 13010102 		addi	sp,sp,32
 469              		.cfi_def_cfa_offset 0
 470 0288 67800000 		jr	ra
 471              		.cfi_endproc
 472              	.LFE30:
GAS LISTING /tmp/ccmr5N1h.s 			page 13


 474              		.align	2
 475              		.globl	_ZN15MemoryAllocator9mem_allocEm
 477              	_ZN15MemoryAllocator9mem_allocEm:
 478              	.LFB25:
  14:src/MemoryAllocator.cpp ****     return tryToAllocateFragment(size);
 479              		.loc 1 14 1 is_stmt 1
 480              		.cfi_startproc
 481              	.LVL47:
 482 028c 130101FF 		addi	sp,sp,-16
 483              		.cfi_def_cfa_offset 16
 484 0290 23341100 		sd	ra,8(sp)
 485 0294 23308100 		sd	s0,0(sp)
 486              		.cfi_offset 1, -8
 487              		.cfi_offset 8, -16
 488 0298 13040101 		addi	s0,sp,16
 489              		.cfi_def_cfa 8, 0
  15:src/MemoryAllocator.cpp **** }
 490              		.loc 1 15 5
  15:src/MemoryAllocator.cpp **** }
 491              		.loc 1 15 33 is_stmt 0
 492 029c 97000000 		call	_ZN15MemoryAllocator21tryToAllocateFragmentEm
 492      E7800000 
 493              	.LVL48:
  16:src/MemoryAllocator.cpp **** 
 494              		.loc 1 16 1
 495 02a4 83308100 		ld	ra,8(sp)
 496              		.cfi_restore 1
 497 02a8 03340100 		ld	s0,0(sp)
 498              		.cfi_restore 8
 499              		.cfi_def_cfa 2, 16
 500 02ac 13010101 		addi	sp,sp,16
 501              		.cfi_def_cfa_offset 0
 502 02b0 67800000 		jr	ra
 503              		.cfi_endproc
 504              	.LFE25:
 506              		.align	2
 507              		.globl	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm
 509              	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm:
 510              	.LFB31:
 137:src/MemoryAllocator.cpp **** 
 138:src/MemoryAllocator.cpp **** void MemoryAllocator::insertNewFreeSegment(void* addr, size_t size)
 139:src/MemoryAllocator.cpp **** {
 511              		.loc 1 139 1 is_stmt 1
 512              		.cfi_startproc
 513              	.LVL49:
 514 02b4 130101FE 		addi	sp,sp,-32
 515              		.cfi_def_cfa_offset 32
 516 02b8 233C1100 		sd	ra,24(sp)
 517 02bc 23388100 		sd	s0,16(sp)
 518 02c0 23349100 		sd	s1,8(sp)
 519 02c4 23302101 		sd	s2,0(sp)
 520              		.cfi_offset 1, -8
 521              		.cfi_offset 8, -16
 522              		.cfi_offset 9, -24
 523              		.cfi_offset 18, -32
 524 02c8 13040102 		addi	s0,sp,32
 525              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccmr5N1h.s 			page 14


 526 02cc 93040500 		mv	s1,a0
 527 02d0 13890500 		mv	s2,a1
 140:src/MemoryAllocator.cpp ****     initMemory();
 528              		.loc 1 140 5
 529              		.loc 1 140 15 is_stmt 0
 530 02d4 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 530      E7800000 
 531              	.LVL50:
 141:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 532              		.loc 1 141 5 is_stmt 1
 142:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 533              		.loc 1 142 5
 534              		.loc 1 142 18 is_stmt 0
 535 02dc 97070000 		ld	a5,.LANCHOR0+16
 535      83B70700 
 536              	.LVL51:
 143:src/MemoryAllocator.cpp ****     BlockHeader* newSegment = (BlockHeader*)addr;
 537              		.loc 1 143 5 is_stmt 1
 144:src/MemoryAllocator.cpp ****     newSegment->size = size;
 538              		.loc 1 144 5
 539              		.loc 1 144 22 is_stmt 0
 540 02e4 23B02401 		sd	s2,0(s1)
 145:src/MemoryAllocator.cpp ****     newSegment->next = 0;
 541              		.loc 1 145 5 is_stmt 1
 542              		.loc 1 145 22 is_stmt 0
 543 02e8 23B40400 		sd	zero,8(s1)
 141:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 544              		.loc 1 141 18
 545 02ec 13070000 		li	a4,0
 546              	.LVL52:
 547              	.L37:
 146:src/MemoryAllocator.cpp ****     while(curr != 0)
 548              		.loc 1 146 5 is_stmt 1
 549              		.loc 1 146 16
 550 02f0 638C0700 		beqz	a5,.L35
 147:src/MemoryAllocator.cpp ****     {
 148:src/MemoryAllocator.cpp ****         if((void*)curr > addr)
 551              		.loc 1 148 9
 552 02f4 63E8F400 		bgtu	a5,s1,.L43
 149:src/MemoryAllocator.cpp ****         {
 150:src/MemoryAllocator.cpp ****             newSegment->next = curr;
 151:src/MemoryAllocator.cpp ****             break;
 152:src/MemoryAllocator.cpp ****         }
 153:src/MemoryAllocator.cpp **** 
 154:src/MemoryAllocator.cpp ****         prev = curr;
 553              		.loc 1 154 9
 554              	.LVL53:
 155:src/MemoryAllocator.cpp ****         curr = curr->next;
 555              		.loc 1 155 9
 154:src/MemoryAllocator.cpp ****         curr = curr->next;
 556              		.loc 1 154 14 is_stmt 0
 557 02f8 13870700 		mv	a4,a5
 558              		.loc 1 155 14
 559 02fc 83B78700 		ld	a5,8(a5)
 560              	.LVL54:
 146:src/MemoryAllocator.cpp ****     {
 561              		.loc 1 146 5
GAS LISTING /tmp/ccmr5N1h.s 			page 15


 562 0300 6FF01FFF 		j	.L37
 563              	.L43:
 150:src/MemoryAllocator.cpp ****             break;
 564              		.loc 1 150 13 is_stmt 1
 150:src/MemoryAllocator.cpp ****             break;
 565              		.loc 1 150 30 is_stmt 0
 566 0304 23B4F400 		sd	a5,8(s1)
 151:src/MemoryAllocator.cpp ****         }
 567              		.loc 1 151 13 is_stmt 1
 568              	.L35:
 156:src/MemoryAllocator.cpp ****     }
 157:src/MemoryAllocator.cpp **** 
 158:src/MemoryAllocator.cpp ****     if(prev == 0)
 569              		.loc 1 158 5
 570 0308 63060704 		beqz	a4,.L44
 159:src/MemoryAllocator.cpp ****         headFree = newSegment;
 160:src/MemoryAllocator.cpp ****     else
 161:src/MemoryAllocator.cpp ****         prev->next = newSegment;
 571              		.loc 1 161 9
 572              		.loc 1 161 20 is_stmt 0
 573 030c 23349700 		sd	s1,8(a4)
 574              	.LVL55:
 575              	.L39:
 162:src/MemoryAllocator.cpp **** 
 163:src/MemoryAllocator.cpp ****     if(newSegment->next != 0 && (char*)newSegment->next == (char*)newSegment + newSegment->size + s
 576              		.loc 1 163 5 is_stmt 1
 577              		.loc 1 163 20 is_stmt 0
 578 0310 83B78400 		ld	a5,8(s1)
 579              		.loc 1 163 5
 580 0314 638A0700 		beqz	a5,.L40
 581              		.loc 1 163 92 discriminator 1
 582 0318 03B60400 		ld	a2,0(s1)
 583              		.loc 1 163 97 discriminator 1
 584 031c 93060601 		addi	a3,a2,16
 585 0320 B386D400 		add	a3,s1,a3
 586              		.loc 1 163 30 discriminator 1
 587 0324 638ED702 		beq	a5,a3,.L45
 588              	.L40:
 164:src/MemoryAllocator.cpp ****     {
 165:src/MemoryAllocator.cpp ****         newSegment->size += newSegment->next->size + sizeof(BlockHeader);
 166:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 167:src/MemoryAllocator.cpp ****     }
 168:src/MemoryAllocator.cpp **** 
 169:src/MemoryAllocator.cpp ****     if(prev != 0 && (char*)newSegment == (char*)prev + prev->size + sizeof(BlockHeader))
 589              		.loc 1 169 5 is_stmt 1
 590 0328 630A0700 		beqz	a4,.L34
 591              		.loc 1 169 62 is_stmt 0 discriminator 1
 592 032c 83360700 		ld	a3,0(a4)
 593              		.loc 1 169 67 discriminator 1
 594 0330 93870601 		addi	a5,a3,16
 595 0334 B307F700 		add	a5,a4,a5
 596              		.loc 1 169 18 discriminator 1
 597 0338 63829704 		beq	a5,s1,.L46
 598              	.L34:
 170:src/MemoryAllocator.cpp ****     {
 171:src/MemoryAllocator.cpp ****         prev->size+=newSegment->size + sizeof(BlockHeader);
 172:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
GAS LISTING /tmp/ccmr5N1h.s 			page 16


 173:src/MemoryAllocator.cpp ****     }
 174:src/MemoryAllocator.cpp **** }
 599              		.loc 1 174 1
 600 033c 83308101 		ld	ra,24(sp)
 601              		.cfi_remember_state
 602              		.cfi_restore 1
 603 0340 03340101 		ld	s0,16(sp)
 604              		.cfi_restore 8
 605              		.cfi_def_cfa 2, 32
 606 0344 83348100 		ld	s1,8(sp)
 607              		.cfi_restore 9
 608              	.LVL56:
 609 0348 03390100 		ld	s2,0(sp)
 610              		.cfi_restore 18
 611              	.LVL57:
 612 034c 13010102 		addi	sp,sp,32
 613              		.cfi_def_cfa_offset 0
 614 0350 67800000 		jr	ra
 615              	.LVL58:
 616              	.L44:
 617              		.cfi_restore_state
 159:src/MemoryAllocator.cpp ****     else
 618              		.loc 1 159 9 is_stmt 1
 159:src/MemoryAllocator.cpp ****     else
 619              		.loc 1 159 18 is_stmt 0
 620 0354 97070000 		sd	s1,.LANCHOR0+16,a5
 620      23B09700 
 621              	.LVL59:
 622 035c 6FF05FFB 		j	.L39
 623              	.L45:
 165:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 624              		.loc 1 165 9 is_stmt 1
 165:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 625              		.loc 1 165 47 is_stmt 0
 626 0360 83B60700 		ld	a3,0(a5)
 165:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 627              		.loc 1 165 26
 628 0364 3306D600 		add	a2,a2,a3
 629 0368 13060601 		addi	a2,a2,16
 630 036c 23B0C400 		sd	a2,0(s1)
 166:src/MemoryAllocator.cpp ****     }
 631              		.loc 1 166 9 is_stmt 1
 166:src/MemoryAllocator.cpp ****     }
 632              		.loc 1 166 46 is_stmt 0
 633 0370 83B78700 		ld	a5,8(a5)
 166:src/MemoryAllocator.cpp ****     }
 634              		.loc 1 166 26
 635 0374 23B4F400 		sd	a5,8(s1)
 636 0378 6FF01FFB 		j	.L40
 637              	.L46:
 171:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 638              		.loc 1 171 9 is_stmt 1
 171:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 639              		.loc 1 171 33 is_stmt 0
 640 037c 83B70400 		ld	a5,0(s1)
 171:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 641              		.loc 1 171 19
GAS LISTING /tmp/ccmr5N1h.s 			page 17


 642 0380 B386F600 		add	a3,a3,a5
 643 0384 93860601 		addi	a3,a3,16
 644 0388 2330D700 		sd	a3,0(a4)
 172:src/MemoryAllocator.cpp ****     }
 645              		.loc 1 172 9 is_stmt 1
 172:src/MemoryAllocator.cpp ****     }
 646              		.loc 1 172 34 is_stmt 0
 647 038c 83B78400 		ld	a5,8(s1)
 172:src/MemoryAllocator.cpp ****     }
 648              		.loc 1 172 20
 649 0390 2334F700 		sd	a5,8(a4)
 650              		.loc 1 174 1
 651 0394 6FF09FFA 		j	.L34
 652              		.cfi_endproc
 653              	.LFE31:
 655              		.align	2
 656              		.globl	_ZN15MemoryAllocator16tryToFreeSegmentEPv
 658              	_ZN15MemoryAllocator16tryToFreeSegmentEPv:
 659              	.LFB32:
 175:src/MemoryAllocator.cpp **** 
 176:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::tryToFreeSegment(void* addr)
 177:src/MemoryAllocator.cpp **** {
 660              		.loc 1 177 1 is_stmt 1
 661              		.cfi_startproc
 662              	.LVL60:
 663 0398 130101FE 		addi	sp,sp,-32
 664              		.cfi_def_cfa_offset 32
 665 039c 233C1100 		sd	ra,24(sp)
 666 03a0 23388100 		sd	s0,16(sp)
 667 03a4 23349100 		sd	s1,8(sp)
 668 03a8 23302101 		sd	s2,0(sp)
 669              		.cfi_offset 1, -8
 670              		.cfi_offset 8, -16
 671              		.cfi_offset 9, -24
 672              		.cfi_offset 18, -32
 673 03ac 13040102 		addi	s0,sp,32
 674              		.cfi_def_cfa 8, 0
 675 03b0 13090500 		mv	s2,a0
 178:src/MemoryAllocator.cpp ****     initMemory();
 676              		.loc 1 178 5
 677              		.loc 1 178 15 is_stmt 0
 678 03b4 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 678      E7800000 
 679              	.LVL61:
 179:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 680              		.loc 1 179 5 is_stmt 1
 180:src/MemoryAllocator.cpp ****     BlockHeader* curr = headAllocated;
 681              		.loc 1 180 5
 682              		.loc 1 180 18 is_stmt 0
 683 03bc 97040000 		ld	s1,.LANCHOR0+8
 683      83B40400 
 684              	.LVL62:
 179:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 685              		.loc 1 179 18
 686 03c4 13070000 		li	a4,0
 687              	.LVL63:
 688              	.L52:
GAS LISTING /tmp/ccmr5N1h.s 			page 18


 181:src/MemoryAllocator.cpp ****     while(curr != 0)
 689              		.loc 1 181 5 is_stmt 1
 690              		.loc 1 181 16
 691 03c8 638A0402 		beqz	s1,.L48
 182:src/MemoryAllocator.cpp ****     {
 183:src/MemoryAllocator.cpp ****         if(addr == (void*)((char*)curr + sizeof(BlockHeader)))
 692              		.loc 1 183 9
 693              		.loc 1 183 20 is_stmt 0
 694 03cc 93870401 		addi	a5,s1,16
 695              		.loc 1 183 9
 696 03d0 63882701 		beq	a5,s2,.L56
 184:src/MemoryAllocator.cpp ****         {
 185:src/MemoryAllocator.cpp ****             if(prev != 0)
 186:src/MemoryAllocator.cpp ****                 prev->next = curr->next;
 187:src/MemoryAllocator.cpp ****             else
 188:src/MemoryAllocator.cpp ****                 headAllocated = curr->next;
 189:src/MemoryAllocator.cpp **** 
 190:src/MemoryAllocator.cpp ****             insertNewFreeSegment((void*)curr, curr->size);
 191:src/MemoryAllocator.cpp **** 
 192:src/MemoryAllocator.cpp ****             break;
 193:src/MemoryAllocator.cpp ****         }
 194:src/MemoryAllocator.cpp **** 
 195:src/MemoryAllocator.cpp ****         prev = curr;
 697              		.loc 1 195 9 is_stmt 1
 698              	.LVL64:
 196:src/MemoryAllocator.cpp ****         curr = curr->next;
 699              		.loc 1 196 9
 195:src/MemoryAllocator.cpp ****         curr = curr->next;
 700              		.loc 1 195 14 is_stmt 0
 701 03d4 13870400 		mv	a4,s1
 702              		.loc 1 196 14
 703 03d8 83B48400 		ld	s1,8(s1)
 704              	.LVL65:
 181:src/MemoryAllocator.cpp ****     {
 705              		.loc 1 181 5
 706 03dc 6FF0DFFE 		j	.L52
 707              	.L56:
 185:src/MemoryAllocator.cpp ****                 prev->next = curr->next;
 708              		.loc 1 185 13 is_stmt 1
 709 03e0 630E0702 		beqz	a4,.L50
 186:src/MemoryAllocator.cpp ****             else
 710              		.loc 1 186 17
 186:src/MemoryAllocator.cpp ****             else
 711              		.loc 1 186 36 is_stmt 0
 712 03e4 83B78400 		ld	a5,8(s1)
 186:src/MemoryAllocator.cpp ****             else
 713              		.loc 1 186 28
 714 03e8 2334F700 		sd	a5,8(a4)
 715              	.LVL66:
 716              	.L51:
 190:src/MemoryAllocator.cpp **** 
 717              		.loc 1 190 13 is_stmt 1
 190:src/MemoryAllocator.cpp **** 
 718              		.loc 1 190 33 is_stmt 0
 719 03ec 83B50400 		ld	a1,0(s1)
 720 03f0 13850400 		mv	a0,s1
 721 03f4 97000000 		call	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm
GAS LISTING /tmp/ccmr5N1h.s 			page 19


 721      E7800000 
 722              	.LVL67:
 192:src/MemoryAllocator.cpp ****         }
 723              		.loc 1 192 13 is_stmt 1
 724              	.L48:
 197:src/MemoryAllocator.cpp ****     }
 198:src/MemoryAllocator.cpp **** 
 199:src/MemoryAllocator.cpp ****     if(curr != 0)
 725              		.loc 1 199 5
 726 03fc 63880402 		beqz	s1,.L54
 200:src/MemoryAllocator.cpp ****         return 0;
 727              		.loc 1 200 16 is_stmt 0
 728 0400 13050000 		li	a0,0
 729              	.L47:
 201:src/MemoryAllocator.cpp ****     else
 202:src/MemoryAllocator.cpp ****         return 1;
 203:src/MemoryAllocator.cpp **** }
 730              		.loc 1 203 1
 731 0404 83308101 		ld	ra,24(sp)
 732              		.cfi_remember_state
 733              		.cfi_restore 1
 734 0408 03340101 		ld	s0,16(sp)
 735              		.cfi_restore 8
 736              		.cfi_def_cfa 2, 32
 737 040c 83348100 		ld	s1,8(sp)
 738              		.cfi_restore 9
 739              	.LVL68:
 740 0410 03390100 		ld	s2,0(sp)
 741              		.cfi_restore 18
 742              	.LVL69:
 743 0414 13010102 		addi	sp,sp,32
 744              		.cfi_def_cfa_offset 0
 745 0418 67800000 		jr	ra
 746              	.LVL70:
 747              	.L50:
 748              		.cfi_restore_state
 188:src/MemoryAllocator.cpp **** 
 749              		.loc 1 188 17 is_stmt 1
 188:src/MemoryAllocator.cpp **** 
 750              		.loc 1 188 39 is_stmt 0
 751 041c 83B78400 		ld	a5,8(s1)
 188:src/MemoryAllocator.cpp **** 
 752              		.loc 1 188 31
 753 0420 17070000 		sd	a5,.LANCHOR0+8,a4
 753      2330F700 
 754              	.LVL71:
 755 0428 6FF05FFC 		j	.L51
 756              	.L54:
 202:src/MemoryAllocator.cpp **** }
 757              		.loc 1 202 16
 758 042c 13051000 		li	a0,1
 759 0430 6FF05FFD 		j	.L47
 760              		.cfi_endproc
 761              	.LFE32:
 763              		.align	2
 764              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 766              	_ZN15MemoryAllocator8mem_freeEPv:
GAS LISTING /tmp/ccmr5N1h.s 			page 20


 767              	.LFB26:
  19:src/MemoryAllocator.cpp ****     return tryToFreeSegment(addr);
 768              		.loc 1 19 1 is_stmt 1
 769              		.cfi_startproc
 770              	.LVL72:
 771 0434 130101FF 		addi	sp,sp,-16
 772              		.cfi_def_cfa_offset 16
 773 0438 23341100 		sd	ra,8(sp)
 774 043c 23308100 		sd	s0,0(sp)
 775              		.cfi_offset 1, -8
 776              		.cfi_offset 8, -16
 777 0440 13040101 		addi	s0,sp,16
 778              		.cfi_def_cfa 8, 0
  20:src/MemoryAllocator.cpp **** }
 779              		.loc 1 20 5
  20:src/MemoryAllocator.cpp **** }
 780              		.loc 1 20 28 is_stmt 0
 781 0444 97000000 		call	_ZN15MemoryAllocator16tryToFreeSegmentEPv
 781      E7800000 
 782              	.LVL73:
  21:src/MemoryAllocator.cpp **** 
 783              		.loc 1 21 1
 784 044c 83308100 		ld	ra,8(sp)
 785              		.cfi_restore 1
 786 0450 03340100 		ld	s0,0(sp)
 787              		.cfi_restore 8
 788              		.cfi_def_cfa 2, 16
 789 0454 13010101 		addi	sp,sp,16
 790              		.cfi_def_cfa_offset 0
 791 0458 67800000 		jr	ra
 792              		.cfi_endproc
 793              	.LFE26:
 795              		.align	2
 796              		.globl	_ZN15MemoryAllocator7kmallocEm
 798              	_ZN15MemoryAllocator7kmallocEm:
 799              	.LFB35:
 204:src/MemoryAllocator.cpp **** 
 205:src/MemoryAllocator.cpp **** void MemoryAllocator::memAllocHandler()
 206:src/MemoryAllocator.cpp **** {
 207:src/MemoryAllocator.cpp ****     size_t size;
 208:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(size));
 209:src/MemoryAllocator.cpp ****     size*=MEM_BLOCK_SIZE;
 210:src/MemoryAllocator.cpp ****     void* allocatedAddr = kmalloc(size);
 211:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 212:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 213:src/MemoryAllocator.cpp **** }
 214:src/MemoryAllocator.cpp **** 
 215:src/MemoryAllocator.cpp **** void MemoryAllocator::memFreeHandler()
 216:src/MemoryAllocator.cpp **** {
 217:src/MemoryAllocator.cpp ****     uint64 addr = 0;
 218:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(addr));
 219:src/MemoryAllocator.cpp ****     uint64 retval = kfree((void*)addr);
 220:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : :"r"(retval));
 221:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 222:src/MemoryAllocator.cpp **** }
 223:src/MemoryAllocator.cpp **** 
 224:src/MemoryAllocator.cpp **** void* MemoryAllocator::kmalloc(size_t size)
GAS LISTING /tmp/ccmr5N1h.s 			page 21


 225:src/MemoryAllocator.cpp **** {
 800              		.loc 1 225 1 is_stmt 1
 801              		.cfi_startproc
 802              	.LVL74:
 803 045c 130101FF 		addi	sp,sp,-16
 804              		.cfi_def_cfa_offset 16
 805 0460 23341100 		sd	ra,8(sp)
 806 0464 23308100 		sd	s0,0(sp)
 807              		.cfi_offset 1, -8
 808              		.cfi_offset 8, -16
 809 0468 13040101 		addi	s0,sp,16
 810              		.cfi_def_cfa 8, 0
 226:src/MemoryAllocator.cpp ****     return MemoryAllocator::mem_alloc(size);
 811              		.loc 1 226 5
 812              		.loc 1 226 38 is_stmt 0
 813 046c 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 813      E7800000 
 814              	.LVL75:
 227:src/MemoryAllocator.cpp **** }
 815              		.loc 1 227 1
 816 0474 83308100 		ld	ra,8(sp)
 817              		.cfi_restore 1
 818 0478 03340100 		ld	s0,0(sp)
 819              		.cfi_restore 8
 820              		.cfi_def_cfa 2, 16
 821 047c 13010101 		addi	sp,sp,16
 822              		.cfi_def_cfa_offset 0
 823 0480 67800000 		jr	ra
 824              		.cfi_endproc
 825              	.LFE35:
 827              		.align	2
 828              		.globl	_ZN15MemoryAllocator15memAllocHandlerEv
 830              	_ZN15MemoryAllocator15memAllocHandlerEv:
 831              	.LFB33:
 206:src/MemoryAllocator.cpp ****     size_t size;
 832              		.loc 1 206 1 is_stmt 1
 833              		.cfi_startproc
 834 0484 130101FF 		addi	sp,sp,-16
 835              		.cfi_def_cfa_offset 16
 836 0488 23341100 		sd	ra,8(sp)
 837 048c 23308100 		sd	s0,0(sp)
 838              		.cfi_offset 1, -8
 839              		.cfi_offset 8, -16
 840 0490 13040101 		addi	s0,sp,16
 841              		.cfi_def_cfa 8, 0
 207:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(size));
 842              		.loc 1 207 5
 208:src/MemoryAllocator.cpp ****     size*=MEM_BLOCK_SIZE;
 843              		.loc 1 208 5
 208:src/MemoryAllocator.cpp ****     size*=MEM_BLOCK_SIZE;
 844              		.loc 1 208 47 is_stmt 0
 845              	#APP
 846              	# 208 "src/MemoryAllocator.cpp" 1
 847              		mv a0, a1
 848              	# 0 "" 2
 849              	.LVL76:
 209:src/MemoryAllocator.cpp ****     void* allocatedAddr = kmalloc(size);
GAS LISTING /tmp/ccmr5N1h.s 			page 22


 850              		.loc 1 209 5 is_stmt 1
 210:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 851              		.loc 1 210 5
 210:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 852              		.loc 1 210 34 is_stmt 0
 853              	#NO_APP
 854 0498 13156500 		slli	a0,a0,6
 855              	.LVL77:
 856 049c 97000000 		call	_ZN15MemoryAllocator7kmallocEm
 856      E7800000 
 857              	.LVL78:
 211:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 858              		.loc 1 211 5 is_stmt 1
 211:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 859              		.loc 1 211 64 is_stmt 0
 860              	#APP
 861              	# 211 "src/MemoryAllocator.cpp" 1
 212:src/MemoryAllocator.cpp **** }
 862              		mv a0,a0
 863              	# 0 "" 2
 864              		.loc 1 212 5 is_stmt 1
 212:src/MemoryAllocator.cpp **** }
 865              		.loc 1 212 25 is_stmt 0
 866              	#NO_APP
 867 04a8 97000000 		call	_ZN5Riscv13w_a0_sscratchEv@plt
 867      E7800000 
 868              	.LVL79:
 213:src/MemoryAllocator.cpp **** 
 869              		.loc 1 213 1
 870 04b0 83308100 		ld	ra,8(sp)
 871              		.cfi_restore 1
 872 04b4 03340100 		ld	s0,0(sp)
 873              		.cfi_restore 8
 874              		.cfi_def_cfa 2, 16
 875 04b8 13010101 		addi	sp,sp,16
 876              		.cfi_def_cfa_offset 0
 877 04bc 67800000 		jr	ra
 878              		.cfi_endproc
 879              	.LFE33:
 881              		.align	2
 882              		.globl	_ZN15MemoryAllocator5kfreeEPv
 884              	_ZN15MemoryAllocator5kfreeEPv:
 885              	.LFB36:
 228:src/MemoryAllocator.cpp **** 
 229:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::kfree(void* p)
 230:src/MemoryAllocator.cpp **** {
 886              		.loc 1 230 1 is_stmt 1
 887              		.cfi_startproc
 888              	.LVL80:
 889 04c0 130101FF 		addi	sp,sp,-16
 890              		.cfi_def_cfa_offset 16
 891 04c4 23341100 		sd	ra,8(sp)
 892 04c8 23308100 		sd	s0,0(sp)
 893              		.cfi_offset 1, -8
 894              		.cfi_offset 8, -16
 895 04cc 13040101 		addi	s0,sp,16
 896              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccmr5N1h.s 			page 23


 231:src/MemoryAllocator.cpp ****     return MemoryAllocator::mem_free(p);
 897              		.loc 1 231 5
 898              		.loc 1 231 37 is_stmt 0
 899 04d0 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 899      E7800000 
 900              	.LVL81:
 232:src/MemoryAllocator.cpp **** }...
 901              		.loc 1 232 1
 902 04d8 83308100 		ld	ra,8(sp)
 903              		.cfi_restore 1
 904 04dc 03340100 		ld	s0,0(sp)
 905              		.cfi_restore 8
 906              		.cfi_def_cfa 2, 16
 907 04e0 13010101 		addi	sp,sp,16
 908              		.cfi_def_cfa_offset 0
 909 04e4 67800000 		jr	ra
 910              		.cfi_endproc
 911              	.LFE36:
 913              		.align	2
 914              		.globl	_ZN15MemoryAllocator14memFreeHandlerEv
 916              	_ZN15MemoryAllocator14memFreeHandlerEv:
 917              	.LFB34:
 216:src/MemoryAllocator.cpp **** {
 918              		.loc 1 216 1 is_stmt 1
 919              		.cfi_startproc
 920 04e8 130101FF 		addi	sp,sp,-16
 921              		.cfi_def_cfa_offset 16
 922 04ec 23341100 		sd	ra,8(sp)
 923 04f0 23308100 		sd	s0,0(sp)
 924              		.cfi_offset 1, -8
 925              		.cfi_offset 8, -16
 926 04f4 13040101 		addi	s0,sp,16
 927              		.cfi_def_cfa 8, 0
 217:src/MemoryAllocator.cpp ****     uint64 addr = 0;
 928              		.loc 1 217 5
 929              	.LVL82:
 218:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(addr));
 930              		.loc 1 218 5
 218:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(addr));
 931              		.loc 1 218 47 is_stmt 0
 932              	#APP
 933              	# 218 "src/MemoryAllocator.cpp" 1
 934              		mv a0, a1
 935              	# 0 "" 2
 936              	.LVL83:
 219:src/MemoryAllocator.cpp ****     uint64 retval = kfree((void*)addr);
 937              		.loc 1 219 5 is_stmt 1
 219:src/MemoryAllocator.cpp ****     uint64 retval = kfree((void*)addr);
 938              		.loc 1 219 26 is_stmt 0
 939              	#NO_APP
 940 04fc 97000000 		call	_ZN15MemoryAllocator5kfreeEPv
 940      E7800000 
 941              	.LVL84:
 220:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : :"r"(retval));
 942              		.loc 1 220 5 is_stmt 1
 220:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : :"r"(retval));
 943              		.loc 1 220 48 is_stmt 0
GAS LISTING /tmp/ccmr5N1h.s 			page 24


 944              	#APP
 945              	# 220 "src/MemoryAllocator.cpp" 1
 221:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 946              		mv a0,a0
 947              	# 0 "" 2
 948              		.loc 1 221 5 is_stmt 1
 221:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 949              		.loc 1 221 25 is_stmt 0
 950              	#NO_APP
 951 0508 97000000 		call	_ZN5Riscv13w_a0_sscratchEv@plt
 951      E7800000 
 952              	.LVL85:
 222:src/MemoryAllocator.cpp **** }
 953              		.loc 1 222 1
 954 0510 83308100 		ld	ra,8(sp)
 955              		.cfi_restore 1
 956 0514 03340100 		ld	s0,0(sp)
 957              		.cfi_restore 8
 958              		.cfi_def_cfa 2, 16
 959 0518 13010101 		addi	sp,sp,16
 960              		.cfi_def_cfa_offset 0
 961 051c 67800000 		jr	ra
 962              		.cfi_endproc
 963              	.LFE34:
 965              		.globl	_ZN15MemoryAllocator18memoryInitiliaizedE
 966              		.globl	_ZN15MemoryAllocator8headFreeE
 967              		.globl	_ZN15MemoryAllocator13headAllocatedE
 968              		.bss
 969              		.align	3
 970              		.set	.LANCHOR0,. + 0
 973              	_ZN15MemoryAllocator18memoryInitiliaizedE:
 974 0000 00000000 		.zero	4
 975 0004 00000000 		.zero	4
 978              	_ZN15MemoryAllocator13headAllocatedE:
 979 0008 00000000 		.zero	8
 979      00000000 
 982              	_ZN15MemoryAllocator8headFreeE:
 983 0010 00000000 		.zero	8
 983      00000000 
 984              		.text
 985              	.Letext0:
 986              		.file 2 "src/../h/../lib/hw.h"
 987              		.file 3 "src/../h/MemoryAllocator.hpp"
 988              		.file 4 "src/../h/Riscv.hpp"
GAS LISTING /tmp/ccmr5N1h.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccmr5N1h.s:9      .text:0000000000000000 _ZN15MemoryAllocator10initMemoryEv
     /tmp/ccmr5N1h.s:13     .text:0000000000000000 .L0 
     /tmp/ccmr5N1h.s:14     .text:0000000000000000 .L0 
     /tmp/ccmr5N1h.s:15     .text:0000000000000004 .L0 
     /tmp/ccmr5N1h.s:17     .text:0000000000000008 .L0 
     /tmp/ccmr5N1h.s:19     .text:000000000000000c .L0 
     /tmp/ccmr5N1h.s:21     .text:000000000000000c .L0 
     /tmp/ccmr5N1h.s:22     .text:000000000000000c .L0 
     /tmp/ccmr5N1h.s:24     .text:0000000000000014 .L0 
     /tmp/ccmr5N1h.s:27     .text:000000000000001c .L0 
     /tmp/ccmr5N1h.s:28     .text:000000000000001c .L0 
     /tmp/ccmr5N1h.s:32     .text:000000000000002c .L0 
     /tmp/ccmr5N1h.s:33     .text:000000000000002c .L0 
     /tmp/ccmr5N1h.s:35     .text:0000000000000030 .L0 
     /tmp/ccmr5N1h.s:36     .text:0000000000000030 .L0 
     /tmp/ccmr5N1h.s:40     .text:0000000000000040 .L0 
     /tmp/ccmr5N1h.s:41     .text:0000000000000040 .L0 
     /tmp/ccmr5N1h.s:43     .text:0000000000000044 .L0 
     /tmp/ccmr5N1h.s:44     .text:0000000000000044 .L0 
     /tmp/ccmr5N1h.s:48     .text:0000000000000054 .L0 
     /tmp/ccmr5N1h.s:50     .text:0000000000000058 .L0 
     /tmp/ccmr5N1h.s:53     .text:000000000000005c .L0 
     /tmp/ccmr5N1h.s:54     .text:0000000000000060 .L0 
     /tmp/ccmr5N1h.s:55     .text:0000000000000060 .L0 
     /tmp/ccmr5N1h.s:57     .text:0000000000000064 .L0 
     /tmp/ccmr5N1h.s:59     .text:0000000000000068 .L0 
     /tmp/ccmr5N1h.s:65     .text:0000000000000068 _ZN15MemoryAllocator17insertAllFragmentEPvmS0_
     /tmp/ccmr5N1h.s:68     .text:0000000000000068 .L0 
     /tmp/ccmr5N1h.s:70     .text:0000000000000068 .L0 
     /tmp/ccmr5N1h.s:71     .text:000000000000006c .L0 
     /tmp/ccmr5N1h.s:77     .text:0000000000000080 .L0 
     /tmp/ccmr5N1h.s:78     .text:0000000000000080 .L0 
     /tmp/ccmr5N1h.s:79     .text:0000000000000080 .L0 
     /tmp/ccmr5N1h.s:80     .text:0000000000000080 .L0 
     /tmp/ccmr5N1h.s:81     .text:0000000000000080 .L0 
     /tmp/ccmr5N1h.s:83     .text:0000000000000084 .L0 
     /tmp/ccmr5N1h.s:88     .text:0000000000000090 .L0 
     /tmp/ccmr5N1h.s:89     .text:0000000000000090 .L0 
     /tmp/ccmr5N1h.s:92     .text:0000000000000098 .L0 
     /tmp/ccmr5N1h.s:93     .text:0000000000000098 .L0 
     /tmp/ccmr5N1h.s:94     .text:0000000000000098 .L0 
     /tmp/ccmr5N1h.s:96     .text:000000000000009c .L0 
     /tmp/ccmr5N1h.s:97     .text:000000000000009c .L0 
     /tmp/ccmr5N1h.s:100    .text:00000000000000a0 .L0 
     /tmp/ccmr5N1h.s:101    .text:00000000000000a0 .L0 
     /tmp/ccmr5N1h.s:103    .text:00000000000000a8 .L0 
     /tmp/ccmr5N1h.s:108    .text:00000000000000ac .L0 
     /tmp/ccmr5N1h.s:109    .text:00000000000000ac .L0 
     /tmp/ccmr5N1h.s:112    .text:00000000000000b8 .L0 
     /tmp/ccmr5N1h.s:116    .text:00000000000000bc .L0 
     /tmp/ccmr5N1h.s:117    .text:00000000000000bc .L0 
     /tmp/ccmr5N1h.s:118    .text:00000000000000bc .L0 
     /tmp/ccmr5N1h.s:120    .text:00000000000000c0 .L0 
     /tmp/ccmr5N1h.s:122    .text:00000000000000c4 .L0 
     /tmp/ccmr5N1h.s:123    .text:00000000000000c4 .L0 
GAS LISTING /tmp/ccmr5N1h.s 			page 26


     /tmp/ccmr5N1h.s:130    .text:00000000000000c8 .L0 
     /tmp/ccmr5N1h.s:131    .text:00000000000000cc .L0 
     /tmp/ccmr5N1h.s:132    .text:00000000000000cc .L0 
     /tmp/ccmr5N1h.s:134    .text:00000000000000d0 .L0 
     /tmp/ccmr5N1h.s:135    .text:00000000000000d0 .L0 
     /tmp/ccmr5N1h.s:137    .text:00000000000000d4 .L0 
     /tmp/ccmr5N1h.s:140    .text:00000000000000d8 .L0 
     /tmp/ccmr5N1h.s:143    .text:00000000000000dc .L0 
     /tmp/ccmr5N1h.s:146    .text:00000000000000e0 .L0 
     /tmp/ccmr5N1h.s:150    .text:00000000000000e4 .L0 
     /tmp/ccmr5N1h.s:153    .text:00000000000000e4 .L0 
     /tmp/ccmr5N1h.s:154    .text:00000000000000e4 .L0 
     /tmp/ccmr5N1h.s:159    .text:00000000000000f0 .L0 
     /tmp/ccmr5N1h.s:160    .text:00000000000000f0 .L0 
     /tmp/ccmr5N1h.s:162    .text:00000000000000f4 .L0 
     /tmp/ccmr5N1h.s:163    .text:00000000000000f4 .L0 
     /tmp/ccmr5N1h.s:167    .text:00000000000000fc .L0 
     /tmp/ccmr5N1h.s:168    .text:0000000000000100 .L0 
     /tmp/ccmr5N1h.s:174    .text:0000000000000100 _ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm
     /tmp/ccmr5N1h.s:177    .text:0000000000000100 .L0 
     /tmp/ccmr5N1h.s:179    .text:0000000000000100 .L0 
     /tmp/ccmr5N1h.s:180    .text:0000000000000104 .L0 
     /tmp/ccmr5N1h.s:185    .text:0000000000000114 .L0 
     /tmp/ccmr5N1h.s:186    .text:0000000000000114 .L0 
     /tmp/ccmr5N1h.s:187    .text:0000000000000114 .L0 
     /tmp/ccmr5N1h.s:188    .text:0000000000000114 .L0 
     /tmp/ccmr5N1h.s:190    .text:0000000000000118 .L0 
     /tmp/ccmr5N1h.s:194    .text:0000000000000120 .L0 
     /tmp/ccmr5N1h.s:195    .text:0000000000000120 .L0 
     /tmp/ccmr5N1h.s:198    .text:0000000000000128 .L0 
     /tmp/ccmr5N1h.s:199    .text:0000000000000128 .L0 
     /tmp/ccmr5N1h.s:200    .text:0000000000000128 .L0 
     /tmp/ccmr5N1h.s:203    .text:0000000000000130 .L0 
     /tmp/ccmr5N1h.s:204    .text:0000000000000130 .L0 
     /tmp/ccmr5N1h.s:205    .text:0000000000000130 .L0 
     /tmp/ccmr5N1h.s:207    .text:0000000000000134 .L0 
     /tmp/ccmr5N1h.s:208    .text:0000000000000134 .L0 
     /tmp/ccmr5N1h.s:210    .text:0000000000000138 .L0 
     /tmp/ccmr5N1h.s:214    .text:000000000000013c .L0 
     /tmp/ccmr5N1h.s:215    .text:000000000000013c .L0 
     /tmp/ccmr5N1h.s:217    .text:0000000000000140 .L0 
     /tmp/ccmr5N1h.s:220    .text:0000000000000144 .L0 
     /tmp/ccmr5N1h.s:221    .text:0000000000000144 .L0 
     /tmp/ccmr5N1h.s:222    .text:0000000000000144 .L0 
     /tmp/ccmr5N1h.s:224    .text:0000000000000148 .L0 
     /tmp/ccmr5N1h.s:227    .text:000000000000014c .L0 
     /tmp/ccmr5N1h.s:230    .text:0000000000000150 .L0 
     /tmp/ccmr5N1h.s:231    .text:0000000000000150 .L0 
     /tmp/ccmr5N1h.s:234    .text:0000000000000154 .L0 
     /tmp/ccmr5N1h.s:235    .text:0000000000000154 .L0 
     /tmp/ccmr5N1h.s:237    .text:0000000000000158 .L0 
     /tmp/ccmr5N1h.s:238    .text:0000000000000158 .L0 
     /tmp/ccmr5N1h.s:242    .text:000000000000015c .L0 
     /tmp/ccmr5N1h.s:243    .text:0000000000000160 .L0 
     /tmp/ccmr5N1h.s:244    .text:0000000000000160 .L0 
     /tmp/ccmr5N1h.s:246    .text:0000000000000164 .L0 
     /tmp/ccmr5N1h.s:247    .text:0000000000000164 .L0 
GAS LISTING /tmp/ccmr5N1h.s 			page 27


     /tmp/ccmr5N1h.s:249    .text:0000000000000168 .L0 
     /tmp/ccmr5N1h.s:252    .text:000000000000016c .L0 
     /tmp/ccmr5N1h.s:255    .text:0000000000000170 .L0 
     /tmp/ccmr5N1h.s:259    .text:0000000000000174 .L0 
     /tmp/ccmr5N1h.s:261    .text:0000000000000174 .L0 
     /tmp/ccmr5N1h.s:262    .text:0000000000000174 .L0 
     /tmp/ccmr5N1h.s:265    .text:0000000000000180 .L0 
     /tmp/ccmr5N1h.s:271    .text:0000000000000180 _ZN15MemoryAllocator21tryToAllocateFragmentEm
     /tmp/ccmr5N1h.s:274    .text:0000000000000180 .L0 
     /tmp/ccmr5N1h.s:276    .text:0000000000000180 .L0 
     /tmp/ccmr5N1h.s:277    .text:0000000000000184 .L0 
     /tmp/ccmr5N1h.s:282    .text:0000000000000194 .L0 
     /tmp/ccmr5N1h.s:283    .text:0000000000000194 .L0 
     /tmp/ccmr5N1h.s:284    .text:0000000000000194 .L0 
     /tmp/ccmr5N1h.s:285    .text:0000000000000194 .L0 
     /tmp/ccmr5N1h.s:287    .text:0000000000000198 .L0 
     /tmp/ccmr5N1h.s:290    .text:000000000000019c .L0 
     /tmp/ccmr5N1h.s:291    .text:000000000000019c .L0 
     /tmp/ccmr5N1h.s:294    .text:00000000000001a4 .L0 
     /tmp/ccmr5N1h.s:295    .text:00000000000001a4 .L0 
     /tmp/ccmr5N1h.s:296    .text:00000000000001a4 .L0 
     /tmp/ccmr5N1h.s:297    .text:00000000000001a4 .L0 
     /tmp/ccmr5N1h.s:300    .text:00000000000001ac .L0 
     /tmp/ccmr5N1h.s:304    .text:00000000000001b0 .L0 
     /tmp/ccmr5N1h.s:305    .text:00000000000001b0 .L0 
     /tmp/ccmr5N1h.s:309    .text:00000000000001b4 .L0 
     /tmp/ccmr5N1h.s:310    .text:00000000000001b4 .L0 
     /tmp/ccmr5N1h.s:312    .text:00000000000001b8 .L0 
     /tmp/ccmr5N1h.s:316    .text:00000000000001bc .L0 
     /tmp/ccmr5N1h.s:317    .text:00000000000001bc .L0 
     /tmp/ccmr5N1h.s:318    .text:00000000000001bc .L0 
     /tmp/ccmr5N1h.s:320    .text:00000000000001c0 .L0 
     /tmp/ccmr5N1h.s:324    .text:00000000000001c4 .L0 
     /tmp/ccmr5N1h.s:331    .text:00000000000001c8 .L0 
     /tmp/ccmr5N1h.s:332    .text:00000000000001c8 .L0 
     /tmp/ccmr5N1h.s:333    .text:00000000000001c8 .L0 
     /tmp/ccmr5N1h.s:335    .text:00000000000001cc .L0 
     /tmp/ccmr5N1h.s:338    .text:00000000000001d0 .L0 
     /tmp/ccmr5N1h.s:339    .text:00000000000001d0 .L0 
     /tmp/ccmr5N1h.s:341    .text:00000000000001d4 .L0 
     /tmp/ccmr5N1h.s:345    .text:00000000000001d8 .L0 
     /tmp/ccmr5N1h.s:346    .text:00000000000001d8 .L0 
     /tmp/ccmr5N1h.s:349    .text:00000000000001e4 .L0 
     /tmp/ccmr5N1h.s:352    .text:00000000000001e8 .L0 
     /tmp/ccmr5N1h.s:353    .text:00000000000001e8 .L0 
     /tmp/ccmr5N1h.s:357    .text:00000000000001ec .L0 
     /tmp/ccmr5N1h.s:362    .text:00000000000001f4 .L0 
     /tmp/ccmr5N1h.s:363    .text:00000000000001f4 .L0 
     /tmp/ccmr5N1h.s:364    .text:00000000000001f4 .L0 
     /tmp/ccmr5N1h.s:366    .text:00000000000001f8 .L0 
     /tmp/ccmr5N1h.s:368    .text:00000000000001fc .L0 
     /tmp/ccmr5N1h.s:369    .text:00000000000001fc .L0 
     /tmp/ccmr5N1h.s:372    .text:0000000000000200 .L0 
     /tmp/ccmr5N1h.s:374    .text:0000000000000204 .L0 
     /tmp/ccmr5N1h.s:376    .text:0000000000000208 .L0 
     /tmp/ccmr5N1h.s:377    .text:0000000000000208 .L0 
     /tmp/ccmr5N1h.s:381    .text:0000000000000210 .L0 
GAS LISTING /tmp/ccmr5N1h.s 			page 28


     /tmp/ccmr5N1h.s:382    .text:0000000000000210 .L0 
     /tmp/ccmr5N1h.s:388    .text:000000000000021c .L0 
     /tmp/ccmr5N1h.s:389    .text:000000000000021c .L0 
     /tmp/ccmr5N1h.s:391    .text:0000000000000220 .L0 
     /tmp/ccmr5N1h.s:392    .text:0000000000000220 .L0 
     /tmp/ccmr5N1h.s:395    .text:0000000000000224 .L0 
     /tmp/ccmr5N1h.s:397    .text:0000000000000228 .L0 
     /tmp/ccmr5N1h.s:403    .text:0000000000000230 .L0 
     /tmp/ccmr5N1h.s:404    .text:0000000000000230 .L0 
     /tmp/ccmr5N1h.s:407    .text:0000000000000234 .L0 
     /tmp/ccmr5N1h.s:410    .text:000000000000023c .L0 
     /tmp/ccmr5N1h.s:418    .text:0000000000000244 .L0 
     /tmp/ccmr5N1h.s:420    .text:0000000000000248 .L0 
     /tmp/ccmr5N1h.s:421    .text:0000000000000248 .L0 
     /tmp/ccmr5N1h.s:426    .text:000000000000024c .L0 
     /tmp/ccmr5N1h.s:427    .text:000000000000024c .L0 
     /tmp/ccmr5N1h.s:432    .text:000000000000025c .L0 
     /tmp/ccmr5N1h.s:433    .text:000000000000025c .L0 
     /tmp/ccmr5N1h.s:436    .text:0000000000000260 .L0 
     /tmp/ccmr5N1h.s:437    .text:0000000000000260 .L0 
     /tmp/ccmr5N1h.s:442    .text:0000000000000264 .L0 
     /tmp/ccmr5N1h.s:443    .text:0000000000000264 .L0 
     /tmp/ccmr5N1h.s:452    .text:0000000000000270 .L0 
     /tmp/ccmr5N1h.s:456    .text:0000000000000274 .L0 
     /tmp/ccmr5N1h.s:457    .text:0000000000000274 .L0 
     /tmp/ccmr5N1h.s:458    .text:0000000000000278 .L0 
     /tmp/ccmr5N1h.s:460    .text:000000000000027c .L0 
     /tmp/ccmr5N1h.s:461    .text:000000000000027c .L0 
     /tmp/ccmr5N1h.s:463    .text:0000000000000280 .L0 
     /tmp/ccmr5N1h.s:466    .text:0000000000000284 .L0 
     /tmp/ccmr5N1h.s:469    .text:0000000000000288 .L0 
     /tmp/ccmr5N1h.s:471    .text:000000000000028c .L0 
     /tmp/ccmr5N1h.s:477    .text:000000000000028c _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccmr5N1h.s:480    .text:000000000000028c .L0 
     /tmp/ccmr5N1h.s:482    .text:000000000000028c .L0 
     /tmp/ccmr5N1h.s:483    .text:0000000000000290 .L0 
     /tmp/ccmr5N1h.s:486    .text:0000000000000298 .L0 
     /tmp/ccmr5N1h.s:487    .text:0000000000000298 .L0 
     /tmp/ccmr5N1h.s:489    .text:000000000000029c .L0 
     /tmp/ccmr5N1h.s:491    .text:000000000000029c .L0 
     /tmp/ccmr5N1h.s:492    .text:000000000000029c .L0 
     /tmp/ccmr5N1h.s:495    .text:00000000000002a4 .L0 
     /tmp/ccmr5N1h.s:496    .text:00000000000002a8 .L0 
     /tmp/ccmr5N1h.s:498    .text:00000000000002ac .L0 
     /tmp/ccmr5N1h.s:499    .text:00000000000002ac .L0 
     /tmp/ccmr5N1h.s:501    .text:00000000000002b0 .L0 
     /tmp/ccmr5N1h.s:503    .text:00000000000002b4 .L0 
     /tmp/ccmr5N1h.s:509    .text:00000000000002b4 _ZN15MemoryAllocator20insertNewFreeSegmentEPvm
     /tmp/ccmr5N1h.s:512    .text:00000000000002b4 .L0 
     /tmp/ccmr5N1h.s:514    .text:00000000000002b4 .L0 
     /tmp/ccmr5N1h.s:515    .text:00000000000002b8 .L0 
     /tmp/ccmr5N1h.s:520    .text:00000000000002c8 .L0 
     /tmp/ccmr5N1h.s:521    .text:00000000000002c8 .L0 
     /tmp/ccmr5N1h.s:522    .text:00000000000002c8 .L0 
     /tmp/ccmr5N1h.s:523    .text:00000000000002c8 .L0 
     /tmp/ccmr5N1h.s:525    .text:00000000000002cc .L0 
     /tmp/ccmr5N1h.s:529    .text:00000000000002d4 .L0 
GAS LISTING /tmp/ccmr5N1h.s 			page 29


     /tmp/ccmr5N1h.s:530    .text:00000000000002d4 .L0 
     /tmp/ccmr5N1h.s:533    .text:00000000000002dc .L0 
     /tmp/ccmr5N1h.s:534    .text:00000000000002dc .L0 
     /tmp/ccmr5N1h.s:535    .text:00000000000002dc .L0 
     /tmp/ccmr5N1h.s:538    .text:00000000000002e4 .L0 
     /tmp/ccmr5N1h.s:539    .text:00000000000002e4 .L0 
     /tmp/ccmr5N1h.s:540    .text:00000000000002e4 .L0 
     /tmp/ccmr5N1h.s:542    .text:00000000000002e8 .L0 
     /tmp/ccmr5N1h.s:543    .text:00000000000002e8 .L0 
     /tmp/ccmr5N1h.s:545    .text:00000000000002ec .L0 
     /tmp/ccmr5N1h.s:549    .text:00000000000002f0 .L0 
     /tmp/ccmr5N1h.s:550    .text:00000000000002f0 .L0 
     /tmp/ccmr5N1h.s:552    .text:00000000000002f4 .L0 
     /tmp/ccmr5N1h.s:555    .text:00000000000002f8 .L0 
     /tmp/ccmr5N1h.s:556    .text:00000000000002f8 .L0 
     /tmp/ccmr5N1h.s:557    .text:00000000000002f8 .L0 
     /tmp/ccmr5N1h.s:559    .text:00000000000002fc .L0 
     /tmp/ccmr5N1h.s:562    .text:0000000000000300 .L0 
     /tmp/ccmr5N1h.s:565    .text:0000000000000304 .L0 
     /tmp/ccmr5N1h.s:566    .text:0000000000000304 .L0 
     /tmp/ccmr5N1h.s:569    .text:0000000000000308 .L0 
     /tmp/ccmr5N1h.s:570    .text:0000000000000308 .L0 
     /tmp/ccmr5N1h.s:572    .text:000000000000030c .L0 
     /tmp/ccmr5N1h.s:573    .text:000000000000030c .L0 
     /tmp/ccmr5N1h.s:577    .text:0000000000000310 .L0 
     /tmp/ccmr5N1h.s:578    .text:0000000000000310 .L0 
     /tmp/ccmr5N1h.s:580    .text:0000000000000314 .L0 
     /tmp/ccmr5N1h.s:582    .text:0000000000000318 .L0 
     /tmp/ccmr5N1h.s:584    .text:000000000000031c .L0 
     /tmp/ccmr5N1h.s:587    .text:0000000000000324 .L0 
     /tmp/ccmr5N1h.s:590    .text:0000000000000328 .L0 
     /tmp/ccmr5N1h.s:592    .text:000000000000032c .L0 
     /tmp/ccmr5N1h.s:594    .text:0000000000000330 .L0 
     /tmp/ccmr5N1h.s:597    .text:0000000000000338 .L0 
     /tmp/ccmr5N1h.s:600    .text:000000000000033c .L0 
     /tmp/ccmr5N1h.s:601    .text:0000000000000340 .L0 
     /tmp/ccmr5N1h.s:602    .text:0000000000000340 .L0 
     /tmp/ccmr5N1h.s:604    .text:0000000000000344 .L0 
     /tmp/ccmr5N1h.s:605    .text:0000000000000344 .L0 
     /tmp/ccmr5N1h.s:607    .text:0000000000000348 .L0 
     /tmp/ccmr5N1h.s:610    .text:000000000000034c .L0 
     /tmp/ccmr5N1h.s:613    .text:0000000000000350 .L0 
     /tmp/ccmr5N1h.s:617    .text:0000000000000354 .L0 
     /tmp/ccmr5N1h.s:619    .text:0000000000000354 .L0 
     /tmp/ccmr5N1h.s:620    .text:0000000000000354 .L0 
     /tmp/ccmr5N1h.s:625    .text:0000000000000360 .L0 
     /tmp/ccmr5N1h.s:626    .text:0000000000000360 .L0 
     /tmp/ccmr5N1h.s:628    .text:0000000000000364 .L0 
     /tmp/ccmr5N1h.s:632    .text:0000000000000370 .L0 
     /tmp/ccmr5N1h.s:633    .text:0000000000000370 .L0 
     /tmp/ccmr5N1h.s:635    .text:0000000000000374 .L0 
     /tmp/ccmr5N1h.s:639    .text:000000000000037c .L0 
     /tmp/ccmr5N1h.s:640    .text:000000000000037c .L0 
     /tmp/ccmr5N1h.s:642    .text:0000000000000380 .L0 
     /tmp/ccmr5N1h.s:646    .text:000000000000038c .L0 
     /tmp/ccmr5N1h.s:647    .text:000000000000038c .L0 
     /tmp/ccmr5N1h.s:649    .text:0000000000000390 .L0 
GAS LISTING /tmp/ccmr5N1h.s 			page 30


     /tmp/ccmr5N1h.s:651    .text:0000000000000394 .L0 
     /tmp/ccmr5N1h.s:652    .text:0000000000000398 .L0 
     /tmp/ccmr5N1h.s:658    .text:0000000000000398 _ZN15MemoryAllocator16tryToFreeSegmentEPv
     /tmp/ccmr5N1h.s:661    .text:0000000000000398 .L0 
     /tmp/ccmr5N1h.s:663    .text:0000000000000398 .L0 
     /tmp/ccmr5N1h.s:664    .text:000000000000039c .L0 
     /tmp/ccmr5N1h.s:669    .text:00000000000003ac .L0 
     /tmp/ccmr5N1h.s:670    .text:00000000000003ac .L0 
     /tmp/ccmr5N1h.s:671    .text:00000000000003ac .L0 
     /tmp/ccmr5N1h.s:672    .text:00000000000003ac .L0 
     /tmp/ccmr5N1h.s:674    .text:00000000000003b0 .L0 
     /tmp/ccmr5N1h.s:677    .text:00000000000003b4 .L0 
     /tmp/ccmr5N1h.s:678    .text:00000000000003b4 .L0 
     /tmp/ccmr5N1h.s:681    .text:00000000000003bc .L0 
     /tmp/ccmr5N1h.s:682    .text:00000000000003bc .L0 
     /tmp/ccmr5N1h.s:683    .text:00000000000003bc .L0 
     /tmp/ccmr5N1h.s:686    .text:00000000000003c4 .L0 
     /tmp/ccmr5N1h.s:690    .text:00000000000003c8 .L0 
     /tmp/ccmr5N1h.s:691    .text:00000000000003c8 .L0 
     /tmp/ccmr5N1h.s:693    .text:00000000000003cc .L0 
     /tmp/ccmr5N1h.s:694    .text:00000000000003cc .L0 
     /tmp/ccmr5N1h.s:696    .text:00000000000003d0 .L0 
     /tmp/ccmr5N1h.s:699    .text:00000000000003d4 .L0 
     /tmp/ccmr5N1h.s:700    .text:00000000000003d4 .L0 
     /tmp/ccmr5N1h.s:701    .text:00000000000003d4 .L0 
     /tmp/ccmr5N1h.s:703    .text:00000000000003d8 .L0 
     /tmp/ccmr5N1h.s:706    .text:00000000000003dc .L0 
     /tmp/ccmr5N1h.s:709    .text:00000000000003e0 .L0 
     /tmp/ccmr5N1h.s:711    .text:00000000000003e4 .L0 
     /tmp/ccmr5N1h.s:712    .text:00000000000003e4 .L0 
     /tmp/ccmr5N1h.s:714    .text:00000000000003e8 .L0 
     /tmp/ccmr5N1h.s:718    .text:00000000000003ec .L0 
     /tmp/ccmr5N1h.s:719    .text:00000000000003ec .L0 
     /tmp/ccmr5N1h.s:725    .text:00000000000003fc .L0 
     /tmp/ccmr5N1h.s:726    .text:00000000000003fc .L0 
     /tmp/ccmr5N1h.s:728    .text:0000000000000400 .L0 
     /tmp/ccmr5N1h.s:731    .text:0000000000000404 .L0 
     /tmp/ccmr5N1h.s:732    .text:0000000000000408 .L0 
     /tmp/ccmr5N1h.s:733    .text:0000000000000408 .L0 
     /tmp/ccmr5N1h.s:735    .text:000000000000040c .L0 
     /tmp/ccmr5N1h.s:736    .text:000000000000040c .L0 
     /tmp/ccmr5N1h.s:738    .text:0000000000000410 .L0 
     /tmp/ccmr5N1h.s:741    .text:0000000000000414 .L0 
     /tmp/ccmr5N1h.s:744    .text:0000000000000418 .L0 
     /tmp/ccmr5N1h.s:748    .text:000000000000041c .L0 
     /tmp/ccmr5N1h.s:750    .text:000000000000041c .L0 
     /tmp/ccmr5N1h.s:751    .text:000000000000041c .L0 
     /tmp/ccmr5N1h.s:753    .text:0000000000000420 .L0 
     /tmp/ccmr5N1h.s:758    .text:000000000000042c .L0 
     /tmp/ccmr5N1h.s:760    .text:0000000000000434 .L0 
     /tmp/ccmr5N1h.s:766    .text:0000000000000434 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccmr5N1h.s:769    .text:0000000000000434 .L0 
     /tmp/ccmr5N1h.s:771    .text:0000000000000434 .L0 
     /tmp/ccmr5N1h.s:772    .text:0000000000000438 .L0 
     /tmp/ccmr5N1h.s:775    .text:0000000000000440 .L0 
     /tmp/ccmr5N1h.s:776    .text:0000000000000440 .L0 
     /tmp/ccmr5N1h.s:778    .text:0000000000000444 .L0 
GAS LISTING /tmp/ccmr5N1h.s 			page 31


     /tmp/ccmr5N1h.s:780    .text:0000000000000444 .L0 
     /tmp/ccmr5N1h.s:781    .text:0000000000000444 .L0 
     /tmp/ccmr5N1h.s:784    .text:000000000000044c .L0 
     /tmp/ccmr5N1h.s:785    .text:0000000000000450 .L0 
     /tmp/ccmr5N1h.s:787    .text:0000000000000454 .L0 
     /tmp/ccmr5N1h.s:788    .text:0000000000000454 .L0 
     /tmp/ccmr5N1h.s:790    .text:0000000000000458 .L0 
     /tmp/ccmr5N1h.s:792    .text:000000000000045c .L0 
     /tmp/ccmr5N1h.s:798    .text:000000000000045c _ZN15MemoryAllocator7kmallocEm
     /tmp/ccmr5N1h.s:801    .text:000000000000045c .L0 
     /tmp/ccmr5N1h.s:803    .text:000000000000045c .L0 
     /tmp/ccmr5N1h.s:804    .text:0000000000000460 .L0 
     /tmp/ccmr5N1h.s:807    .text:0000000000000468 .L0 
     /tmp/ccmr5N1h.s:808    .text:0000000000000468 .L0 
     /tmp/ccmr5N1h.s:810    .text:000000000000046c .L0 
     /tmp/ccmr5N1h.s:812    .text:000000000000046c .L0 
     /tmp/ccmr5N1h.s:813    .text:000000000000046c .L0 
     /tmp/ccmr5N1h.s:816    .text:0000000000000474 .L0 
     /tmp/ccmr5N1h.s:817    .text:0000000000000478 .L0 
     /tmp/ccmr5N1h.s:819    .text:000000000000047c .L0 
     /tmp/ccmr5N1h.s:820    .text:000000000000047c .L0 
     /tmp/ccmr5N1h.s:822    .text:0000000000000480 .L0 
     /tmp/ccmr5N1h.s:824    .text:0000000000000484 .L0 
     /tmp/ccmr5N1h.s:830    .text:0000000000000484 _ZN15MemoryAllocator15memAllocHandlerEv
     /tmp/ccmr5N1h.s:833    .text:0000000000000484 .L0 
     /tmp/ccmr5N1h.s:834    .text:0000000000000484 .L0 
     /tmp/ccmr5N1h.s:835    .text:0000000000000488 .L0 
     /tmp/ccmr5N1h.s:838    .text:0000000000000490 .L0 
     /tmp/ccmr5N1h.s:839    .text:0000000000000490 .L0 
     /tmp/ccmr5N1h.s:841    .text:0000000000000494 .L0 
     /tmp/ccmr5N1h.s:843    .text:0000000000000494 .L0 
     /tmp/ccmr5N1h.s:844    .text:0000000000000494 .L0 
src/MemoryAllocator.cpp:208    .text:0000000000000494 .L0 
     /tmp/ccmr5N1h.s:851    .text:0000000000000498 .L0 
     /tmp/ccmr5N1h.s:852    .text:0000000000000498 .L0 
     /tmp/ccmr5N1h.s:854    .text:0000000000000498 .L0 
     /tmp/ccmr5N1h.s:859    .text:00000000000004a4 .L0 
src/MemoryAllocator.cpp:211    .text:00000000000004a4 .L0 
     /tmp/ccmr5N1h.s:865    .text:00000000000004a8 .L0 
     /tmp/ccmr5N1h.s:867    .text:00000000000004a8 .L0 
     /tmp/ccmr5N1h.s:870    .text:00000000000004b0 .L0 
     /tmp/ccmr5N1h.s:871    .text:00000000000004b4 .L0 
     /tmp/ccmr5N1h.s:873    .text:00000000000004b8 .L0 
     /tmp/ccmr5N1h.s:874    .text:00000000000004b8 .L0 
     /tmp/ccmr5N1h.s:876    .text:00000000000004bc .L0 
     /tmp/ccmr5N1h.s:878    .text:00000000000004c0 .L0 
     /tmp/ccmr5N1h.s:884    .text:00000000000004c0 _ZN15MemoryAllocator5kfreeEPv
     /tmp/ccmr5N1h.s:887    .text:00000000000004c0 .L0 
     /tmp/ccmr5N1h.s:889    .text:00000000000004c0 .L0 
     /tmp/ccmr5N1h.s:890    .text:00000000000004c4 .L0 
     /tmp/ccmr5N1h.s:893    .text:00000000000004cc .L0 
     /tmp/ccmr5N1h.s:894    .text:00000000000004cc .L0 
     /tmp/ccmr5N1h.s:896    .text:00000000000004d0 .L0 
     /tmp/ccmr5N1h.s:898    .text:00000000000004d0 .L0 
     /tmp/ccmr5N1h.s:899    .text:00000000000004d0 .L0 
     /tmp/ccmr5N1h.s:902    .text:00000000000004d8 .L0 
     /tmp/ccmr5N1h.s:903    .text:00000000000004dc .L0 
GAS LISTING /tmp/ccmr5N1h.s 			page 32


     /tmp/ccmr5N1h.s:905    .text:00000000000004e0 .L0 
     /tmp/ccmr5N1h.s:906    .text:00000000000004e0 .L0 
     /tmp/ccmr5N1h.s:908    .text:00000000000004e4 .L0 
     /tmp/ccmr5N1h.s:910    .text:00000000000004e8 .L0 
     /tmp/ccmr5N1h.s:916    .text:00000000000004e8 _ZN15MemoryAllocator14memFreeHandlerEv
     /tmp/ccmr5N1h.s:919    .text:00000000000004e8 .L0 
     /tmp/ccmr5N1h.s:920    .text:00000000000004e8 .L0 
     /tmp/ccmr5N1h.s:921    .text:00000000000004ec .L0 
     /tmp/ccmr5N1h.s:924    .text:00000000000004f4 .L0 
     /tmp/ccmr5N1h.s:925    .text:00000000000004f4 .L0 
     /tmp/ccmr5N1h.s:927    .text:00000000000004f8 .L0 
     /tmp/ccmr5N1h.s:930    .text:00000000000004f8 .L0 
     /tmp/ccmr5N1h.s:931    .text:00000000000004f8 .L0 
src/MemoryAllocator.cpp:218    .text:00000000000004f8 .L0 
     /tmp/ccmr5N1h.s:938    .text:00000000000004fc .L0 
     /tmp/ccmr5N1h.s:940    .text:00000000000004fc .L0 
     /tmp/ccmr5N1h.s:943    .text:0000000000000504 .L0 
src/MemoryAllocator.cpp:220    .text:0000000000000504 .L0 
     /tmp/ccmr5N1h.s:949    .text:0000000000000508 .L0 
     /tmp/ccmr5N1h.s:951    .text:0000000000000508 .L0 
     /tmp/ccmr5N1h.s:954    .text:0000000000000510 .L0 
     /tmp/ccmr5N1h.s:955    .text:0000000000000514 .L0 
     /tmp/ccmr5N1h.s:957    .text:0000000000000518 .L0 
     /tmp/ccmr5N1h.s:958    .text:0000000000000518 .L0 
     /tmp/ccmr5N1h.s:960    .text:000000000000051c .L0 
     /tmp/ccmr5N1h.s:962    .text:0000000000000520 .L0 
     /tmp/ccmr5N1h.s:973    .bss:0000000000000000 _ZN15MemoryAllocator18memoryInitiliaizedE
     /tmp/ccmr5N1h.s:982    .bss:0000000000000010 _ZN15MemoryAllocator8headFreeE
     /tmp/ccmr5N1h.s:978    .bss:0000000000000008 _ZN15MemoryAllocator13headAllocatedE
     /tmp/ccmr5N1h.s:970    .bss:0000000000000000 .LANCHOR0
     /tmp/ccmr5N1h.s:989    .text:0000000000000520 .L0 
     /tmp/ccmr5N1h.s:22     .text:000000000000000c .L0 
     /tmp/ccmr5N1h.s:28     .text:000000000000001c .L0 
     /tmp/ccmr5N1h.s:36     .text:0000000000000030 .L0 
     /tmp/ccmr5N1h.s:44     .text:0000000000000044 .L0 
     /tmp/ccmr5N1h.s:101    .text:00000000000000a0 .L0 
     /tmp/ccmr5N1h.s:109    .text:00000000000000ac .L0 
     /tmp/ccmr5N1h.s:154    .text:00000000000000e4 .L0 
     /tmp/ccmr5N1h.s:163    .text:00000000000000f4 .L0 
     /tmp/ccmr5N1h.s:200    .text:0000000000000128 .L0 
     /tmp/ccmr5N1h.s:262    .text:0000000000000174 .L0 
     /tmp/ccmr5N1h.s:297    .text:00000000000001a4 .L0 
     /tmp/ccmr5N1h.s:346    .text:00000000000001d8 .L0 
     /tmp/ccmr5N1h.s:382    .text:0000000000000210 .L0 
     /tmp/ccmr5N1h.s:407    .text:0000000000000234 .L0 
     /tmp/ccmr5N1h.s:443    .text:0000000000000264 .L0 
     /tmp/ccmr5N1h.s:535    .text:00000000000002dc .L0 
     /tmp/ccmr5N1h.s:620    .text:0000000000000354 .L0 
     /tmp/ccmr5N1h.s:683    .text:00000000000003bc .L0 
     /tmp/ccmr5N1h.s:753    .text:0000000000000420 .L0 
     /tmp/ccmr5N1h.s:51     .text:000000000000005c .L1
     /tmp/ccmr5N1h.s:149    .text:00000000000000e4 .L9
     /tmp/ccmr5N1h.s:156    .text:00000000000000f0 .L7
     /tmp/ccmr5N1h.s:125    .text:00000000000000c8 .L4
     /tmp/ccmr5N1h.s:233    .text:0000000000000154 .L11
     /tmp/ccmr5N1h.s:228    .text:0000000000000150 .L17
     /tmp/ccmr5N1h.s:212    .text:000000000000013c .L13
GAS LISTING /tmp/ccmr5N1h.s 			page 33


     /tmp/ccmr5N1h.s:258    .text:0000000000000174 .L18
     /tmp/ccmr5N1h.s:240    .text:000000000000015c .L10
     /tmp/ccmr5N1h.s:446    .text:0000000000000270 .L29
     /tmp/ccmr5N1h.s:325    .text:00000000000001c8 .L31
     /tmp/ccmr5N1h.s:302    .text:00000000000001b0 .L28
     /tmp/ccmr5N1h.s:414    .text:0000000000000244 .L22
     /tmp/ccmr5N1h.s:385    .text:000000000000021c .L23
     /tmp/ccmr5N1h.s:379    .text:0000000000000210 .L24
     /tmp/ccmr5N1h.s:423    .text:000000000000024c .L25
     /tmp/ccmr5N1h.s:401    .text:0000000000000230 .L26
     /tmp/ccmr5N1h.s:439    .text:0000000000000264 .L27
     /tmp/ccmr5N1h.s:454    .text:0000000000000274 .L20
     /tmp/ccmr5N1h.s:568    .text:0000000000000308 .L35
     /tmp/ccmr5N1h.s:563    .text:0000000000000304 .L43
     /tmp/ccmr5N1h.s:547    .text:00000000000002f0 .L37
     /tmp/ccmr5N1h.s:616    .text:0000000000000354 .L44
     /tmp/ccmr5N1h.s:588    .text:0000000000000328 .L40
     /tmp/ccmr5N1h.s:623    .text:0000000000000360 .L45
     /tmp/ccmr5N1h.s:598    .text:000000000000033c .L34
     /tmp/ccmr5N1h.s:637    .text:000000000000037c .L46
     /tmp/ccmr5N1h.s:575    .text:0000000000000310 .L39
     /tmp/ccmr5N1h.s:724    .text:00000000000003fc .L48
     /tmp/ccmr5N1h.s:707    .text:00000000000003e0 .L56
     /tmp/ccmr5N1h.s:688    .text:00000000000003c8 .L52
     /tmp/ccmr5N1h.s:747    .text:000000000000041c .L50
     /tmp/ccmr5N1h.s:756    .text:000000000000042c .L54
     /tmp/ccmr5N1h.s:716    .text:00000000000003ec .L51
     /tmp/ccmr5N1h.s:729    .text:0000000000000404 .L47
     /tmp/ccmr5N1h.s:2208   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccmr5N1h.s:3732   .debug_str:0000000000000865 .LASF151
     /tmp/ccmr5N1h.s:3712   .debug_str:00000000000007d5 .LASF152
     /tmp/ccmr5N1h.s:3568   .debug_str:00000000000002e9 .LASF153
     /tmp/ccmr5N1h.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccmr5N1h.s:985    .text:0000000000000520 .Letext0
     /tmp/ccmr5N1h.s:3482   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccmr5N1h.s:3588   .debug_str:00000000000003b9 .LASF0
     /tmp/ccmr5N1h.s:3612   .debug_str:0000000000000476 .LASF1
     /tmp/ccmr5N1h.s:3684   .debug_str:00000000000006f7 .LASF2
     /tmp/ccmr5N1h.s:3692   .debug_str:0000000000000737 .LASF4
     /tmp/ccmr5N1h.s:3600   .debug_str:0000000000000412 .LASF3
     /tmp/ccmr5N1h.s:3494   .debug_str:0000000000000092 .LASF5
     /tmp/ccmr5N1h.s:3666   .debug_str:000000000000066c .LASF6
     /tmp/ccmr5N1h.s:3604   .debug_str:0000000000000446 .LASF7
     /tmp/ccmr5N1h.s:3566   .debug_str:00000000000002d9 .LASF8
     /tmp/ccmr5N1h.s:3572   .debug_str:0000000000000323 .LASF9
     /tmp/ccmr5N1h.s:3522   .debug_str:0000000000000166 .LASF10
     /tmp/ccmr5N1h.s:3560   .debug_str:00000000000002b8 .LASF11
     /tmp/ccmr5N1h.s:3530   .debug_str:00000000000001a4 .LASF12
     /tmp/ccmr5N1h.s:3520   .debug_str:0000000000000156 .LASF13
     /tmp/ccmr5N1h.s:3718   .debug_str:00000000000007fc .LASF14
     /tmp/ccmr5N1h.s:3552   .debug_str:0000000000000270 .LASF15
     /tmp/ccmr5N1h.s:3708   .debug_str:00000000000007b0 .LASF16
     /tmp/ccmr5N1h.s:3664   .debug_str:000000000000065c .LASF49
     /tmp/ccmr5N1h.s:3704   .debug_str:000000000000079d .LASF19
     /tmp/ccmr5N1h.s:3610   .debug_str:0000000000000471 .LASF17
     /tmp/ccmr5N1h.s:3524   .debug_str:0000000000000175 .LASF18
     /tmp/ccmr5N1h.s:3564   .debug_str:00000000000002d0 .LASF20
GAS LISTING /tmp/ccmr5N1h.s 			page 34


     /tmp/ccmr5N1h.s:3614   .debug_str:0000000000000489 .LASF21
     /tmp/ccmr5N1h.s:3616   .debug_str:0000000000000497 .LASF22
     /tmp/ccmr5N1h.s:3562   .debug_str:00000000000002c7 .LASF23
     /tmp/ccmr5N1h.s:3788   .debug_str:0000000000000b15 .LASF24
     /tmp/ccmr5N1h.s:3632   .debug_str:0000000000000542 .LASF25
     /tmp/ccmr5N1h.s:3498   .debug_str:00000000000000a4 .LASF27
     /tmp/ccmr5N1h.s:3722   .debug_str:000000000000082d .LASF26
     /tmp/ccmr5N1h.s:3634   .debug_str:000000000000054c .LASF28
     /tmp/ccmr5N1h.s:3756   .debug_str:0000000000000a07 .LASF37
     /tmp/ccmr5N1h.s:3736   .debug_str:000000000000093d .LASF39
     /tmp/ccmr5N1h.s:3670   .debug_str:0000000000000694 .LASF31
     /tmp/ccmr5N1h.s:3492   .debug_str:000000000000005d .LASF33
     /tmp/ccmr5N1h.s:3768   .debug_str:0000000000000a55 .LASF29
     /tmp/ccmr5N1h.s:3488   .debug_str:0000000000000027 .LASF30
     /tmp/ccmr5N1h.s:3724   .debug_str:0000000000000836 .LASF32
     /tmp/ccmr5N1h.s:3576   .debug_str:0000000000000344 .LASF34
     /tmp/ccmr5N1h.s:3484   .debug_str:0000000000000000 .LASF35
     /tmp/ccmr5N1h.s:3658   .debug_str:00000000000005ea .LASF36
     /tmp/ccmr5N1h.s:3554   .debug_str:0000000000000286 .LASF38
     /tmp/ccmr5N1h.s:3770   .debug_str:0000000000000a6b .LASF40
     /tmp/ccmr5N1h.s:3710   .debug_str:00000000000007c6 .LASF41
     /tmp/ccmr5N1h.s:3546   .debug_str:000000000000022c .LASF42
     /tmp/ccmr5N1h.s:3540   .debug_str:00000000000001fd .LASF43
     /tmp/ccmr5N1h.s:3754   .debug_str:00000000000009d8 .LASF44
     /tmp/ccmr5N1h.s:3776   .debug_str:0000000000000abb .LASF45
     /tmp/ccmr5N1h.s:3626   .debug_str:00000000000004fd .LASF46
     /tmp/ccmr5N1h.s:3528   .debug_str:000000000000019e .LASF47
     /tmp/ccmr5N1h.s:3660   .debug_str:0000000000000614 .LASF48
     /tmp/ccmr5N1h.s:3764   .debug_str:0000000000000a45 .LASF50
     /tmp/ccmr5N1h.s:3584   .debug_str:0000000000000396 .LASF70
     /tmp/ccmr5N1h.s:3620   .debug_str:00000000000004c8 .LASF72
     /tmp/ccmr5N1h.s:3750   .debug_str:00000000000009c0 .LASF51
     /tmp/ccmr5N1h.s:3780   .debug_str:0000000000000ad9 .LASF52
     /tmp/ccmr5N1h.s:3702   .debug_str:0000000000000781 .LASF53
     /tmp/ccmr5N1h.s:3642   .debug_str:000000000000058f .LASF54
     /tmp/ccmr5N1h.s:3624   .debug_str:00000000000004e5 .LASF55
     /tmp/ccmr5N1h.s:3550   .debug_str:0000000000000266 .LASF56
     /tmp/ccmr5N1h.s:3486   .debug_str:0000000000000011 .LASF57
     /tmp/ccmr5N1h.s:3628   .debug_str:000000000000051c .LASF58
     /tmp/ccmr5N1h.s:3760   .debug_str:0000000000000a1d .LASF59
     /tmp/ccmr5N1h.s:3516   .debug_str:0000000000000132 .LASF60
     /tmp/ccmr5N1h.s:3618   .debug_str:00000000000004aa .LASF61
     /tmp/ccmr5N1h.s:3544   .debug_str:0000000000000215 .LASF62
     /tmp/ccmr5N1h.s:3526   .debug_str:000000000000017a .LASF63
     /tmp/ccmr5N1h.s:3596   .debug_str:00000000000003ed .LASF64
     /tmp/ccmr5N1h.s:3532   .debug_str:00000000000001b4 .LASF65
     /tmp/ccmr5N1h.s:3698   .debug_str:0000000000000758 .LASF66
     /tmp/ccmr5N1h.s:3556   .debug_str:0000000000000296 .LASF67
     /tmp/ccmr5N1h.s:3590   .debug_str:00000000000003c6 .LASF68
     /tmp/ccmr5N1h.s:3774   .debug_str:0000000000000aa1 .LASF69
     /tmp/ccmr5N1h.s:3748   .debug_str:00000000000009b7 .LASF71
     /tmp/ccmr5N1h.s:3742   .debug_str:0000000000000987 .LASF73
     /tmp/ccmr5N1h.s:3680   .debug_str:00000000000006e3 .LASF74
     /tmp/ccmr5N1h.s:3656   .debug_str:00000000000005d5 .LASF75
     /tmp/ccmr5N1h.s:3752   .debug_str:00000000000009d1 .LASF76
     /tmp/ccmr5N1h.s:3672   .debug_str:00000000000006af .LASF77
     /tmp/ccmr5N1h.s:3652   .debug_str:00000000000005ba .LASF78
GAS LISTING /tmp/ccmr5N1h.s 			page 35


     /tmp/ccmr5N1h.s:3606   .debug_str:0000000000000459 .LASF79
     /tmp/ccmr5N1h.s:3644   .debug_str:000000000000059a .LASF80
     /tmp/ccmr5N1h.s:3734   .debug_str:0000000000000929 .LASF81
     /tmp/ccmr5N1h.s:3646   .debug_str:00000000000005a2 .LASF82
     /tmp/ccmr5N1h.s:3654   .debug_str:00000000000005c1 .LASF83
     /tmp/ccmr5N1h.s:3636   .debug_str:000000000000056d .LASF84
     /tmp/ccmr5N1h.s:3674   .debug_str:00000000000006c2 .LASF85
     /tmp/ccmr5N1h.s:3786   .debug_str:0000000000000b0d .LASF86
     /tmp/ccmr5N1h.s:3594   .debug_str:00000000000003d9 .LASF87
     /tmp/ccmr5N1h.s:3782   .debug_str:0000000000000ae8 .LASF88
     /tmp/ccmr5N1h.s:3716   .debug_str:00000000000007f5 .LASF89
     /tmp/ccmr5N1h.s:3694   .debug_str:000000000000073e .LASF90
     /tmp/ccmr5N1h.s:3696   .debug_str:0000000000000751 .LASF91
     /tmp/ccmr5N1h.s:3548   .debug_str:0000000000000253 .LASF92
     /tmp/ccmr5N1h.s:3542   .debug_str:000000000000020f .LASF93
     /tmp/ccmr5N1h.s:3500   .debug_str:00000000000000c5 .LASF94
     /tmp/ccmr5N1h.s:3592   .debug_str:00000000000003d3 .LASF95
     /tmp/ccmr5N1h.s:3538   .debug_str:00000000000001eb .LASF96
     /tmp/ccmr5N1h.s:3512   .debug_str:0000000000000110 .LASF97
     /tmp/ccmr5N1h.s:3700   .debug_str:0000000000000766 .LASF98
     /tmp/ccmr5N1h.s:3496   .debug_str:0000000000000099 .LASF99
     /tmp/ccmr5N1h.s:3688   .debug_str:000000000000070c .LASF100
     /tmp/ccmr5N1h.s:3682   .debug_str:00000000000006ec .LASF101
     /tmp/ccmr5N1h.s:3784   .debug_str:0000000000000af5 .LASF102
     /tmp/ccmr5N1h.s:3686   .debug_str:0000000000000705 .LASF103
     /tmp/ccmr5N1h.s:3518   .debug_str:0000000000000143 .LASF104
     /tmp/ccmr5N1h.s:3706   .debug_str:00000000000007a9 .LASF105
     /tmp/ccmr5N1h.s:3690   .debug_str:0000000000000724 .LASF106
     /tmp/ccmr5N1h.s:3766   .debug_str:0000000000000a4b .LASF107
     /tmp/ccmr5N1h.s:3778   .debug_str:0000000000000ac3 .LASF108
     /tmp/ccmr5N1h.s:3762   .debug_str:0000000000000a3b .LASF109
     /tmp/ccmr5N1h.s:3630   .debug_str:000000000000052c .LASF110
     /tmp/ccmr5N1h.s:3536   .debug_str:00000000000001e5 .LASF111
     /tmp/ccmr5N1h.s:3578   .debug_str:0000000000000373 .LASF112
     /tmp/ccmr5N1h.s:3582   .debug_str:0000000000000390 .LASF113
     /tmp/ccmr5N1h.s:3534   .debug_str:00000000000001d3 .LASF114
     /tmp/ccmr5N1h.s:3580   .debug_str:0000000000000385 .LASF115
     /tmp/ccmr5N1h.s:3586   .debug_str:00000000000003a1 .LASF116
     /tmp/ccmr5N1h.s:3746   .debug_str:00000000000009a8 .LASF117
     /tmp/ccmr5N1h.s:3570   .debug_str:0000000000000307 .LASF118
     /tmp/ccmr5N1h.s:3668   .debug_str:000000000000067f .LASF119
     /tmp/ccmr5N1h.s:3602   .debug_str:0000000000000424 .LASF120
     /tmp/ccmr5N1h.s:3678   .debug_str:00000000000006dc .LASF121
     /tmp/ccmr5N1h.s:3490   .debug_str:0000000000000055 .LASF122
     /tmp/ccmr5N1h.s:3506   .debug_str:00000000000000e9 .LASF123
     /tmp/ccmr5N1h.s:3744   .debug_str:000000000000099c .LASF124
     /tmp/ccmr5N1h.s:3508   .debug_str:00000000000000f8 .LASF125
     /tmp/ccmr5N1h.s:3640   .debug_str:000000000000057d .LASF126
     /tmp/ccmr5N1h.s:3574   .debug_str:0000000000000331 .LASF127
     /tmp/ccmr5N1h.s:3598   .debug_str:00000000000003ff .LASF128
     /tmp/ccmr5N1h.s:3514   .debug_str:000000000000011e .LASF129
     /tmp/ccmr5N1h.s:3728   .debug_str:0000000000000850 .LASF130
     /tmp/ccmr5N1h.s:3622   .debug_str:00000000000004e0 .LASF131
     /tmp/ccmr5N1h.s:3726   .debug_str:000000000000084b .LASF132
     /tmp/ccmr5N1h.s:3720   .debug_str:0000000000000808 .LASF133
     /tmp/ccmr5N1h.s:3738   .debug_str:0000000000000960 .LASF134
     /tmp/ccmr5N1h.s:3662   .debug_str:0000000000000632 .LASF135
GAS LISTING /tmp/ccmr5N1h.s 			page 36


     /tmp/ccmr5N1h.s:885    .text:00000000000004c0 .LFB36
     /tmp/ccmr5N1h.s:911    .text:00000000000004e8 .LFE36
     /tmp/ccmr5N1h.s:2801   .debug_loc:0000000000000000 .LLST33
     /tmp/ccmr5N1h.s:900    .text:00000000000004d8 .LVL81
     /tmp/ccmr5N1h.s:799    .text:000000000000045c .LFB35
     /tmp/ccmr5N1h.s:825    .text:0000000000000484 .LFE35
     /tmp/ccmr5N1h.s:2815   .debug_loc:0000000000000039 .LLST30
     /tmp/ccmr5N1h.s:814    .text:0000000000000474 .LVL75
     /tmp/ccmr5N1h.s:917    .text:00000000000004e8 .LFB34
     /tmp/ccmr5N1h.s:963    .text:0000000000000520 .LFE34
     /tmp/ccmr5N1h.s:3510   .debug_str:000000000000010b .LASF136
     /tmp/ccmr5N1h.s:2829   .debug_loc:0000000000000072 .LLST34
     /tmp/ccmr5N1h.s:3558   .debug_str:00000000000002b1 .LASF137
     /tmp/ccmr5N1h.s:2841   .debug_loc:00000000000000a9 .LLST35
     /tmp/ccmr5N1h.s:941    .text:0000000000000504 .LVL84
     /tmp/ccmr5N1h.s:952    .text:0000000000000510 .LVL85
     /tmp/ccmr5N1h.s:831    .text:0000000000000484 .LFB33
     /tmp/ccmr5N1h.s:879    .text:00000000000004c0 .LFE33
     /tmp/ccmr5N1h.s:2848   .debug_loc:00000000000000cc .LLST31
     /tmp/ccmr5N1h.s:3772   .debug_str:0000000000000a93 .LASF138
     /tmp/ccmr5N1h.s:2863   .debug_loc:0000000000000106 .LLST32
     /tmp/ccmr5N1h.s:857    .text:00000000000004a4 .LVL78
     /tmp/ccmr5N1h.s:868    .text:00000000000004b0 .LVL79
     /tmp/ccmr5N1h.s:659    .text:0000000000000398 .LFB32
     /tmp/ccmr5N1h.s:761    .text:0000000000000434 .LFE32
     /tmp/ccmr5N1h.s:2870   .debug_loc:0000000000000129 .LLST26
     /tmp/ccmr5N1h.s:3502   .debug_str:00000000000000d7 .LASF139
     /tmp/ccmr5N1h.s:2892   .debug_loc:0000000000000188 .LLST27
     /tmp/ccmr5N1h.s:3790   .debug_str:0000000000000b1f .LASF140
     /tmp/ccmr5N1h.s:2916   .debug_loc:00000000000001f8 .LLST28
     /tmp/ccmr5N1h.s:679    .text:00000000000003bc .LVL61
     /tmp/ccmr5N1h.s:722    .text:00000000000003fc .LVL67
     /tmp/ccmr5N1h.s:510    .text:00000000000002b4 .LFB31
     /tmp/ccmr5N1h.s:653    .text:0000000000000398 .LFE31
     /tmp/ccmr5N1h.s:2936   .debug_loc:0000000000000255 .LLST21
     /tmp/ccmr5N1h.s:2958   .debug_loc:00000000000002b4 .LLST22
     /tmp/ccmr5N1h.s:2980   .debug_loc:0000000000000313 .LLST23
     /tmp/ccmr5N1h.s:3000   .debug_loc:0000000000000370 .LLST24
     /tmp/ccmr5N1h.s:3730   .debug_str:000000000000085a .LASF141
     /tmp/ccmr5N1h.s:3020   .debug_loc:00000000000003cd .LLST25
     /tmp/ccmr5N1h.s:531    .text:00000000000002dc .LVL50
     /tmp/ccmr5N1h.s:272    .text:0000000000000180 .LFB30
     /tmp/ccmr5N1h.s:472    .text:000000000000028c .LFE30
     /tmp/ccmr5N1h.s:3038   .debug_loc:0000000000000419 .LLST10
     /tmp/ccmr5N1h.s:3057   .debug_loc:0000000000000475 .LLST11
     /tmp/ccmr5N1h.s:3078   .debug_loc:00000000000004d3 .LLST12
     /tmp/ccmr5N1h.s:3106   .debug_loc:0000000000000556 .LLST13
     /tmp/ccmr5N1h.s:328    .text:00000000000001c8 .LBB10
     /tmp/ccmr5N1h.s:448    .text:0000000000000270 .LBE10
     /tmp/ccmr5N1h.s:3650   .debug_str:00000000000005b2 .LASF142
     /tmp/ccmr5N1h.s:3122   .debug_loc:00000000000005a0 .LLST14
     /tmp/ccmr5N1h.s:3638   .debug_str:0000000000000575 .LASF143
     /tmp/ccmr5N1h.s:3129   .debug_loc:00000000000005c3 .LLST15
     /tmp/ccmr5N1h.s:3758   .debug_str:0000000000000a12 .LASF144
     /tmp/ccmr5N1h.s:3206   .debug_loc:00000000000006a4 .LLST16
     /tmp/ccmr5N1h.s:3608   .debug_str:000000000000046c .LASF145
     /tmp/ccmr5N1h.s:3217   .debug_loc:00000000000006da .LLST17
GAS LISTING /tmp/ccmr5N1h.s 			page 37


     /tmp/ccmr5N1h.s:350    .text:00000000000001e8 .LBB12
     /tmp/ccmr5N1h.s:416    .text:0000000000000244 .LBE12
     /tmp/ccmr5N1h.s:3676   .debug_str:00000000000006d6 .LASF146
     /tmp/ccmr5N1h.s:3224   .debug_loc:00000000000006fd .LLST18
     /tmp/ccmr5N1h.s:359    .text:00000000000001f4 .LBB14
     /tmp/ccmr5N1h.s:386    .text:000000000000021c .LBE14
     /tmp/ccmr5N1h.s:3648   .debug_str:00000000000005aa .LASF147
     /tmp/ccmr5N1h.s:3241   .debug_loc:0000000000000748 .LLST19
     /tmp/ccmr5N1h.s:430    .text:000000000000025c .LVL40
     /tmp/ccmr5N1h.s:292    .text:00000000000001a4 .LVL20
     /tmp/ccmr5N1h.s:175    .text:0000000000000100 .LFB29
     /tmp/ccmr5N1h.s:266    .text:0000000000000180 .LFE29
     /tmp/ccmr5N1h.s:3248   .debug_loc:000000000000076b .LLST5
     /tmp/ccmr5N1h.s:3270   .debug_loc:00000000000007ca .LLST6
     /tmp/ccmr5N1h.s:3292   .debug_loc:0000000000000829 .LLST7
     /tmp/ccmr5N1h.s:3312   .debug_loc:0000000000000886 .LLST8
     /tmp/ccmr5N1h.s:3504   .debug_str:00000000000000dc .LASF148
     /tmp/ccmr5N1h.s:3332   .debug_loc:00000000000008e3 .LLST9
     /tmp/ccmr5N1h.s:196    .text:0000000000000128 .LVL9
     /tmp/ccmr5N1h.s:66     .text:0000000000000068 .LFB28
     /tmp/ccmr5N1h.s:169    .text:0000000000000100 .LFE28
     /tmp/ccmr5N1h.s:3350   .debug_loc:000000000000092f .LLST0
     /tmp/ccmr5N1h.s:3372   .debug_loc:000000000000098e .LLST1
     /tmp/ccmr5N1h.s:3714   .debug_str:00000000000007ed .LASF149
     /tmp/ccmr5N1h.s:3394   .debug_loc:00000000000009ed .LLST2
     /tmp/ccmr5N1h.s:3416   .debug_loc:0000000000000a4c .LLST3
     /tmp/ccmr5N1h.s:113    .text:00000000000000bc .LBB4
     /tmp/ccmr5N1h.s:126    .text:00000000000000c8 .LBE4
     /tmp/ccmr5N1h.s:3740   .debug_str:000000000000097f .LASF150
     /tmp/ccmr5N1h.s:3434   .debug_loc:0000000000000a98 .LLST4
     /tmp/ccmr5N1h.s:90     .text:0000000000000098 .LVL1
     /tmp/ccmr5N1h.s:10     .text:0000000000000000 .LFB27
     /tmp/ccmr5N1h.s:60     .text:0000000000000068 .LFE27
     /tmp/ccmr5N1h.s:767    .text:0000000000000434 .LFB26
     /tmp/ccmr5N1h.s:793    .text:000000000000045c .LFE26
     /tmp/ccmr5N1h.s:3441   .debug_loc:0000000000000abb .LLST29
     /tmp/ccmr5N1h.s:782    .text:000000000000044c .LVL73
     /tmp/ccmr5N1h.s:478    .text:000000000000028c .LFB25
     /tmp/ccmr5N1h.s:504    .text:00000000000002b4 .LFE25
     /tmp/ccmr5N1h.s:3455   .debug_loc:0000000000000af4 .LLST20
     /tmp/ccmr5N1h.s:493    .text:00000000000002a4 .LVL48
     /tmp/ccmr5N1h.s:888    .text:00000000000004c0 .LVL80
     /tmp/ccmr5N1h.s:802    .text:000000000000045c .LVL74
     /tmp/ccmr5N1h.s:929    .text:00000000000004f8 .LVL82
     /tmp/ccmr5N1h.s:936    .text:00000000000004fc .LVL83
     /tmp/ccmr5N1h.s:849    .text:0000000000000498 .LVL76
     /tmp/ccmr5N1h.s:855    .text:000000000000049c .LVL77
     /tmp/ccmr5N1h.s:662    .text:0000000000000398 .LVL60
     /tmp/ccmr5N1h.s:742    .text:0000000000000414 .LVL69
     /tmp/ccmr5N1h.s:746    .text:000000000000041c .LVL70
     /tmp/ccmr5N1h.s:687    .text:00000000000003c8 .LVL63
     /tmp/ccmr5N1h.s:698    .text:00000000000003d4 .LVL64
     /tmp/ccmr5N1h.s:704    .text:00000000000003dc .LVL65
     /tmp/ccmr5N1h.s:715    .text:00000000000003ec .LVL66
     /tmp/ccmr5N1h.s:754    .text:0000000000000428 .LVL71
     /tmp/ccmr5N1h.s:684    .text:00000000000003c4 .LVL62
     /tmp/ccmr5N1h.s:739    .text:0000000000000410 .LVL68
GAS LISTING /tmp/ccmr5N1h.s 			page 38


     /tmp/ccmr5N1h.s:513    .text:00000000000002b4 .LVL49
     /tmp/ccmr5N1h.s:608    .text:0000000000000348 .LVL56
     /tmp/ccmr5N1h.s:615    .text:0000000000000354 .LVL58
     /tmp/ccmr5N1h.s:611    .text:000000000000034c .LVL57
     /tmp/ccmr5N1h.s:546    .text:00000000000002f0 .LVL52
     /tmp/ccmr5N1h.s:554    .text:00000000000002f8 .LVL53
     /tmp/ccmr5N1h.s:560    .text:0000000000000300 .LVL54
     /tmp/ccmr5N1h.s:536    .text:00000000000002e4 .LVL51
     /tmp/ccmr5N1h.s:574    .text:0000000000000310 .LVL55
     /tmp/ccmr5N1h.s:621    .text:000000000000035c .LVL59
     /tmp/ccmr5N1h.s:275    .text:0000000000000180 .LVL19
     /tmp/ccmr5N1h.s:384    .text:000000000000021c .LVL31
     /tmp/ccmr5N1h.s:413    .text:0000000000000244 .LVL38
     /tmp/ccmr5N1h.s:467    .text:0000000000000284 .LVL46
     /tmp/ccmr5N1h.s:434    .text:0000000000000260 .LVL41
     /tmp/ccmr5N1h.s:438    .text:0000000000000264 .LVL42
     /tmp/ccmr5N1h.s:453    .text:0000000000000274 .LVL44
     /tmp/ccmr5N1h.s:301    .text:00000000000001b0 .LVL22
     /tmp/ccmr5N1h.s:315    .text:00000000000001bc .LVL23
     /tmp/ccmr5N1h.s:321    .text:00000000000001c4 .LVL24
     /tmp/ccmr5N1h.s:405    .text:0000000000000234 .LVL35
     /tmp/ccmr5N1h.s:422    .text:000000000000024c .LVL39
     /tmp/ccmr5N1h.s:298    .text:00000000000001ac .LVL21
     /tmp/ccmr5N1h.s:464    .text:0000000000000280 .LVL45
     /tmp/ccmr5N1h.s:330    .text:00000000000001c8 .LVL25
     /tmp/ccmr5N1h.s:445    .text:0000000000000270 .LVL43
     /tmp/ccmr5N1h.s:336    .text:00000000000001d0 .LVL26
     /tmp/ccmr5N1h.s:393    .text:0000000000000224 .LVL32
     /tmp/ccmr5N1h.s:398    .text:000000000000022c .LVL33
     /tmp/ccmr5N1h.s:400    .text:0000000000000230 .LVL34
     /tmp/ccmr5N1h.s:408    .text:000000000000023c .LVL36
     /tmp/ccmr5N1h.s:411    .text:0000000000000240 .LVL37
     /tmp/ccmr5N1h.s:342    .text:00000000000001d8 .LVL27
     /tmp/ccmr5N1h.s:354    .text:00000000000001ec .LVL28
     /tmp/ccmr5N1h.s:370    .text:0000000000000200 .LVL30
     /tmp/ccmr5N1h.s:361    .text:00000000000001f4 .LVL29
     /tmp/ccmr5N1h.s:178    .text:0000000000000100 .LVL8
     /tmp/ccmr5N1h.s:250    .text:0000000000000168 .LVL15
     /tmp/ccmr5N1h.s:257    .text:0000000000000174 .LVL17
     /tmp/ccmr5N1h.s:253    .text:000000000000016c .LVL16
     /tmp/ccmr5N1h.s:211    .text:000000000000013c .LVL11
     /tmp/ccmr5N1h.s:219    .text:0000000000000144 .LVL12
     /tmp/ccmr5N1h.s:225    .text:000000000000014c .LVL13
     /tmp/ccmr5N1h.s:201    .text:0000000000000130 .LVL10
     /tmp/ccmr5N1h.s:239    .text:000000000000015c .LVL14
     /tmp/ccmr5N1h.s:263    .text:000000000000017c .LVL18
     /tmp/ccmr5N1h.s:69     .text:0000000000000068 .LVL0
     /tmp/ccmr5N1h.s:138    .text:00000000000000d4 .LVL4
     /tmp/ccmr5N1h.s:148    .text:00000000000000e4 .LVL7
     /tmp/ccmr5N1h.s:144    .text:00000000000000dc .LVL6
     /tmp/ccmr5N1h.s:141    .text:00000000000000d8 .LVL5
     /tmp/ccmr5N1h.s:115    .text:00000000000000bc .LVL2
     /tmp/ccmr5N1h.s:124    .text:00000000000000c8 .LVL3
     /tmp/ccmr5N1h.s:770    .text:0000000000000434 .LVL72
     /tmp/ccmr5N1h.s:481    .text:000000000000028c .LVL47
     /tmp/ccmr5N1h.s:990    .debug_info:0000000000000000 .Ldebug_info0

GAS LISTING /tmp/ccmr5N1h.s 			page 39


UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
_ZN5Riscv13w_a0_sscratchEv
