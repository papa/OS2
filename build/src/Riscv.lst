GAS LISTING /tmp/ccBkVmDa.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv20initMemoryAllocationEv
   9              	_ZN5Riscv20initMemoryAllocationEv:
  10              	.LFB27:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Scheduler.hpp"
  12:src/Riscv.cpp **** #include "../h/buddyTests.hpp"
  13:src/Riscv.cpp **** #include "../h/slabTests.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  16:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  17:src/Riscv.cpp **** bool Riscv::kernelMainCalled = false;
  18:src/Riscv.cpp **** kmem_cache_t * Riscv::pcbCache = nullptr;
  19:src/Riscv.cpp **** kmem_cache_t * Riscv::semaphoreCache = nullptr;
  20:src/Riscv.cpp **** 
  21:src/Riscv.cpp **** void Riscv::initMemoryAllocation()
  22:src/Riscv.cpp **** {
  12              		.loc 1 22 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  23:src/Riscv.cpp ****     size_t totalNumOfBytes = (size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1;
  22              		.loc 1 23 5
  23              		.loc 1 23 52 is_stmt 0
  24 0010 97070000 		la	a5,HEAP_START_ADDR
  24      83B70700 
  25 0018 03B50700 		ld	a0,0(a5)
  26 001c 97070000 		la	a5,HEAP_END_ADDR
  26      83B70700 
  27 0024 83B70700 		ld	a5,0(a5)
  28 0028 B387A740 		sub	a5,a5,a0
  29              		.loc 1 23 12
  30 002c 93871700 		addi	a5,a5,1
  31              	.LVL0:
  24:src/Riscv.cpp ****     size_t bytesForKernel = totalNumOfBytes / 10; //TODO change this if needed
  32              		.loc 1 24 5 is_stmt 1
GAS LISTING /tmp/ccBkVmDa.s 			page 2


  33              		.loc 1 24 12 is_stmt 0
  34 0030 1307A000 		li	a4,10
  35 0034 B3D7E702 		divu	a5,a5,a4
  36              	.LVL1:
  25:src/Riscv.cpp ****     size_t numOfBlocks = (bytesForKernel + BLOCK_NUM_OF_BYTES - 1) / BLOCK_NUM_OF_BYTES;
  37              		.loc 1 25 5 is_stmt 1
  38              		.loc 1 25 63 is_stmt 0
  39 0038 37170000 		li	a4,4096
  40 003c 1307F7FF 		addi	a4,a4,-1
  41 0040 B387E700 		add	a5,a5,a4
  42              	.LVL2:
  26:src/Riscv.cpp **** 
  27:src/Riscv.cpp ****     void* newStartAddr = (void*)((size_t)HEAP_START_ADDR + numOfBlocks*BLOCK_NUM_OF_BYTES);
  43              		.loc 1 27 5 is_stmt 1
  44              		.loc 1 27 71 is_stmt 0
  45 0044 37F7FFFF 		li	a4,-4096
  46 0048 B3F7E700 		and	a5,a5,a4
  47              	.LVL3:
  28:src/Riscv.cpp ****     MemoryAllocator::initMemory(newStartAddr);
  48              		.loc 1 28 5 is_stmt 1
  49              		.loc 1 28 32 is_stmt 0
  50 004c 3305F500 		add	a0,a0,a5
  51              	.LVL4:
  52 0050 97000000 		call	_ZN15MemoryAllocator10initMemoryEPv@plt
  52      E7800000 
  53              	.LVL5:
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp ****     //kmem_init((void*)HEAP_START_ADDR, numOfBlocks);
  31:src/Riscv.cpp ****     //pcbCache = kmem_cache_create("Cache of PCBs", sizeof(PCB), nullptr, nullptr);
  32:src/Riscv.cpp ****     //semaphoreCache = kmem_cache_create("Cache of KSemaphore", sizeof(KSemaphore), nullptr, nullpt
  33:src/Riscv.cpp **** }
  54              		.loc 1 33 1
  55 0058 83308100 		ld	ra,8(sp)
  56              		.cfi_restore 1
  57 005c 03340100 		ld	s0,0(sp)
  58              		.cfi_restore 8
  59              		.cfi_def_cfa 2, 16
  60 0060 13010101 		addi	sp,sp,16
  61              		.cfi_def_cfa_offset 0
  62 0064 67800000 		jr	ra
  63              		.cfi_endproc
  64              	.LFE27:
  66              		.section	.rodata.str1.8,"aMS",@progbits,1
  67              		.align	3
  68              	.LC0:
  69 0000 43616368 		.string	"Cache of PCBs"
  69      65206F66 
  69      20504342 
  69      7300
  70 000e 0000     		.align	3
  71              	.LC1:
  72 0010 43616368 		.string	"Cache of KSemaphore"
  72      65206F66 
  72      204B5365 
  72      6D617068 
  72      6F726500 
  73              		.text
GAS LISTING /tmp/ccBkVmDa.s 			page 3


  74              		.align	2
  75              		.globl	_ZN5Riscv10initSystemEv
  77              	_ZN5Riscv10initSystemEv:
  78              	.LFB28:
  34:src/Riscv.cpp **** 
  35:src/Riscv.cpp **** void Riscv::initSystem()
  36:src/Riscv.cpp **** {
  79              		.loc 1 36 1 is_stmt 1
  80              		.cfi_startproc
  81 0068 130101FE 		addi	sp,sp,-32
  82              		.cfi_def_cfa_offset 32
  83 006c 233C1100 		sd	ra,24(sp)
  84 0070 23388100 		sd	s0,16(sp)
  85 0074 23349100 		sd	s1,8(sp)
  86 0078 23302101 		sd	s2,0(sp)
  87              		.cfi_offset 1, -8
  88              		.cfi_offset 8, -16
  89              		.cfi_offset 9, -24
  90              		.cfi_offset 18, -32
  91 007c 13040102 		addi	s0,sp,32
  92              		.cfi_def_cfa 8, 0
  37:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  93              		.loc 1 37 5
  94              		.loc 1 37 12 is_stmt 0
  95 0080 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  95      83B70700 
  96              	.LVL6:
  97              	.LBB38:
  98              	.LBB39:
  99              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/userMain.hpp"
  10:src/../h/Riscv.hpp **** #include "slabAllocator.hpp"
  11:src/../h/Riscv.hpp **** 
  12:src/../h/Riscv.hpp **** class Riscv
  13:src/../h/Riscv.hpp **** {
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void kernelMain();
  16:src/../h/Riscv.hpp **** private:
  17:src/../h/Riscv.hpp ****     static bool kernelMainCalled;
  18:src/../h/Riscv.hpp ****     static void changePrivMode();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void initSystem();
  21:src/../h/Riscv.hpp ****     static void endSystem();
  22:src/../h/Riscv.hpp ****     static void initMemoryAllocation();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void enableInterrupts();
  27:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccBkVmDa.s 			page 4


  28:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void disableInterrupts();
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static void pushRegisters();
  33:src/../h/Riscv.hpp ****     static void popRegisters();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_scause();
  36:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  39:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  42:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     static uint64 r_stval();
  45:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     static bool finishSystem;
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     enum BitMaskSip
  50:src/../h/Riscv.hpp ****     {
  51:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  52:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  53:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  54:src/../h/Riscv.hpp ****     };
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     static uint64 r_sip();
  61:src/../h/Riscv.hpp **** 
  62:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  63:src/../h/Riscv.hpp **** 
  64:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  65:src/../h/Riscv.hpp ****     {
  66:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  68:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  69:src/../h/Riscv.hpp ****     };
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  80:src/../h/Riscv.hpp **** 
  81:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  84:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccBkVmDa.s 			page 5


  85:src/../h/Riscv.hpp ****     static uint64 r_sie();
  86:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  87:src/../h/Riscv.hpp ****     static void popSppSpie();
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp ****     static void supervisorTrap();
  90:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  93:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  94:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  95:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  96:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  97:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  98:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  99:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
 100:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
 101:src/../h/Riscv.hpp **** 
 102:src/../h/Riscv.hpp ****     static uint64 totalTime;
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp ****     static kmem_cache_t * pcbCache;
 105:src/../h/Riscv.hpp ****     static kmem_cache_t* semaphoreCache;
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp ****     friend class PCB;
 108:src/../h/Riscv.hpp ****     friend class Scheduler;
 109:src/../h/Riscv.hpp ****     friend class SleepPCBList;
 110:src/../h/Riscv.hpp ****     friend class KSemaphore;
 111:src/../h/Riscv.hpp ****     friend class KConsole;
 112:src/../h/Riscv.hpp ****     friend class MemoryAllocator;
 113:src/../h/Riscv.hpp **** };
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 116:src/../h/Riscv.hpp **** {
 117:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 121:src/../h/Riscv.hpp ****     uint64 volatile scause;
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 123:src/../h/Riscv.hpp ****     return scause;
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 127:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 128:src/../h/Riscv.hpp **** }
 129:src/../h/Riscv.hpp **** 
 130:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 131:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 133:src/../h/Riscv.hpp ****     return sepc;
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 137:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 141:src/../h/Riscv.hpp ****     uint64 volatile stvec;
GAS LISTING /tmp/ccBkVmDa.s 			page 6


 142:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 143:src/../h/Riscv.hpp ****     return stvec;
 144:src/../h/Riscv.hpp **** }
 145:src/../h/Riscv.hpp **** 
 146:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 147:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
 100              		.loc 2 147 5 is_stmt 1
 101              		.loc 2 147 53 is_stmt 0
 102              	#APP
 103              	# 147 "src/../h/Riscv.hpp" 1
 148              	}
 104              		csrw stvec, a5
 105              	# 0 "" 2
 106              	.LVL7:
 107              	#NO_APP
 108              	.LBE39:
 109              	.LBE38:
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp ****     size_t totalNumOfBytes = (size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1;
 110              		.loc 1 39 5 is_stmt 1
 111              		.loc 1 39 52 is_stmt 0
 112 008c 97040000 		la	s1,HEAP_START_ADDR
 112      83B40400 
 113 0094 03B50400 		ld	a0,0(s1)
 114 0098 97070000 		la	a5,HEAP_END_ADDR
 114      83B70700 
 115 00a0 83B70700 		ld	a5,0(a5)
 116 00a4 B387A740 		sub	a5,a5,a0
 117              		.loc 1 39 12
 118 00a8 93871700 		addi	a5,a5,1
 119              	.LVL8:
  40:src/Riscv.cpp ****     size_t bytesForKernel = totalNumOfBytes / 10; //TODO change this if needed
 120              		.loc 1 40 5 is_stmt 1
 121              		.loc 1 40 12 is_stmt 0
 122 00ac 1307A000 		li	a4,10
 123 00b0 B3D7E702 		divu	a5,a5,a4
 124              	.LVL9:
  41:src/Riscv.cpp ****     size_t numOfBlocks = (bytesForKernel + BLOCK_NUM_OF_BYTES - 1) / BLOCK_NUM_OF_BYTES;
 125              		.loc 1 41 5 is_stmt 1
 126              		.loc 1 41 63 is_stmt 0
 127 00b4 37170000 		li	a4,4096
 128 00b8 1307F7FF 		addi	a4,a4,-1
 129 00bc B387E700 		add	a5,a5,a4
 130              	.LVL10:
 131              		.loc 1 41 12
 132 00c0 13D9C700 		srli	s2,a5,12
 133              	.LVL11:
  42:src/Riscv.cpp ****     void* newStartAddr = (void*)((size_t)HEAP_START_ADDR + numOfBlocks*BLOCK_NUM_OF_BYTES);
 134              		.loc 1 42 5 is_stmt 1
 135              		.loc 1 42 71 is_stmt 0
 136 00c4 37F7FFFF 		li	a4,-4096
 137 00c8 B3F7E700 		and	a5,a5,a4
 138              	.LVL12:
  43:src/Riscv.cpp ****     MemoryAllocator::initMemory(newStartAddr);
 139              		.loc 1 43 5 is_stmt 1
 140              		.loc 1 43 32 is_stmt 0
 141 00cc 3305F500 		add	a0,a0,a5
GAS LISTING /tmp/ccBkVmDa.s 			page 7


 142              	.LVL13:
 143 00d0 97000000 		call	_ZN15MemoryAllocator10initMemoryEPv@plt
 143      E7800000 
 144              	.LVL14:
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp ****     kmem_init((void*)HEAP_START_ADDR, numOfBlocks);
 145              		.loc 1 45 5 is_stmt 1
 146              		.loc 1 45 14 is_stmt 0
 147 00d8 9B050900 		sext.w	a1,s2
 148 00dc 03B50400 		ld	a0,0(s1)
 149 00e0 97000000 		call	_Z9kmem_initPvi@plt
 149      E7800000 
 150              	.LVL15:
  46:src/Riscv.cpp ****     pcbCache = kmem_cache_create("Cache of PCBs", sizeof(PCB), nullptr, nullptr);
 151              		.loc 1 46 5 is_stmt 1
 152              		.loc 1 46 33 is_stmt 0
 153 00e8 93060000 		li	a3,0
 154 00ec 13060000 		li	a2,0
 155 00f0 93050006 		li	a1,96
 156 00f4 17050000 		lla	a0,.LC0
 156      13050500 
 157 00fc 97000000 		call	_Z17kmem_cache_createPKcmPFvPvES3_@plt
 157      E7800000 
 158              	.LVL16:
 159              		.loc 1 46 14
 160 0104 97040000 		lla	s1,.LANCHOR0
 160      93840400 
 161 010c 23B0A400 		sd	a0,0(s1)
  47:src/Riscv.cpp ****     semaphoreCache = kmem_cache_create("Cache of KSemaphore", sizeof(KSemaphore), nullptr, nullptr)
 162              		.loc 1 47 5 is_stmt 1
 163              		.loc 1 47 39 is_stmt 0
 164 0110 93060000 		li	a3,0
 165 0114 13060000 		li	a2,0
 166 0118 93058001 		li	a1,24
 167 011c 17050000 		lla	a0,.LC1
 167      13050500 
 168 0124 97000000 		call	_Z17kmem_cache_createPKcmPFvPvES3_@plt
 168      E7800000 
 169              	.LVL17:
 170              		.loc 1 47 20
 171 012c 23B4A400 		sd	a0,8(s1)
  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp ****     //initMemoryAllocation();
  50:src/Riscv.cpp ****     PCB::initialize();
 172              		.loc 1 50 5 is_stmt 1
 173              		.loc 1 50 20 is_stmt 0
 174 0130 97000000 		call	_ZN3PCB10initializeEv@plt
 174      E7800000 
 175              	.LVL18:
  51:src/Riscv.cpp ****     KConsole::initialize();
 176              		.loc 1 51 5 is_stmt 1
 177              		.loc 1 51 25 is_stmt 0
 178 0138 97000000 		call	_ZN8KConsole10initializeEv@plt
 178      E7800000 
 179              	.LVL19:
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp **** }
GAS LISTING /tmp/ccBkVmDa.s 			page 8


 180              		.loc 1 53 1
 181 0140 83308101 		ld	ra,24(sp)
 182              		.cfi_restore 1
 183 0144 03340101 		ld	s0,16(sp)
 184              		.cfi_restore 8
 185              		.cfi_def_cfa 2, 32
 186 0148 83348100 		ld	s1,8(sp)
 187              		.cfi_restore 9
 188 014c 03390100 		ld	s2,0(sp)
 189              		.cfi_restore 18
 190              	.LVL20:
 191 0150 13010102 		addi	sp,sp,32
 192              		.cfi_def_cfa_offset 0
 193 0154 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE28:
 197              		.align	2
 198              		.globl	_ZN5Riscv16enableInterruptsEv
 200              	_ZN5Riscv16enableInterruptsEv:
 201              	.LFB30:
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp **** void Riscv::endSystem()
  56:src/Riscv.cpp **** {
  57:src/Riscv.cpp ****     disableInterrupts();
  58:src/Riscv.cpp ****     finishSystem = true;
  59:src/Riscv.cpp ****     PCB* pcb = 0;
  60:src/Riscv.cpp ****     while(true)
  61:src/Riscv.cpp ****     {
  62:src/Riscv.cpp ****         pcb = Scheduler::get();
  63:src/Riscv.cpp ****         if(pcb == 0) break;
  64:src/Riscv.cpp ****     }
  65:src/Riscv.cpp ****     Scheduler::put(PCB::consolePCB);
  66:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
  67:src/Riscv.cpp ****     enableInterrupts();
  68:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
  69:src/Riscv.cpp ****     {
  70:src/Riscv.cpp ****         thread_dispatch();
  71:src/Riscv.cpp ****     }
  72:src/Riscv.cpp ****     disableInterrupts();
  73:src/Riscv.cpp **** }
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp **** void Riscv::enableInterrupts() {
 202              		.loc 1 75 32 is_stmt 1
 203              		.cfi_startproc
 204 0158 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 015c 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 0160 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  76:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 210              		.loc 1 76 5
 211              	.LVL21:
 212              	.LBB40:
 213              	.LBB41:
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
GAS LISTING /tmp/ccBkVmDa.s 			page 9


 151:src/../h/Riscv.hpp ****     uint64 volatile stval;
 152:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 153:src/../h/Riscv.hpp ****     return stval;
 154:src/../h/Riscv.hpp **** }
 155:src/../h/Riscv.hpp **** 
 156:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 157:src/../h/Riscv.hpp **** {
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 162:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
 165:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 166:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 167:src/../h/Riscv.hpp **** }
 168:src/../h/Riscv.hpp **** 
 169:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 170:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 171:src/../h/Riscv.hpp **** }
 172:src/../h/Riscv.hpp **** 
 173:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 174:src/../h/Riscv.hpp **** {
 175:src/../h/Riscv.hpp ****     uint64 volatile sie;
 176:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 177:src/../h/Riscv.hpp ****     return sie;
 178:src/../h/Riscv.hpp **** }
 179:src/../h/Riscv.hpp **** 
 180:src/../h/Riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 181:src/../h/Riscv.hpp **** {
 182:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sie, %0" : :"r"(mask));
 183:src/../h/Riscv.hpp **** }
 184:src/../h/Riscv.hpp **** 
 185:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 186:src/../h/Riscv.hpp ****     uint64 volatile sip;
 187:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 188:src/../h/Riscv.hpp ****     return sip;
 189:src/../h/Riscv.hpp **** }
 190:src/../h/Riscv.hpp **** 
 191:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 192:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 193:src/../h/Riscv.hpp **** }
 194:src/../h/Riscv.hpp **** 
 195:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 196:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 214              		.loc 2 196 5
 215              		.loc 2 196 54 is_stmt 0
 216 0164 93072000 		li	a5,2
 217              	#APP
 218              	# 196 "src/../h/Riscv.hpp" 1
 197              	}
 219              		csrs sstatus, a5
 220              	# 0 "" 2
 221              	.LVL22:
 222              	#NO_APP
 223              	.LBE41:
GAS LISTING /tmp/ccBkVmDa.s 			page 10


 224              	.LBE40:
  77:src/Riscv.cpp **** }
 225              		.loc 1 77 1
 226 016c 03348100 		ld	s0,8(sp)
 227              		.cfi_restore 8
 228              		.cfi_def_cfa 2, 16
 229 0170 13010101 		addi	sp,sp,16
 230              		.cfi_def_cfa_offset 0
 231 0174 67800000 		jr	ra
 232              		.cfi_endproc
 233              	.LFE30:
 235              		.align	2
 236              		.globl	_ZN5Riscv17disableInterruptsEv
 238              	_ZN5Riscv17disableInterruptsEv:
 239              	.LFB31:
  78:src/Riscv.cpp **** 
  79:src/Riscv.cpp **** void Riscv::disableInterrupts()
  80:src/Riscv.cpp **** {
 240              		.loc 1 80 1 is_stmt 1
 241              		.cfi_startproc
 242 0178 130101FF 		addi	sp,sp,-16
 243              		.cfi_def_cfa_offset 16
 244 017c 23348100 		sd	s0,8(sp)
 245              		.cfi_offset 8, -8
 246 0180 13040101 		addi	s0,sp,16
 247              		.cfi_def_cfa 8, 0
  81:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 248              		.loc 1 81 5
 249              	.LVL23:
 250              	.LBB42:
 251              	.LBB43:
 198:src/../h/Riscv.hpp **** 
 199:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 200:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 252              		.loc 2 200 5
 253              		.loc 2 200 54 is_stmt 0
 254 0184 93072000 		li	a5,2
 255              	#APP
 256              	# 200 "src/../h/Riscv.hpp" 1
 201              	}
 257              		csrc sstatus, a5
 258              	# 0 "" 2
 259              	.LVL24:
 260              	#NO_APP
 261              	.LBE43:
 262              	.LBE42:
  82:src/Riscv.cpp **** }
 263              		.loc 1 82 1
 264 018c 03348100 		ld	s0,8(sp)
 265              		.cfi_restore 8
 266              		.cfi_def_cfa 2, 16
 267 0190 13010101 		addi	sp,sp,16
 268              		.cfi_def_cfa_offset 0
 269 0194 67800000 		jr	ra
 270              		.cfi_endproc
 271              	.LFE31:
 273              		.align	2
GAS LISTING /tmp/ccBkVmDa.s 			page 11


 274              		.globl	_ZN5Riscv9endSystemEv
 276              	_ZN5Riscv9endSystemEv:
 277              	.LFB29:
  56:src/Riscv.cpp ****     disableInterrupts();
 278              		.loc 1 56 1 is_stmt 1
 279              		.cfi_startproc
 280 0198 130101FF 		addi	sp,sp,-16
 281              		.cfi_def_cfa_offset 16
 282 019c 23341100 		sd	ra,8(sp)
 283 01a0 23308100 		sd	s0,0(sp)
 284              		.cfi_offset 1, -8
 285              		.cfi_offset 8, -16
 286 01a4 13040101 		addi	s0,sp,16
 287              		.cfi_def_cfa 8, 0
  57:src/Riscv.cpp ****     finishSystem = true;
 288              		.loc 1 57 5
  57:src/Riscv.cpp ****     finishSystem = true;
 289              		.loc 1 57 22 is_stmt 0
 290 01a8 97000000 		call	_ZN5Riscv17disableInterruptsEv
 290      E7800000 
 291              	.LVL25:
  58:src/Riscv.cpp ****     PCB* pcb = 0;
 292              		.loc 1 58 5 is_stmt 1
  58:src/Riscv.cpp ****     PCB* pcb = 0;
 293              		.loc 1 58 18 is_stmt 0
 294 01b0 93071000 		li	a5,1
 295 01b4 17070000 		sb	a5,.LANCHOR0+16,a4
 295      2300F700 
  59:src/Riscv.cpp ****     while(true)
 296              		.loc 1 59 5 is_stmt 1
 297              	.LVL26:
 298              	.L10:
  60:src/Riscv.cpp ****     {
 299              		.loc 1 60 5
  62:src/Riscv.cpp ****         if(pcb == 0) break;
 300              		.loc 1 62 9
  62:src/Riscv.cpp ****         if(pcb == 0) break;
 301              		.loc 1 62 29 is_stmt 0
 302 01bc 97000000 		call	_ZN9Scheduler3getEv@plt
 302      E7800000 
 303              	.LVL27:
  63:src/Riscv.cpp ****     }
 304              		.loc 1 63 9 is_stmt 1
 305 01c4 E31C05FE 		bnez	a0,.L10
  65:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 306              		.loc 1 65 5
  65:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 307              		.loc 1 65 19 is_stmt 0
 308 01c8 97070000 		la	a5,_ZN3PCB10consolePCBE
 308      83B70700 
 309 01d0 03B50700 		ld	a0,0(a5)
 310              	.LVL28:
 311 01d4 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 311      E7800000 
 312              	.LVL29:
  66:src/Riscv.cpp ****     enableInterrupts();
 313              		.loc 1 66 5 is_stmt 1
GAS LISTING /tmp/ccBkVmDa.s 			page 12


  66:src/Riscv.cpp ****     enableInterrupts();
 314              		.loc 1 66 27 is_stmt 0
 315 01dc 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 315      83B70700 
 316 01e4 23B00700 		sd	zero,0(a5)
  67:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 317              		.loc 1 67 5 is_stmt 1
  67:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 318              		.loc 1 67 21 is_stmt 0
 319 01e8 97000000 		call	_ZN5Riscv16enableInterruptsEv
 319      E7800000 
 320              	.LVL30:
 321              	.L12:
  68:src/Riscv.cpp ****     {
 322              		.loc 1 68 5 is_stmt 1
  68:src/Riscv.cpp ****     {
 323              		.loc 1 68 11
  68:src/Riscv.cpp ****     {
 324              		.loc 1 68 39 is_stmt 0
 325 01f0 97070000 		la	a5,_ZN3PCB10consolePCBE
 325      83B70700 
 326 01f8 03B50700 		ld	a0,0(a5)
 327 01fc 97000000 		call	_ZN3PCB10isFinishedEv@plt
 327      E7800000 
 328              	.LVL31:
  68:src/Riscv.cpp ****     {
 329              		.loc 1 68 11
 330 0204 63180500 		bnez	a0,.L11
  70:src/Riscv.cpp ****     }
 331              		.loc 1 70 9 is_stmt 1
  70:src/Riscv.cpp ****     }
 332              		.loc 1 70 24 is_stmt 0
 333 0208 97000000 		call	_Z15thread_dispatchv@plt
 333      E7800000 
 334              	.LVL32:
  68:src/Riscv.cpp ****     {
 335              		.loc 1 68 5
 336 0210 6FF01FFE 		j	.L12
 337              	.L11:
  72:src/Riscv.cpp **** }
 338              		.loc 1 72 5 is_stmt 1
  72:src/Riscv.cpp **** }
 339              		.loc 1 72 22 is_stmt 0
 340 0214 97000000 		call	_ZN5Riscv17disableInterruptsEv
 340      E7800000 
 341              	.LVL33:
  73:src/Riscv.cpp **** 
 342              		.loc 1 73 1
 343 021c 83308100 		ld	ra,8(sp)
 344              		.cfi_restore 1
 345 0220 03340100 		ld	s0,0(sp)
 346              		.cfi_restore 8
 347              		.cfi_def_cfa 2, 16
 348 0224 13010101 		addi	sp,sp,16
 349              		.cfi_def_cfa_offset 0
 350 0228 67800000 		jr	ra
 351              		.cfi_endproc
GAS LISTING /tmp/ccBkVmDa.s 			page 13


 352              	.LFE29:
 354              		.align	2
 355              		.globl	_ZN5Riscv10popSppSpieEv
 357              	_ZN5Riscv10popSppSpieEv:
 358              	.LFB32:
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp **** void Riscv::popSppSpie()
  85:src/Riscv.cpp **** {
 359              		.loc 1 85 1 is_stmt 1
 360              		.cfi_startproc
 361 022c 130101FF 		addi	sp,sp,-16
 362              		.cfi_def_cfa_offset 16
 363 0230 23348100 		sd	s0,8(sp)
 364              		.cfi_offset 8, -8
 365 0234 13040101 		addi	s0,sp,16
 366              		.cfi_def_cfa 8, 0
  86:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 367              		.loc 1 86 5
 368              		.loc 1 86 39 is_stmt 0
 369              	#APP
 370              	# 86 "src/Riscv.cpp" 1
  87              	    __asm__ volatile ("sret");
 371              		csrw sepc, ra
 372              	# 0 "" 2
 373              		.loc 1 87 5 is_stmt 1
 374              		.loc 1 87 30 is_stmt 0
 375              	# 87 "src/Riscv.cpp" 1
  88              	}
 376              		sret
 377              	# 0 "" 2
 378              		.loc 1 88 1
 379              	#NO_APP
 380 0240 03348100 		ld	s0,8(sp)
 381              		.cfi_restore 8
 382              		.cfi_def_cfa 2, 16
 383 0244 13010101 		addi	sp,sp,16
 384              		.cfi_def_cfa_offset 0
 385 0248 67800000 		jr	ra
 386              		.cfi_endproc
 387              	.LFE32:
 389              		.align	2
 390              		.globl	_ZN5Riscv10kernelMainEv
 392              	_ZN5Riscv10kernelMainEv:
 393              	.LFB34:
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
  92:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
  93:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  94:src/Riscv.cpp **** 
  95:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****     switch(scause)
  98:src/Riscv.cpp ****     {
  99:src/Riscv.cpp ****         case timerInterrupt:
 100:src/Riscv.cpp ****         {
 101:src/Riscv.cpp ****             //KConsole::trapPrintString("timerInterrupt\n");
GAS LISTING /tmp/ccBkVmDa.s 			page 14


 102:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 103:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 104:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 105:src/Riscv.cpp ****             //static uint64 total = 0;
 106:src/Riscv.cpp ****             totalTime++;
 107:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 110:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 111:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 112:src/Riscv.cpp ****             {
 113:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 114:src/Riscv.cpp ****                 PCB::dispatch();
 115:src/Riscv.cpp ****             }
 116:src/Riscv.cpp **** 
 117:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 118:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 119:src/Riscv.cpp ****             changePrivMode();
 120:src/Riscv.cpp ****             break;
 121:src/Riscv.cpp ****         }
 122:src/Riscv.cpp ****         case hwInterrupt:
 123:src/Riscv.cpp ****         {
 124:src/Riscv.cpp ****             KConsole::getCharactersFromConsole();
 125:src/Riscv.cpp ****             plic_complete(plic_claim());
 126:src/Riscv.cpp ****             break;
 127:src/Riscv.cpp ****         }
 128:src/Riscv.cpp ****         case operationInterrupt:
 129:src/Riscv.cpp ****         {
 130:src/Riscv.cpp ****             PCB::threadExitHandler();
 131:src/Riscv.cpp ****             break;
 132:src/Riscv.cpp ****         }
 133:src/Riscv.cpp ****         case addrReadInterrupt:
 134:src/Riscv.cpp ****         {
 135:src/Riscv.cpp ****             PCB::threadExitHandler();
 136:src/Riscv.cpp ****             break;
 137:src/Riscv.cpp ****         }
 138:src/Riscv.cpp ****         case addrWriteInterrupt:
 139:src/Riscv.cpp ****         {
 140:src/Riscv.cpp ****             PCB::threadExitHandler();
 141:src/Riscv.cpp ****             break;
 142:src/Riscv.cpp ****         }
 143:src/Riscv.cpp ****         case ecallSystemInterupt:
 144:src/Riscv.cpp ****         case ecallUserInterrupt:
 145:src/Riscv.cpp ****         {
 146:src/Riscv.cpp ****             uint64 operation;
 147:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 148:src/Riscv.cpp **** 
 149:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 150:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 151:src/Riscv.cpp **** 
 152:src/Riscv.cpp ****             switch(operation)
 153:src/Riscv.cpp ****             {
 154:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 155:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 156:src/Riscv.cpp ****                     break;
 157:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 158:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
GAS LISTING /tmp/ccBkVmDa.s 			page 15


 159:src/Riscv.cpp ****                     break;
 160:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 161:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 162:src/Riscv.cpp ****                     break;
 163:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 164:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 165:src/Riscv.cpp ****                     break;
 166:src/Riscv.cpp ****                 case PCB::THREAD_START:
 167:src/Riscv.cpp ****                     PCB::threadStartHandler();
 168:src/Riscv.cpp ****                     break;
 169:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 170:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 171:src/Riscv.cpp ****                     break;
 172:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 173:src/Riscv.cpp ****                     PCB::threadExitHandler();
 174:src/Riscv.cpp ****                     break;
 175:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 176:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 177:src/Riscv.cpp ****                     break;
 178:src/Riscv.cpp ****                 case PCB::THREAD_DEL_PCB:
 179:src/Riscv.cpp ****                      PCB::threadDelPCBHandler();
 180:src/Riscv.cpp ****                      break;
 181:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 182:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 183:src/Riscv.cpp ****                     break;
 184:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 185:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 186:src/Riscv.cpp ****                     break;
 187:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 188:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 189:src/Riscv.cpp ****                     break;
 190:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 191:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 192:src/Riscv.cpp ****                     break;
 193:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 194:src/Riscv.cpp ****                     KConsole::getcHandler();
 195:src/Riscv.cpp ****                     break;
 196:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 197:src/Riscv.cpp ****                     KConsole::putcHandler();
 198:src/Riscv.cpp ****                     break;
 199:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 200:src/Riscv.cpp ****                     KConsole::getCharHandler();
 201:src/Riscv.cpp ****                     break;
 202:src/Riscv.cpp ****             }
 203:src/Riscv.cpp **** 
 204:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 205:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 206:src/Riscv.cpp ****             changePrivMode();
 207:src/Riscv.cpp ****             break;
 208:src/Riscv.cpp ****         }
 209:src/Riscv.cpp ****     }
 210:src/Riscv.cpp **** }
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp **** void Riscv::kernelMain()
 213:src/Riscv.cpp **** {
 394              		.loc 1 213 1 is_stmt 1
 395              		.cfi_startproc
GAS LISTING /tmp/ccBkVmDa.s 			page 16


 214:src/Riscv.cpp ****     if(kernelMainCalled) return;
 396              		.loc 1 214 5
 397 024c 97070000 		lbu	a5,.LANCHOR0+17
 397      83C70700 
 398 0254 63840700 		beqz	a5,.L22
 399 0258 67800000 		ret
 400              	.L22:
 213:src/Riscv.cpp ****     if(kernelMainCalled) return;
 401              		.loc 1 213 1 is_stmt 0
 402 025c 130101FF 		addi	sp,sp,-16
 403              		.cfi_def_cfa_offset 16
 404 0260 23341100 		sd	ra,8(sp)
 405 0264 23308100 		sd	s0,0(sp)
 406              		.cfi_offset 1, -8
 407              		.cfi_offset 8, -16
 408 0268 13040101 		addi	s0,sp,16
 409              		.cfi_def_cfa 8, 0
 215:src/Riscv.cpp ****     kernelMainCalled = true;
 410              		.loc 1 215 5 is_stmt 1
 411              		.loc 1 215 22 is_stmt 0
 412 026c 93071000 		li	a5,1
 413 0270 17070000 		sb	a5,.LANCHOR0+17,a4
 413      2300F700 
 216:src/Riscv.cpp **** 
 217:src/Riscv.cpp ****     initSystem();
 414              		.loc 1 217 5 is_stmt 1
 415              		.loc 1 217 15 is_stmt 0
 416 0278 97000000 		call	_ZN5Riscv10initSystemEv
 416      E7800000 
 417              	.LVL34:
 218:src/Riscv.cpp **** 
 219:src/Riscv.cpp ****     testOS2();
 418              		.loc 1 219 5 is_stmt 1
 419              		.loc 1 219 12 is_stmt 0
 420 0280 97000000 		call	_Z7testOS2v@plt
 420      E7800000 
 421              	.LVL35:
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp ****     //buddyTestMixa();
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****     //enableInterrupts();
 224:src/Riscv.cpp **** 
 225:src/Riscv.cpp ****     //while(!PCB::userPCB->isFinished())
 226:src/Riscv.cpp ****     //{
 227:src/Riscv.cpp ****     //    thread_dispatch();
 228:src/Riscv.cpp ****     //}
 229:src/Riscv.cpp **** 
 230:src/Riscv.cpp ****     endSystem();
 422              		.loc 1 230 5 is_stmt 1
 423              		.loc 1 230 14 is_stmt 0
 424 0288 97000000 		call	_ZN5Riscv9endSystemEv
 424      E7800000 
 425              	.LVL36:
 231:src/Riscv.cpp **** }
 426              		.loc 1 231 1
 427 0290 83308100 		ld	ra,8(sp)
 428              		.cfi_restore 1
GAS LISTING /tmp/ccBkVmDa.s 			page 17


 429 0294 03340100 		ld	s0,0(sp)
 430              		.cfi_restore 8
 431              		.cfi_def_cfa 2, 16
 432 0298 13010101 		addi	sp,sp,16
 433              		.cfi_def_cfa_offset 0
 434 029c 67800000 		jr	ra
 435              		.cfi_endproc
 436              	.LFE34:
 438              		.align	2
 439              		.globl	_ZN5Riscv15userMainWrapperEPv
 441              	_ZN5Riscv15userMainWrapperEPv:
 442              	.LFB35:
 232:src/Riscv.cpp **** 
 233:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 234:src/Riscv.cpp **** {
 443              		.loc 1 234 1 is_stmt 1
 444              		.cfi_startproc
 445 02a0 130101FF 		addi	sp,sp,-16
 446              		.cfi_def_cfa_offset 16
 447 02a4 23341100 		sd	ra,8(sp)
 448 02a8 23308100 		sd	s0,0(sp)
 449              		.cfi_offset 1, -8
 450              		.cfi_offset 8, -16
 451 02ac 13040101 		addi	s0,sp,16
 452              		.cfi_def_cfa 8, 0
 235:src/Riscv.cpp ****     userMain();
 453              		.loc 1 235 5
 454              		.loc 1 235 13 is_stmt 0
 455 02b0 97000000 		call	_Z8userMainv@plt
 455      E7800000 
 456              	.LVL37:
 236:src/Riscv.cpp **** }
 457              		.loc 1 236 1
 458 02b8 83308100 		ld	ra,8(sp)
 459              		.cfi_restore 1
 460 02bc 03340100 		ld	s0,0(sp)
 461              		.cfi_restore 8
 462              		.cfi_def_cfa 2, 16
 463 02c0 13010101 		addi	sp,sp,16
 464              		.cfi_def_cfa_offset 0
 465 02c4 67800000 		jr	ra
 466              		.cfi_endproc
 467              	.LFE35:
 469              		.align	2
 470              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 472              	_ZN5Riscv22disableTimerInterruptsEv:
 473              	.LFB36:
 237:src/Riscv.cpp **** 
 238:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 239:src/Riscv.cpp **** {
 474              		.loc 1 239 1 is_stmt 1
 475              		.cfi_startproc
 476 02c8 130101FF 		addi	sp,sp,-16
 477              		.cfi_def_cfa_offset 16
 478 02cc 23348100 		sd	s0,8(sp)
 479              		.cfi_offset 8, -8
 480 02d0 13040101 		addi	s0,sp,16
GAS LISTING /tmp/ccBkVmDa.s 			page 18


 481              		.cfi_def_cfa 8, 0
 240:src/Riscv.cpp ****     uint64 x = 0x2;
 482              		.loc 1 240 5
 483              	.LVL38:
 241:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 484              		.loc 1 241 5
 485              		.loc 1 241 45 is_stmt 0
 486 02d4 93072000 		li	a5,2
 487              	#APP
 488              	# 241 "src/Riscv.cpp" 1
 242              	}
 489              		csrc sie, a5
 490              	# 0 "" 2
 491              		.loc 1 242 1
 492              	#NO_APP
 493 02dc 03348100 		ld	s0,8(sp)
 494              		.cfi_restore 8
 495              		.cfi_def_cfa 2, 16
 496 02e0 13010101 		addi	sp,sp,16
 497              		.cfi_def_cfa_offset 0
 498 02e4 67800000 		jr	ra
 499              		.cfi_endproc
 500              	.LFE36:
 502              		.align	2
 503              		.globl	_ZN5Riscv13w_a0_sscratchEv
 505              	_ZN5Riscv13w_a0_sscratchEv:
 506              	.LFB37:
 243:src/Riscv.cpp **** 
 244:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 245:src/Riscv.cpp **** {
 507              		.loc 1 245 1 is_stmt 1
 508              		.cfi_startproc
 509 02e8 130101FF 		addi	sp,sp,-16
 510              		.cfi_def_cfa_offset 16
 511 02ec 23348100 		sd	s0,8(sp)
 512              		.cfi_offset 8, -8
 513 02f0 13040101 		addi	s0,sp,16
 514              		.cfi_def_cfa 8, 0
 246:src/Riscv.cpp ****     uint64 a1Temp;
 515              		.loc 1 246 5
 247:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 516              		.loc 1 247 5
 517              		.loc 1 247 47 is_stmt 0
 518              	#APP
 519              	# 247 "src/Riscv.cpp" 1
 248              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 520              		mv a5, a1
 521              	# 0 "" 2
 522              	.LVL39:
 523              		.loc 1 248 5 is_stmt 1
 524              		.loc 1 248 53 is_stmt 0
 525              	#NO_APP
 526 02f8 17070000 		la	a4,_ZN3PCB7runningE
 526      03370700 
 527 0300 03370700 		ld	a4,0(a4)
 528 0304 03370701 		ld	a4,16(a4)
 529              		.loc 1 248 63
GAS LISTING /tmp/ccBkVmDa.s 			page 19


 530              	#APP
 531              	# 248 "src/Riscv.cpp" 1
 249              	    __asm__ volatile("sd a0, 80(a1)");
 532              		mv a1, a4
 533              	# 0 "" 2
 534              		.loc 1 249 5 is_stmt 1
 535              		.loc 1 249 38 is_stmt 0
 536              	# 249 "src/Riscv.cpp" 1
 250              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 537              		sd a0, 80(a1)
 538              	# 0 "" 2
 539              		.loc 1 250 5 is_stmt 1
 540              		.loc 1 250 46 is_stmt 0
 541              	# 250 "src/Riscv.cpp" 1
 251              	}
 542              		mv a1,a5
 543              	# 0 "" 2
 544              		.loc 1 251 1
 545              	#NO_APP
 546 0314 03348100 		ld	s0,8(sp)
 547              		.cfi_restore 8
 548              		.cfi_def_cfa 2, 16
 549 0318 13010101 		addi	sp,sp,16
 550              		.cfi_def_cfa_offset 0
 551 031c 67800000 		jr	ra
 552              		.cfi_endproc
 553              	.LFE37:
 555              		.align	2
 556              		.globl	_ZN5Riscv14changePrivModeEv
 558              	_ZN5Riscv14changePrivModeEv:
 559              	.LFB38:
 252:src/Riscv.cpp **** 
 253:src/Riscv.cpp **** void Riscv::changePrivMode()
 254:src/Riscv.cpp **** {
 560              		.loc 1 254 1 is_stmt 1
 561              		.cfi_startproc
 562 0320 130101FF 		addi	sp,sp,-16
 563              		.cfi_def_cfa_offset 16
 564 0324 23348100 		sd	s0,8(sp)
 565              		.cfi_offset 8, -8
 566 0328 13040101 		addi	s0,sp,16
 567              		.cfi_def_cfa 8, 0
 255:src/Riscv.cpp ****     if(PCB::running->systemThread)
 568              		.loc 1 255 5
 569              		.loc 1 255 22 is_stmt 0
 570 032c 97070000 		la	a5,_ZN3PCB7runningE
 570      83B70700 
 571 0334 83B70700 		ld	a5,0(a5)
 572 0338 83C70700 		lbu	a5,0(a5)
 573              		.loc 1 255 5
 574 033c 638C0700 		beqz	a5,.L30
 256:src/Riscv.cpp ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 575              		.loc 1 256 9 is_stmt 1
 576              	.LVL40:
 577              	.LBB44:
 578              	.LBB45:
 196:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccBkVmDa.s 			page 20


 579              		.loc 2 196 5
 196:src/../h/Riscv.hpp **** }
 580              		.loc 2 196 54 is_stmt 0
 581 0340 93070010 		li	a5,256
 582              	#APP
 583              	# 196 "src/../h/Riscv.hpp" 1
 584              		csrs sstatus, a5
 585              	# 0 "" 2
 586              	.LVL41:
 587              	#NO_APP
 588              	.L29:
 589              	.LBE45:
 590              	.LBE44:
 257:src/Riscv.cpp ****     else
 258:src/Riscv.cpp ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 259:src/Riscv.cpp **** }
 591              		.loc 1 259 1
 592 0348 03348100 		ld	s0,8(sp)
 593              		.cfi_remember_state
 594              		.cfi_restore 8
 595              		.cfi_def_cfa 2, 16
 596 034c 13010101 		addi	sp,sp,16
 597              		.cfi_def_cfa_offset 0
 598 0350 67800000 		jr	ra
 599              	.L30:
 600              		.cfi_restore_state
 258:src/Riscv.cpp **** }
 601              		.loc 1 258 9 is_stmt 1
 602              	.LVL42:
 603              	.LBB46:
 604              	.LBB47:
 200:src/../h/Riscv.hpp **** }
 605              		.loc 2 200 5
 200:src/../h/Riscv.hpp **** }
 606              		.loc 2 200 54 is_stmt 0
 607 0354 93070010 		li	a5,256
 608              	#APP
 609              	# 200 "src/../h/Riscv.hpp" 1
 610              		csrc sstatus, a5
 611              	# 0 "" 2
 612              	.LVL43:
 613              	#NO_APP
 614              	.LBE47:
 615              	.LBE46:
 616              		.loc 1 259 1
 617 035c 6FF0DFFE 		j	.L29
 618              		.cfi_endproc
 619              	.LFE38:
 621              		.align	2
 622              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 624              	_ZN5Riscv20handleSupervisorTrapEv:
 625              	.LFB33:
  91:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 626              		.loc 1 91 1 is_stmt 1
 627              		.cfi_startproc
 628 0360 130101F9 		addi	sp,sp,-112
 629              		.cfi_def_cfa_offset 112
GAS LISTING /tmp/ccBkVmDa.s 			page 21


 630 0364 23341106 		sd	ra,104(sp)
 631 0368 23308106 		sd	s0,96(sp)
 632 036c 233C9104 		sd	s1,88(sp)
 633              		.cfi_offset 1, -8
 634              		.cfi_offset 8, -16
 635              		.cfi_offset 9, -24
 636 0370 13040107 		addi	s0,sp,112
 637              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 638              		.loc 1 92 5
  92:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 639              		.loc 1 92 58 is_stmt 0
 640              	#APP
 641              	# 92 "src/Riscv.cpp" 1
 642              		mv a4, a4
 643              	# 0 "" 2
 644              	#NO_APP
 645 0378 97070000 		la	a5,_ZN3PCB10savedRegA4E
 645      83B70700 
 646 0380 23B0E700 		sd	a4,0(a5)
  93:src/Riscv.cpp **** 
 647              		.loc 1 93 5 is_stmt 1
  93:src/Riscv.cpp **** 
 648              		.loc 1 93 61 is_stmt 0
 649 0384 97070000 		la	a5,_ZN3PCB7runningE
 649      83B70700 
 650 038c 83B70700 		ld	a5,0(a5)
  93:src/Riscv.cpp **** 
 651              		.loc 1 93 71
 652              	#APP
 653              	# 93 "src/Riscv.cpp" 1
 654              		csrr a4, sscratch
 655              	# 0 "" 2
 656              	#NO_APP
 657 0394 23B8E700 		sd	a4,16(a5)
  95:src/Riscv.cpp **** 
 658              		.loc 1 95 5 is_stmt 1
 659              	.LBB48:
 660              	.LBB49:
 121:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 661              		.loc 2 121 5
 122:src/../h/Riscv.hpp ****     return scause;
 662              		.loc 2 122 5
 122:src/../h/Riscv.hpp ****     return scause;
 663              		.loc 2 122 55 is_stmt 0
 664              	#APP
 665              	# 122 "src/../h/Riscv.hpp" 1
 666              		csrr a5, scause
 667              	# 0 "" 2
 668              	#NO_APP
 669 039c 233CF4FA 		sd	a5,-72(s0)
 123:src/../h/Riscv.hpp **** }
 670              		.loc 2 123 5 is_stmt 1
 123:src/../h/Riscv.hpp **** }
 671              		.loc 2 123 12 is_stmt 0
 672 03a0 833784FB 		ld	a5,-72(s0)
 673              	.LVL44:
GAS LISTING /tmp/ccBkVmDa.s 			page 22


 674              	.LBE49:
 675              	.LBE48:
  97:src/Riscv.cpp ****     {
 676              		.loc 1 97 5 is_stmt 1
 677              	.LBB50:
 678 03a4 13079000 		li	a4,9
 679 03a8 636EF702 		bgtu	a5,a4,.L34
 680 03ac 13078000 		li	a4,8
 681 03b0 63F4E712 		bgeu	a5,a4,.L35
 682 03b4 13075000 		li	a4,5
 683 03b8 638AE710 		beq	a5,a4,.L36
 684 03bc 13077000 		li	a4,7
 685 03c0 6398E700 		bne	a5,a4,.L62
 686              	.LBB51:
 138:src/Riscv.cpp ****         {
 687              		.loc 1 138 9
 139:src/Riscv.cpp ****             PCB::threadExitHandler();
 688              		.loc 1 139 9
 140:src/Riscv.cpp ****             break;
 689              		.loc 1 140 13
 140:src/Riscv.cpp ****             break;
 690              		.loc 1 140 35 is_stmt 0
 691 03c4 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 691      E7800000 
 692              	.LVL45:
 141:src/Riscv.cpp ****         }
 693              		.loc 1 141 13 is_stmt 1
 694 03cc 6F00C00D 		j	.L33
 695              	.LVL46:
 696              	.L62:
 697              	.LBE51:
  97:src/Riscv.cpp ****     {
 698              		.loc 1 97 5 is_stmt 0
 699 03d0 13072000 		li	a4,2
 700 03d4 639AE70C 		bne	a5,a4,.L33
 701              	.LBB76:
 128:src/Riscv.cpp ****         {
 702              		.loc 1 128 9 is_stmt 1
 129:src/Riscv.cpp ****             PCB::threadExitHandler();
 703              		.loc 1 129 9
 130:src/Riscv.cpp ****             break;
 704              		.loc 1 130 13
 130:src/Riscv.cpp ****             break;
 705              		.loc 1 130 35 is_stmt 0
 706 03d8 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 706      E7800000 
 707              	.LVL47:
 131:src/Riscv.cpp ****         }
 708              		.loc 1 131 13 is_stmt 1
 709 03e0 6F00800C 		j	.L33
 710              	.LVL48:
 711              	.L34:
 712              	.LBE76:
  97:src/Riscv.cpp ****     {
 713              		.loc 1 97 5 is_stmt 0
 714 03e4 1307F0FF 		li	a4,-1
 715 03e8 1317F703 		slli	a4,a4,63
GAS LISTING /tmp/ccBkVmDa.s 			page 23


 716 03ec 13071700 		addi	a4,a4,1
 717 03f0 6388E702 		beq	a5,a4,.L40
 718 03f4 1307F0FF 		li	a4,-1
 719 03f8 1317F703 		slli	a4,a4,63
 720 03fc 13079700 		addi	a4,a4,9
 721 0400 6394E70A 		bne	a5,a4,.L33
 722              	.LBB77:
 122:src/Riscv.cpp ****         {
 723              		.loc 1 122 9 is_stmt 1
 123:src/Riscv.cpp ****             KConsole::getCharactersFromConsole();
 724              		.loc 1 123 9
 124:src/Riscv.cpp ****             plic_complete(plic_claim());
 725              		.loc 1 124 13
 124:src/Riscv.cpp ****             plic_complete(plic_claim());
 726              		.loc 1 124 47 is_stmt 0
 727 0404 97000000 		call	_ZN8KConsole24getCharactersFromConsoleEv@plt
 727      E7800000 
 728              	.LVL49:
 125:src/Riscv.cpp ****             break;
 729              		.loc 1 125 13 is_stmt 1
 125:src/Riscv.cpp ****             break;
 730              		.loc 1 125 26 is_stmt 0
 731 040c 97000000 		call	plic_claim@plt
 731      E7800000 
 732              	.LVL50:
 733 0414 97000000 		call	plic_complete@plt
 733      E7800000 
 734              	.LVL51:
 126:src/Riscv.cpp ****         }
 735              		.loc 1 126 13 is_stmt 1
 736 041c 6F00C008 		j	.L33
 737              	.LVL52:
 738              	.L40:
  99:src/Riscv.cpp ****         {
 739              		.loc 1 99 9
 100:src/Riscv.cpp ****             //KConsole::trapPrintString("timerInterrupt\n");
 740              		.loc 1 100 9
 741              	.LBB52:
 102:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 742              		.loc 1 102 13
 743              	.LBB53:
 744              	.LBB54:
 131:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 745              		.loc 2 131 5
 132:src/../h/Riscv.hpp ****     return sepc;
 746              		.loc 2 132 5
 132:src/../h/Riscv.hpp ****     return sepc;
 747              		.loc 2 132 51 is_stmt 0
 748              	#APP
 749              	# 132 "src/../h/Riscv.hpp" 1
 750              		csrr a5, sepc
 751              	# 0 "" 2
 752              	.LVL53:
 753              	#NO_APP
 754 0424 2334F4FC 		sd	a5,-56(s0)
 133:src/../h/Riscv.hpp **** }
 755              		.loc 2 133 5 is_stmt 1
GAS LISTING /tmp/ccBkVmDa.s 			page 24


 133:src/../h/Riscv.hpp **** }
 756              		.loc 2 133 12 is_stmt 0
 757 0428 833784FC 		ld	a5,-56(s0)
 758              	.LBE54:
 759              	.LBE53:
 102:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 760              		.loc 1 102 50
 761 042c 233CF4F8 		sd	a5,-104(s0)
 103:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 762              		.loc 1 103 13 is_stmt 1
 763              	.LBB55:
 764              	.LBB56:
 202:src/../h/Riscv.hpp **** 
 203:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 204:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 765              		.loc 2 204 5
 205:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 766              		.loc 2 205 5
 767              		.loc 2 205 57 is_stmt 0
 768              	#APP
 769              	# 205 "src/../h/Riscv.hpp" 1
 206              	    return sstatus;
 770              		csrr a5, sstatus
 771              	# 0 "" 2
 772              	#NO_APP
 773 0434 2330F4FC 		sd	a5,-64(s0)
 774              		.loc 2 206 5 is_stmt 1
 775              		.loc 2 206 12 is_stmt 0
 776 0438 833704FC 		ld	a5,-64(s0)
 777              	.LBE56:
 778              	.LBE55:
 103:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 779              		.loc 1 103 56
 780 043c 2330F4FA 		sd	a5,-96(s0)
 104:src/Riscv.cpp ****             //static uint64 total = 0;
 781              		.loc 1 104 13 is_stmt 1
 782              	.LVL54:
 783              	.LBB57:
 784              	.LBB58:
 170:src/../h/Riscv.hpp **** }
 785              		.loc 2 170 5
 170:src/../h/Riscv.hpp **** }
 786              		.loc 2 170 50 is_stmt 0
 787 0440 93072000 		li	a5,2
 788              	#APP
 789              	# 170 "src/../h/Riscv.hpp" 1
 790              		csrc sip, a5
 791              	# 0 "" 2
 792              	.LVL55:
 793              	#NO_APP
 794              	.LBE58:
 795              	.LBE57:
 106:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 796              		.loc 1 106 13 is_stmt 1
 106:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 797              		.loc 1 106 22 is_stmt 0
 798 0448 17070000 		lla	a4,.LANCHOR0
GAS LISTING /tmp/ccBkVmDa.s 			page 25


 798      13070700 
 799 0450 83378701 		ld	a5,24(a4)
 800 0454 93871700 		addi	a5,a5,1
 801 0458 233CF700 		sd	a5,24(a4)
 109:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 802              		.loc 1 109 13 is_stmt 1
 109:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 803              		.loc 1 109 34 is_stmt 0
 804 045c 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 804      83B40400 
 805 0464 83B70400 		ld	a5,0(s1)
 806 0468 93871700 		addi	a5,a5,1
 807 046c 23B0F400 		sd	a5,0(s1)
 110:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 808              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 809              		.loc 1 110 40 is_stmt 0
 810 0470 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 810      E7800000 
 811              	.LVL56:
 111:src/Riscv.cpp ****             {
 812              		.loc 1 111 13 is_stmt 1
 111:src/Riscv.cpp ****             {
 813              		.loc 1 111 68 is_stmt 0
 814 0478 97070000 		la	a5,_ZN3PCB7runningE
 814      83B70700 
 815 0480 83B70700 		ld	a5,0(a5)
 816              	.LVL57:
 817              	.LBB59:
 818              	.LBB60:
 819              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** 
  10:src/../h/PCB.hpp **** class PCB
  11:src/../h/PCB.hpp **** {
  12:src/../h/PCB.hpp **** private:
  13:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  14:src/../h/PCB.hpp **** 
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp **** 
  23:src/../h/PCB.hpp ****     static PCB* running;
  24:src/../h/PCB.hpp **** 
  25:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  26:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
GAS LISTING /tmp/ccBkVmDa.s 			page 26


 820              		.loc 3 26 29 is_stmt 1
 821              		.loc 3 26 36 is_stmt 0
 822 0484 83B78701 		ld	a5,24(a5)
 823              	.LVL58:
 824              	.LBE60:
 825              	.LBE59:
 111:src/Riscv.cpp ****             {
 826              		.loc 1 111 39
 827 0488 03B70400 		ld	a4,0(s1)
 111:src/Riscv.cpp ****             {
 828              		.loc 1 111 13
 829 048c 6378F702 		bgeu	a4,a5,.L63
 830              	.L42:
 117:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 831              		.loc 1 117 13 is_stmt 1
 117:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 832              		.loc 1 117 29 is_stmt 0
 833 0490 833704FA 		ld	a5,-96(s0)
 834              	.LVL59:
 835              	.LBB61:
 836              	.LBB62:
 207:src/../h/Riscv.hpp **** }
 208:src/../h/Riscv.hpp **** 
 209:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 210:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 837              		.loc 2 210 5 is_stmt 1
 838              		.loc 2 210 57 is_stmt 0
 839              	#APP
 840              	# 210 "src/../h/Riscv.hpp" 1
 211              	}
 841              		csrw sstatus, a5
 842              	# 0 "" 2
 843              	.LVL60:
 844              	#NO_APP
 845              	.LBE62:
 846              	.LBE61:
 118:src/Riscv.cpp ****             changePrivMode();
 847              		.loc 1 118 13 is_stmt 1
 118:src/Riscv.cpp ****             changePrivMode();
 848              		.loc 1 118 26 is_stmt 0
 849 0498 833784F9 		ld	a5,-104(s0)
 850              	.LVL61:
 851              	.LBB63:
 852              	.LBB64:
 137:src/../h/Riscv.hpp **** }
 853              		.loc 2 137 5 is_stmt 1
 137:src/../h/Riscv.hpp **** }
 854              		.loc 2 137 51 is_stmt 0
 855              	#APP
 856              	# 137 "src/../h/Riscv.hpp" 1
 857              		csrw sepc, a5
 858              	# 0 "" 2
 859              	.LVL62:
 860              	#NO_APP
 861              	.LBE64:
 862              	.LBE63:
 119:src/Riscv.cpp ****             break;
GAS LISTING /tmp/ccBkVmDa.s 			page 27


 863              		.loc 1 119 13 is_stmt 1
 119:src/Riscv.cpp ****             break;
 864              		.loc 1 119 27 is_stmt 0
 865 04a0 97000000 		call	_ZN5Riscv14changePrivModeEv
 865      E7800000 
 866              	.LVL63:
 120:src/Riscv.cpp ****         }
 867              		.loc 1 120 13 is_stmt 1
 868              	.L33:
 869              	.LBE52:
 870              	.LBE77:
 871              	.LBE50:
 210:src/Riscv.cpp **** 
 872              		.loc 1 210 1 is_stmt 0
 873 04a8 83308106 		ld	ra,104(sp)
 874              		.cfi_remember_state
 875              		.cfi_restore 1
 876 04ac 03340106 		ld	s0,96(sp)
 877              		.cfi_restore 8
 878              		.cfi_def_cfa 2, 112
 879 04b0 83348105 		ld	s1,88(sp)
 880              		.cfi_restore 9
 881 04b4 13010107 		addi	sp,sp,112
 882              		.cfi_def_cfa_offset 0
 883 04b8 67800000 		jr	ra
 884              	.L63:
 885              		.cfi_restore_state
 886              	.LBB80:
 887              	.LBB78:
 888              	.LBB65:
 113:src/Riscv.cpp ****                 PCB::dispatch();
 889              		.loc 1 113 17 is_stmt 1
 113:src/Riscv.cpp ****                 PCB::dispatch();
 890              		.loc 1 113 39 is_stmt 0
 891 04bc 23B00400 		sd	zero,0(s1)
 114:src/Riscv.cpp ****             }
 892              		.loc 1 114 17 is_stmt 1
 114:src/Riscv.cpp ****             }
 893              		.loc 1 114 30 is_stmt 0
 894 04c0 97000000 		call	_ZN3PCB8dispatchEv@plt
 894      E7800000 
 895              	.LVL64:
 896 04c8 6FF09FFC 		j	.L42
 897              	.LVL65:
 898              	.L36:
 899              	.LBE65:
 133:src/Riscv.cpp ****         {
 900              		.loc 1 133 9 is_stmt 1
 134:src/Riscv.cpp ****             PCB::threadExitHandler();
 901              		.loc 1 134 9
 135:src/Riscv.cpp ****             break;
 902              		.loc 1 135 13
 135:src/Riscv.cpp ****             break;
 903              		.loc 1 135 35 is_stmt 0
 904 04cc 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 904      E7800000 
 905              	.LVL66:
GAS LISTING /tmp/ccBkVmDa.s 			page 28


 136:src/Riscv.cpp ****         }
 906              		.loc 1 136 13 is_stmt 1
 907 04d4 6FF05FFD 		j	.L33
 908              	.LVL67:
 909              	.L35:
 143:src/Riscv.cpp ****         case ecallUserInterrupt:
 910              		.loc 1 143 9
 144:src/Riscv.cpp ****         {
 911              		.loc 1 144 9
 145:src/Riscv.cpp ****             uint64 operation;
 912              		.loc 1 145 9
 913              	.LBB66:
 146:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 914              		.loc 1 146 13
 147:src/Riscv.cpp **** 
 915              		.loc 1 147 13
 147:src/Riscv.cpp **** 
 916              		.loc 1 147 61 is_stmt 0
 917              	#APP
 918              	# 147 "src/Riscv.cpp" 1
 919              		mv a5, a0
 920              	# 0 "" 2
 921              	.LVL68:
 149:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 922              		.loc 1 149 13 is_stmt 1
 923              	#NO_APP
 924              	.LBB67:
 925              	.LBB68:
 131:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 926              		.loc 2 131 5
 132:src/../h/Riscv.hpp ****     return sepc;
 927              		.loc 2 132 5
 132:src/../h/Riscv.hpp ****     return sepc;
 928              		.loc 2 132 51 is_stmt 0
 929              	#APP
 930              	# 132 "src/../h/Riscv.hpp" 1
 931              		csrr a4, sepc
 932              	# 0 "" 2
 933              	#NO_APP
 934 04e0 233CE4FC 		sd	a4,-40(s0)
 133:src/../h/Riscv.hpp **** }
 935              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 936              		.loc 2 133 12 is_stmt 0
 937 04e4 033784FD 		ld	a4,-40(s0)
 938              	.LBE68:
 939              	.LBE67:
 149:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 940              		.loc 1 149 52
 941 04e8 13074700 		addi	a4,a4,4
 149:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 942              		.loc 1 149 54
 943 04ec 2334E4FA 		sd	a4,-88(s0)
 150:src/Riscv.cpp **** 
 944              		.loc 1 150 13 is_stmt 1
 945              	.LBB69:
 946              	.LBB70:
GAS LISTING /tmp/ccBkVmDa.s 			page 29


 204:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 947              		.loc 2 204 5
 205:src/../h/Riscv.hpp ****     return sstatus;
 948              		.loc 2 205 5
 205:src/../h/Riscv.hpp ****     return sstatus;
 949              		.loc 2 205 57 is_stmt 0
 950              	#APP
 951              	# 205 "src/../h/Riscv.hpp" 1
 952              		csrr a4, sstatus
 953              	# 0 "" 2
 954              	#NO_APP
 955 04f4 2338E4FC 		sd	a4,-48(s0)
 206:src/../h/Riscv.hpp **** }
 956              		.loc 2 206 5 is_stmt 1
 206:src/../h/Riscv.hpp **** }
 957              		.loc 2 206 12 is_stmt 0
 958 04f8 033704FD 		ld	a4,-48(s0)
 959              	.LBE70:
 960              	.LBE69:
 150:src/Riscv.cpp **** 
 961              		.loc 1 150 56
 962 04fc 2338E4FA 		sd	a4,-80(s0)
 152:src/Riscv.cpp ****             {
 963              		.loc 1 152 13 is_stmt 1
 964 0500 13073004 		li	a4,67
 965 0504 6364F702 		bgtu	a5,a4,.L43
 966 0508 93972700 		slli	a5,a5,2
 967              	.LVL69:
 968 050c 17070000 		lla	a4,.L45
 968      13070700 
 969 0514 B387E700 		add	a5,a5,a4
 970 0518 83A70700 		lw	a5,0(a5)
 971 051c B387E700 		add	a5,a5,a4
 972 0520 67800700 		jr	a5
 973              		.section	.rodata
 974              		.align	2
 975              		.align	2
 976              	.L45:
 977 0000 00000000 		.word	.L43-.L45
 978 0004 00000000 		.word	.L60-.L45
 979 0008 00000000 		.word	.L59-.L45
 980 000c 00000000 		.word	.L43-.L45
 981 0010 00000000 		.word	.L43-.L45
 982 0014 00000000 		.word	.L43-.L45
 983 0018 00000000 		.word	.L43-.L45
 984 001c 00000000 		.word	.L43-.L45
 985 0020 00000000 		.word	.L43-.L45
 986 0024 00000000 		.word	.L43-.L45
 987 0028 00000000 		.word	.L43-.L45
 988 002c 00000000 		.word	.L43-.L45
 989 0030 00000000 		.word	.L43-.L45
 990 0034 00000000 		.word	.L43-.L45
 991 0038 00000000 		.word	.L43-.L45
 992 003c 00000000 		.word	.L43-.L45
 993 0040 00000000 		.word	.L43-.L45
 994 0044 00000000 		.word	.L58-.L45
 995 0048 00000000 		.word	.L57-.L45
GAS LISTING /tmp/ccBkVmDa.s 			page 30


 996 004c 00000000 		.word	.L56-.L45
 997 0050 00000000 		.word	.L55-.L45
 998 0054 00000000 		.word	.L54-.L45
 999 0058 00000000 		.word	.L53-.L45
 1000 005c 00000000 		.word	.L43-.L45
 1001 0060 00000000 		.word	.L43-.L45
 1002 0064 00000000 		.word	.L43-.L45
 1003 0068 00000000 		.word	.L43-.L45
 1004 006c 00000000 		.word	.L43-.L45
 1005 0070 00000000 		.word	.L43-.L45
 1006 0074 00000000 		.word	.L43-.L45
 1007 0078 00000000 		.word	.L43-.L45
 1008 007c 00000000 		.word	.L43-.L45
 1009 0080 00000000 		.word	.L43-.L45
 1010 0084 00000000 		.word	.L52-.L45
 1011 0088 00000000 		.word	.L51-.L45
 1012 008c 00000000 		.word	.L50-.L45
 1013 0090 00000000 		.word	.L49-.L45
 1014 0094 00000000 		.word	.L43-.L45
 1015 0098 00000000 		.word	.L43-.L45
 1016 009c 00000000 		.word	.L43-.L45
 1017 00a0 00000000 		.word	.L43-.L45
 1018 00a4 00000000 		.word	.L43-.L45
 1019 00a8 00000000 		.word	.L43-.L45
 1020 00ac 00000000 		.word	.L43-.L45
 1021 00b0 00000000 		.word	.L43-.L45
 1022 00b4 00000000 		.word	.L43-.L45
 1023 00b8 00000000 		.word	.L43-.L45
 1024 00bc 00000000 		.word	.L43-.L45
 1025 00c0 00000000 		.word	.L43-.L45
 1026 00c4 00000000 		.word	.L48-.L45
 1027 00c8 00000000 		.word	.L43-.L45
 1028 00cc 00000000 		.word	.L43-.L45
 1029 00d0 00000000 		.word	.L43-.L45
 1030 00d4 00000000 		.word	.L43-.L45
 1031 00d8 00000000 		.word	.L43-.L45
 1032 00dc 00000000 		.word	.L43-.L45
 1033 00e0 00000000 		.word	.L43-.L45
 1034 00e4 00000000 		.word	.L43-.L45
 1035 00e8 00000000 		.word	.L43-.L45
 1036 00ec 00000000 		.word	.L43-.L45
 1037 00f0 00000000 		.word	.L43-.L45
 1038 00f4 00000000 		.word	.L43-.L45
 1039 00f8 00000000 		.word	.L43-.L45
 1040 00fc 00000000 		.word	.L43-.L45
 1041 0100 00000000 		.word	.L43-.L45
 1042 0104 00000000 		.word	.L47-.L45
 1043 0108 00000000 		.word	.L46-.L45
 1044 010c 00000000 		.word	.L44-.L45
 1045              		.text
 1046              	.L60:
 154:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 1047              		.loc 1 154 17
 155:src/Riscv.cpp ****                     break;
 1048              		.loc 1 155 21
 155:src/Riscv.cpp ****                     break;
 1049              		.loc 1 155 53 is_stmt 0
GAS LISTING /tmp/ccBkVmDa.s 			page 31


 1050 0524 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 1050      E7800000 
 1051              	.LVL70:
 156:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 1052              		.loc 1 156 21 is_stmt 1
 1053              	.L43:
 204:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1054              		.loc 1 204 13
 204:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1055              		.loc 1 204 29 is_stmt 0
 1056 052c 833704FB 		ld	a5,-80(s0)
 1057              	.LVL71:
 1058              	.LBB71:
 1059              	.LBB72:
 210:src/../h/Riscv.hpp **** }
 1060              		.loc 2 210 5 is_stmt 1
 210:src/../h/Riscv.hpp **** }
 1061              		.loc 2 210 57 is_stmt 0
 1062              	#APP
 1063              	# 210 "src/../h/Riscv.hpp" 1
 1064              		csrw sstatus, a5
 1065              	# 0 "" 2
 1066              	.LVL72:
 1067              	#NO_APP
 1068              	.LBE72:
 1069              	.LBE71:
 205:src/Riscv.cpp ****             changePrivMode();
 1070              		.loc 1 205 13 is_stmt 1
 205:src/Riscv.cpp ****             changePrivMode();
 1071              		.loc 1 205 26 is_stmt 0
 1072 0534 833784FA 		ld	a5,-88(s0)
 1073              	.LVL73:
 1074              	.LBB73:
 1075              	.LBB74:
 137:src/../h/Riscv.hpp **** }
 1076              		.loc 2 137 5 is_stmt 1
 137:src/../h/Riscv.hpp **** }
 1077              		.loc 2 137 51 is_stmt 0
 1078              	#APP
 1079              	# 137 "src/../h/Riscv.hpp" 1
 1080              		csrw sepc, a5
 1081              	# 0 "" 2
 1082              	.LVL74:
 1083              	#NO_APP
 1084              	.LBE74:
 1085              	.LBE73:
 206:src/Riscv.cpp ****             break;
 1086              		.loc 1 206 13 is_stmt 1
 206:src/Riscv.cpp ****             break;
 1087              		.loc 1 206 27 is_stmt 0
 1088 053c 97000000 		call	_ZN5Riscv14changePrivModeEv
 1088      E7800000 
 1089              	.LVL75:
 207:src/Riscv.cpp ****         }
 1090              		.loc 1 207 13 is_stmt 1
 1091              	.LBE66:
 1092              	.LBE78:
GAS LISTING /tmp/ccBkVmDa.s 			page 32


 1093              	.LBE80:
 210:src/Riscv.cpp **** 
 1094              		.loc 1 210 1 is_stmt 0
 1095 0544 6FF05FF6 		j	.L33
 1096              	.L59:
 1097              	.LBB81:
 1098              	.LBB79:
 1099              	.LBB75:
 157:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 1100              		.loc 1 157 17 is_stmt 1
 158:src/Riscv.cpp ****                     break;
 1101              		.loc 1 158 21
 158:src/Riscv.cpp ****                     break;
 1102              		.loc 1 158 52 is_stmt 0
 1103 0548 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 1103      E7800000 
 1104              	.LVL76:
 159:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 1105              		.loc 1 159 21 is_stmt 1
 1106 0550 6FF0DFFD 		j	.L43
 1107              	.L55:
 160:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 1108              		.loc 1 160 17
 161:src/Riscv.cpp ****                     break;
 1109              		.loc 1 161 21
 161:src/Riscv.cpp ****                     break;
 1110              		.loc 1 161 46 is_stmt 0
 1111 0554 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 1111      E7800000 
 1112              	.LVL77:
 162:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 1113              		.loc 1 162 21 is_stmt 1
 1114 055c 6FF01FFD 		j	.L43
 1115              	.L58:
 163:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 1116              		.loc 1 163 17
 164:src/Riscv.cpp ****                     break;
 1117              		.loc 1 164 21
 164:src/Riscv.cpp ****                     break;
 1118              		.loc 1 164 45 is_stmt 0
 1119 0560 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 1119      E7800000 
 1120              	.LVL78:
 165:src/Riscv.cpp ****                 case PCB::THREAD_START:
 1121              		.loc 1 165 21 is_stmt 1
 1122 0568 6FF05FFC 		j	.L43
 1123              	.L54:
 166:src/Riscv.cpp ****                     PCB::threadStartHandler();
 1124              		.loc 1 166 17
 167:src/Riscv.cpp ****                     break;
 1125              		.loc 1 167 21
 167:src/Riscv.cpp ****                     break;
 1126              		.loc 1 167 44 is_stmt 0
 1127 056c 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 1127      E7800000 
 1128              	.LVL79:
 168:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
GAS LISTING /tmp/ccBkVmDa.s 			page 33


 1129              		.loc 1 168 21 is_stmt 1
 1130 0574 6FF09FFB 		j	.L43
 1131              	.L56:
 169:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 1132              		.loc 1 169 17
 170:src/Riscv.cpp ****                     break;
 1133              		.loc 1 170 21
 170:src/Riscv.cpp ****                     break;
 1134              		.loc 1 170 47 is_stmt 0
 1135 0578 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 1135      E7800000 
 1136              	.LVL80:
 171:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 1137              		.loc 1 171 21 is_stmt 1
 1138 0580 6FF0DFFA 		j	.L43
 1139              	.L57:
 172:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1140              		.loc 1 172 17
 173:src/Riscv.cpp ****                     break;
 1141              		.loc 1 173 21
 173:src/Riscv.cpp ****                     break;
 1142              		.loc 1 173 43 is_stmt 0
 1143 0584 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1143      E7800000 
 1144              	.LVL81:
 174:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1145              		.loc 1 174 21 is_stmt 1
 1146 058c 6FF01FFA 		j	.L43
 1147              	.L48:
 175:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1148              		.loc 1 175 17
 176:src/Riscv.cpp ****                     break;
 1149              		.loc 1 176 21
 176:src/Riscv.cpp ****                     break;
 1150              		.loc 1 176 44 is_stmt 0
 1151 0590 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1151      E7800000 
 1152              	.LVL82:
 177:src/Riscv.cpp ****                 case PCB::THREAD_DEL_PCB:
 1153              		.loc 1 177 21 is_stmt 1
 1154 0598 6FF05FF9 		j	.L43
 1155              	.L53:
 178:src/Riscv.cpp ****                      PCB::threadDelPCBHandler();
 1156              		.loc 1 178 17
 179:src/Riscv.cpp ****                      break;
 1157              		.loc 1 179 22
 179:src/Riscv.cpp ****                      break;
 1158              		.loc 1 179 46 is_stmt 0
 1159 059c 97000000 		call	_ZN3PCB19threadDelPCBHandlerEv@plt
 1159      E7800000 
 1160              	.LVL83:
 180:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 1161              		.loc 1 180 22 is_stmt 1
 1162 05a4 6FF09FF8 		j	.L43
 1163              	.L52:
 181:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1164              		.loc 1 181 17
GAS LISTING /tmp/ccBkVmDa.s 			page 34


 182:src/Riscv.cpp ****                     break;
 1165              		.loc 1 182 21
 182:src/Riscv.cpp ****                     break;
 1166              		.loc 1 182 47 is_stmt 0
 1167 05a8 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1167      E7800000 
 1168              	.LVL84:
 183:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1169              		.loc 1 183 21 is_stmt 1
 1170 05b0 6FF0DFF7 		j	.L43
 1171              	.L50:
 184:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1172              		.loc 1 184 17
 185:src/Riscv.cpp ****                     break;
 1173              		.loc 1 185 21
 185:src/Riscv.cpp ****                     break;
 1174              		.loc 1 185 47 is_stmt 0
 1175 05b4 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1175      E7800000 
 1176              	.LVL85:
 186:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 1177              		.loc 1 186 21 is_stmt 1
 1178 05bc 6FF01FF7 		j	.L43
 1179              	.L49:
 187:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 1180              		.loc 1 187 17
 188:src/Riscv.cpp ****                     break;
 1181              		.loc 1 188 21
 188:src/Riscv.cpp ****                     break;
 1182              		.loc 1 188 49 is_stmt 0
 1183 05c0 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1183      E7800000 
 1184              	.LVL86:
 189:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1185              		.loc 1 189 21 is_stmt 1
 1186 05c8 6FF05FF6 		j	.L43
 1187              	.L51:
 190:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1188              		.loc 1 190 17
 191:src/Riscv.cpp ****                     break;
 1189              		.loc 1 191 21
 191:src/Riscv.cpp ****                     break;
 1190              		.loc 1 191 48 is_stmt 0
 1191 05cc 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1191      E7800000 
 1192              	.LVL87:
 192:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1193              		.loc 1 192 21 is_stmt 1
 1194 05d4 6FF09FF5 		j	.L43
 1195              	.L47:
 193:src/Riscv.cpp ****                     KConsole::getcHandler();
 1196              		.loc 1 193 17
 194:src/Riscv.cpp ****                     break;
 1197              		.loc 1 194 21
 194:src/Riscv.cpp ****                     break;
 1198              		.loc 1 194 42 is_stmt 0
 1199 05d8 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
GAS LISTING /tmp/ccBkVmDa.s 			page 35


 1199      E7800000 
 1200              	.LVL88:
 195:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1201              		.loc 1 195 21 is_stmt 1
 1202 05e0 6FF0DFF4 		j	.L43
 1203              	.L46:
 196:src/Riscv.cpp ****                     KConsole::putcHandler();
 1204              		.loc 1 196 17
 197:src/Riscv.cpp ****                     break;
 1205              		.loc 1 197 21
 197:src/Riscv.cpp ****                     break;
 1206              		.loc 1 197 42 is_stmt 0
 1207 05e4 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1207      E7800000 
 1208              	.LVL89:
 198:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 1209              		.loc 1 198 21 is_stmt 1
 1210 05ec 6FF01FF4 		j	.L43
 1211              	.L44:
 199:src/Riscv.cpp ****                     KConsole::getCharHandler();
 1212              		.loc 1 199 17
 200:src/Riscv.cpp ****                     break;
 1213              		.loc 1 200 21
 200:src/Riscv.cpp ****                     break;
 1214              		.loc 1 200 45 is_stmt 0
 1215 05f0 97000000 		call	_ZN8KConsole14getCharHandlerEv@plt
 1215      E7800000 
 1216              	.LVL90:
 201:src/Riscv.cpp ****             }
 1217              		.loc 1 201 21 is_stmt 1
 1218 05f8 6FF05FF3 		j	.L43
 1219              	.LBE75:
 1220              	.LBE79:
 1221              	.LBE81:
 1222              		.cfi_endproc
 1223              	.LFE33:
 1225              		.globl	_ZN5Riscv14semaphoreCacheE
 1226              		.globl	_ZN5Riscv8pcbCacheE
 1227              		.globl	_ZN5Riscv16kernelMainCalledE
 1228              		.globl	_ZN5Riscv12finishSystemE
 1229              		.globl	_ZN5Riscv9totalTimeE
 1230              		.bss
 1231              		.align	3
 1232              		.set	.LANCHOR0,. + 0
 1235              	_ZN5Riscv8pcbCacheE:
 1236 0000 00000000 		.zero	8
 1236      00000000 
 1239              	_ZN5Riscv14semaphoreCacheE:
 1240 0008 00000000 		.zero	8
 1240      00000000 
 1243              	_ZN5Riscv12finishSystemE:
 1244 0010 00       		.zero	1
 1247              	_ZN5Riscv16kernelMainCalledE:
 1248 0011 00       		.zero	1
 1249 0012 00000000 		.zero	6
 1249      0000
 1252              	_ZN5Riscv9totalTimeE:
GAS LISTING /tmp/ccBkVmDa.s 			page 36


 1253 0018 00000000 		.zero	8
 1253      00000000 
 1254              		.text
 1255              	.Letext0:
 1256              		.file 4 "src/../h/../lib/hw.h"
 1257              		.file 5 "src/../h/slabAllocator.hpp"
 1258              		.file 6 "src/../h/MemoryAllocator.hpp"
 1259              		.file 7 "src/../h/SleepPCBList.hpp"
 1260              		.file 8 "src/../h/KSemaphore.hpp"
 1261              		.file 9 "src/../h/KConsole.hpp"
 1262              		.file 10 "src/../h/Scheduler.hpp"
 1263              		.file 11 "src/../h/../test/userMain.hpp"
 1264              		.file 12 "src/../h/slabTests.hpp"
 1265              		.file 13 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccBkVmDa.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccBkVmDa.s:9      .text:0000000000000000 _ZN5Riscv20initMemoryAllocationEv
     /tmp/ccBkVmDa.s:13     .text:0000000000000000 .L0 
     /tmp/ccBkVmDa.s:14     .text:0000000000000000 .L0 
     /tmp/ccBkVmDa.s:15     .text:0000000000000004 .L0 
     /tmp/ccBkVmDa.s:18     .text:000000000000000c .L0 
     /tmp/ccBkVmDa.s:19     .text:000000000000000c .L0 
     /tmp/ccBkVmDa.s:21     .text:0000000000000010 .L0 
     /tmp/ccBkVmDa.s:23     .text:0000000000000010 .L0 
     /tmp/ccBkVmDa.s:24     .text:0000000000000010 .L0 
     /tmp/ccBkVmDa.s:30     .text:000000000000002c .L0 
     /tmp/ccBkVmDa.s:33     .text:0000000000000030 .L0 
     /tmp/ccBkVmDa.s:34     .text:0000000000000030 .L0 
     /tmp/ccBkVmDa.s:38     .text:0000000000000038 .L0 
     /tmp/ccBkVmDa.s:39     .text:0000000000000038 .L0 
     /tmp/ccBkVmDa.s:44     .text:0000000000000044 .L0 
     /tmp/ccBkVmDa.s:45     .text:0000000000000044 .L0 
     /tmp/ccBkVmDa.s:49     .text:000000000000004c .L0 
     /tmp/ccBkVmDa.s:50     .text:000000000000004c .L0 
     /tmp/ccBkVmDa.s:55     .text:0000000000000058 .L0 
     /tmp/ccBkVmDa.s:56     .text:000000000000005c .L0 
     /tmp/ccBkVmDa.s:58     .text:0000000000000060 .L0 
     /tmp/ccBkVmDa.s:59     .text:0000000000000060 .L0 
     /tmp/ccBkVmDa.s:61     .text:0000000000000064 .L0 
     /tmp/ccBkVmDa.s:63     .text:0000000000000068 .L0 
     /tmp/ccBkVmDa.s:77     .text:0000000000000068 _ZN5Riscv10initSystemEv
     /tmp/ccBkVmDa.s:80     .text:0000000000000068 .L0 
     /tmp/ccBkVmDa.s:81     .text:0000000000000068 .L0 
     /tmp/ccBkVmDa.s:82     .text:000000000000006c .L0 
     /tmp/ccBkVmDa.s:87     .text:000000000000007c .L0 
     /tmp/ccBkVmDa.s:88     .text:000000000000007c .L0 
     /tmp/ccBkVmDa.s:89     .text:000000000000007c .L0 
     /tmp/ccBkVmDa.s:90     .text:000000000000007c .L0 
     /tmp/ccBkVmDa.s:92     .text:0000000000000080 .L0 
     /tmp/ccBkVmDa.s:94     .text:0000000000000080 .L0 
     /tmp/ccBkVmDa.s:95     .text:0000000000000080 .L0 
     /tmp/ccBkVmDa.s:101    .text:0000000000000088 .L0 
  src/../h/Riscv.hpp:147    .text:0000000000000088 .L0 
     /tmp/ccBkVmDa.s:111    .text:000000000000008c .L0 
     /tmp/ccBkVmDa.s:112    .text:000000000000008c .L0 
     /tmp/ccBkVmDa.s:118    .text:00000000000000a8 .L0 
     /tmp/ccBkVmDa.s:121    .text:00000000000000ac .L0 
     /tmp/ccBkVmDa.s:122    .text:00000000000000ac .L0 
     /tmp/ccBkVmDa.s:126    .text:00000000000000b4 .L0 
     /tmp/ccBkVmDa.s:127    .text:00000000000000b4 .L0 
     /tmp/ccBkVmDa.s:132    .text:00000000000000c0 .L0 
     /tmp/ccBkVmDa.s:135    .text:00000000000000c4 .L0 
     /tmp/ccBkVmDa.s:136    .text:00000000000000c4 .L0 
     /tmp/ccBkVmDa.s:140    .text:00000000000000cc .L0 
     /tmp/ccBkVmDa.s:141    .text:00000000000000cc .L0 
     /tmp/ccBkVmDa.s:146    .text:00000000000000d8 .L0 
     /tmp/ccBkVmDa.s:147    .text:00000000000000d8 .L0 
     /tmp/ccBkVmDa.s:152    .text:00000000000000e8 .L0 
     /tmp/ccBkVmDa.s:153    .text:00000000000000e8 .L0 
     /tmp/ccBkVmDa.s:160    .text:0000000000000104 .L0 
     /tmp/ccBkVmDa.s:163    .text:0000000000000110 .L0 
GAS LISTING /tmp/ccBkVmDa.s 			page 38


     /tmp/ccBkVmDa.s:164    .text:0000000000000110 .L0 
     /tmp/ccBkVmDa.s:171    .text:000000000000012c .L0 
     /tmp/ccBkVmDa.s:173    .text:0000000000000130 .L0 
     /tmp/ccBkVmDa.s:174    .text:0000000000000130 .L0 
     /tmp/ccBkVmDa.s:177    .text:0000000000000138 .L0 
     /tmp/ccBkVmDa.s:178    .text:0000000000000138 .L0 
     /tmp/ccBkVmDa.s:181    .text:0000000000000140 .L0 
     /tmp/ccBkVmDa.s:182    .text:0000000000000144 .L0 
     /tmp/ccBkVmDa.s:184    .text:0000000000000148 .L0 
     /tmp/ccBkVmDa.s:185    .text:0000000000000148 .L0 
     /tmp/ccBkVmDa.s:187    .text:000000000000014c .L0 
     /tmp/ccBkVmDa.s:189    .text:0000000000000150 .L0 
     /tmp/ccBkVmDa.s:192    .text:0000000000000154 .L0 
     /tmp/ccBkVmDa.s:194    .text:0000000000000158 .L0 
     /tmp/ccBkVmDa.s:200    .text:0000000000000158 _ZN5Riscv16enableInterruptsEv
     /tmp/ccBkVmDa.s:203    .text:0000000000000158 .L0 
     /tmp/ccBkVmDa.s:204    .text:0000000000000158 .L0 
     /tmp/ccBkVmDa.s:205    .text:000000000000015c .L0 
     /tmp/ccBkVmDa.s:207    .text:0000000000000160 .L0 
     /tmp/ccBkVmDa.s:209    .text:0000000000000164 .L0 
     /tmp/ccBkVmDa.s:214    .text:0000000000000164 .L0 
     /tmp/ccBkVmDa.s:215    .text:0000000000000164 .L0 
     /tmp/ccBkVmDa.s:216    .text:0000000000000164 .L0 
     /tmp/ccBkVmDa.s:226    .text:000000000000016c .L0 
     /tmp/ccBkVmDa.s:227    .text:0000000000000170 .L0 
     /tmp/ccBkVmDa.s:228    .text:0000000000000170 .L0 
     /tmp/ccBkVmDa.s:230    .text:0000000000000174 .L0 
     /tmp/ccBkVmDa.s:232    .text:0000000000000178 .L0 
     /tmp/ccBkVmDa.s:238    .text:0000000000000178 _ZN5Riscv17disableInterruptsEv
     /tmp/ccBkVmDa.s:241    .text:0000000000000178 .L0 
     /tmp/ccBkVmDa.s:242    .text:0000000000000178 .L0 
     /tmp/ccBkVmDa.s:243    .text:000000000000017c .L0 
     /tmp/ccBkVmDa.s:245    .text:0000000000000180 .L0 
     /tmp/ccBkVmDa.s:247    .text:0000000000000184 .L0 
     /tmp/ccBkVmDa.s:252    .text:0000000000000184 .L0 
     /tmp/ccBkVmDa.s:253    .text:0000000000000184 .L0 
     /tmp/ccBkVmDa.s:254    .text:0000000000000184 .L0 
     /tmp/ccBkVmDa.s:264    .text:000000000000018c .L0 
     /tmp/ccBkVmDa.s:265    .text:0000000000000190 .L0 
     /tmp/ccBkVmDa.s:266    .text:0000000000000190 .L0 
     /tmp/ccBkVmDa.s:268    .text:0000000000000194 .L0 
     /tmp/ccBkVmDa.s:270    .text:0000000000000198 .L0 
     /tmp/ccBkVmDa.s:276    .text:0000000000000198 _ZN5Riscv9endSystemEv
     /tmp/ccBkVmDa.s:279    .text:0000000000000198 .L0 
     /tmp/ccBkVmDa.s:280    .text:0000000000000198 .L0 
     /tmp/ccBkVmDa.s:281    .text:000000000000019c .L0 
     /tmp/ccBkVmDa.s:284    .text:00000000000001a4 .L0 
     /tmp/ccBkVmDa.s:285    .text:00000000000001a4 .L0 
     /tmp/ccBkVmDa.s:287    .text:00000000000001a8 .L0 
     /tmp/ccBkVmDa.s:289    .text:00000000000001a8 .L0 
     /tmp/ccBkVmDa.s:290    .text:00000000000001a8 .L0 
     /tmp/ccBkVmDa.s:293    .text:00000000000001b0 .L0 
     /tmp/ccBkVmDa.s:294    .text:00000000000001b0 .L0 
     /tmp/ccBkVmDa.s:299    .text:00000000000001bc .L0 
     /tmp/ccBkVmDa.s:300    .text:00000000000001bc .L0 
     /tmp/ccBkVmDa.s:301    .text:00000000000001bc .L0 
     /tmp/ccBkVmDa.s:302    .text:00000000000001bc .L0 
GAS LISTING /tmp/ccBkVmDa.s 			page 39


     /tmp/ccBkVmDa.s:305    .text:00000000000001c4 .L0 
     /tmp/ccBkVmDa.s:307    .text:00000000000001c8 .L0 
     /tmp/ccBkVmDa.s:308    .text:00000000000001c8 .L0 
     /tmp/ccBkVmDa.s:314    .text:00000000000001dc .L0 
     /tmp/ccBkVmDa.s:315    .text:00000000000001dc .L0 
     /tmp/ccBkVmDa.s:318    .text:00000000000001e8 .L0 
     /tmp/ccBkVmDa.s:319    .text:00000000000001e8 .L0 
     /tmp/ccBkVmDa.s:323    .text:00000000000001f0 .L0 
     /tmp/ccBkVmDa.s:324    .text:00000000000001f0 .L0 
     /tmp/ccBkVmDa.s:325    .text:00000000000001f0 .L0 
     /tmp/ccBkVmDa.s:330    .text:0000000000000204 .L0 
     /tmp/ccBkVmDa.s:332    .text:0000000000000208 .L0 
     /tmp/ccBkVmDa.s:333    .text:0000000000000208 .L0 
     /tmp/ccBkVmDa.s:336    .text:0000000000000210 .L0 
     /tmp/ccBkVmDa.s:339    .text:0000000000000214 .L0 
     /tmp/ccBkVmDa.s:340    .text:0000000000000214 .L0 
     /tmp/ccBkVmDa.s:343    .text:000000000000021c .L0 
     /tmp/ccBkVmDa.s:344    .text:0000000000000220 .L0 
     /tmp/ccBkVmDa.s:346    .text:0000000000000224 .L0 
     /tmp/ccBkVmDa.s:347    .text:0000000000000224 .L0 
     /tmp/ccBkVmDa.s:349    .text:0000000000000228 .L0 
     /tmp/ccBkVmDa.s:351    .text:000000000000022c .L0 
     /tmp/ccBkVmDa.s:357    .text:000000000000022c _ZN5Riscv10popSppSpieEv
     /tmp/ccBkVmDa.s:360    .text:000000000000022c .L0 
     /tmp/ccBkVmDa.s:361    .text:000000000000022c .L0 
     /tmp/ccBkVmDa.s:362    .text:0000000000000230 .L0 
     /tmp/ccBkVmDa.s:364    .text:0000000000000234 .L0 
     /tmp/ccBkVmDa.s:366    .text:0000000000000238 .L0 
     /tmp/ccBkVmDa.s:368    .text:0000000000000238 .L0 
       src/Riscv.cpp:86     .text:0000000000000238 .L0 
     /tmp/ccBkVmDa.s:374    .text:000000000000023c .L0 
       src/Riscv.cpp:87     .text:000000000000023c .L0 
     /tmp/ccBkVmDa.s:380    .text:0000000000000240 .L0 
     /tmp/ccBkVmDa.s:381    .text:0000000000000244 .L0 
     /tmp/ccBkVmDa.s:382    .text:0000000000000244 .L0 
     /tmp/ccBkVmDa.s:384    .text:0000000000000248 .L0 
     /tmp/ccBkVmDa.s:386    .text:000000000000024c .L0 
     /tmp/ccBkVmDa.s:392    .text:000000000000024c _ZN5Riscv10kernelMainEv
     /tmp/ccBkVmDa.s:395    .text:000000000000024c .L0 
     /tmp/ccBkVmDa.s:396    .text:000000000000024c .L0 
     /tmp/ccBkVmDa.s:397    .text:000000000000024c .L0 
     /tmp/ccBkVmDa.s:402    .text:000000000000025c .L0 
     /tmp/ccBkVmDa.s:403    .text:0000000000000260 .L0 
     /tmp/ccBkVmDa.s:406    .text:0000000000000268 .L0 
     /tmp/ccBkVmDa.s:407    .text:0000000000000268 .L0 
     /tmp/ccBkVmDa.s:409    .text:000000000000026c .L0 
     /tmp/ccBkVmDa.s:411    .text:000000000000026c .L0 
     /tmp/ccBkVmDa.s:412    .text:000000000000026c .L0 
     /tmp/ccBkVmDa.s:415    .text:0000000000000278 .L0 
     /tmp/ccBkVmDa.s:416    .text:0000000000000278 .L0 
     /tmp/ccBkVmDa.s:419    .text:0000000000000280 .L0 
     /tmp/ccBkVmDa.s:420    .text:0000000000000280 .L0 
     /tmp/ccBkVmDa.s:423    .text:0000000000000288 .L0 
     /tmp/ccBkVmDa.s:424    .text:0000000000000288 .L0 
     /tmp/ccBkVmDa.s:427    .text:0000000000000290 .L0 
     /tmp/ccBkVmDa.s:428    .text:0000000000000294 .L0 
     /tmp/ccBkVmDa.s:430    .text:0000000000000298 .L0 
GAS LISTING /tmp/ccBkVmDa.s 			page 40


     /tmp/ccBkVmDa.s:431    .text:0000000000000298 .L0 
     /tmp/ccBkVmDa.s:433    .text:000000000000029c .L0 
     /tmp/ccBkVmDa.s:435    .text:00000000000002a0 .L0 
     /tmp/ccBkVmDa.s:441    .text:00000000000002a0 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccBkVmDa.s:444    .text:00000000000002a0 .L0 
     /tmp/ccBkVmDa.s:445    .text:00000000000002a0 .L0 
     /tmp/ccBkVmDa.s:446    .text:00000000000002a4 .L0 
     /tmp/ccBkVmDa.s:449    .text:00000000000002ac .L0 
     /tmp/ccBkVmDa.s:450    .text:00000000000002ac .L0 
     /tmp/ccBkVmDa.s:452    .text:00000000000002b0 .L0 
     /tmp/ccBkVmDa.s:454    .text:00000000000002b0 .L0 
     /tmp/ccBkVmDa.s:455    .text:00000000000002b0 .L0 
     /tmp/ccBkVmDa.s:458    .text:00000000000002b8 .L0 
     /tmp/ccBkVmDa.s:459    .text:00000000000002bc .L0 
     /tmp/ccBkVmDa.s:461    .text:00000000000002c0 .L0 
     /tmp/ccBkVmDa.s:462    .text:00000000000002c0 .L0 
     /tmp/ccBkVmDa.s:464    .text:00000000000002c4 .L0 
     /tmp/ccBkVmDa.s:466    .text:00000000000002c8 .L0 
     /tmp/ccBkVmDa.s:472    .text:00000000000002c8 _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccBkVmDa.s:475    .text:00000000000002c8 .L0 
     /tmp/ccBkVmDa.s:476    .text:00000000000002c8 .L0 
     /tmp/ccBkVmDa.s:477    .text:00000000000002cc .L0 
     /tmp/ccBkVmDa.s:479    .text:00000000000002d0 .L0 
     /tmp/ccBkVmDa.s:481    .text:00000000000002d4 .L0 
     /tmp/ccBkVmDa.s:484    .text:00000000000002d4 .L0 
     /tmp/ccBkVmDa.s:485    .text:00000000000002d4 .L0 
     /tmp/ccBkVmDa.s:486    .text:00000000000002d4 .L0 
     /tmp/ccBkVmDa.s:493    .text:00000000000002dc .L0 
     /tmp/ccBkVmDa.s:494    .text:00000000000002e0 .L0 
     /tmp/ccBkVmDa.s:495    .text:00000000000002e0 .L0 
     /tmp/ccBkVmDa.s:497    .text:00000000000002e4 .L0 
     /tmp/ccBkVmDa.s:499    .text:00000000000002e8 .L0 
     /tmp/ccBkVmDa.s:505    .text:00000000000002e8 _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccBkVmDa.s:508    .text:00000000000002e8 .L0 
     /tmp/ccBkVmDa.s:509    .text:00000000000002e8 .L0 
     /tmp/ccBkVmDa.s:510    .text:00000000000002ec .L0 
     /tmp/ccBkVmDa.s:512    .text:00000000000002f0 .L0 
     /tmp/ccBkVmDa.s:514    .text:00000000000002f4 .L0 
     /tmp/ccBkVmDa.s:516    .text:00000000000002f4 .L0 
     /tmp/ccBkVmDa.s:517    .text:00000000000002f4 .L0 
       src/Riscv.cpp:247    .text:00000000000002f4 .L0 
     /tmp/ccBkVmDa.s:524    .text:00000000000002f8 .L0 
     /tmp/ccBkVmDa.s:526    .text:00000000000002f8 .L0 
       src/Riscv.cpp:248    .text:0000000000000308 .L0 
     /tmp/ccBkVmDa.s:535    .text:000000000000030c .L0 
       src/Riscv.cpp:249    .text:000000000000030c .L0 
     /tmp/ccBkVmDa.s:540    .text:0000000000000310 .L0 
       src/Riscv.cpp:250    .text:0000000000000310 .L0 
     /tmp/ccBkVmDa.s:546    .text:0000000000000314 .L0 
     /tmp/ccBkVmDa.s:547    .text:0000000000000318 .L0 
     /tmp/ccBkVmDa.s:548    .text:0000000000000318 .L0 
     /tmp/ccBkVmDa.s:550    .text:000000000000031c .L0 
     /tmp/ccBkVmDa.s:552    .text:0000000000000320 .L0 
     /tmp/ccBkVmDa.s:558    .text:0000000000000320 _ZN5Riscv14changePrivModeEv
     /tmp/ccBkVmDa.s:561    .text:0000000000000320 .L0 
     /tmp/ccBkVmDa.s:562    .text:0000000000000320 .L0 
     /tmp/ccBkVmDa.s:563    .text:0000000000000324 .L0 
GAS LISTING /tmp/ccBkVmDa.s 			page 41


     /tmp/ccBkVmDa.s:565    .text:0000000000000328 .L0 
     /tmp/ccBkVmDa.s:567    .text:000000000000032c .L0 
     /tmp/ccBkVmDa.s:569    .text:000000000000032c .L0 
     /tmp/ccBkVmDa.s:570    .text:000000000000032c .L0 
     /tmp/ccBkVmDa.s:574    .text:000000000000033c .L0 
     /tmp/ccBkVmDa.s:579    .text:0000000000000340 .L0 
     /tmp/ccBkVmDa.s:580    .text:0000000000000340 .L0 
     /tmp/ccBkVmDa.s:581    .text:0000000000000340 .L0 
     /tmp/ccBkVmDa.s:592    .text:0000000000000348 .L0 
     /tmp/ccBkVmDa.s:593    .text:000000000000034c .L0 
     /tmp/ccBkVmDa.s:594    .text:000000000000034c .L0 
     /tmp/ccBkVmDa.s:595    .text:000000000000034c .L0 
     /tmp/ccBkVmDa.s:597    .text:0000000000000350 .L0 
     /tmp/ccBkVmDa.s:600    .text:0000000000000354 .L0 
     /tmp/ccBkVmDa.s:605    .text:0000000000000354 .L0 
     /tmp/ccBkVmDa.s:606    .text:0000000000000354 .L0 
     /tmp/ccBkVmDa.s:607    .text:0000000000000354 .L0 
     /tmp/ccBkVmDa.s:617    .text:000000000000035c .L0 
     /tmp/ccBkVmDa.s:618    .text:0000000000000360 .L0 
     /tmp/ccBkVmDa.s:624    .text:0000000000000360 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccBkVmDa.s:627    .text:0000000000000360 .L0 
     /tmp/ccBkVmDa.s:628    .text:0000000000000360 .L0 
     /tmp/ccBkVmDa.s:629    .text:0000000000000364 .L0 
     /tmp/ccBkVmDa.s:633    .text:0000000000000370 .L0 
     /tmp/ccBkVmDa.s:634    .text:0000000000000370 .L0 
     /tmp/ccBkVmDa.s:635    .text:0000000000000370 .L0 
     /tmp/ccBkVmDa.s:637    .text:0000000000000374 .L0 
     /tmp/ccBkVmDa.s:639    .text:0000000000000374 .L0 
       src/Riscv.cpp:92     .text:0000000000000374 .L0 
     /tmp/ccBkVmDa.s:648    .text:0000000000000384 .L0 
     /tmp/ccBkVmDa.s:649    .text:0000000000000384 .L0 
       src/Riscv.cpp:93     .text:0000000000000390 .L0 
     /tmp/ccBkVmDa.s:661    .text:0000000000000398 .L0 
     /tmp/ccBkVmDa.s:662    .text:0000000000000398 .L0 
     /tmp/ccBkVmDa.s:663    .text:0000000000000398 .L0 
  src/../h/Riscv.hpp:122    .text:0000000000000398 .L0 
     /tmp/ccBkVmDa.s:671    .text:00000000000003a0 .L0 
     /tmp/ccBkVmDa.s:672    .text:00000000000003a0 .L0 
     /tmp/ccBkVmDa.s:678    .text:00000000000003a4 .L0 
     /tmp/ccBkVmDa.s:688    .text:00000000000003c4 .L0 
     /tmp/ccBkVmDa.s:689    .text:00000000000003c4 .L0 
     /tmp/ccBkVmDa.s:690    .text:00000000000003c4 .L0 
     /tmp/ccBkVmDa.s:691    .text:00000000000003c4 .L0 
     /tmp/ccBkVmDa.s:694    .text:00000000000003cc .L0 
     /tmp/ccBkVmDa.s:699    .text:00000000000003d0 .L0 
     /tmp/ccBkVmDa.s:703    .text:00000000000003d8 .L0 
     /tmp/ccBkVmDa.s:704    .text:00000000000003d8 .L0 
     /tmp/ccBkVmDa.s:705    .text:00000000000003d8 .L0 
     /tmp/ccBkVmDa.s:706    .text:00000000000003d8 .L0 
     /tmp/ccBkVmDa.s:709    .text:00000000000003e0 .L0 
     /tmp/ccBkVmDa.s:714    .text:00000000000003e4 .L0 
     /tmp/ccBkVmDa.s:724    .text:0000000000000404 .L0 
     /tmp/ccBkVmDa.s:725    .text:0000000000000404 .L0 
     /tmp/ccBkVmDa.s:726    .text:0000000000000404 .L0 
     /tmp/ccBkVmDa.s:727    .text:0000000000000404 .L0 
     /tmp/ccBkVmDa.s:730    .text:000000000000040c .L0 
     /tmp/ccBkVmDa.s:731    .text:000000000000040c .L0 
GAS LISTING /tmp/ccBkVmDa.s 			page 42


     /tmp/ccBkVmDa.s:736    .text:000000000000041c .L0 
     /tmp/ccBkVmDa.s:740    .text:0000000000000420 .L0 
     /tmp/ccBkVmDa.s:742    .text:0000000000000420 .L0 
     /tmp/ccBkVmDa.s:745    .text:0000000000000420 .L0 
     /tmp/ccBkVmDa.s:746    .text:0000000000000420 .L0 
     /tmp/ccBkVmDa.s:747    .text:0000000000000420 .L0 
  src/../h/Riscv.hpp:132    .text:0000000000000420 .L0 
     /tmp/ccBkVmDa.s:756    .text:0000000000000428 .L0 
     /tmp/ccBkVmDa.s:757    .text:0000000000000428 .L0 
     /tmp/ccBkVmDa.s:761    .text:000000000000042c .L0 
     /tmp/ccBkVmDa.s:765    .text:0000000000000430 .L0 
     /tmp/ccBkVmDa.s:766    .text:0000000000000430 .L0 
     /tmp/ccBkVmDa.s:767    .text:0000000000000430 .L0 
  src/../h/Riscv.hpp:205    .text:0000000000000430 .L0 
     /tmp/ccBkVmDa.s:775    .text:0000000000000438 .L0 
     /tmp/ccBkVmDa.s:776    .text:0000000000000438 .L0 
     /tmp/ccBkVmDa.s:780    .text:000000000000043c .L0 
     /tmp/ccBkVmDa.s:785    .text:0000000000000440 .L0 
     /tmp/ccBkVmDa.s:786    .text:0000000000000440 .L0 
     /tmp/ccBkVmDa.s:787    .text:0000000000000440 .L0 
     /tmp/ccBkVmDa.s:797    .text:0000000000000448 .L0 
     /tmp/ccBkVmDa.s:798    .text:0000000000000448 .L0 
     /tmp/ccBkVmDa.s:803    .text:000000000000045c .L0 
     /tmp/ccBkVmDa.s:804    .text:000000000000045c .L0 
     /tmp/ccBkVmDa.s:809    .text:0000000000000470 .L0 
     /tmp/ccBkVmDa.s:810    .text:0000000000000470 .L0 
     /tmp/ccBkVmDa.s:813    .text:0000000000000478 .L0 
     /tmp/ccBkVmDa.s:814    .text:0000000000000478 .L0 
     /tmp/ccBkVmDa.s:821    .text:0000000000000484 .L0 
     /tmp/ccBkVmDa.s:822    .text:0000000000000484 .L0 
     /tmp/ccBkVmDa.s:827    .text:0000000000000488 .L0 
     /tmp/ccBkVmDa.s:829    .text:000000000000048c .L0 
     /tmp/ccBkVmDa.s:832    .text:0000000000000490 .L0 
     /tmp/ccBkVmDa.s:833    .text:0000000000000490 .L0 
     /tmp/ccBkVmDa.s:838    .text:0000000000000494 .L0 
  src/../h/Riscv.hpp:210    .text:0000000000000494 .L0 
     /tmp/ccBkVmDa.s:848    .text:0000000000000498 .L0 
     /tmp/ccBkVmDa.s:849    .text:0000000000000498 .L0 
     /tmp/ccBkVmDa.s:854    .text:000000000000049c .L0 
  src/../h/Riscv.hpp:137    .text:000000000000049c .L0 
     /tmp/ccBkVmDa.s:864    .text:00000000000004a0 .L0 
     /tmp/ccBkVmDa.s:865    .text:00000000000004a0 .L0 
     /tmp/ccBkVmDa.s:872    .text:00000000000004a8 .L0 
     /tmp/ccBkVmDa.s:873    .text:00000000000004a8 .L0 
     /tmp/ccBkVmDa.s:874    .text:00000000000004ac .L0 
     /tmp/ccBkVmDa.s:875    .text:00000000000004ac .L0 
     /tmp/ccBkVmDa.s:877    .text:00000000000004b0 .L0 
     /tmp/ccBkVmDa.s:878    .text:00000000000004b0 .L0 
     /tmp/ccBkVmDa.s:880    .text:00000000000004b4 .L0 
     /tmp/ccBkVmDa.s:882    .text:00000000000004b8 .L0 
     /tmp/ccBkVmDa.s:885    .text:00000000000004bc .L0 
     /tmp/ccBkVmDa.s:890    .text:00000000000004bc .L0 
     /tmp/ccBkVmDa.s:891    .text:00000000000004bc .L0 
     /tmp/ccBkVmDa.s:893    .text:00000000000004c0 .L0 
     /tmp/ccBkVmDa.s:894    .text:00000000000004c0 .L0 
     /tmp/ccBkVmDa.s:901    .text:00000000000004cc .L0 
     /tmp/ccBkVmDa.s:902    .text:00000000000004cc .L0 
GAS LISTING /tmp/ccBkVmDa.s 			page 43


     /tmp/ccBkVmDa.s:903    .text:00000000000004cc .L0 
     /tmp/ccBkVmDa.s:904    .text:00000000000004cc .L0 
     /tmp/ccBkVmDa.s:907    .text:00000000000004d4 .L0 
     /tmp/ccBkVmDa.s:911    .text:00000000000004d8 .L0 
     /tmp/ccBkVmDa.s:912    .text:00000000000004d8 .L0 
     /tmp/ccBkVmDa.s:914    .text:00000000000004d8 .L0 
     /tmp/ccBkVmDa.s:915    .text:00000000000004d8 .L0 
     /tmp/ccBkVmDa.s:916    .text:00000000000004d8 .L0 
       src/Riscv.cpp:147    .text:00000000000004d8 .L0 
     /tmp/ccBkVmDa.s:926    .text:00000000000004dc .L0 
     /tmp/ccBkVmDa.s:927    .text:00000000000004dc .L0 
     /tmp/ccBkVmDa.s:928    .text:00000000000004dc .L0 
  src/../h/Riscv.hpp:132    .text:00000000000004dc .L0 
     /tmp/ccBkVmDa.s:936    .text:00000000000004e4 .L0 
     /tmp/ccBkVmDa.s:937    .text:00000000000004e4 .L0 
     /tmp/ccBkVmDa.s:941    .text:00000000000004e8 .L0 
     /tmp/ccBkVmDa.s:943    .text:00000000000004ec .L0 
     /tmp/ccBkVmDa.s:947    .text:00000000000004f0 .L0 
     /tmp/ccBkVmDa.s:948    .text:00000000000004f0 .L0 
     /tmp/ccBkVmDa.s:949    .text:00000000000004f0 .L0 
  src/../h/Riscv.hpp:205    .text:00000000000004f0 .L0 
     /tmp/ccBkVmDa.s:957    .text:00000000000004f8 .L0 
     /tmp/ccBkVmDa.s:958    .text:00000000000004f8 .L0 
     /tmp/ccBkVmDa.s:962    .text:00000000000004fc .L0 
     /tmp/ccBkVmDa.s:964    .text:0000000000000500 .L0 
     /tmp/ccBkVmDa.s:1048   .text:0000000000000524 .L0 
     /tmp/ccBkVmDa.s:1049   .text:0000000000000524 .L0 
     /tmp/ccBkVmDa.s:1050   .text:0000000000000524 .L0 
     /tmp/ccBkVmDa.s:1054   .text:000000000000052c .L0 
     /tmp/ccBkVmDa.s:1055   .text:000000000000052c .L0 
     /tmp/ccBkVmDa.s:1056   .text:000000000000052c .L0 
     /tmp/ccBkVmDa.s:1061   .text:0000000000000530 .L0 
  src/../h/Riscv.hpp:210    .text:0000000000000530 .L0 
     /tmp/ccBkVmDa.s:1071   .text:0000000000000534 .L0 
     /tmp/ccBkVmDa.s:1072   .text:0000000000000534 .L0 
     /tmp/ccBkVmDa.s:1077   .text:0000000000000538 .L0 
  src/../h/Riscv.hpp:137    .text:0000000000000538 .L0 
     /tmp/ccBkVmDa.s:1087   .text:000000000000053c .L0 
     /tmp/ccBkVmDa.s:1088   .text:000000000000053c .L0 
     /tmp/ccBkVmDa.s:1094   .text:0000000000000544 .L0 
     /tmp/ccBkVmDa.s:1095   .text:0000000000000544 .L0 
     /tmp/ccBkVmDa.s:1101   .text:0000000000000548 .L0 
     /tmp/ccBkVmDa.s:1102   .text:0000000000000548 .L0 
     /tmp/ccBkVmDa.s:1103   .text:0000000000000548 .L0 
     /tmp/ccBkVmDa.s:1106   .text:0000000000000550 .L0 
     /tmp/ccBkVmDa.s:1109   .text:0000000000000554 .L0 
     /tmp/ccBkVmDa.s:1110   .text:0000000000000554 .L0 
     /tmp/ccBkVmDa.s:1111   .text:0000000000000554 .L0 
     /tmp/ccBkVmDa.s:1114   .text:000000000000055c .L0 
     /tmp/ccBkVmDa.s:1117   .text:0000000000000560 .L0 
     /tmp/ccBkVmDa.s:1118   .text:0000000000000560 .L0 
     /tmp/ccBkVmDa.s:1119   .text:0000000000000560 .L0 
     /tmp/ccBkVmDa.s:1122   .text:0000000000000568 .L0 
     /tmp/ccBkVmDa.s:1125   .text:000000000000056c .L0 
     /tmp/ccBkVmDa.s:1126   .text:000000000000056c .L0 
     /tmp/ccBkVmDa.s:1127   .text:000000000000056c .L0 
     /tmp/ccBkVmDa.s:1130   .text:0000000000000574 .L0 
GAS LISTING /tmp/ccBkVmDa.s 			page 44


     /tmp/ccBkVmDa.s:1133   .text:0000000000000578 .L0 
     /tmp/ccBkVmDa.s:1134   .text:0000000000000578 .L0 
     /tmp/ccBkVmDa.s:1135   .text:0000000000000578 .L0 
     /tmp/ccBkVmDa.s:1138   .text:0000000000000580 .L0 
     /tmp/ccBkVmDa.s:1141   .text:0000000000000584 .L0 
     /tmp/ccBkVmDa.s:1142   .text:0000000000000584 .L0 
     /tmp/ccBkVmDa.s:1143   .text:0000000000000584 .L0 
     /tmp/ccBkVmDa.s:1146   .text:000000000000058c .L0 
     /tmp/ccBkVmDa.s:1149   .text:0000000000000590 .L0 
     /tmp/ccBkVmDa.s:1150   .text:0000000000000590 .L0 
     /tmp/ccBkVmDa.s:1151   .text:0000000000000590 .L0 
     /tmp/ccBkVmDa.s:1154   .text:0000000000000598 .L0 
     /tmp/ccBkVmDa.s:1157   .text:000000000000059c .L0 
     /tmp/ccBkVmDa.s:1158   .text:000000000000059c .L0 
     /tmp/ccBkVmDa.s:1159   .text:000000000000059c .L0 
     /tmp/ccBkVmDa.s:1162   .text:00000000000005a4 .L0 
     /tmp/ccBkVmDa.s:1165   .text:00000000000005a8 .L0 
     /tmp/ccBkVmDa.s:1166   .text:00000000000005a8 .L0 
     /tmp/ccBkVmDa.s:1167   .text:00000000000005a8 .L0 
     /tmp/ccBkVmDa.s:1170   .text:00000000000005b0 .L0 
     /tmp/ccBkVmDa.s:1173   .text:00000000000005b4 .L0 
     /tmp/ccBkVmDa.s:1174   .text:00000000000005b4 .L0 
     /tmp/ccBkVmDa.s:1175   .text:00000000000005b4 .L0 
     /tmp/ccBkVmDa.s:1178   .text:00000000000005bc .L0 
     /tmp/ccBkVmDa.s:1181   .text:00000000000005c0 .L0 
     /tmp/ccBkVmDa.s:1182   .text:00000000000005c0 .L0 
     /tmp/ccBkVmDa.s:1183   .text:00000000000005c0 .L0 
     /tmp/ccBkVmDa.s:1186   .text:00000000000005c8 .L0 
     /tmp/ccBkVmDa.s:1189   .text:00000000000005cc .L0 
     /tmp/ccBkVmDa.s:1190   .text:00000000000005cc .L0 
     /tmp/ccBkVmDa.s:1191   .text:00000000000005cc .L0 
     /tmp/ccBkVmDa.s:1194   .text:00000000000005d4 .L0 
     /tmp/ccBkVmDa.s:1197   .text:00000000000005d8 .L0 
     /tmp/ccBkVmDa.s:1198   .text:00000000000005d8 .L0 
     /tmp/ccBkVmDa.s:1199   .text:00000000000005d8 .L0 
     /tmp/ccBkVmDa.s:1202   .text:00000000000005e0 .L0 
     /tmp/ccBkVmDa.s:1205   .text:00000000000005e4 .L0 
     /tmp/ccBkVmDa.s:1206   .text:00000000000005e4 .L0 
     /tmp/ccBkVmDa.s:1207   .text:00000000000005e4 .L0 
     /tmp/ccBkVmDa.s:1210   .text:00000000000005ec .L0 
     /tmp/ccBkVmDa.s:1213   .text:00000000000005f0 .L0 
     /tmp/ccBkVmDa.s:1214   .text:00000000000005f0 .L0 
     /tmp/ccBkVmDa.s:1215   .text:00000000000005f0 .L0 
     /tmp/ccBkVmDa.s:1218   .text:00000000000005f8 .L0 
     /tmp/ccBkVmDa.s:1222   .text:00000000000005fc .L0 
     /tmp/ccBkVmDa.s:1239   .bss:0000000000000008 _ZN5Riscv14semaphoreCacheE
     /tmp/ccBkVmDa.s:1235   .bss:0000000000000000 _ZN5Riscv8pcbCacheE
     /tmp/ccBkVmDa.s:1247   .bss:0000000000000011 _ZN5Riscv16kernelMainCalledE
     /tmp/ccBkVmDa.s:1243   .bss:0000000000000010 _ZN5Riscv12finishSystemE
     /tmp/ccBkVmDa.s:1252   .bss:0000000000000018 _ZN5Riscv9totalTimeE
     /tmp/ccBkVmDa.s:1232   .bss:0000000000000000 .LANCHOR0
     /tmp/ccBkVmDa.s:1266   .text:00000000000005fc .L0 
     /tmp/ccBkVmDa.s:24     .text:0000000000000010 .L0 
     /tmp/ccBkVmDa.s:26     .text:000000000000001c .L0 
     /tmp/ccBkVmDa.s:95     .text:0000000000000080 .L0 
     /tmp/ccBkVmDa.s:112    .text:000000000000008c .L0 
     /tmp/ccBkVmDa.s:114    .text:0000000000000098 .L0 
GAS LISTING /tmp/ccBkVmDa.s 			page 45


     /tmp/ccBkVmDa.s:68     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccBkVmDa.s:156    .text:00000000000000f4 .L0 
     /tmp/ccBkVmDa.s:160    .text:0000000000000104 .L0 
     /tmp/ccBkVmDa.s:71     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccBkVmDa.s:167    .text:000000000000011c .L0 
     /tmp/ccBkVmDa.s:295    .text:00000000000001b4 .L0 
     /tmp/ccBkVmDa.s:308    .text:00000000000001c8 .L0 
     /tmp/ccBkVmDa.s:315    .text:00000000000001dc .L0 
     /tmp/ccBkVmDa.s:325    .text:00000000000001f0 .L0 
     /tmp/ccBkVmDa.s:397    .text:000000000000024c .L0 
     /tmp/ccBkVmDa.s:413    .text:0000000000000270 .L0 
     /tmp/ccBkVmDa.s:526    .text:00000000000002f8 .L0 
     /tmp/ccBkVmDa.s:570    .text:000000000000032c .L0 
     /tmp/ccBkVmDa.s:645    .text:0000000000000378 .L0 
     /tmp/ccBkVmDa.s:649    .text:0000000000000384 .L0 
     /tmp/ccBkVmDa.s:798    .text:0000000000000448 .L0 
     /tmp/ccBkVmDa.s:804    .text:000000000000045c .L0 
     /tmp/ccBkVmDa.s:814    .text:0000000000000478 .L0 
     /tmp/ccBkVmDa.s:976    .rodata:0000000000000000 .L45
     /tmp/ccBkVmDa.s:968    .text:000000000000050c .L0 
     /tmp/ccBkVmDa.s:298    .text:00000000000001bc .L10
     /tmp/ccBkVmDa.s:337    .text:0000000000000214 .L11
     /tmp/ccBkVmDa.s:321    .text:00000000000001f0 .L12
     /tmp/ccBkVmDa.s:400    .text:000000000000025c .L22
     /tmp/ccBkVmDa.s:599    .text:0000000000000354 .L30
     /tmp/ccBkVmDa.s:588    .text:0000000000000348 .L29
     /tmp/ccBkVmDa.s:711    .text:00000000000003e4 .L34
     /tmp/ccBkVmDa.s:909    .text:00000000000004d8 .L35
     /tmp/ccBkVmDa.s:898    .text:00000000000004cc .L36
     /tmp/ccBkVmDa.s:696    .text:00000000000003d0 .L62
     /tmp/ccBkVmDa.s:868    .text:00000000000004a8 .L33
     /tmp/ccBkVmDa.s:738    .text:0000000000000420 .L40
     /tmp/ccBkVmDa.s:884    .text:00000000000004bc .L63
     /tmp/ccBkVmDa.s:830    .text:0000000000000490 .L42
     /tmp/ccBkVmDa.s:1053   .text:000000000000052c .L43
     /tmp/ccBkVmDa.s:1046   .text:0000000000000524 .L60
     /tmp/ccBkVmDa.s:1096   .text:0000000000000548 .L59
     /tmp/ccBkVmDa.s:1115   .text:0000000000000560 .L58
     /tmp/ccBkVmDa.s:1139   .text:0000000000000584 .L57
     /tmp/ccBkVmDa.s:1131   .text:0000000000000578 .L56
     /tmp/ccBkVmDa.s:1107   .text:0000000000000554 .L55
     /tmp/ccBkVmDa.s:1123   .text:000000000000056c .L54
     /tmp/ccBkVmDa.s:1155   .text:000000000000059c .L53
     /tmp/ccBkVmDa.s:1163   .text:00000000000005a8 .L52
     /tmp/ccBkVmDa.s:1187   .text:00000000000005cc .L51
     /tmp/ccBkVmDa.s:1171   .text:00000000000005b4 .L50
     /tmp/ccBkVmDa.s:1179   .text:00000000000005c0 .L49
     /tmp/ccBkVmDa.s:1147   .text:0000000000000590 .L48
     /tmp/ccBkVmDa.s:1195   .text:00000000000005d8 .L47
     /tmp/ccBkVmDa.s:1203   .text:00000000000005e4 .L46
     /tmp/ccBkVmDa.s:1211   .text:00000000000005f0 .L44
     /tmp/ccBkVmDa.s:3921   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBkVmDa.s:5842   .debug_str:00000000000012f1 .LASF342
     /tmp/ccBkVmDa.s:5390   .debug_str:00000000000003be .LASF343
     /tmp/ccBkVmDa.s:5440   .debug_str:000000000000057e .LASF344
     /tmp/ccBkVmDa.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBkVmDa.s:1255   .text:00000000000005fc .Letext0
GAS LISTING /tmp/ccBkVmDa.s 			page 46


     /tmp/ccBkVmDa.s:5288   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBkVmDa.s:5516   .debug_str:000000000000081a .LASF0
     /tmp/ccBkVmDa.s:5560   .debug_str:0000000000000998 .LASF1
     /tmp/ccBkVmDa.s:5734   .debug_str:0000000000000fa3 .LASF2
     /tmp/ccBkVmDa.s:5750   .debug_str:0000000000001031 .LASF4
     /tmp/ccBkVmDa.s:5536   .debug_str:00000000000008c2 .LASF3
     /tmp/ccBkVmDa.s:5316   .debug_str:0000000000000110 .LASF5
     /tmp/ccBkVmDa.s:5672   .debug_str:0000000000000dcf .LASF6
     /tmp/ccBkVmDa.s:5550   .debug_str:0000000000000951 .LASF7
     /tmp/ccBkVmDa.s:5478   .debug_str:00000000000006c3 .LASF8
     /tmp/ccBkVmDa.s:5488   .debug_str:0000000000000727 .LASF9
     /tmp/ccBkVmDa.s:5376   .debug_str:000000000000035b .LASF10
     /tmp/ccBkVmDa.s:5802   .debug_str:00000000000011e0 .LASF11
     /tmp/ccBkVmDa.s:5462   .debug_str:000000000000066e .LASF12
     /tmp/ccBkVmDa.s:5392   .debug_str:00000000000003cc .LASF13
     /tmp/ccBkVmDa.s:5374   .debug_str:000000000000034b .LASF14
     /tmp/ccBkVmDa.s:5810   .debug_str:000000000000122c .LASF15
     /tmp/ccBkVmDa.s:5436   .debug_str:0000000000000558 .LASF16
     /tmp/ccBkVmDa.s:5792   .debug_str:0000000000001167 .LASF17
     /tmp/ccBkVmDa.s:5458   .debug_str:0000000000000650 .LASF18
     /tmp/ccBkVmDa.s:5456   .debug_str:0000000000000643 .LASF345
     /tmp/ccBkVmDa.s:5910   .debug_str:00000000000015ef .LASF112
     /tmp/ccBkVmDa.s:5706   .debug_str:0000000000000eed .LASF22
     /tmp/ccBkVmDa.s:5566   .debug_str:00000000000009cc .LASF19
     /tmp/ccBkVmDa.s:5446   .debug_str:00000000000005d0 .LASF20
     /tmp/ccBkVmDa.s:5938   .debug_str:00000000000016c9 .LASF21
     /tmp/ccBkVmDa.s:5892   .debug_str:0000000000001516 .LASF23
     /tmp/ccBkVmDa.s:5452   .debug_str:0000000000000610 .LASF24
     /tmp/ccBkVmDa.s:5840   .debug_str:00000000000012e4 .LASF25
     /tmp/ccBkVmDa.s:5406   .debug_str:0000000000000459 .LASF26
     /tmp/ccBkVmDa.s:5510   .debug_str:00000000000007f1 .LASF45
     /tmp/ccBkVmDa.s:5796   .debug_str:000000000000118c .LASF47
     /tmp/ccBkVmDa.s:5904   .debug_str:00000000000015b6 .LASF65
     /tmp/ccBkVmDa.s:5948   .debug_str:0000000000001713 .LASF27
     /tmp/ccBkVmDa.s:5772   .debug_str:00000000000010d0 .LASF29
     /tmp/ccBkVmDa.s:5624   .debug_str:0000000000000c02 .LASF28
     /tmp/ccBkVmDa.s:5600   .debug_str:0000000000000afe .LASF30
     /tmp/ccBkVmDa.s:5432   .debug_str:000000000000053b .LASF31
     /tmp/ccBkVmDa.s:5304   .debug_str:0000000000000080 .LASF32
     /tmp/ccBkVmDa.s:5352   .debug_str:0000000000000273 .LASF33
     /tmp/ccBkVmDa.s:5690   .debug_str:0000000000000e59 .LASF34
     /tmp/ccBkVmDa.s:5604   .debug_str:0000000000000b35 .LASF49
     /tmp/ccBkVmDa.s:5906   .debug_str:00000000000015c7 .LASF51
     /tmp/ccBkVmDa.s:5370   .debug_str:0000000000000327 .LASF35
     /tmp/ccBkVmDa.s:5574   .debug_str:0000000000000a13 .LASF36
     /tmp/ccBkVmDa.s:5424   .debug_str:00000000000004c7 .LASF37
     /tmp/ccBkVmDa.s:5382   .debug_str:0000000000000378 .LASF38
     /tmp/ccBkVmDa.s:5528   .debug_str:0000000000000880 .LASF39
     /tmp/ccBkVmDa.s:5400   .debug_str:0000000000000423 .LASF40
     /tmp/ccBkVmDa.s:5762   .debug_str:000000000000106f .LASF41
     /tmp/ccBkVmDa.s:5444   .debug_str:00000000000005b5 .LASF42
     /tmp/ccBkVmDa.s:5522   .debug_str:0000000000000859 .LASF43
     /tmp/ccBkVmDa.s:5926   .debug_str:0000000000001669 .LASF44
     /tmp/ccBkVmDa.s:5882   .debug_str:00000000000014de .LASF46
     /tmp/ccBkVmDa.s:5866   .debug_str:000000000000145f .LASF48
     /tmp/ccBkVmDa.s:5730   .debug_str:0000000000000f8f .LASF50
     /tmp/ccBkVmDa.s:5650   .debug_str:0000000000000cee .LASF52
GAS LISTING /tmp/ccBkVmDa.s 			page 47


     /tmp/ccBkVmDa.s:5692   .debug_str:0000000000000e7b .LASF53
     /tmp/ccBkVmDa.s:5700   .debug_str:0000000000000ebb .LASF54
     /tmp/ccBkVmDa.s:5640   .debug_str:0000000000000c83 .LASF55
     /tmp/ccBkVmDa.s:5552   .debug_str:0000000000000964 .LASF56
     /tmp/ccBkVmDa.s:5930   .debug_str:000000000000168b .LASF57
     /tmp/ccBkVmDa.s:5848   .debug_str:00000000000013ca .LASF58
     /tmp/ccBkVmDa.s:5632   .debug_str:0000000000000c3d .LASF59
     /tmp/ccBkVmDa.s:5648   .debug_str:0000000000000cda .LASF60
     /tmp/ccBkVmDa.s:5618   .debug_str:0000000000000bc6 .LASF61
     /tmp/ccBkVmDa.s:5704   .debug_str:0000000000000ed9 .LASF62
     /tmp/ccBkVmDa.s:5988   .debug_str:0000000000001887 .LASF63
     /tmp/ccBkVmDa.s:5526   .debug_str:000000000000086c .LASF64
     /tmp/ccBkVmDa.s:5956   .debug_str:000000000000175d .LASF66
     /tmp/ccBkVmDa.s:5804   .debug_str:00000000000011f3 .LASF67
     /tmp/ccBkVmDa.s:5756   .debug_str:000000000000104d .LASF68
     /tmp/ccBkVmDa.s:5758   .debug_str:0000000000001060 .LASF69
     /tmp/ccBkVmDa.s:5430   .debug_str:0000000000000528 .LASF70
     /tmp/ccBkVmDa.s:5422   .debug_str:00000000000004c1 .LASF71
     /tmp/ccBkVmDa.s:5324   .debug_str:0000000000000150 .LASF72
     /tmp/ccBkVmDa.s:5524   .debug_str:0000000000000866 .LASF73
     /tmp/ccBkVmDa.s:5410   .debug_str:0000000000000478 .LASF74
     /tmp/ccBkVmDa.s:5362   .debug_str:00000000000002d3 .LASF75
     /tmp/ccBkVmDa.s:5764   .debug_str:000000000000107d .LASF76
     /tmp/ccBkVmDa.s:5318   .debug_str:0000000000000117 .LASF77
     /tmp/ccBkVmDa.s:5738   .debug_str:0000000000000fb8 .LASF78
     /tmp/ccBkVmDa.s:5732   .debug_str:0000000000000f98 .LASF79
     /tmp/ccBkVmDa.s:5974   .debug_str:0000000000001802 .LASF80
     /tmp/ccBkVmDa.s:5736   .debug_str:0000000000000fb1 .LASF81
     /tmp/ccBkVmDa.s:5372   .debug_str:0000000000000338 .LASF82
     /tmp/ccBkVmDa.s:5788   .debug_str:0000000000001152 .LASF83
     /tmp/ccBkVmDa.s:5744   .debug_str:0000000000000fef .LASF84
     /tmp/ccBkVmDa.s:5914   .debug_str:00000000000015fd .LASF85
     /tmp/ccBkVmDa.s:5944   .debug_str:00000000000016e7 .LASF86
     /tmp/ccBkVmDa.s:5908   .debug_str:00000000000015e5 .LASF87
     /tmp/ccBkVmDa.s:5606   .debug_str:0000000000000b45 .LASF88
     /tmp/ccBkVmDa.s:5716   .debug_str:0000000000000f2f .LASF89
     /tmp/ccBkVmDa.s:5500   .debug_str:00000000000007b3 .LASF90
     /tmp/ccBkVmDa.s:5508   .debug_str:00000000000007eb .LASF91
     /tmp/ccBkVmDa.s:5402   .debug_str:0000000000000442 .LASF92
     /tmp/ccBkVmDa.s:5504   .debug_str:00000000000007cb .LASF93
     /tmp/ccBkVmDa.s:5512   .debug_str:00000000000007fc .LASF94
     /tmp/ccBkVmDa.s:5874   .debug_str:0000000000001499 .LASF95
     /tmp/ccBkVmDa.s:5486   .debug_str:000000000000070b .LASF96
     /tmp/ccBkVmDa.s:5678   .debug_str:0000000000000df5 .LASF97
     /tmp/ccBkVmDa.s:5546   .debug_str:0000000000000929 .LASF98
     /tmp/ccBkVmDa.s:5720   .debug_str:0000000000000f49 .LASF99
     /tmp/ccBkVmDa.s:5310   .debug_str:00000000000000cc .LASF100
     /tmp/ccBkVmDa.s:5350   .debug_str:0000000000000264 .LASF101
     /tmp/ccBkVmDa.s:5872   .debug_str:000000000000148d .LASF102
     /tmp/ccBkVmDa.s:5966   .debug_str:000000000000179f .LASF103
     /tmp/ccBkVmDa.s:5622   .debug_str:0000000000000bf0 .LASF104
     /tmp/ccBkVmDa.s:5492   .debug_str:000000000000073e .LASF105
     /tmp/ccBkVmDa.s:5534   .debug_str:00000000000008af .LASF106
     /tmp/ccBkVmDa.s:5368   .debug_str:0000000000000313 .LASF107
     /tmp/ccBkVmDa.s:5834   .debug_str:00000000000012c0 .LASF108
     /tmp/ccBkVmDa.s:5712   .debug_str:0000000000000f17 .LASF109
     /tmp/ccBkVmDa.s:5726   .debug_str:0000000000000f67 .LASF110
GAS LISTING /tmp/ccBkVmDa.s 			page 48


     /tmp/ccBkVmDa.s:5592   .debug_str:0000000000000acc .LASF111
     /tmp/ccBkVmDa.s:5666   .debug_str:0000000000000d91 .LASF113
     /tmp/ccBkVmDa.s:5778   .debug_str:00000000000010fc .LASF120
     /tmp/ccBkVmDa.s:5558   .debug_str:0000000000000993 .LASF114
     /tmp/ccBkVmDa.s:5378   .debug_str:000000000000036a .LASF115
     /tmp/ccBkVmDa.s:5464   .debug_str:000000000000067d .LASF116
     /tmp/ccBkVmDa.s:5602   .debug_str:0000000000000b16 .LASF118
     /tmp/ccBkVmDa.s:5468   .debug_str:0000000000000691 .LASF117
     /tmp/ccBkVmDa.s:5654   .debug_str:0000000000000d2d .LASF119
     /tmp/ccBkVmDa.s:5472   .debug_str:00000000000006a3 .LASF121
     /tmp/ccBkVmDa.s:5562   .debug_str:00000000000009ab .LASF122
     /tmp/ccBkVmDa.s:5564   .debug_str:00000000000009b9 .LASF123
     /tmp/ccBkVmDa.s:5490   .debug_str:0000000000000735 .LASF124
     /tmp/ccBkVmDa.s:5992   .debug_str:00000000000018ad .LASF125
     /tmp/ccBkVmDa.s:5610   .debug_str:0000000000000b7a .LASF126
     /tmp/ccBkVmDa.s:5320   .debug_str:0000000000000122 .LASF128
     /tmp/ccBkVmDa.s:5816   .debug_str:000000000000125a .LASF127
     /tmp/ccBkVmDa.s:5612   .debug_str:0000000000000b84 .LASF129
     /tmp/ccBkVmDa.s:5902   .debug_str:00000000000015ab .LASF130
     /tmp/ccBkVmDa.s:5898   .debug_str:0000000000001558 .LASF131
     /tmp/ccBkVmDa.s:5812   .debug_str:0000000000001238 .LASF132
     /tmp/ccBkVmDa.s:5312   .debug_str:00000000000000d4 .LASF133
     /tmp/ccBkVmDa.s:5920   .debug_str:0000000000001618 .LASF134
     /tmp/ccBkVmDa.s:5308   .debug_str:000000000000009e .LASF135
     /tmp/ccBkVmDa.s:5824   .debug_str:0000000000001289 .LASF136
     /tmp/ccBkVmDa.s:5498   .debug_str:0000000000000784 .LASF137
     /tmp/ccBkVmDa.s:5296   .debug_str:0000000000000031 .LASF138
     /tmp/ccBkVmDa.s:5652   .debug_str:0000000000000d03 .LASF139
     /tmp/ccBkVmDa.s:5438   .debug_str:000000000000056e .LASF140
     /tmp/ccBkVmDa.s:5924   .debug_str:0000000000001641 .LASF141
     /tmp/ccBkVmDa.s:5794   .debug_str:000000000000117d .LASF142
     /tmp/ccBkVmDa.s:5428   .debug_str:0000000000000501 .LASF143
     /tmp/ccBkVmDa.s:5418   .debug_str:00000000000004a9 .LASF346
     /tmp/ccBkVmDa.s:5900   .debug_str:000000000000157c .LASF347
     /tmp/ccBkVmDa.s:5832   .debug_str:00000000000012ba .LASF144
     /tmp/ccBkVmDa.s:5366   .debug_str:000000000000030d .LASF145
     /tmp/ccBkVmDa.s:5776   .debug_str:00000000000010f4 .LASF146
     /tmp/ccBkVmDa.s:5384   .debug_str:000000000000039c .LASF147
     /tmp/ccBkVmDa.s:5354   .debug_str:0000000000000288 .LASF148
     /tmp/ccBkVmDa.s:5676   .debug_str:0000000000000ded .LASF149
     /tmp/ccBkVmDa.s:5556   .debug_str:000000000000098a .LASF150
     /tmp/ccBkVmDa.s:5752   .debug_str:0000000000001038 .LASF151
     /tmp/ccBkVmDa.s:5502   .debug_str:00000000000007c5 .LASF152
     /tmp/ccBkVmDa.s:5860   .debug_str:000000000000143d .LASF153
     /tmp/ccBkVmDa.s:5628   .debug_str:0000000000000c1c .LASF348
     /tmp/ccBkVmDa.s:5656   .debug_str:0000000000000d4b .LASF154
     /tmp/ccBkVmDa.s:5918   .debug_str:0000000000001613 .LASF155
     /tmp/ccBkVmDa.s:5968   .debug_str:00000000000017b2 .LASF156
     /tmp/ccBkVmDa.s:5960   .debug_str:0000000000001778 .LASF157
     /tmp/ccBkVmDa.s:5846   .debug_str:00000000000013ba .LASF158
     /tmp/ccBkVmDa.s:5414   .debug_str:000000000000049b .LASF159
     /tmp/ccBkVmDa.s:5330   .debug_str:0000000000000192 .LASF160
     /tmp/ccBkVmDa.s:5838   .debug_str:00000000000012dc .LASF161
     /tmp/ccBkVmDa.s:5412   .debug_str:000000000000048a .LASF162
     /tmp/ccBkVmDa.s:5598   .debug_str:0000000000000af1 .LASF163
     /tmp/ccBkVmDa.s:5576   .debug_str:0000000000000a31 .LASF164
     /tmp/ccBkVmDa.s:5978   .debug_str:000000000000182f .LASF165
GAS LISTING /tmp/ccBkVmDa.s 			page 49


     /tmp/ccBkVmDa.s:5466   .debug_str:0000000000000685 .LASF166
     /tmp/ccBkVmDa.s:5518   .debug_str:0000000000000827 .LASF167
     /tmp/ccBkVmDa.s:5530   .debug_str:0000000000000892 .LASF168
     /tmp/ccBkVmDa.s:5768   .debug_str:00000000000010a9 .LASF169
     /tmp/ccBkVmDa.s:5408   .debug_str:0000000000000465 .LASF170
     /tmp/ccBkVmDa.s:5696   .debug_str:0000000000000ea5 .LASF171
     /tmp/ccBkVmDa.s:5800   .debug_str:00000000000011c4 .LASF172
     /tmp/ccBkVmDa.s:5626   .debug_str:0000000000000c0d .LASF173
     /tmp/ccBkVmDa.s:5298   .debug_str:0000000000000042 .LASF174
     /tmp/ccBkVmDa.s:5942   .debug_str:00000000000016d8 .LASF175
     /tmp/ccBkVmDa.s:5668   .debug_str:0000000000000da1 .LASF176
     /tmp/ccBkVmDa.s:5790   .debug_str:0000000000001159 .LASF177
     /tmp/ccBkVmDa.s:5326   .debug_str:0000000000000162 .LASF178
     /tmp/ccBkVmDa.s:5292   .debug_str:000000000000000f .LASF179
     /tmp/ccBkVmDa.s:5646   .debug_str:0000000000000cca .LASF180
     /tmp/ccBkVmDa.s:5724   .debug_str:0000000000000f5a .LASF181
     /tmp/ccBkVmDa.s:5588   .debug_str:0000000000000ab1 .LASF182
     /tmp/ccBkVmDa.s:5950   .debug_str:0000000000001722 .LASF183
     /tmp/ccBkVmDa.s:5538   .debug_str:00000000000008d4 .LASF184
     /tmp/ccBkVmDa.s:5782   .debug_str:000000000000111f .LASF185
     /tmp/ccBkVmDa.s:5946   .debug_str:00000000000016fd .LASF186
     /tmp/ccBkVmDa.s:5818   .debug_str:0000000000001263 .LASF187
     /tmp/ccBkVmDa.s:5784   .debug_str:000000000000112a .LASF188
     /tmp/ccBkVmDa.s:5760   .debug_str:0000000000001067 .LASF189
     /tmp/ccBkVmDa.s:5670   .debug_str:0000000000000dbb .LASF190
     /tmp/ccBkVmDa.s:5638   .debug_str:0000000000000c64 .LASF191
     /tmp/ccBkVmDa.s:5398   .debug_str:0000000000000411 .LASF192
     /tmp/ccBkVmDa.s:5484   .debug_str:00000000000006ee .LASF193
     /tmp/ccBkVmDa.s:5994   .debug_str:00000000000018b7 .LASF194
     /tmp/ccBkVmDa.s:5642   .debug_str:0000000000000c8a .LASF195
     /tmp/ccBkVmDa.s:5742   .debug_str:0000000000000fdc .LASF196
     /tmp/ccBkVmDa.s:5770   .debug_str:00000000000010b2 .LASF197
     /tmp/ccBkVmDa.s:5888   .debug_str:00000000000014f8 .LASF198
     /tmp/ccBkVmDa.s:5990   .debug_str:000000000000188f .LASF199
     /tmp/ccBkVmDa.s:5976   .debug_str:000000000000181a .LASF200
     /tmp/ccBkVmDa.s:5798   .debug_str:00000000000011a4 .LASF201
     /tmp/ccBkVmDa.s:5664   .debug_str:0000000000000d7d .LASF202
     /tmp/ccBkVmDa.s:5644   .debug_str:0000000000000cab .LASF203
     /tmp/ccBkVmDa.s:5748   .debug_str:0000000000001028 .LASF204
     /tmp/ccBkVmDa.s:5702   .debug_str:0000000000000ece .LASF205
     /tmp/ccBkVmDa.s:5482   .debug_str:00000000000006e6 .LASF206
     /tmp/ccBkVmDa.s:5850   .debug_str:00000000000013de .LASF207
     /tmp/ccBkVmDa.s:5470   .debug_str:0000000000000697 .LASF208
     /tmp/ccBkVmDa.s:5958   .debug_str:000000000000176a .LASF209
     /tmp/ccBkVmDa.s:5342   .debug_str:0000000000000206 .LASF210
     /tmp/ccBkVmDa.s:5344   .debug_str:000000000000022e .LASF211
     /tmp/ccBkVmDa.s:5364   .debug_str:00000000000002e1 .LASF212
     /tmp/ccBkVmDa.s:5982   .debug_str:000000000000184b .LASF213
     /tmp/ccBkVmDa.s:5360   .debug_str:00000000000002c2 .LASF214
     /tmp/ccBkVmDa.s:5302   .debug_str:000000000000007b .LASF215
     /tmp/ccBkVmDa.s:5884   .debug_str:00000000000014e7 .LASF216
     /tmp/ccBkVmDa.s:5586   .debug_str:0000000000000aa9 .LASF217
     /tmp/ccBkVmDa.s:5420   .debug_str:00000000000004bb .LASF218
     /tmp/ccBkVmDa.s:5864   .debug_str:0000000000001457 .LASF219
     /tmp/ccBkVmDa.s:5348   .debug_str:0000000000000253 .LASF220
     /tmp/ccBkVmDa.s:5826   .debug_str:000000000000129e .LASF221
     /tmp/ccBkVmDa.s:5936   .debug_str:00000000000016bc .LASF222
GAS LISTING /tmp/ccBkVmDa.s 			page 50


     /tmp/ccBkVmDa.s:5662   .debug_str:0000000000000d6d .LASF223
     /tmp/ccBkVmDa.s:5294   .debug_str:000000000000001f .LASF224
     /tmp/ccBkVmDa.s:5454   .debug_str:000000000000061c .LASF225
     /tmp/ccBkVmDa.s:5356   .debug_str:0000000000000291 .LASF226
     /tmp/ccBkVmDa.s:5426   .debug_str:00000000000004de .LASF227
     /tmp/ccBkVmDa.s:5710   .debug_str:0000000000000f0c .LASF228
     /tmp/ccBkVmDa.s:5718   .debug_str:0000000000000f35 .LASF229
     /tmp/ccBkVmDa.s:5338   .debug_str:00000000000001f5 .LASF230
     /tmp/ccBkVmDa.s:5708   .debug_str:0000000000000ef8 .LASF231
     /tmp/ccBkVmDa.s:5416   .debug_str:00000000000004a4 .LASF232
     /tmp/ccBkVmDa.s:5780   .debug_str:0000000000001108 .LASF233
     /tmp/ccBkVmDa.s:5814   .debug_str:0000000000001253 .LASF234
     /tmp/ccBkVmDa.s:5728   .debug_str:0000000000000f76 .LASF235
     /tmp/ccBkVmDa.s:5830   .debug_str:00000000000012ae .LASF236
     /tmp/ccBkVmDa.s:5740   .debug_str:0000000000000fd0 .LASF237
     /tmp/ccBkVmDa.s:5596   .debug_str:0000000000000add .LASF238
     /tmp/ccBkVmDa.s:5506   .debug_str:00000000000007d6 .LASF239
     /tmp/ccBkVmDa.s:5380   .debug_str:000000000000036f .LASF240
     /tmp/ccBkVmDa.s:5388   .debug_str:00000000000003b4 .LASF241
     /tmp/ccBkVmDa.s:5630   .debug_str:0000000000000c34 .LASF242
     /tmp/ccBkVmDa.s:5674   .debug_str:0000000000000de2 .LASF243
     /tmp/ccBkVmDa.s:5290   .debug_str:0000000000000000 .LASF244
     /tmp/ccBkVmDa.s:5496   .debug_str:0000000000000762 .LASF245
     /tmp/ccBkVmDa.s:5862   .debug_str:0000000000001448 .LASF246
     /tmp/ccBkVmDa.s:5806   .debug_str:00000000000011fa .LASF247
     /tmp/ccBkVmDa.s:5858   .debug_str:000000000000142c .LASF248
     /tmp/ccBkVmDa.s:5396   .debug_str:00000000000003ed .LASF249
     /tmp/ccBkVmDa.s:5822   .debug_str:0000000000001279 .LASF250
     /tmp/ccBkVmDa.s:5694   .debug_str:0000000000000e82 .LASF251
     /tmp/ccBkVmDa.s:5514   .debug_str:0000000000000814 .LASF252
     /tmp/ccBkVmDa.s:5986   .debug_str:000000000000186f .LASF253
     /tmp/ccBkVmDa.s:5306   .debug_str:0000000000000096 .LASF254
     /tmp/ccBkVmDa.s:5584   .debug_str:0000000000000a8f .LASF255
     /tmp/ccBkVmDa.s:5532   .debug_str:000000000000089f .LASF256
     /tmp/ccBkVmDa.s:5954   .debug_str:000000000000173a .LASF257
     /tmp/ccBkVmDa.s:5922   .debug_str:000000000000162e .LASF258
     /tmp/ccBkVmDa.s:5746   .debug_str:0000000000001002 .LASF259
     /tmp/ccBkVmDa.s:5964   .debug_str:0000000000001792 .LASF260
     /tmp/ccBkVmDa.s:5328   .debug_str:000000000000016e .LASF261
     /tmp/ccBkVmDa.s:5634   .debug_str:0000000000000c45 .LASF262
     /tmp/ccBkVmDa.s:5346   .debug_str:0000000000000243 .LASF263
     /tmp/ccBkVmDa.s:5856   .debug_str:000000000000140a .LASF264
     /tmp/ccBkVmDa.s:5754   .debug_str:0000000000001040 .LASF265
     /tmp/ccBkVmDa.s:5300   .debug_str:000000000000005c .LASF266
     /tmp/ccBkVmDa.s:5542   .debug_str:000000000000090a .LASF267
     /tmp/ccBkVmDa.s:5582   .debug_str:0000000000000a68 .LASF268
     /tmp/ccBkVmDa.s:5480   .debug_str:00000000000006d3 .LASF269
     /tmp/ccBkVmDa.s:5448   .debug_str:00000000000005d9 .LASF270
     /tmp/ccBkVmDa.s:5658   .debug_str:0000000000000d50 .LASF271
     /tmp/ccBkVmDa.s:5820   .debug_str:000000000000126e .LASF272
     /tmp/ccBkVmDa.s:5688   .debug_str:0000000000000e4f .LASF273
     /tmp/ccBkVmDa.s:5890   .debug_str:000000000000150b .LASF274
     /tmp/ccBkVmDa.s:5828   .debug_str:00000000000012a3 .LASF275
     /tmp/ccBkVmDa.s:5886   .debug_str:00000000000014ec .LASF276
     /tmp/ccBkVmDa.s:5322   .debug_str:0000000000000143 .LASF277
     /tmp/ccBkVmDa.s:5614   .debug_str:0000000000000ba5 .LASF278
     /tmp/ccBkVmDa.s:5686   .debug_str:0000000000000e43 .LASF279
GAS LISTING /tmp/ccBkVmDa.s 			page 51


     /tmp/ccBkVmDa.s:5786   .debug_str:0000000000001140 .LASF280
     /tmp/ccBkVmDa.s:5442   .debug_str:0000000000000593 .LASF281
     /tmp/ccBkVmDa.s:5880   .debug_str:00000000000014cc .LASF282
     /tmp/ccBkVmDa.s:5520   .debug_str:0000000000000837 .LASF283
     /tmp/ccBkVmDa.s:5878   .debug_str:00000000000014ba .LASF284
     /tmp/ccBkVmDa.s:5620   .debug_str:0000000000000bce .LASF285
     /tmp/ccBkVmDa.s:5554   .debug_str:0000000000000977 .LASF286
     /tmp/ccBkVmDa.s:5358   .debug_str:000000000000029f .LASF287
     /tmp/ccBkVmDa.s:5434   .debug_str:0000000000000545 .LASF288
     /tmp/ccBkVmDa.s:5450   .debug_str:00000000000005ed .LASF289
     /tmp/ccBkVmDa.s:5332   .debug_str:00000000000001a5 .LASF290
     /tmp/ccBkVmDa.s:5980   .debug_str:000000000000183c .LASF291
     /tmp/ccBkVmDa.s:5608   .debug_str:0000000000000b5b .LASF292
     /tmp/ccBkVmDa.s:5934   .debug_str:00000000000016a3 .LASF293
     /tmp/ccBkVmDa.s:5540   .debug_str:00000000000008e1 .LASF294
     /tmp/ccBkVmDa.s:5568   .debug_str:00000000000009d5 .LASF295
     /tmp/ccBkVmDa.s:5970   .debug_str:00000000000017be .LASF296
     /tmp/ccBkVmDa.s:5460   .debug_str:000000000000065d .LASF297
     /tmp/ccBkVmDa.s:5836   .debug_str:00000000000012ca .LASF298
     /tmp/ccBkVmDa.s:5474   .debug_str:00000000000006ac .LASF299
     /tmp/ccBkVmDa.s:5952   .debug_str:000000000000172d .LASF300
     /tmp/ccBkVmDa.s:5494   .debug_str:0000000000000751 .LASF301
     /tmp/ccBkVmDa.s:5544   .debug_str:000000000000091d .LASF302
     /tmp/ccBkVmDa.s:5570   .debug_str:00000000000009ed .LASF303
     /tmp/ccBkVmDa.s:5590   .debug_str:0000000000000ac0 .LASF304
     /tmp/ccBkVmDa.s:5336   .debug_str:00000000000001d9 .LASF305
     /tmp/ccBkVmDa.s:5476   .debug_str:00000000000006b9 .LASF306
     /tmp/ccBkVmDa.s:5684   .debug_str:0000000000000e2b .LASF349
     /tmp/ccBkVmDa.s:5962   .debug_str:000000000000177e .LASF350
     /tmp/ccBkVmDa.s:5868   .debug_str:0000000000001474 .LASF307
     /tmp/ccBkVmDa.s:5660   .debug_str:0000000000000d5a .LASF308
     /tmp/ccBkVmDa.s:5912   .debug_str:00000000000015f5 .LASF309
     /tmp/ccBkVmDa.s:5682   .debug_str:0000000000000e13 .LASF310
     /tmp/ccBkVmDa.s:5548   .debug_str:000000000000094b .LASF311
     /tmp/ccBkVmDa.s:5636   .debug_str:0000000000000c4e .LASF312
     /tmp/ccBkVmDa.s:5766   .debug_str:0000000000001098 .LASF313
     /tmp/ccBkVmDa.s:5394   .debug_str:00000000000003dc .LASF314
     /tmp/ccBkVmDa.s:5854   .debug_str:00000000000013f5 .LASF315
     /tmp/ccBkVmDa.s:5334   .debug_str:00000000000001c0 .LASF316
     /tmp/ccBkVmDa.s:5984   .debug_str:0000000000001852 .LASF351
     /tmp/ccBkVmDa.s:5580   .debug_str:0000000000000a54 .LASF317
     /tmp/ccBkVmDa.s:5972   .debug_str:00000000000017e7 .LASF318
     /tmp/ccBkVmDa.s:559    .text:0000000000000320 .LFB38
     /tmp/ccBkVmDa.s:619    .text:0000000000000360 .LFE38
     /tmp/ccBkVmDa.s:577    .text:0000000000000340 .LBB44
     /tmp/ccBkVmDa.s:590    .text:0000000000000348 .LBE44
     /tmp/ccBkVmDa.s:5053   .debug_loc:0000000000000000 .LLST11
     /tmp/ccBkVmDa.s:603    .text:0000000000000354 .LBB46
     /tmp/ccBkVmDa.s:615    .text:000000000000035c .LBE46
     /tmp/ccBkVmDa.s:5062   .debug_loc:0000000000000026 .LLST12
     /tmp/ccBkVmDa.s:506    .text:00000000000002e8 .LFB37
     /tmp/ccBkVmDa.s:553    .text:0000000000000320 .LFE37
     /tmp/ccBkVmDa.s:5870   .debug_str:0000000000001486 .LASF319
     /tmp/ccBkVmDa.s:473    .text:00000000000002c8 .LFB36
     /tmp/ccBkVmDa.s:500    .text:00000000000002e8 .LFE36
     /tmp/ccBkVmDa.s:442    .text:00000000000002a0 .LFB35
     /tmp/ccBkVmDa.s:467    .text:00000000000002c8 .LFE35
GAS LISTING /tmp/ccBkVmDa.s 			page 52


     /tmp/ccBkVmDa.s:456    .text:00000000000002b8 .LVL37
     /tmp/ccBkVmDa.s:393    .text:000000000000024c .LFB34
     /tmp/ccBkVmDa.s:436    .text:00000000000002a0 .LFE34
     /tmp/ccBkVmDa.s:417    .text:0000000000000280 .LVL34
     /tmp/ccBkVmDa.s:421    .text:0000000000000288 .LVL35
     /tmp/ccBkVmDa.s:425    .text:0000000000000290 .LVL36
     /tmp/ccBkVmDa.s:625    .text:0000000000000360 .LFB33
     /tmp/ccBkVmDa.s:1223   .text:00000000000005fc .LFE33
     /tmp/ccBkVmDa.s:5314   .debug_str:0000000000000109 .LASF320
     /tmp/ccBkVmDa.s:5071   .debug_loc:000000000000004c .LLST13
     /tmp/ccBkVmDa.s:5274   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBkVmDa.s:5844   .debug_str:00000000000013b5 .LASF321
     /tmp/ccBkVmDa.s:5774   .debug_str:00000000000010ec .LASF322
     /tmp/ccBkVmDa.s:743    .text:0000000000000420 .LBB53
     /tmp/ccBkVmDa.s:759    .text:000000000000042c .LBE53
     /tmp/ccBkVmDa.s:763    .text:0000000000000430 .LBB55
     /tmp/ccBkVmDa.s:778    .text:000000000000043c .LBE55
     /tmp/ccBkVmDa.s:783    .text:0000000000000440 .LBB57
     /tmp/ccBkVmDa.s:795    .text:0000000000000448 .LBE57
     /tmp/ccBkVmDa.s:5098   .debug_loc:00000000000000ce .LLST14
     /tmp/ccBkVmDa.s:817    .text:0000000000000484 .LBB59
     /tmp/ccBkVmDa.s:825    .text:0000000000000488 .LBE59
     /tmp/ccBkVmDa.s:5106   .debug_loc:00000000000000f2 .LLST15
     /tmp/ccBkVmDa.s:835    .text:0000000000000494 .LBB61
     /tmp/ccBkVmDa.s:846    .text:0000000000000498 .LBE61
     /tmp/ccBkVmDa.s:5113   .debug_loc:0000000000000115 .LLST16
     /tmp/ccBkVmDa.s:851    .text:000000000000049c .LBB63
     /tmp/ccBkVmDa.s:862    .text:00000000000004a0 .LBE63
     /tmp/ccBkVmDa.s:5120   .debug_loc:0000000000000138 .LLST17
     /tmp/ccBkVmDa.s:811    .text:0000000000000478 .LVL56
     /tmp/ccBkVmDa.s:866    .text:00000000000004a8 .LVL63
     /tmp/ccBkVmDa.s:895    .text:00000000000004c8 .LVL64
     /tmp/ccBkVmDa.s:5722   .debug_str:0000000000000f50 .LASF323
     /tmp/ccBkVmDa.s:5127   .debug_loc:000000000000015b .LLST18
     /tmp/ccBkVmDa.s:924    .text:00000000000004dc .LBB67
     /tmp/ccBkVmDa.s:939    .text:00000000000004e8 .LBE67
     /tmp/ccBkVmDa.s:945    .text:00000000000004f0 .LBB69
     /tmp/ccBkVmDa.s:960    .text:00000000000004fc .LBE69
     /tmp/ccBkVmDa.s:1058   .text:0000000000000530 .LBB71
     /tmp/ccBkVmDa.s:1069   .text:0000000000000534 .LBE71
     /tmp/ccBkVmDa.s:5134   .debug_loc:000000000000017e .LLST19
     /tmp/ccBkVmDa.s:1074   .text:0000000000000538 .LBB73
     /tmp/ccBkVmDa.s:1085   .text:000000000000053c .LBE73
     /tmp/ccBkVmDa.s:5141   .debug_loc:00000000000001a1 .LLST20
     /tmp/ccBkVmDa.s:1051   .text:000000000000052c .LVL70
     /tmp/ccBkVmDa.s:1089   .text:0000000000000544 .LVL75
     /tmp/ccBkVmDa.s:1104   .text:0000000000000550 .LVL76
     /tmp/ccBkVmDa.s:1112   .text:000000000000055c .LVL77
     /tmp/ccBkVmDa.s:1120   .text:0000000000000568 .LVL78
     /tmp/ccBkVmDa.s:1128   .text:0000000000000574 .LVL79
     /tmp/ccBkVmDa.s:1136   .text:0000000000000580 .LVL80
     /tmp/ccBkVmDa.s:1144   .text:000000000000058c .LVL81
     /tmp/ccBkVmDa.s:1152   .text:0000000000000598 .LVL82
     /tmp/ccBkVmDa.s:1160   .text:00000000000005a4 .LVL83
     /tmp/ccBkVmDa.s:1168   .text:00000000000005b0 .LVL84
     /tmp/ccBkVmDa.s:1176   .text:00000000000005bc .LVL85
     /tmp/ccBkVmDa.s:1184   .text:00000000000005c8 .LVL86
GAS LISTING /tmp/ccBkVmDa.s 			page 53


     /tmp/ccBkVmDa.s:1192   .text:00000000000005d4 .LVL87
     /tmp/ccBkVmDa.s:1200   .text:00000000000005e0 .LVL88
     /tmp/ccBkVmDa.s:1208   .text:00000000000005ec .LVL89
     /tmp/ccBkVmDa.s:1216   .text:00000000000005f8 .LVL90
     /tmp/ccBkVmDa.s:659    .text:0000000000000398 .LBB48
     /tmp/ccBkVmDa.s:675    .text:00000000000003a4 .LBE48
     /tmp/ccBkVmDa.s:692    .text:00000000000003cc .LVL45
     /tmp/ccBkVmDa.s:707    .text:00000000000003e0 .LVL47
     /tmp/ccBkVmDa.s:728    .text:000000000000040c .LVL49
     /tmp/ccBkVmDa.s:732    .text:0000000000000414 .LVL50
     /tmp/ccBkVmDa.s:734    .text:000000000000041c .LVL51
     /tmp/ccBkVmDa.s:905    .text:00000000000004d4 .LVL66
     /tmp/ccBkVmDa.s:358    .text:000000000000022c .LFB32
     /tmp/ccBkVmDa.s:387    .text:000000000000024c .LFE32
     /tmp/ccBkVmDa.s:239    .text:0000000000000178 .LFB31
     /tmp/ccBkVmDa.s:271    .text:0000000000000198 .LFE31
     /tmp/ccBkVmDa.s:250    .text:0000000000000184 .LBB42
     /tmp/ccBkVmDa.s:262    .text:000000000000018c .LBE42
     /tmp/ccBkVmDa.s:5148   .debug_loc:00000000000001c4 .LLST9
     /tmp/ccBkVmDa.s:201    .text:0000000000000158 .LFB30
     /tmp/ccBkVmDa.s:233    .text:0000000000000178 .LFE30
     /tmp/ccBkVmDa.s:212    .text:0000000000000164 .LBB40
     /tmp/ccBkVmDa.s:224    .text:000000000000016c .LBE40
     /tmp/ccBkVmDa.s:5156   .debug_loc:00000000000001e8 .LLST8
     /tmp/ccBkVmDa.s:277    .text:0000000000000198 .LFB29
     /tmp/ccBkVmDa.s:352    .text:000000000000022c .LFE29
     /tmp/ccBkVmDa.s:5164   .debug_loc:000000000000020c .LLST10
     /tmp/ccBkVmDa.s:291    .text:00000000000001b0 .LVL25
     /tmp/ccBkVmDa.s:303    .text:00000000000001c4 .LVL27
     /tmp/ccBkVmDa.s:312    .text:00000000000001dc .LVL29
     /tmp/ccBkVmDa.s:320    .text:00000000000001f0 .LVL30
     /tmp/ccBkVmDa.s:328    .text:0000000000000204 .LVL31
     /tmp/ccBkVmDa.s:334    .text:0000000000000210 .LVL32
     /tmp/ccBkVmDa.s:341    .text:000000000000021c .LVL33
     /tmp/ccBkVmDa.s:78     .text:0000000000000068 .LFB28
     /tmp/ccBkVmDa.s:195    .text:0000000000000158 .LFE28
     /tmp/ccBkVmDa.s:5808   .debug_str:000000000000121c .LASF324
     /tmp/ccBkVmDa.s:5171   .debug_loc:000000000000022f .LLST4
     /tmp/ccBkVmDa.s:5714   .debug_str:0000000000000f20 .LASF325
     /tmp/ccBkVmDa.s:5178   .debug_loc:0000000000000252 .LLST5
     /tmp/ccBkVmDa.s:5594   .debug_str:0000000000000ad1 .LASF326
     /tmp/ccBkVmDa.s:5191   .debug_loc:000000000000028b .LLST6
     /tmp/ccBkVmDa.s:5852   .debug_str:00000000000013e8 .LASF327
     /tmp/ccBkVmDa.s:5198   .debug_loc:00000000000002ae .LLST7
     /tmp/ccBkVmDa.s:97     .text:0000000000000088 .LBB38
     /tmp/ccBkVmDa.s:109    .text:000000000000008c .LBE38
     /tmp/ccBkVmDa.s:144    .text:00000000000000d8 .LVL14
     /tmp/ccBkVmDa.s:150    .text:00000000000000e8 .LVL15
     /tmp/ccBkVmDa.s:158    .text:0000000000000104 .LVL16
     /tmp/ccBkVmDa.s:169    .text:000000000000012c .LVL17
     /tmp/ccBkVmDa.s:175    .text:0000000000000138 .LVL18
     /tmp/ccBkVmDa.s:179    .text:0000000000000140 .LVL19
     /tmp/ccBkVmDa.s:10     .text:0000000000000000 .LFB27
     /tmp/ccBkVmDa.s:64     .text:0000000000000068 .LFE27
     /tmp/ccBkVmDa.s:5214   .debug_loc:00000000000002e9 .LLST0
     /tmp/ccBkVmDa.s:5221   .debug_loc:000000000000030c .LLST1
     /tmp/ccBkVmDa.s:5234   .debug_loc:0000000000000345 .LLST2
GAS LISTING /tmp/ccBkVmDa.s 			page 54


     /tmp/ccBkVmDa.s:5245   .debug_loc:000000000000036c .LLST3
     /tmp/ccBkVmDa.s:53     .text:0000000000000058 .LVL5
     /tmp/ccBkVmDa.s:5404   .debug_str:0000000000000454 .LASF352
     /tmp/ccBkVmDa.s:5340   .debug_str:0000000000000201 .LASF328
     /tmp/ccBkVmDa.s:5940   .debug_str:00000000000016d2 .LASF329
     /tmp/ccBkVmDa.s:5698   .debug_str:0000000000000eae .LASF330
     /tmp/ccBkVmDa.s:5680   .debug_str:0000000000000e0a .LASF332
     /tmp/ccBkVmDa.s:5916   .debug_str:0000000000001607 .LASF331
     /tmp/ccBkVmDa.s:5928   .debug_str:0000000000001683 .LASF333
     /tmp/ccBkVmDa.s:5578   .debug_str:0000000000000a49 .LASF334
     /tmp/ccBkVmDa.s:5386   .debug_str:00000000000003a6 .LASF335
     /tmp/ccBkVmDa.s:5616   .debug_str:0000000000000bb1 .LASF336
     /tmp/ccBkVmDa.s:5894   .debug_str:0000000000001525 .LASF337
     /tmp/ccBkVmDa.s:5932   .debug_str:0000000000001693 .LASF338
     /tmp/ccBkVmDa.s:5572   .debug_str:0000000000000a09 .LASF339
     /tmp/ccBkVmDa.s:5896   .debug_str:0000000000001535 .LASF340
     /tmp/ccBkVmDa.s:5876   .debug_str:00000000000014a8 .LASF341
     /tmp/ccBkVmDa.s:576    .text:0000000000000340 .LVL40
     /tmp/ccBkVmDa.s:586    .text:0000000000000348 .LVL41
     /tmp/ccBkVmDa.s:602    .text:0000000000000354 .LVL42
     /tmp/ccBkVmDa.s:612    .text:000000000000035c .LVL43
     /tmp/ccBkVmDa.s:673    .text:00000000000003a4 .LVL44
     /tmp/ccBkVmDa.s:695    .text:00000000000003d0 .LVL46
     /tmp/ccBkVmDa.s:710    .text:00000000000003e4 .LVL48
     /tmp/ccBkVmDa.s:737    .text:0000000000000420 .LVL52
     /tmp/ccBkVmDa.s:752    .text:0000000000000424 .LVL53
     /tmp/ccBkVmDa.s:897    .text:00000000000004cc .LVL65
     /tmp/ccBkVmDa.s:908    .text:00000000000004d8 .LVL67
     /tmp/ccBkVmDa.s:921    .text:00000000000004dc .LVL68
     /tmp/ccBkVmDa.s:782    .text:0000000000000440 .LVL54
     /tmp/ccBkVmDa.s:792    .text:0000000000000448 .LVL55
     /tmp/ccBkVmDa.s:816    .text:0000000000000484 .LVL57
     /tmp/ccBkVmDa.s:823    .text:0000000000000488 .LVL58
     /tmp/ccBkVmDa.s:834    .text:0000000000000494 .LVL59
     /tmp/ccBkVmDa.s:843    .text:0000000000000498 .LVL60
     /tmp/ccBkVmDa.s:850    .text:000000000000049c .LVL61
     /tmp/ccBkVmDa.s:859    .text:00000000000004a0 .LVL62
     /tmp/ccBkVmDa.s:967    .text:000000000000050c .LVL69
     /tmp/ccBkVmDa.s:1057   .text:0000000000000530 .LVL71
     /tmp/ccBkVmDa.s:1066   .text:0000000000000534 .LVL72
     /tmp/ccBkVmDa.s:1073   .text:0000000000000538 .LVL73
     /tmp/ccBkVmDa.s:1082   .text:000000000000053c .LVL74
     /tmp/ccBkVmDa.s:249    .text:0000000000000184 .LVL23
     /tmp/ccBkVmDa.s:259    .text:000000000000018c .LVL24
     /tmp/ccBkVmDa.s:211    .text:0000000000000164 .LVL21
     /tmp/ccBkVmDa.s:221    .text:000000000000016c .LVL22
     /tmp/ccBkVmDa.s:310    .text:00000000000001d4 .LVL28
     /tmp/ccBkVmDa.s:119    .text:00000000000000ac .LVL8
     /tmp/ccBkVmDa.s:124    .text:00000000000000b4 .LVL9
     /tmp/ccBkVmDa.s:130    .text:00000000000000c0 .LVL10
     /tmp/ccBkVmDa.s:138    .text:00000000000000cc .LVL12
     /tmp/ccBkVmDa.s:133    .text:00000000000000c4 .LVL11
     /tmp/ccBkVmDa.s:190    .text:0000000000000150 .LVL20
     /tmp/ccBkVmDa.s:142    .text:00000000000000d0 .LVL13
     /tmp/ccBkVmDa.s:31     .text:0000000000000030 .LVL0
     /tmp/ccBkVmDa.s:36     .text:0000000000000038 .LVL1
     /tmp/ccBkVmDa.s:42     .text:0000000000000044 .LVL2
GAS LISTING /tmp/ccBkVmDa.s 			page 55


     /tmp/ccBkVmDa.s:47     .text:000000000000004c .LVL3
     /tmp/ccBkVmDa.s:51     .text:0000000000000050 .LVL4
     /tmp/ccBkVmDa.s:1267   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBkVmDa.s:741    .text:0000000000000420 .LBB52
     /tmp/ccBkVmDa.s:869    .text:00000000000004a8 .LBE52
     /tmp/ccBkVmDa.s:888    .text:00000000000004bc .LBB65
     /tmp/ccBkVmDa.s:899    .text:00000000000004cc .LBE65
     /tmp/ccBkVmDa.s:913    .text:00000000000004d8 .LBB66
     /tmp/ccBkVmDa.s:1091   .text:0000000000000544 .LBE66
     /tmp/ccBkVmDa.s:1099   .text:0000000000000548 .LBB75
     /tmp/ccBkVmDa.s:1219   .text:00000000000005fc .LBE75

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
_ZN15MemoryAllocator10initMemoryEPv
_ZN5Riscv14supervisorTrapEv
_Z9kmem_initPvi
_Z17kmem_cache_createPKcmPFvPvES3_
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_ZN9Scheduler3getEv
_ZN3PCB10consolePCBE
_ZN9Scheduler3putEP3PCB
_ZN8KConsole11pendingGetcE
_ZN3PCB10isFinishedEv
_Z15thread_dispatchv
_Z7testOS2v
_Z8userMainv
_ZN3PCB7runningE
_ZN3PCB10savedRegA4E
_ZN3PCB17threadExitHandlerEv
_ZN8KConsole24getCharactersFromConsoleEv
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN3PCB19threadDelPCBHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_ZN8KConsole14getCharHandlerEv
