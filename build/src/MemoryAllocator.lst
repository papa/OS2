GAS LISTING /tmp/ccuCIcBx.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocator10initMemoryEv
   9              	_ZN15MemoryAllocator10initMemoryEv:
  10              	.LFB27:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 4/27/22.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** #include "../h/Riscv.hpp"
   7:src/MemoryAllocator.cpp **** #include "../h/KConsole.hpp"
   8:src/MemoryAllocator.cpp **** 
   9:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::headAllocated = 0;
  10:src/MemoryAllocator.cpp **** MemoryAllocator::BlockHeader* MemoryAllocator::headFree = 0;
  11:src/MemoryAllocator.cpp **** int MemoryAllocator::memoryInitiliaized = 0;
  12:src/MemoryAllocator.cpp **** 
  13:src/MemoryAllocator.cpp **** void *MemoryAllocator::mem_alloc(size_t size)
  14:src/MemoryAllocator.cpp **** {
  15:src/MemoryAllocator.cpp ****     return tryToAllocateFragment(size);
  16:src/MemoryAllocator.cpp **** }
  17:src/MemoryAllocator.cpp **** 
  18:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::mem_free(void * addr)
  19:src/MemoryAllocator.cpp **** {
  20:src/MemoryAllocator.cpp ****     return tryToFreeSegment(addr);
  21:src/MemoryAllocator.cpp **** }
  22:src/MemoryAllocator.cpp **** 
  23:src/MemoryAllocator.cpp **** void MemoryAllocator::initMemory()
  24:src/MemoryAllocator.cpp **** {
  12              		.loc 1 24 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  25:src/MemoryAllocator.cpp ****     if(memoryInitiliaized == 1)
  20              		.loc 1 25 5
  21              		.loc 1 25 27 is_stmt 0
  22 000c 17070000 		lw	a4,.LANCHOR0
  22      03270700 
  23              		.loc 1 25 5
  24 0014 93071000 		li	a5,1
  25 0018 6306F704 		beq	a4,a5,.L1
  26:src/MemoryAllocator.cpp ****         return;
  27:src/MemoryAllocator.cpp ****     memoryInitiliaized = 1;
  26              		.loc 1 27 5 is_stmt 1
  27              		.loc 1 27 24 is_stmt 0
  28 001c 97070000 		lla	a5,.LANCHOR0
  28      93870700 
  29 0024 13071000 		li	a4,1
GAS LISTING /tmp/ccuCIcBx.s 			page 2


  30 0028 23A0E700 		sw	a4,0(a5)
  28:src/MemoryAllocator.cpp ****     headAllocated = 0;
  31              		.loc 1 28 5 is_stmt 1
  32              		.loc 1 28 19 is_stmt 0
  33 002c 23B40700 		sd	zero,8(a5)
  29:src/MemoryAllocator.cpp ****     headFree = (BlockHeader*)HEAP_START_ADDR;
  34              		.loc 1 29 5 is_stmt 1
  35              		.loc 1 29 14 is_stmt 0
  36 0030 17070000 		la	a4,HEAP_START_ADDR
  36      03370700 
  37 0038 03370700 		ld	a4,0(a4)
  38 003c 23B8E700 		sd	a4,16(a5)
  30:src/MemoryAllocator.cpp ****     headFree->next = 0;
  39              		.loc 1 30 5 is_stmt 1
  40              		.loc 1 30 20 is_stmt 0
  41 0040 23340700 		sd	zero,8(a4)
  31:src/MemoryAllocator.cpp ****     //TODO
  32:src/MemoryAllocator.cpp ****     //move HEAP START
  33:src/MemoryAllocator.cpp ****     //currently moved by 100 blocks
  34:src/MemoryAllocator.cpp ****     headFree->size = (size_t)((size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR - 100*4096 + 1 - size
  42              		.loc 1 34 5 is_stmt 1
  43              		.loc 1 34 53 is_stmt 0
  44 0044 97070000 		la	a5,HEAP_END_ADDR
  44      83B70700 
  45 004c 83B70700 		ld	a5,0(a5)
  46 0050 B387E740 		sub	a5,a5,a4
  47              		.loc 1 34 94
  48 0054 B7C6F9FF 		li	a3,-409600
  49 0058 938616FF 		addi	a3,a3,-15
  50 005c B387D700 		add	a5,a5,a3
  51              		.loc 1 34 20
  52 0060 2330F700 		sd	a5,0(a4)
  53              	.L1:
  35:src/MemoryAllocator.cpp **** }
  54              		.loc 1 35 1
  55 0064 03348100 		ld	s0,8(sp)
  56              		.cfi_restore 8
  57              		.cfi_def_cfa 2, 16
  58 0068 13010101 		addi	sp,sp,16
  59              		.cfi_def_cfa_offset 0
  60 006c 67800000 		jr	ra
  61              		.cfi_endproc
  62              	.LFE27:
  64              		.align	2
  65              		.globl	_ZN15MemoryAllocator17insertAllFragmentEPvmS0_
  67              	_ZN15MemoryAllocator17insertAllFragmentEPvmS0_:
  68              	.LFB28:
  36:src/MemoryAllocator.cpp **** 
  37:src/MemoryAllocator.cpp **** void MemoryAllocator::insertAllFragment(void *addr, size_t size, void* nxtAddr)
  38:src/MemoryAllocator.cpp **** {
  69              		.loc 1 38 1 is_stmt 1
  70              		.cfi_startproc
  71              	.LVL0:
  72 0070 130101FD 		addi	sp,sp,-48
  73              		.cfi_def_cfa_offset 48
  74 0074 23341102 		sd	ra,40(sp)
  75 0078 23308102 		sd	s0,32(sp)
GAS LISTING /tmp/ccuCIcBx.s 			page 3


  76 007c 233C9100 		sd	s1,24(sp)
  77 0080 23382101 		sd	s2,16(sp)
  78 0084 23343101 		sd	s3,8(sp)
  79              		.cfi_offset 1, -8
  80              		.cfi_offset 8, -16
  81              		.cfi_offset 9, -24
  82              		.cfi_offset 18, -32
  83              		.cfi_offset 19, -40
  84 0088 13040103 		addi	s0,sp,48
  85              		.cfi_def_cfa 8, 0
  86 008c 93040500 		mv	s1,a0
  87 0090 93890500 		mv	s3,a1
  88 0094 13090600 		mv	s2,a2
  39:src/MemoryAllocator.cpp ****     initMemory();
  89              		.loc 1 39 5
  90              		.loc 1 39 15 is_stmt 0
  91 0098 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
  91      E7800000 
  92              	.LVL1:
  40:src/MemoryAllocator.cpp ****     BlockHeader* newAllocated = (BlockHeader*)addr;
  93              		.loc 1 40 5 is_stmt 1
  41:src/MemoryAllocator.cpp ****     newAllocated->next = 0;
  94              		.loc 1 41 5
  95              		.loc 1 41 24 is_stmt 0
  96 00a0 23B40400 		sd	zero,8(s1)
  42:src/MemoryAllocator.cpp ****     newAllocated->size = size;
  97              		.loc 1 42 5 is_stmt 1
  98              		.loc 1 42 24 is_stmt 0
  99 00a4 23B03401 		sd	s3,0(s1)
  43:src/MemoryAllocator.cpp ****     if(headAllocated == 0)
 100              		.loc 1 43 5 is_stmt 1
 101              	.LBB2:
 102              		.loc 1 43 22 is_stmt 0
 103 00a8 97070000 		ld	a5,.LANCHOR0+8
 103      83B70700 
 104              		.loc 1 43 5
 105 00b0 638E0702 		beqz	a5,.L9
 106              	.LBE2:
  44:src/MemoryAllocator.cpp ****     {
  45:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
  46:src/MemoryAllocator.cpp ****     }
  47:src/MemoryAllocator.cpp ****     else if(nxtAddr <= HEAP_END_ADDR)
 107              		.loc 1 47 10 is_stmt 1
 108              	.LBB6:
 109              	.LBB3:
 110              		.loc 1 47 21 is_stmt 0
 111 00b4 17070000 		la	a4,HEAP_END_ADDR
 111      03370700 
 112 00bc 03370700 		ld	a4,0(a4)
 113              		.loc 1 47 10
 114 00c0 636C2703 		bltu	a4,s2,.L7
 115              	.LBB4:
  48:src/MemoryAllocator.cpp ****     {
  49:src/MemoryAllocator.cpp ****         BlockHeader * allFrag = (BlockHeader*)nxtAddr;
 116              		.loc 1 49 9 is_stmt 1
 117              	.LVL2:
  50:src/MemoryAllocator.cpp ****         newAllocated->next = allFrag->next;
GAS LISTING /tmp/ccuCIcBx.s 			page 4


 118              		.loc 1 50 9
 119              		.loc 1 50 39 is_stmt 0
 120 00c4 83378900 		ld	a5,8(s2)
 121              		.loc 1 50 28
 122 00c8 23B4F400 		sd	a5,8(s1)
  51:src/MemoryAllocator.cpp ****         allFrag->next = newAllocated;
 123              		.loc 1 51 9 is_stmt 1
 124              		.loc 1 51 23 is_stmt 0
 125 00cc 23349900 		sd	s1,8(s2)
 126              	.LVL3:
 127              	.L4:
 128              	.LBE4:
 129              	.LBE3:
 130              	.LBE6:
  52:src/MemoryAllocator.cpp ****     }
  53:src/MemoryAllocator.cpp ****     else
  54:src/MemoryAllocator.cpp ****     {
  55:src/MemoryAllocator.cpp ****         newAllocated->next = headAllocated;
  56:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
  57:src/MemoryAllocator.cpp ****     }
  58:src/MemoryAllocator.cpp **** }
 131              		.loc 1 58 1
 132 00d0 83308102 		ld	ra,40(sp)
 133              		.cfi_remember_state
 134              		.cfi_restore 1
 135 00d4 03340102 		ld	s0,32(sp)
 136              		.cfi_restore 8
 137              		.cfi_def_cfa 2, 48
 138 00d8 83348101 		ld	s1,24(sp)
 139              		.cfi_restore 9
 140              	.LVL4:
 141 00dc 03390101 		ld	s2,16(sp)
 142              		.cfi_restore 18
 143              	.LVL5:
 144 00e0 83398100 		ld	s3,8(sp)
 145              		.cfi_restore 19
 146              	.LVL6:
 147 00e4 13010103 		addi	sp,sp,48
 148              		.cfi_def_cfa_offset 0
 149 00e8 67800000 		jr	ra
 150              	.LVL7:
 151              	.L9:
 152              		.cfi_restore_state
 153              	.LBB7:
  45:src/MemoryAllocator.cpp ****     }
 154              		.loc 1 45 9 is_stmt 1
  45:src/MemoryAllocator.cpp ****     }
 155              		.loc 1 45 23 is_stmt 0
 156 00ec 97070000 		sd	s1,.LANCHOR0+8,a5
 156      23B09700 
 157 00f4 6FF0DFFD 		j	.L4
 158              	.L7:
 159              	.LBB5:
  55:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
 160              		.loc 1 55 9 is_stmt 1
  55:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
 161              		.loc 1 55 28 is_stmt 0
GAS LISTING /tmp/ccuCIcBx.s 			page 5


 162 00f8 23B4F400 		sd	a5,8(s1)
  56:src/MemoryAllocator.cpp ****     }
 163              		.loc 1 56 9 is_stmt 1
  56:src/MemoryAllocator.cpp ****     }
 164              		.loc 1 56 23 is_stmt 0
 165 00fc 97070000 		sd	s1,.LANCHOR0+8,a5
 165      23B09700 
 166              	.LBE5:
 167              	.LBE7:
 168              		.loc 1 58 1
 169 0104 6FF0DFFC 		j	.L4
 170              		.cfi_endproc
 171              	.LFE28:
 173              		.align	2
 174              		.globl	_ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm
 176              	_ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm:
 177              	.LFB29:
  59:src/MemoryAllocator.cpp **** 
  60:src/MemoryAllocator.cpp **** void MemoryAllocator::insertNewAllocatedFragment(void *addr, size_t size)
  61:src/MemoryAllocator.cpp **** {
 178              		.loc 1 61 1 is_stmt 1
 179              		.cfi_startproc
 180              	.LVL8:
 181 0108 130101FE 		addi	sp,sp,-32
 182              		.cfi_def_cfa_offset 32
 183 010c 233C1100 		sd	ra,24(sp)
 184 0110 23388100 		sd	s0,16(sp)
 185 0114 23349100 		sd	s1,8(sp)
 186 0118 23302101 		sd	s2,0(sp)
 187              		.cfi_offset 1, -8
 188              		.cfi_offset 8, -16
 189              		.cfi_offset 9, -24
 190              		.cfi_offset 18, -32
 191 011c 13040102 		addi	s0,sp,32
 192              		.cfi_def_cfa 8, 0
 193 0120 93040500 		mv	s1,a0
 194 0124 13890500 		mv	s2,a1
  62:src/MemoryAllocator.cpp ****     initMemory();
 195              		.loc 1 62 5
 196              		.loc 1 62 15 is_stmt 0
 197 0128 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 197      E7800000 
 198              	.LVL9:
  63:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 199              		.loc 1 63 5 is_stmt 1
  64:src/MemoryAllocator.cpp ****     BlockHeader* curr =  headAllocated;
 200              		.loc 1 64 5
 201              		.loc 1 64 18 is_stmt 0
 202 0130 97070000 		ld	a5,.LANCHOR0+8
 202      83B70700 
 203              	.LVL10:
  65:src/MemoryAllocator.cpp ****     BlockHeader* newAllocated = (BlockHeader*)addr;
 204              		.loc 1 65 5 is_stmt 1
  66:src/MemoryAllocator.cpp ****     newAllocated->next = 0;
 205              		.loc 1 66 5
 206              		.loc 1 66 24 is_stmt 0
 207 0138 23B40400 		sd	zero,8(s1)
GAS LISTING /tmp/ccuCIcBx.s 			page 6


  67:src/MemoryAllocator.cpp ****     newAllocated->size = size;
 208              		.loc 1 67 5 is_stmt 1
 209              		.loc 1 67 24 is_stmt 0
 210 013c 23B02401 		sd	s2,0(s1)
  63:src/MemoryAllocator.cpp ****     BlockHeader* curr =  headAllocated;
 211              		.loc 1 63 18
 212 0140 13070000 		li	a4,0
 213              	.LVL11:
 214              	.L13:
  68:src/MemoryAllocator.cpp ****     while(curr != 0)
 215              		.loc 1 68 5 is_stmt 1
 216              		.loc 1 68 16
 217 0144 638C0700 		beqz	a5,.L11
  69:src/MemoryAllocator.cpp ****     {
  70:src/MemoryAllocator.cpp ****         if((void*)curr > addr)
 218              		.loc 1 70 9
 219 0148 63E8F400 		bgtu	a5,s1,.L17
  71:src/MemoryAllocator.cpp ****         {
  72:src/MemoryAllocator.cpp ****             newAllocated->next = curr;
  73:src/MemoryAllocator.cpp ****             break;
  74:src/MemoryAllocator.cpp ****         }
  75:src/MemoryAllocator.cpp ****         prev = curr;
 220              		.loc 1 75 9
 221              	.LVL12:
  76:src/MemoryAllocator.cpp ****         curr = curr->next;
 222              		.loc 1 76 9
  75:src/MemoryAllocator.cpp ****         curr = curr->next;
 223              		.loc 1 75 14 is_stmt 0
 224 014c 13870700 		mv	a4,a5
 225              		.loc 1 76 14
 226 0150 83B78700 		ld	a5,8(a5)
 227              	.LVL13:
  68:src/MemoryAllocator.cpp ****     {
 228              		.loc 1 68 5
 229 0154 6FF01FFF 		j	.L13
 230              	.L17:
  72:src/MemoryAllocator.cpp ****             break;
 231              		.loc 1 72 13 is_stmt 1
  72:src/MemoryAllocator.cpp ****             break;
 232              		.loc 1 72 32 is_stmt 0
 233 0158 23B4F400 		sd	a5,8(s1)
  73:src/MemoryAllocator.cpp ****         }
 234              		.loc 1 73 13 is_stmt 1
 235              	.L11:
  77:src/MemoryAllocator.cpp ****     }
  78:src/MemoryAllocator.cpp **** 
  79:src/MemoryAllocator.cpp ****     if(prev == 0)
 236              		.loc 1 79 5
 237 015c 63000702 		beqz	a4,.L18
  80:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
  81:src/MemoryAllocator.cpp ****     else
  82:src/MemoryAllocator.cpp ****         prev->next = newAllocated;
 238              		.loc 1 82 9
 239              		.loc 1 82 20 is_stmt 0
 240 0160 23349700 		sd	s1,8(a4)
 241              	.LVL14:
 242              	.L10:
GAS LISTING /tmp/ccuCIcBx.s 			page 7


  83:src/MemoryAllocator.cpp **** }
 243              		.loc 1 83 1
 244 0164 83308101 		ld	ra,24(sp)
 245              		.cfi_remember_state
 246              		.cfi_restore 1
 247 0168 03340101 		ld	s0,16(sp)
 248              		.cfi_restore 8
 249              		.cfi_def_cfa 2, 32
 250 016c 83348100 		ld	s1,8(sp)
 251              		.cfi_restore 9
 252              	.LVL15:
 253 0170 03390100 		ld	s2,0(sp)
 254              		.cfi_restore 18
 255              	.LVL16:
 256 0174 13010102 		addi	sp,sp,32
 257              		.cfi_def_cfa_offset 0
 258 0178 67800000 		jr	ra
 259              	.LVL17:
 260              	.L18:
 261              		.cfi_restore_state
  80:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
 262              		.loc 1 80 9 is_stmt 1
  80:src/MemoryAllocator.cpp ****         headAllocated = newAllocated;
 263              		.loc 1 80 23 is_stmt 0
 264 017c 97070000 		sd	s1,.LANCHOR0+8,a5
 264      23B09700 
 265              	.LVL18:
 266 0184 6FF01FFE 		j	.L10
 267              		.cfi_endproc
 268              	.LFE29:
 270              		.align	2
 271              		.globl	_ZN15MemoryAllocator21tryToAllocateFragmentEm
 273              	_ZN15MemoryAllocator21tryToAllocateFragmentEm:
 274              	.LFB30:
  84:src/MemoryAllocator.cpp **** 
  85:src/MemoryAllocator.cpp **** void* MemoryAllocator::tryToAllocateFragment(size_t size)
  86:src/MemoryAllocator.cpp **** {
 275              		.loc 1 86 1 is_stmt 1
 276              		.cfi_startproc
 277              	.LVL19:
 278 0188 130101FE 		addi	sp,sp,-32
 279              		.cfi_def_cfa_offset 32
 280 018c 233C1100 		sd	ra,24(sp)
 281 0190 23388100 		sd	s0,16(sp)
 282 0194 23349100 		sd	s1,8(sp)
 283 0198 23302101 		sd	s2,0(sp)
 284              		.cfi_offset 1, -8
 285              		.cfi_offset 8, -16
 286              		.cfi_offset 9, -24
 287              		.cfi_offset 18, -32
 288 019c 13040102 		addi	s0,sp,32
 289              		.cfi_def_cfa 8, 0
 290 01a0 13090500 		mv	s2,a0
  87:src/MemoryAllocator.cpp ****     initMemory();
 291              		.loc 1 87 5
 292              		.loc 1 87 15 is_stmt 0
 293 01a4 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
GAS LISTING /tmp/ccuCIcBx.s 			page 8


 293      E7800000 
 294              	.LVL20:
  88:src/MemoryAllocator.cpp ****     uint64 retval = 0;
 295              		.loc 1 88 5 is_stmt 1
  89:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 296              		.loc 1 89 5
  90:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 297              		.loc 1 90 5
 298              		.loc 1 90 18 is_stmt 0
 299 01ac 97040000 		ld	s1,.LANCHOR0+16
 299      83B40400 
 300              	.LVL21:
  89:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 301              		.loc 1 89 18
 302 01b4 13070000 		li	a4,0
 303              	.LVL22:
 304              	.L28:
  91:src/MemoryAllocator.cpp ****     while(curr != 0)
 305              		.loc 1 91 5 is_stmt 1
 306              		.loc 1 91 16
 307 01b8 6380040C 		beqz	s1,.L29
 308              	.LBB8:
  92:src/MemoryAllocator.cpp ****     {
  93:src/MemoryAllocator.cpp ****         if(curr->size >= size)
 309              		.loc 1 93 9
 310              	.LBB9:
 311              		.loc 1 93 18 is_stmt 0
 312 01bc 83B70400 		ld	a5,0(s1)
 313              		.loc 1 93 9
 314 01c0 63F82701 		bgeu	a5,s2,.L31
 315              	.LBE9:
  94:src/MemoryAllocator.cpp ****         {
  95:src/MemoryAllocator.cpp ****             void* oldAddr = curr;
  96:src/MemoryAllocator.cpp ****             void* newAddr = ((char*)curr + size + sizeof(BlockHeader));
  97:src/MemoryAllocator.cpp ****             void* nxtAllFrag = ((char*)curr + curr->size + sizeof(BlockHeader));
  98:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
  99:src/MemoryAllocator.cpp ****             {
 100:src/MemoryAllocator.cpp ****                 uint64 size2 = curr->size - size;
 101:src/MemoryAllocator.cpp **** 
 102:src/MemoryAllocator.cpp ****                 if(size2 > sizeof(BlockHeader))
 103:src/MemoryAllocator.cpp ****                 {
 104:src/MemoryAllocator.cpp ****                     BlockHeader *newFree = (BlockHeader *) newAddr;
 105:src/MemoryAllocator.cpp ****                     newFree->next = curr->next;
 106:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 107:src/MemoryAllocator.cpp ****                     if (prev != 0)
 108:src/MemoryAllocator.cpp ****                         prev->next = newFree;
 109:src/MemoryAllocator.cpp ****                     else
 110:src/MemoryAllocator.cpp ****                         headFree = newFree;
 111:src/MemoryAllocator.cpp ****                 }
 112:src/MemoryAllocator.cpp ****                 else
 113:src/MemoryAllocator.cpp ****                 {
 114:src/MemoryAllocator.cpp ****                     size+=size2;
 115:src/MemoryAllocator.cpp ****                     if(prev != 0)
 116:src/MemoryAllocator.cpp ****                         prev->next = curr->next;
 117:src/MemoryAllocator.cpp ****                     else
 118:src/MemoryAllocator.cpp ****                         headFree = curr->next;
 119:src/MemoryAllocator.cpp ****                 }
GAS LISTING /tmp/ccuCIcBx.s 			page 9


 120:src/MemoryAllocator.cpp ****             }
 121:src/MemoryAllocator.cpp ****             else
 122:src/MemoryAllocator.cpp ****             {
 123:src/MemoryAllocator.cpp ****                 if(prev != 0)
 124:src/MemoryAllocator.cpp ****                     prev->next = 0;
 125:src/MemoryAllocator.cpp ****                 else
 126:src/MemoryAllocator.cpp ****                     headFree = 0;
 127:src/MemoryAllocator.cpp ****             }
 128:src/MemoryAllocator.cpp ****             insertAllFragment(oldAddr, size, nxtAllFrag);
 129:src/MemoryAllocator.cpp ****             //insertNewAllocatedFragment(oldAddr, size);
 130:src/MemoryAllocator.cpp ****             uint64 oldA = (uint64)((char*)oldAddr + sizeof(BlockHeader));
 131:src/MemoryAllocator.cpp ****             retval = oldA;
 132:src/MemoryAllocator.cpp ****             break;
 133:src/MemoryAllocator.cpp ****         }
 134:src/MemoryAllocator.cpp ****         prev = curr;
 316              		.loc 1 134 9 is_stmt 1
 317              	.LVL23:
 135:src/MemoryAllocator.cpp ****         curr = curr->next;
 318              		.loc 1 135 9
 134:src/MemoryAllocator.cpp ****         curr = curr->next;
 319              		.loc 1 134 14 is_stmt 0
 320 01c4 13870400 		mv	a4,s1
 321              		.loc 1 135 14
 322 01c8 83B48400 		ld	s1,8(s1)
 323              	.LVL24:
 324              	.LBE8:
  91:src/MemoryAllocator.cpp ****     {
 325              		.loc 1 91 5
 326 01cc 6FF0DFFE 		j	.L28
 327              	.L31:
 328              	.LBB17:
 329              	.LBB16:
 330              	.LBB10:
  95:src/MemoryAllocator.cpp ****             void* newAddr = ((char*)curr + size + sizeof(BlockHeader));
 331              		.loc 1 95 13 is_stmt 1
 332              	.LVL25:
  96:src/MemoryAllocator.cpp ****             void* nxtAllFrag = ((char*)curr + curr->size + sizeof(BlockHeader));
 333              		.loc 1 96 13
  96:src/MemoryAllocator.cpp ****             void* nxtAllFrag = ((char*)curr + curr->size + sizeof(BlockHeader));
 334              		.loc 1 96 49 is_stmt 0
 335 01d0 93060901 		addi	a3,s2,16
  96:src/MemoryAllocator.cpp ****             void* nxtAllFrag = ((char*)curr + curr->size + sizeof(BlockHeader));
 336              		.loc 1 96 19
 337 01d4 B386D400 		add	a3,s1,a3
 338              	.LVL26:
  97:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
 339              		.loc 1 97 13 is_stmt 1
  97:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
 340              		.loc 1 97 58 is_stmt 0
 341 01d8 13860701 		addi	a2,a5,16
  97:src/MemoryAllocator.cpp ****             if(newAddr <= HEAP_END_ADDR)
 342              		.loc 1 97 19
 343 01dc 3386C400 		add	a2,s1,a2
 344              	.LVL27:
  98:src/MemoryAllocator.cpp ****             {
 345              		.loc 1 98 13 is_stmt 1
 346              	.LBB11:
GAS LISTING /tmp/ccuCIcBx.s 			page 10


  98:src/MemoryAllocator.cpp ****             {
 347              		.loc 1 98 24 is_stmt 0
 348 01e0 97050000 		la	a1,HEAP_END_ADDR
 348      83B50500 
 349 01e8 83B50500 		ld	a1,0(a1)
  98:src/MemoryAllocator.cpp ****             {
 350              		.loc 1 98 13
 351 01ec 63E0D506 		bltu	a1,a3,.L22
 352              	.LBB12:
 100:src/MemoryAllocator.cpp **** 
 353              		.loc 1 100 17 is_stmt 1
 100:src/MemoryAllocator.cpp **** 
 354              		.loc 1 100 24 is_stmt 0
 355 01f0 B3852741 		sub	a1,a5,s2
 356              	.LVL28:
 102:src/MemoryAllocator.cpp ****                 {
 357              		.loc 1 102 17 is_stmt 1
 358              	.LBB13:
 359 01f4 13050001 		li	a0,16
 360 01f8 6376B502 		bleu	a1,a0,.L23
 361              	.LBB14:
 104:src/MemoryAllocator.cpp ****                     newFree->next = curr->next;
 362              		.loc 1 104 21
 363              	.LVL29:
 105:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 364              		.loc 1 105 21
 105:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 365              		.loc 1 105 43 is_stmt 0
 366 01fc 83B78400 		ld	a5,8(s1)
 105:src/MemoryAllocator.cpp ****                     newFree->size = size2 - sizeof(BlockHeader);
 367              		.loc 1 105 35
 368 0200 23B4F600 		sd	a5,8(a3)
 106:src/MemoryAllocator.cpp ****                     if (prev != 0)
 369              		.loc 1 106 21 is_stmt 1
 106:src/MemoryAllocator.cpp ****                     if (prev != 0)
 370              		.loc 1 106 43 is_stmt 0
 371 0204 938505FF 		addi	a1,a1,-16
 372              	.LVL30:
 106:src/MemoryAllocator.cpp ****                     if (prev != 0)
 373              		.loc 1 106 35
 374 0208 23B0B600 		sd	a1,0(a3)
 107:src/MemoryAllocator.cpp ****                         prev->next = newFree;
 375              		.loc 1 107 21 is_stmt 1
 376 020c 63060700 		beqz	a4,.L24
 108:src/MemoryAllocator.cpp ****                     else
 377              		.loc 1 108 25
 108:src/MemoryAllocator.cpp ****                     else
 378              		.loc 1 108 36 is_stmt 0
 379 0210 2334D700 		sd	a3,8(a4)
 380 0214 6F000004 		j	.L25
 381              	.L24:
 110:src/MemoryAllocator.cpp ****                 }
 382              		.loc 1 110 25 is_stmt 1
 110:src/MemoryAllocator.cpp ****                 }
 383              		.loc 1 110 34 is_stmt 0
 384 0218 97070000 		sd	a3,.LANCHOR0+16,a5
 384      23B0D700 
GAS LISTING /tmp/ccuCIcBx.s 			page 11


 385 0220 6F004003 		j	.L25
 386              	.LVL31:
 387              	.L23:
 388              	.LBE14:
 114:src/MemoryAllocator.cpp ****                     if(prev != 0)
 389              		.loc 1 114 21 is_stmt 1
 115:src/MemoryAllocator.cpp ****                         prev->next = curr->next;
 390              		.loc 1 115 21
 391 0224 630A0700 		beqz	a4,.L26
 116:src/MemoryAllocator.cpp ****                     else
 392              		.loc 1 116 25
 116:src/MemoryAllocator.cpp ****                     else
 393              		.loc 1 116 44 is_stmt 0
 394 0228 83B68400 		ld	a3,8(s1)
 395              	.LVL32:
 116:src/MemoryAllocator.cpp ****                     else
 396              		.loc 1 116 36
 397 022c 2334D700 		sd	a3,8(a4)
 114:src/MemoryAllocator.cpp ****                     if(prev != 0)
 398              		.loc 1 114 25
 399 0230 13890700 		mv	s2,a5
 400              	.LVL33:
 401 0234 6F000002 		j	.L25
 402              	.LVL34:
 403              	.L26:
 118:src/MemoryAllocator.cpp ****                 }
 404              		.loc 1 118 25 is_stmt 1
 118:src/MemoryAllocator.cpp ****                 }
 405              		.loc 1 118 42 is_stmt 0
 406 0238 03B78400 		ld	a4,8(s1)
 407              	.LVL35:
 118:src/MemoryAllocator.cpp ****                 }
 408              		.loc 1 118 34
 409 023c 97060000 		sd	a4,.LANCHOR0+16,a3
 409      23B0E600 
 410              	.LVL36:
 114:src/MemoryAllocator.cpp ****                     if(prev != 0)
 411              		.loc 1 114 25
 412 0244 13890700 		mv	s2,a5
 413              	.LVL37:
 414 0248 6F00C000 		j	.L25
 415              	.LVL38:
 416              	.L22:
 417              	.LBE13:
 418              	.LBE12:
 123:src/MemoryAllocator.cpp ****                     prev->next = 0;
 419              		.loc 1 123 17 is_stmt 1
 420 024c 63000702 		beqz	a4,.L27
 124:src/MemoryAllocator.cpp ****                 else
 421              		.loc 1 124 21
 124:src/MemoryAllocator.cpp ****                 else
 422              		.loc 1 124 32 is_stmt 0
 423 0250 23340700 		sd	zero,8(a4)
 424              	.LVL39:
 425              	.L25:
 426              	.LBE11:
 128:src/MemoryAllocator.cpp ****             //insertNewAllocatedFragment(oldAddr, size);
GAS LISTING /tmp/ccuCIcBx.s 			page 12


 427              		.loc 1 128 13 is_stmt 1
 128:src/MemoryAllocator.cpp ****             //insertNewAllocatedFragment(oldAddr, size);
 428              		.loc 1 128 30 is_stmt 0
 429 0254 93050900 		mv	a1,s2
 430 0258 13850400 		mv	a0,s1
 431 025c 97000000 		call	_ZN15MemoryAllocator17insertAllFragmentEPvmS0_
 431      E7800000 
 432              	.LVL40:
 130:src/MemoryAllocator.cpp ****             retval = oldA;
 433              		.loc 1 130 13 is_stmt 1
 130:src/MemoryAllocator.cpp ****             retval = oldA;
 434              		.loc 1 130 51 is_stmt 0
 435 0264 13850401 		addi	a0,s1,16
 436              	.LVL41:
 131:src/MemoryAllocator.cpp ****             break;
 437              		.loc 1 131 13 is_stmt 1
 132:src/MemoryAllocator.cpp ****         }
 438              		.loc 1 132 13
 439 0268 6F004001 		j	.L20
 440              	.LVL42:
 441              	.L27:
 442              	.LBB15:
 126:src/MemoryAllocator.cpp ****             }
 443              		.loc 1 126 21
 126:src/MemoryAllocator.cpp ****             }
 444              		.loc 1 126 30 is_stmt 0
 445 026c 97070000 		sd	zero,.LANCHOR0+16,a5
 445      23B00700 
 446 0274 6FF01FFE 		j	.L25
 447              	.LVL43:
 448              	.L29:
 449              	.LBE15:
 450              	.LBE10:
 451              	.LBE16:
 452              	.LBE17:
  88:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 453              		.loc 1 88 12
 454 0278 13050000 		li	a0,0
 455              	.LVL44:
 456              	.L20:
 136:src/MemoryAllocator.cpp ****     }
 137:src/MemoryAllocator.cpp **** 
 138:src/MemoryAllocator.cpp ****     return (void*)retval;
 457              		.loc 1 138 5 is_stmt 1
 139:src/MemoryAllocator.cpp **** }
 458              		.loc 1 139 1 is_stmt 0
 459 027c 83308101 		ld	ra,24(sp)
 460              		.cfi_restore 1
 461 0280 03340101 		ld	s0,16(sp)
 462              		.cfi_restore 8
 463              		.cfi_def_cfa 2, 32
 464 0284 83348100 		ld	s1,8(sp)
 465              		.cfi_restore 9
 466              	.LVL45:
 467 0288 03390100 		ld	s2,0(sp)
 468              		.cfi_restore 18
 469              	.LVL46:
GAS LISTING /tmp/ccuCIcBx.s 			page 13


 470 028c 13010102 		addi	sp,sp,32
 471              		.cfi_def_cfa_offset 0
 472 0290 67800000 		jr	ra
 473              		.cfi_endproc
 474              	.LFE30:
 476              		.align	2
 477              		.globl	_ZN15MemoryAllocator9mem_allocEm
 479              	_ZN15MemoryAllocator9mem_allocEm:
 480              	.LFB25:
  14:src/MemoryAllocator.cpp ****     return tryToAllocateFragment(size);
 481              		.loc 1 14 1 is_stmt 1
 482              		.cfi_startproc
 483              	.LVL47:
 484 0294 130101FF 		addi	sp,sp,-16
 485              		.cfi_def_cfa_offset 16
 486 0298 23341100 		sd	ra,8(sp)
 487 029c 23308100 		sd	s0,0(sp)
 488              		.cfi_offset 1, -8
 489              		.cfi_offset 8, -16
 490 02a0 13040101 		addi	s0,sp,16
 491              		.cfi_def_cfa 8, 0
  15:src/MemoryAllocator.cpp **** }
 492              		.loc 1 15 5
  15:src/MemoryAllocator.cpp **** }
 493              		.loc 1 15 33 is_stmt 0
 494 02a4 97000000 		call	_ZN15MemoryAllocator21tryToAllocateFragmentEm
 494      E7800000 
 495              	.LVL48:
  16:src/MemoryAllocator.cpp **** 
 496              		.loc 1 16 1
 497 02ac 83308100 		ld	ra,8(sp)
 498              		.cfi_restore 1
 499 02b0 03340100 		ld	s0,0(sp)
 500              		.cfi_restore 8
 501              		.cfi_def_cfa 2, 16
 502 02b4 13010101 		addi	sp,sp,16
 503              		.cfi_def_cfa_offset 0
 504 02b8 67800000 		jr	ra
 505              		.cfi_endproc
 506              	.LFE25:
 508              		.align	2
 509              		.globl	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm
 511              	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm:
 512              	.LFB31:
 140:src/MemoryAllocator.cpp **** 
 141:src/MemoryAllocator.cpp **** void MemoryAllocator::insertNewFreeSegment(void* addr, size_t size)
 142:src/MemoryAllocator.cpp **** {
 513              		.loc 1 142 1 is_stmt 1
 514              		.cfi_startproc
 515              	.LVL49:
 516 02bc 130101FE 		addi	sp,sp,-32
 517              		.cfi_def_cfa_offset 32
 518 02c0 233C1100 		sd	ra,24(sp)
 519 02c4 23388100 		sd	s0,16(sp)
 520 02c8 23349100 		sd	s1,8(sp)
 521 02cc 23302101 		sd	s2,0(sp)
 522              		.cfi_offset 1, -8
GAS LISTING /tmp/ccuCIcBx.s 			page 14


 523              		.cfi_offset 8, -16
 524              		.cfi_offset 9, -24
 525              		.cfi_offset 18, -32
 526 02d0 13040102 		addi	s0,sp,32
 527              		.cfi_def_cfa 8, 0
 528 02d4 93040500 		mv	s1,a0
 529 02d8 13890500 		mv	s2,a1
 143:src/MemoryAllocator.cpp ****     initMemory();
 530              		.loc 1 143 5
 531              		.loc 1 143 15 is_stmt 0
 532 02dc 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 532      E7800000 
 533              	.LVL50:
 144:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 534              		.loc 1 144 5 is_stmt 1
 145:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 535              		.loc 1 145 5
 536              		.loc 1 145 18 is_stmt 0
 537 02e4 97070000 		ld	a5,.LANCHOR0+16
 537      83B70700 
 538              	.LVL51:
 146:src/MemoryAllocator.cpp ****     BlockHeader* newSegment = (BlockHeader*)addr;
 539              		.loc 1 146 5 is_stmt 1
 147:src/MemoryAllocator.cpp ****     newSegment->size = size;
 540              		.loc 1 147 5
 541              		.loc 1 147 22 is_stmt 0
 542 02ec 23B02401 		sd	s2,0(s1)
 148:src/MemoryAllocator.cpp ****     newSegment->next = 0;
 543              		.loc 1 148 5 is_stmt 1
 544              		.loc 1 148 22 is_stmt 0
 545 02f0 23B40400 		sd	zero,8(s1)
 144:src/MemoryAllocator.cpp ****     BlockHeader* curr = headFree;
 546              		.loc 1 144 18
 547 02f4 13070000 		li	a4,0
 548              	.LVL52:
 549              	.L37:
 149:src/MemoryAllocator.cpp ****     while(curr != 0)
 550              		.loc 1 149 5 is_stmt 1
 551              		.loc 1 149 16
 552 02f8 638C0700 		beqz	a5,.L35
 150:src/MemoryAllocator.cpp ****     {
 151:src/MemoryAllocator.cpp ****         if((void*)curr > addr)
 553              		.loc 1 151 9
 554 02fc 63E8F400 		bgtu	a5,s1,.L43
 152:src/MemoryAllocator.cpp ****         {
 153:src/MemoryAllocator.cpp ****             newSegment->next = curr;
 154:src/MemoryAllocator.cpp ****             break;
 155:src/MemoryAllocator.cpp ****         }
 156:src/MemoryAllocator.cpp **** 
 157:src/MemoryAllocator.cpp ****         prev = curr;
 555              		.loc 1 157 9
 556              	.LVL53:
 158:src/MemoryAllocator.cpp ****         curr = curr->next;
 557              		.loc 1 158 9
 157:src/MemoryAllocator.cpp ****         curr = curr->next;
 558              		.loc 1 157 14 is_stmt 0
 559 0300 13870700 		mv	a4,a5
GAS LISTING /tmp/ccuCIcBx.s 			page 15


 560              		.loc 1 158 14
 561 0304 83B78700 		ld	a5,8(a5)
 562              	.LVL54:
 149:src/MemoryAllocator.cpp ****     {
 563              		.loc 1 149 5
 564 0308 6FF01FFF 		j	.L37
 565              	.L43:
 153:src/MemoryAllocator.cpp ****             break;
 566              		.loc 1 153 13 is_stmt 1
 153:src/MemoryAllocator.cpp ****             break;
 567              		.loc 1 153 30 is_stmt 0
 568 030c 23B4F400 		sd	a5,8(s1)
 154:src/MemoryAllocator.cpp ****         }
 569              		.loc 1 154 13 is_stmt 1
 570              	.L35:
 159:src/MemoryAllocator.cpp ****     }
 160:src/MemoryAllocator.cpp **** 
 161:src/MemoryAllocator.cpp ****     if(prev == 0)
 571              		.loc 1 161 5
 572 0310 63060704 		beqz	a4,.L44
 162:src/MemoryAllocator.cpp ****         headFree = newSegment;
 163:src/MemoryAllocator.cpp ****     else
 164:src/MemoryAllocator.cpp ****         prev->next = newSegment;
 573              		.loc 1 164 9
 574              		.loc 1 164 20 is_stmt 0
 575 0314 23349700 		sd	s1,8(a4)
 576              	.LVL55:
 577              	.L39:
 165:src/MemoryAllocator.cpp **** 
 166:src/MemoryAllocator.cpp ****     if(newSegment->next != 0 && (char*)newSegment->next == (char*)newSegment + newSegment->size + s
 578              		.loc 1 166 5 is_stmt 1
 579              		.loc 1 166 20 is_stmt 0
 580 0318 83B78400 		ld	a5,8(s1)
 581              		.loc 1 166 5
 582 031c 638A0700 		beqz	a5,.L40
 583              		.loc 1 166 92 discriminator 1
 584 0320 03B60400 		ld	a2,0(s1)
 585              		.loc 1 166 97 discriminator 1
 586 0324 93060601 		addi	a3,a2,16
 587 0328 B386D400 		add	a3,s1,a3
 588              		.loc 1 166 30 discriminator 1
 589 032c 638ED702 		beq	a5,a3,.L45
 590              	.L40:
 167:src/MemoryAllocator.cpp ****     {
 168:src/MemoryAllocator.cpp ****         newSegment->size += newSegment->next->size + sizeof(BlockHeader);
 169:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 170:src/MemoryAllocator.cpp ****     }
 171:src/MemoryAllocator.cpp **** 
 172:src/MemoryAllocator.cpp ****     if(prev != 0 && (char*)newSegment == (char*)prev + prev->size + sizeof(BlockHeader))
 591              		.loc 1 172 5 is_stmt 1
 592 0330 630A0700 		beqz	a4,.L34
 593              		.loc 1 172 62 is_stmt 0 discriminator 1
 594 0334 83360700 		ld	a3,0(a4)
 595              		.loc 1 172 67 discriminator 1
 596 0338 93870601 		addi	a5,a3,16
 597 033c B307F700 		add	a5,a4,a5
 598              		.loc 1 172 18 discriminator 1
GAS LISTING /tmp/ccuCIcBx.s 			page 16


 599 0340 63829704 		beq	a5,s1,.L46
 600              	.L34:
 173:src/MemoryAllocator.cpp ****     {
 174:src/MemoryAllocator.cpp ****         prev->size+=newSegment->size + sizeof(BlockHeader);
 175:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 176:src/MemoryAllocator.cpp ****     }
 177:src/MemoryAllocator.cpp **** }
 601              		.loc 1 177 1
 602 0344 83308101 		ld	ra,24(sp)
 603              		.cfi_remember_state
 604              		.cfi_restore 1
 605 0348 03340101 		ld	s0,16(sp)
 606              		.cfi_restore 8
 607              		.cfi_def_cfa 2, 32
 608 034c 83348100 		ld	s1,8(sp)
 609              		.cfi_restore 9
 610              	.LVL56:
 611 0350 03390100 		ld	s2,0(sp)
 612              		.cfi_restore 18
 613              	.LVL57:
 614 0354 13010102 		addi	sp,sp,32
 615              		.cfi_def_cfa_offset 0
 616 0358 67800000 		jr	ra
 617              	.LVL58:
 618              	.L44:
 619              		.cfi_restore_state
 162:src/MemoryAllocator.cpp ****     else
 620              		.loc 1 162 9 is_stmt 1
 162:src/MemoryAllocator.cpp ****     else
 621              		.loc 1 162 18 is_stmt 0
 622 035c 97070000 		sd	s1,.LANCHOR0+16,a5
 622      23B09700 
 623              	.LVL59:
 624 0364 6FF05FFB 		j	.L39
 625              	.L45:
 168:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 626              		.loc 1 168 9 is_stmt 1
 168:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 627              		.loc 1 168 47 is_stmt 0
 628 0368 83B60700 		ld	a3,0(a5)
 168:src/MemoryAllocator.cpp ****         newSegment->next = newSegment->next->next;
 629              		.loc 1 168 26
 630 036c 3306D600 		add	a2,a2,a3
 631 0370 13060601 		addi	a2,a2,16
 632 0374 23B0C400 		sd	a2,0(s1)
 169:src/MemoryAllocator.cpp ****     }
 633              		.loc 1 169 9 is_stmt 1
 169:src/MemoryAllocator.cpp ****     }
 634              		.loc 1 169 46 is_stmt 0
 635 0378 83B78700 		ld	a5,8(a5)
 169:src/MemoryAllocator.cpp ****     }
 636              		.loc 1 169 26
 637 037c 23B4F400 		sd	a5,8(s1)
 638 0380 6FF01FFB 		j	.L40
 639              	.L46:
 174:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 640              		.loc 1 174 9 is_stmt 1
GAS LISTING /tmp/ccuCIcBx.s 			page 17


 174:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 641              		.loc 1 174 33 is_stmt 0
 642 0384 83B70400 		ld	a5,0(s1)
 174:src/MemoryAllocator.cpp ****         prev->next = newSegment->next;
 643              		.loc 1 174 19
 644 0388 B386F600 		add	a3,a3,a5
 645 038c 93860601 		addi	a3,a3,16
 646 0390 2330D700 		sd	a3,0(a4)
 175:src/MemoryAllocator.cpp ****     }
 647              		.loc 1 175 9 is_stmt 1
 175:src/MemoryAllocator.cpp ****     }
 648              		.loc 1 175 34 is_stmt 0
 649 0394 83B78400 		ld	a5,8(s1)
 175:src/MemoryAllocator.cpp ****     }
 650              		.loc 1 175 20
 651 0398 2334F700 		sd	a5,8(a4)
 652              		.loc 1 177 1
 653 039c 6FF09FFA 		j	.L34
 654              		.cfi_endproc
 655              	.LFE31:
 657              		.align	2
 658              		.globl	_ZN15MemoryAllocator16tryToFreeSegmentEPv
 660              	_ZN15MemoryAllocator16tryToFreeSegmentEPv:
 661              	.LFB32:
 178:src/MemoryAllocator.cpp **** 
 179:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::tryToFreeSegment(void* addr)
 180:src/MemoryAllocator.cpp **** {
 662              		.loc 1 180 1 is_stmt 1
 663              		.cfi_startproc
 664              	.LVL60:
 665 03a0 130101FE 		addi	sp,sp,-32
 666              		.cfi_def_cfa_offset 32
 667 03a4 233C1100 		sd	ra,24(sp)
 668 03a8 23388100 		sd	s0,16(sp)
 669 03ac 23349100 		sd	s1,8(sp)
 670 03b0 23302101 		sd	s2,0(sp)
 671              		.cfi_offset 1, -8
 672              		.cfi_offset 8, -16
 673              		.cfi_offset 9, -24
 674              		.cfi_offset 18, -32
 675 03b4 13040102 		addi	s0,sp,32
 676              		.cfi_def_cfa 8, 0
 677 03b8 13090500 		mv	s2,a0
 181:src/MemoryAllocator.cpp ****     initMemory();
 678              		.loc 1 181 5
 679              		.loc 1 181 15 is_stmt 0
 680 03bc 97000000 		call	_ZN15MemoryAllocator10initMemoryEv
 680      E7800000 
 681              	.LVL61:
 182:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 682              		.loc 1 182 5 is_stmt 1
 183:src/MemoryAllocator.cpp ****     BlockHeader* curr = headAllocated;
 683              		.loc 1 183 5
 684              		.loc 1 183 18 is_stmt 0
 685 03c4 97040000 		ld	s1,.LANCHOR0+8
 685      83B40400 
 686              	.LVL62:
GAS LISTING /tmp/ccuCIcBx.s 			page 18


 182:src/MemoryAllocator.cpp ****     BlockHeader* prev = 0;
 687              		.loc 1 182 18
 688 03cc 13070000 		li	a4,0
 689              	.LVL63:
 690              	.L52:
 184:src/MemoryAllocator.cpp ****     while(curr != 0)
 691              		.loc 1 184 5 is_stmt 1
 692              		.loc 1 184 16
 693 03d0 638A0402 		beqz	s1,.L48
 185:src/MemoryAllocator.cpp ****     {
 186:src/MemoryAllocator.cpp ****         if(addr == (void*)((char*)curr + sizeof(BlockHeader)))
 694              		.loc 1 186 9
 695              		.loc 1 186 20 is_stmt 0
 696 03d4 93870401 		addi	a5,s1,16
 697              		.loc 1 186 9
 698 03d8 63882701 		beq	a5,s2,.L56
 187:src/MemoryAllocator.cpp ****         {
 188:src/MemoryAllocator.cpp ****             if(prev != 0)
 189:src/MemoryAllocator.cpp ****                 prev->next = curr->next;
 190:src/MemoryAllocator.cpp ****             else
 191:src/MemoryAllocator.cpp ****                 headAllocated = curr->next;
 192:src/MemoryAllocator.cpp **** 
 193:src/MemoryAllocator.cpp ****             insertNewFreeSegment((void*)curr, curr->size);
 194:src/MemoryAllocator.cpp **** 
 195:src/MemoryAllocator.cpp ****             break;
 196:src/MemoryAllocator.cpp ****         }
 197:src/MemoryAllocator.cpp **** 
 198:src/MemoryAllocator.cpp ****         prev = curr;
 699              		.loc 1 198 9 is_stmt 1
 700              	.LVL64:
 199:src/MemoryAllocator.cpp ****         curr = curr->next;
 701              		.loc 1 199 9
 198:src/MemoryAllocator.cpp ****         curr = curr->next;
 702              		.loc 1 198 14 is_stmt 0
 703 03dc 13870400 		mv	a4,s1
 704              		.loc 1 199 14
 705 03e0 83B48400 		ld	s1,8(s1)
 706              	.LVL65:
 184:src/MemoryAllocator.cpp ****     {
 707              		.loc 1 184 5
 708 03e4 6FF0DFFE 		j	.L52
 709              	.L56:
 188:src/MemoryAllocator.cpp ****                 prev->next = curr->next;
 710              		.loc 1 188 13 is_stmt 1
 711 03e8 630E0702 		beqz	a4,.L50
 189:src/MemoryAllocator.cpp ****             else
 712              		.loc 1 189 17
 189:src/MemoryAllocator.cpp ****             else
 713              		.loc 1 189 36 is_stmt 0
 714 03ec 83B78400 		ld	a5,8(s1)
 189:src/MemoryAllocator.cpp ****             else
 715              		.loc 1 189 28
 716 03f0 2334F700 		sd	a5,8(a4)
 717              	.LVL66:
 718              	.L51:
 193:src/MemoryAllocator.cpp **** 
 719              		.loc 1 193 13 is_stmt 1
GAS LISTING /tmp/ccuCIcBx.s 			page 19


 193:src/MemoryAllocator.cpp **** 
 720              		.loc 1 193 33 is_stmt 0
 721 03f4 83B50400 		ld	a1,0(s1)
 722 03f8 13850400 		mv	a0,s1
 723 03fc 97000000 		call	_ZN15MemoryAllocator20insertNewFreeSegmentEPvm
 723      E7800000 
 724              	.LVL67:
 195:src/MemoryAllocator.cpp ****         }
 725              		.loc 1 195 13 is_stmt 1
 726              	.L48:
 200:src/MemoryAllocator.cpp ****     }
 201:src/MemoryAllocator.cpp **** 
 202:src/MemoryAllocator.cpp ****     if(curr != 0)
 727              		.loc 1 202 5
 728 0404 63880402 		beqz	s1,.L54
 203:src/MemoryAllocator.cpp ****         return 0;
 729              		.loc 1 203 16 is_stmt 0
 730 0408 13050000 		li	a0,0
 731              	.L47:
 204:src/MemoryAllocator.cpp ****     else
 205:src/MemoryAllocator.cpp ****         return 1;
 206:src/MemoryAllocator.cpp **** }
 732              		.loc 1 206 1
 733 040c 83308101 		ld	ra,24(sp)
 734              		.cfi_remember_state
 735              		.cfi_restore 1
 736 0410 03340101 		ld	s0,16(sp)
 737              		.cfi_restore 8
 738              		.cfi_def_cfa 2, 32
 739 0414 83348100 		ld	s1,8(sp)
 740              		.cfi_restore 9
 741              	.LVL68:
 742 0418 03390100 		ld	s2,0(sp)
 743              		.cfi_restore 18
 744              	.LVL69:
 745 041c 13010102 		addi	sp,sp,32
 746              		.cfi_def_cfa_offset 0
 747 0420 67800000 		jr	ra
 748              	.LVL70:
 749              	.L50:
 750              		.cfi_restore_state
 191:src/MemoryAllocator.cpp **** 
 751              		.loc 1 191 17 is_stmt 1
 191:src/MemoryAllocator.cpp **** 
 752              		.loc 1 191 39 is_stmt 0
 753 0424 83B78400 		ld	a5,8(s1)
 191:src/MemoryAllocator.cpp **** 
 754              		.loc 1 191 31
 755 0428 17070000 		sd	a5,.LANCHOR0+8,a4
 755      2330F700 
 756              	.LVL71:
 757 0430 6FF05FFC 		j	.L51
 758              	.L54:
 205:src/MemoryAllocator.cpp **** }
 759              		.loc 1 205 16
 760 0434 13051000 		li	a0,1
 761 0438 6FF05FFD 		j	.L47
GAS LISTING /tmp/ccuCIcBx.s 			page 20


 762              		.cfi_endproc
 763              	.LFE32:
 765              		.align	2
 766              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 768              	_ZN15MemoryAllocator8mem_freeEPv:
 769              	.LFB26:
  19:src/MemoryAllocator.cpp ****     return tryToFreeSegment(addr);
 770              		.loc 1 19 1 is_stmt 1
 771              		.cfi_startproc
 772              	.LVL72:
 773 043c 130101FF 		addi	sp,sp,-16
 774              		.cfi_def_cfa_offset 16
 775 0440 23341100 		sd	ra,8(sp)
 776 0444 23308100 		sd	s0,0(sp)
 777              		.cfi_offset 1, -8
 778              		.cfi_offset 8, -16
 779 0448 13040101 		addi	s0,sp,16
 780              		.cfi_def_cfa 8, 0
  20:src/MemoryAllocator.cpp **** }
 781              		.loc 1 20 5
  20:src/MemoryAllocator.cpp **** }
 782              		.loc 1 20 28 is_stmt 0
 783 044c 97000000 		call	_ZN15MemoryAllocator16tryToFreeSegmentEPv
 783      E7800000 
 784              	.LVL73:
  21:src/MemoryAllocator.cpp **** 
 785              		.loc 1 21 1
 786 0454 83308100 		ld	ra,8(sp)
 787              		.cfi_restore 1
 788 0458 03340100 		ld	s0,0(sp)
 789              		.cfi_restore 8
 790              		.cfi_def_cfa 2, 16
 791 045c 13010101 		addi	sp,sp,16
 792              		.cfi_def_cfa_offset 0
 793 0460 67800000 		jr	ra
 794              		.cfi_endproc
 795              	.LFE26:
 797              		.align	2
 798              		.globl	_ZN15MemoryAllocator7kmallocEm
 800              	_ZN15MemoryAllocator7kmallocEm:
 801              	.LFB35:
 207:src/MemoryAllocator.cpp **** 
 208:src/MemoryAllocator.cpp **** void MemoryAllocator::memAllocHandler()
 209:src/MemoryAllocator.cpp **** {
 210:src/MemoryAllocator.cpp ****     size_t size;
 211:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(size));
 212:src/MemoryAllocator.cpp ****     size*=MEM_BLOCK_SIZE;
 213:src/MemoryAllocator.cpp ****     void* allocatedAddr = kmalloc(size);
 214:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 215:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 216:src/MemoryAllocator.cpp **** }
 217:src/MemoryAllocator.cpp **** 
 218:src/MemoryAllocator.cpp **** void MemoryAllocator::memFreeHandler()
 219:src/MemoryAllocator.cpp **** {
 220:src/MemoryAllocator.cpp ****     uint64 addr = 0;
 221:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(addr));
 222:src/MemoryAllocator.cpp ****     uint64 retval = kfree((void*)addr);
GAS LISTING /tmp/ccuCIcBx.s 			page 21


 223:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : :"r"(retval));
 224:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 225:src/MemoryAllocator.cpp **** }
 226:src/MemoryAllocator.cpp **** 
 227:src/MemoryAllocator.cpp **** void* MemoryAllocator::kmalloc(size_t size)
 228:src/MemoryAllocator.cpp **** {
 802              		.loc 1 228 1 is_stmt 1
 803              		.cfi_startproc
 804              	.LVL74:
 805 0464 130101FF 		addi	sp,sp,-16
 806              		.cfi_def_cfa_offset 16
 807 0468 23341100 		sd	ra,8(sp)
 808 046c 23308100 		sd	s0,0(sp)
 809              		.cfi_offset 1, -8
 810              		.cfi_offset 8, -16
 811 0470 13040101 		addi	s0,sp,16
 812              		.cfi_def_cfa 8, 0
 229:src/MemoryAllocator.cpp ****     return MemoryAllocator::mem_alloc(size);
 813              		.loc 1 229 5
 814              		.loc 1 229 38 is_stmt 0
 815 0474 97000000 		call	_ZN15MemoryAllocator9mem_allocEm
 815      E7800000 
 816              	.LVL75:
 230:src/MemoryAllocator.cpp **** }
 817              		.loc 1 230 1
 818 047c 83308100 		ld	ra,8(sp)
 819              		.cfi_restore 1
 820 0480 03340100 		ld	s0,0(sp)
 821              		.cfi_restore 8
 822              		.cfi_def_cfa 2, 16
 823 0484 13010101 		addi	sp,sp,16
 824              		.cfi_def_cfa_offset 0
 825 0488 67800000 		jr	ra
 826              		.cfi_endproc
 827              	.LFE35:
 829              		.align	2
 830              		.globl	_ZN15MemoryAllocator15memAllocHandlerEv
 832              	_ZN15MemoryAllocator15memAllocHandlerEv:
 833              	.LFB33:
 209:src/MemoryAllocator.cpp ****     size_t size;
 834              		.loc 1 209 1 is_stmt 1
 835              		.cfi_startproc
 836 048c 130101FF 		addi	sp,sp,-16
 837              		.cfi_def_cfa_offset 16
 838 0490 23341100 		sd	ra,8(sp)
 839 0494 23308100 		sd	s0,0(sp)
 840              		.cfi_offset 1, -8
 841              		.cfi_offset 8, -16
 842 0498 13040101 		addi	s0,sp,16
 843              		.cfi_def_cfa 8, 0
 210:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(size));
 844              		.loc 1 210 5
 211:src/MemoryAllocator.cpp ****     size*=MEM_BLOCK_SIZE;
 845              		.loc 1 211 5
 211:src/MemoryAllocator.cpp ****     size*=MEM_BLOCK_SIZE;
 846              		.loc 1 211 47 is_stmt 0
 847              	#APP
GAS LISTING /tmp/ccuCIcBx.s 			page 22


 848              	# 211 "src/MemoryAllocator.cpp" 1
 849              		mv a0, a1
 850              	# 0 "" 2
 851              	.LVL76:
 212:src/MemoryAllocator.cpp ****     void* allocatedAddr = kmalloc(size);
 852              		.loc 1 212 5 is_stmt 1
 213:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 853              		.loc 1 213 5
 213:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : : "r"((uint64)allocatedAddr));
 854              		.loc 1 213 34 is_stmt 0
 855              	#NO_APP
 856 04a0 13156500 		slli	a0,a0,6
 857              	.LVL77:
 858 04a4 97000000 		call	_ZN15MemoryAllocator7kmallocEm
 858      E7800000 
 859              	.LVL78:
 214:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 860              		.loc 1 214 5 is_stmt 1
 214:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 861              		.loc 1 214 64 is_stmt 0
 862              	#APP
 863              	# 214 "src/MemoryAllocator.cpp" 1
 215:src/MemoryAllocator.cpp **** }
 864              		mv a0,a0
 865              	# 0 "" 2
 866              		.loc 1 215 5 is_stmt 1
 215:src/MemoryAllocator.cpp **** }
 867              		.loc 1 215 25 is_stmt 0
 868              	#NO_APP
 869 04b0 97000000 		call	_ZN5Riscv13w_a0_sscratchEv@plt
 869      E7800000 
 870              	.LVL79:
 216:src/MemoryAllocator.cpp **** 
 871              		.loc 1 216 1
 872 04b8 83308100 		ld	ra,8(sp)
 873              		.cfi_restore 1
 874 04bc 03340100 		ld	s0,0(sp)
 875              		.cfi_restore 8
 876              		.cfi_def_cfa 2, 16
 877 04c0 13010101 		addi	sp,sp,16
 878              		.cfi_def_cfa_offset 0
 879 04c4 67800000 		jr	ra
 880              		.cfi_endproc
 881              	.LFE33:
 883              		.align	2
 884              		.globl	_ZN15MemoryAllocator5kfreeEPv
 886              	_ZN15MemoryAllocator5kfreeEPv:
 887              	.LFB36:
 231:src/MemoryAllocator.cpp **** 
 232:src/MemoryAllocator.cpp **** uint64 MemoryAllocator::kfree(void* p)
 233:src/MemoryAllocator.cpp **** {
 888              		.loc 1 233 1 is_stmt 1
 889              		.cfi_startproc
 890              	.LVL80:
 891 04c8 130101FF 		addi	sp,sp,-16
 892              		.cfi_def_cfa_offset 16
 893 04cc 23341100 		sd	ra,8(sp)
GAS LISTING /tmp/ccuCIcBx.s 			page 23


 894 04d0 23308100 		sd	s0,0(sp)
 895              		.cfi_offset 1, -8
 896              		.cfi_offset 8, -16
 897 04d4 13040101 		addi	s0,sp,16
 898              		.cfi_def_cfa 8, 0
 234:src/MemoryAllocator.cpp ****     return MemoryAllocator::mem_free(p);
 899              		.loc 1 234 5
 900              		.loc 1 234 37 is_stmt 0
 901 04d8 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv
 901      E7800000 
 902              	.LVL81:
 235:src/MemoryAllocator.cpp **** }...
 903              		.loc 1 235 1
 904 04e0 83308100 		ld	ra,8(sp)
 905              		.cfi_restore 1
 906 04e4 03340100 		ld	s0,0(sp)
 907              		.cfi_restore 8
 908              		.cfi_def_cfa 2, 16
 909 04e8 13010101 		addi	sp,sp,16
 910              		.cfi_def_cfa_offset 0
 911 04ec 67800000 		jr	ra
 912              		.cfi_endproc
 913              	.LFE36:
 915              		.align	2
 916              		.globl	_ZN15MemoryAllocator14memFreeHandlerEv
 918              	_ZN15MemoryAllocator14memFreeHandlerEv:
 919              	.LFB34:
 219:src/MemoryAllocator.cpp **** {
 920              		.loc 1 219 1 is_stmt 1
 921              		.cfi_startproc
 922 04f0 130101FF 		addi	sp,sp,-16
 923              		.cfi_def_cfa_offset 16
 924 04f4 23341100 		sd	ra,8(sp)
 925 04f8 23308100 		sd	s0,0(sp)
 926              		.cfi_offset 1, -8
 927              		.cfi_offset 8, -16
 928 04fc 13040101 		addi	s0,sp,16
 929              		.cfi_def_cfa 8, 0
 220:src/MemoryAllocator.cpp ****     uint64 addr = 0;
 930              		.loc 1 220 5
 931              	.LVL82:
 221:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(addr));
 932              		.loc 1 221 5
 221:src/MemoryAllocator.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(addr));
 933              		.loc 1 221 47 is_stmt 0
 934              	#APP
 935              	# 221 "src/MemoryAllocator.cpp" 1
 936              		mv a0, a1
 937              	# 0 "" 2
 938              	.LVL83:
 222:src/MemoryAllocator.cpp ****     uint64 retval = kfree((void*)addr);
 939              		.loc 1 222 5 is_stmt 1
 222:src/MemoryAllocator.cpp ****     uint64 retval = kfree((void*)addr);
 940              		.loc 1 222 26 is_stmt 0
 941              	#NO_APP
 942 0504 97000000 		call	_ZN15MemoryAllocator5kfreeEPv
 942      E7800000 
GAS LISTING /tmp/ccuCIcBx.s 			page 24


 943              	.LVL84:
 223:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : :"r"(retval));
 944              		.loc 1 223 5 is_stmt 1
 223:src/MemoryAllocator.cpp ****     __asm__ volatile("mv a0,%0" : :"r"(retval));
 945              		.loc 1 223 48 is_stmt 0
 946              	#APP
 947              	# 223 "src/MemoryAllocator.cpp" 1
 224:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 948              		mv a0,a0
 949              	# 0 "" 2
 950              		.loc 1 224 5 is_stmt 1
 224:src/MemoryAllocator.cpp ****     Riscv::w_a0_sscratch();
 951              		.loc 1 224 25 is_stmt 0
 952              	#NO_APP
 953 0510 97000000 		call	_ZN5Riscv13w_a0_sscratchEv@plt
 953      E7800000 
 954              	.LVL85:
 225:src/MemoryAllocator.cpp **** }
 955              		.loc 1 225 1
 956 0518 83308100 		ld	ra,8(sp)
 957              		.cfi_restore 1
 958 051c 03340100 		ld	s0,0(sp)
 959              		.cfi_restore 8
 960              		.cfi_def_cfa 2, 16
 961 0520 13010101 		addi	sp,sp,16
 962              		.cfi_def_cfa_offset 0
 963 0524 67800000 		jr	ra
 964              		.cfi_endproc
 965              	.LFE34:
 967              		.globl	_ZN15MemoryAllocator18memoryInitiliaizedE
 968              		.globl	_ZN15MemoryAllocator8headFreeE
 969              		.globl	_ZN15MemoryAllocator13headAllocatedE
 970              		.bss
 971              		.align	3
 972              		.set	.LANCHOR0,. + 0
 975              	_ZN15MemoryAllocator18memoryInitiliaizedE:
 976 0000 00000000 		.zero	4
 977 0004 00000000 		.zero	4
 980              	_ZN15MemoryAllocator13headAllocatedE:
 981 0008 00000000 		.zero	8
 981      00000000 
 984              	_ZN15MemoryAllocator8headFreeE:
 985 0010 00000000 		.zero	8
 985      00000000 
 986              		.text
 987              	.Letext0:
 988              		.file 2 "src/../h/../lib/hw.h"
 989              		.file 3 "src/../h/MemoryAllocator.hpp"
 990              		.file 4 "src/../h/Riscv.hpp"
GAS LISTING /tmp/ccuCIcBx.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccuCIcBx.s:9      .text:0000000000000000 _ZN15MemoryAllocator10initMemoryEv
     /tmp/ccuCIcBx.s:13     .text:0000000000000000 .L0 
     /tmp/ccuCIcBx.s:14     .text:0000000000000000 .L0 
     /tmp/ccuCIcBx.s:15     .text:0000000000000004 .L0 
     /tmp/ccuCIcBx.s:17     .text:0000000000000008 .L0 
     /tmp/ccuCIcBx.s:19     .text:000000000000000c .L0 
     /tmp/ccuCIcBx.s:21     .text:000000000000000c .L0 
     /tmp/ccuCIcBx.s:22     .text:000000000000000c .L0 
     /tmp/ccuCIcBx.s:24     .text:0000000000000014 .L0 
     /tmp/ccuCIcBx.s:27     .text:000000000000001c .L0 
     /tmp/ccuCIcBx.s:28     .text:000000000000001c .L0 
     /tmp/ccuCIcBx.s:32     .text:000000000000002c .L0 
     /tmp/ccuCIcBx.s:33     .text:000000000000002c .L0 
     /tmp/ccuCIcBx.s:35     .text:0000000000000030 .L0 
     /tmp/ccuCIcBx.s:36     .text:0000000000000030 .L0 
     /tmp/ccuCIcBx.s:40     .text:0000000000000040 .L0 
     /tmp/ccuCIcBx.s:41     .text:0000000000000040 .L0 
     /tmp/ccuCIcBx.s:43     .text:0000000000000044 .L0 
     /tmp/ccuCIcBx.s:44     .text:0000000000000044 .L0 
     /tmp/ccuCIcBx.s:48     .text:0000000000000054 .L0 
     /tmp/ccuCIcBx.s:52     .text:0000000000000060 .L0 
     /tmp/ccuCIcBx.s:55     .text:0000000000000064 .L0 
     /tmp/ccuCIcBx.s:56     .text:0000000000000068 .L0 
     /tmp/ccuCIcBx.s:57     .text:0000000000000068 .L0 
     /tmp/ccuCIcBx.s:59     .text:000000000000006c .L0 
     /tmp/ccuCIcBx.s:61     .text:0000000000000070 .L0 
     /tmp/ccuCIcBx.s:67     .text:0000000000000070 _ZN15MemoryAllocator17insertAllFragmentEPvmS0_
     /tmp/ccuCIcBx.s:70     .text:0000000000000070 .L0 
     /tmp/ccuCIcBx.s:72     .text:0000000000000070 .L0 
     /tmp/ccuCIcBx.s:73     .text:0000000000000074 .L0 
     /tmp/ccuCIcBx.s:79     .text:0000000000000088 .L0 
     /tmp/ccuCIcBx.s:80     .text:0000000000000088 .L0 
     /tmp/ccuCIcBx.s:81     .text:0000000000000088 .L0 
     /tmp/ccuCIcBx.s:82     .text:0000000000000088 .L0 
     /tmp/ccuCIcBx.s:83     .text:0000000000000088 .L0 
     /tmp/ccuCIcBx.s:85     .text:000000000000008c .L0 
     /tmp/ccuCIcBx.s:90     .text:0000000000000098 .L0 
     /tmp/ccuCIcBx.s:91     .text:0000000000000098 .L0 
     /tmp/ccuCIcBx.s:94     .text:00000000000000a0 .L0 
     /tmp/ccuCIcBx.s:95     .text:00000000000000a0 .L0 
     /tmp/ccuCIcBx.s:96     .text:00000000000000a0 .L0 
     /tmp/ccuCIcBx.s:98     .text:00000000000000a4 .L0 
     /tmp/ccuCIcBx.s:99     .text:00000000000000a4 .L0 
     /tmp/ccuCIcBx.s:102    .text:00000000000000a8 .L0 
     /tmp/ccuCIcBx.s:103    .text:00000000000000a8 .L0 
     /tmp/ccuCIcBx.s:105    .text:00000000000000b0 .L0 
     /tmp/ccuCIcBx.s:110    .text:00000000000000b4 .L0 
     /tmp/ccuCIcBx.s:111    .text:00000000000000b4 .L0 
     /tmp/ccuCIcBx.s:114    .text:00000000000000c0 .L0 
     /tmp/ccuCIcBx.s:118    .text:00000000000000c4 .L0 
     /tmp/ccuCIcBx.s:119    .text:00000000000000c4 .L0 
     /tmp/ccuCIcBx.s:120    .text:00000000000000c4 .L0 
     /tmp/ccuCIcBx.s:122    .text:00000000000000c8 .L0 
     /tmp/ccuCIcBx.s:124    .text:00000000000000cc .L0 
     /tmp/ccuCIcBx.s:125    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccuCIcBx.s 			page 26


     /tmp/ccuCIcBx.s:132    .text:00000000000000d0 .L0 
     /tmp/ccuCIcBx.s:133    .text:00000000000000d4 .L0 
     /tmp/ccuCIcBx.s:134    .text:00000000000000d4 .L0 
     /tmp/ccuCIcBx.s:136    .text:00000000000000d8 .L0 
     /tmp/ccuCIcBx.s:137    .text:00000000000000d8 .L0 
     /tmp/ccuCIcBx.s:139    .text:00000000000000dc .L0 
     /tmp/ccuCIcBx.s:142    .text:00000000000000e0 .L0 
     /tmp/ccuCIcBx.s:145    .text:00000000000000e4 .L0 
     /tmp/ccuCIcBx.s:148    .text:00000000000000e8 .L0 
     /tmp/ccuCIcBx.s:152    .text:00000000000000ec .L0 
     /tmp/ccuCIcBx.s:155    .text:00000000000000ec .L0 
     /tmp/ccuCIcBx.s:156    .text:00000000000000ec .L0 
     /tmp/ccuCIcBx.s:161    .text:00000000000000f8 .L0 
     /tmp/ccuCIcBx.s:162    .text:00000000000000f8 .L0 
     /tmp/ccuCIcBx.s:164    .text:00000000000000fc .L0 
     /tmp/ccuCIcBx.s:165    .text:00000000000000fc .L0 
     /tmp/ccuCIcBx.s:169    .text:0000000000000104 .L0 
     /tmp/ccuCIcBx.s:170    .text:0000000000000108 .L0 
     /tmp/ccuCIcBx.s:176    .text:0000000000000108 _ZN15MemoryAllocator26insertNewAllocatedFragmentEPvm
     /tmp/ccuCIcBx.s:179    .text:0000000000000108 .L0 
     /tmp/ccuCIcBx.s:181    .text:0000000000000108 .L0 
     /tmp/ccuCIcBx.s:182    .text:000000000000010c .L0 
     /tmp/ccuCIcBx.s:187    .text:000000000000011c .L0 
     /tmp/ccuCIcBx.s:188    .text:000000000000011c .L0 
     /tmp/ccuCIcBx.s:189    .text:000000000000011c .L0 
     /tmp/ccuCIcBx.s:190    .text:000000000000011c .L0 
     /tmp/ccuCIcBx.s:192    .text:0000000000000120 .L0 
     /tmp/ccuCIcBx.s:196    .text:0000000000000128 .L0 
     /tmp/ccuCIcBx.s:197    .text:0000000000000128 .L0 
     /tmp/ccuCIcBx.s:200    .text:0000000000000130 .L0 
     /tmp/ccuCIcBx.s:201    .text:0000000000000130 .L0 
     /tmp/ccuCIcBx.s:202    .text:0000000000000130 .L0 
     /tmp/ccuCIcBx.s:205    .text:0000000000000138 .L0 
     /tmp/ccuCIcBx.s:206    .text:0000000000000138 .L0 
     /tmp/ccuCIcBx.s:207    .text:0000000000000138 .L0 
     /tmp/ccuCIcBx.s:209    .text:000000000000013c .L0 
     /tmp/ccuCIcBx.s:210    .text:000000000000013c .L0 
     /tmp/ccuCIcBx.s:212    .text:0000000000000140 .L0 
     /tmp/ccuCIcBx.s:216    .text:0000000000000144 .L0 
     /tmp/ccuCIcBx.s:217    .text:0000000000000144 .L0 
     /tmp/ccuCIcBx.s:219    .text:0000000000000148 .L0 
     /tmp/ccuCIcBx.s:222    .text:000000000000014c .L0 
     /tmp/ccuCIcBx.s:223    .text:000000000000014c .L0 
     /tmp/ccuCIcBx.s:224    .text:000000000000014c .L0 
     /tmp/ccuCIcBx.s:226    .text:0000000000000150 .L0 
     /tmp/ccuCIcBx.s:229    .text:0000000000000154 .L0 
     /tmp/ccuCIcBx.s:232    .text:0000000000000158 .L0 
     /tmp/ccuCIcBx.s:233    .text:0000000000000158 .L0 
     /tmp/ccuCIcBx.s:236    .text:000000000000015c .L0 
     /tmp/ccuCIcBx.s:237    .text:000000000000015c .L0 
     /tmp/ccuCIcBx.s:239    .text:0000000000000160 .L0 
     /tmp/ccuCIcBx.s:240    .text:0000000000000160 .L0 
     /tmp/ccuCIcBx.s:244    .text:0000000000000164 .L0 
     /tmp/ccuCIcBx.s:245    .text:0000000000000168 .L0 
     /tmp/ccuCIcBx.s:246    .text:0000000000000168 .L0 
     /tmp/ccuCIcBx.s:248    .text:000000000000016c .L0 
     /tmp/ccuCIcBx.s:249    .text:000000000000016c .L0 
GAS LISTING /tmp/ccuCIcBx.s 			page 27


     /tmp/ccuCIcBx.s:251    .text:0000000000000170 .L0 
     /tmp/ccuCIcBx.s:254    .text:0000000000000174 .L0 
     /tmp/ccuCIcBx.s:257    .text:0000000000000178 .L0 
     /tmp/ccuCIcBx.s:261    .text:000000000000017c .L0 
     /tmp/ccuCIcBx.s:263    .text:000000000000017c .L0 
     /tmp/ccuCIcBx.s:264    .text:000000000000017c .L0 
     /tmp/ccuCIcBx.s:267    .text:0000000000000188 .L0 
     /tmp/ccuCIcBx.s:273    .text:0000000000000188 _ZN15MemoryAllocator21tryToAllocateFragmentEm
     /tmp/ccuCIcBx.s:276    .text:0000000000000188 .L0 
     /tmp/ccuCIcBx.s:278    .text:0000000000000188 .L0 
     /tmp/ccuCIcBx.s:279    .text:000000000000018c .L0 
     /tmp/ccuCIcBx.s:284    .text:000000000000019c .L0 
     /tmp/ccuCIcBx.s:285    .text:000000000000019c .L0 
     /tmp/ccuCIcBx.s:286    .text:000000000000019c .L0 
     /tmp/ccuCIcBx.s:287    .text:000000000000019c .L0 
     /tmp/ccuCIcBx.s:289    .text:00000000000001a0 .L0 
     /tmp/ccuCIcBx.s:292    .text:00000000000001a4 .L0 
     /tmp/ccuCIcBx.s:293    .text:00000000000001a4 .L0 
     /tmp/ccuCIcBx.s:296    .text:00000000000001ac .L0 
     /tmp/ccuCIcBx.s:297    .text:00000000000001ac .L0 
     /tmp/ccuCIcBx.s:298    .text:00000000000001ac .L0 
     /tmp/ccuCIcBx.s:299    .text:00000000000001ac .L0 
     /tmp/ccuCIcBx.s:302    .text:00000000000001b4 .L0 
     /tmp/ccuCIcBx.s:306    .text:00000000000001b8 .L0 
     /tmp/ccuCIcBx.s:307    .text:00000000000001b8 .L0 
     /tmp/ccuCIcBx.s:311    .text:00000000000001bc .L0 
     /tmp/ccuCIcBx.s:312    .text:00000000000001bc .L0 
     /tmp/ccuCIcBx.s:314    .text:00000000000001c0 .L0 
     /tmp/ccuCIcBx.s:318    .text:00000000000001c4 .L0 
     /tmp/ccuCIcBx.s:319    .text:00000000000001c4 .L0 
     /tmp/ccuCIcBx.s:320    .text:00000000000001c4 .L0 
     /tmp/ccuCIcBx.s:322    .text:00000000000001c8 .L0 
     /tmp/ccuCIcBx.s:326    .text:00000000000001cc .L0 
     /tmp/ccuCIcBx.s:333    .text:00000000000001d0 .L0 
     /tmp/ccuCIcBx.s:334    .text:00000000000001d0 .L0 
     /tmp/ccuCIcBx.s:335    .text:00000000000001d0 .L0 
     /tmp/ccuCIcBx.s:337    .text:00000000000001d4 .L0 
     /tmp/ccuCIcBx.s:340    .text:00000000000001d8 .L0 
     /tmp/ccuCIcBx.s:341    .text:00000000000001d8 .L0 
     /tmp/ccuCIcBx.s:343    .text:00000000000001dc .L0 
     /tmp/ccuCIcBx.s:347    .text:00000000000001e0 .L0 
     /tmp/ccuCIcBx.s:348    .text:00000000000001e0 .L0 
     /tmp/ccuCIcBx.s:351    .text:00000000000001ec .L0 
     /tmp/ccuCIcBx.s:354    .text:00000000000001f0 .L0 
     /tmp/ccuCIcBx.s:355    .text:00000000000001f0 .L0 
     /tmp/ccuCIcBx.s:359    .text:00000000000001f4 .L0 
     /tmp/ccuCIcBx.s:364    .text:00000000000001fc .L0 
     /tmp/ccuCIcBx.s:365    .text:00000000000001fc .L0 
     /tmp/ccuCIcBx.s:366    .text:00000000000001fc .L0 
     /tmp/ccuCIcBx.s:368    .text:0000000000000200 .L0 
     /tmp/ccuCIcBx.s:370    .text:0000000000000204 .L0 
     /tmp/ccuCIcBx.s:371    .text:0000000000000204 .L0 
     /tmp/ccuCIcBx.s:374    .text:0000000000000208 .L0 
     /tmp/ccuCIcBx.s:376    .text:000000000000020c .L0 
     /tmp/ccuCIcBx.s:378    .text:0000000000000210 .L0 
     /tmp/ccuCIcBx.s:379    .text:0000000000000210 .L0 
     /tmp/ccuCIcBx.s:383    .text:0000000000000218 .L0 
GAS LISTING /tmp/ccuCIcBx.s 			page 28


     /tmp/ccuCIcBx.s:384    .text:0000000000000218 .L0 
     /tmp/ccuCIcBx.s:390    .text:0000000000000224 .L0 
     /tmp/ccuCIcBx.s:391    .text:0000000000000224 .L0 
     /tmp/ccuCIcBx.s:393    .text:0000000000000228 .L0 
     /tmp/ccuCIcBx.s:394    .text:0000000000000228 .L0 
     /tmp/ccuCIcBx.s:397    .text:000000000000022c .L0 
     /tmp/ccuCIcBx.s:399    .text:0000000000000230 .L0 
     /tmp/ccuCIcBx.s:405    .text:0000000000000238 .L0 
     /tmp/ccuCIcBx.s:406    .text:0000000000000238 .L0 
     /tmp/ccuCIcBx.s:409    .text:000000000000023c .L0 
     /tmp/ccuCIcBx.s:412    .text:0000000000000244 .L0 
     /tmp/ccuCIcBx.s:420    .text:000000000000024c .L0 
     /tmp/ccuCIcBx.s:422    .text:0000000000000250 .L0 
     /tmp/ccuCIcBx.s:423    .text:0000000000000250 .L0 
     /tmp/ccuCIcBx.s:428    .text:0000000000000254 .L0 
     /tmp/ccuCIcBx.s:429    .text:0000000000000254 .L0 
     /tmp/ccuCIcBx.s:434    .text:0000000000000264 .L0 
     /tmp/ccuCIcBx.s:435    .text:0000000000000264 .L0 
     /tmp/ccuCIcBx.s:438    .text:0000000000000268 .L0 
     /tmp/ccuCIcBx.s:439    .text:0000000000000268 .L0 
     /tmp/ccuCIcBx.s:444    .text:000000000000026c .L0 
     /tmp/ccuCIcBx.s:445    .text:000000000000026c .L0 
     /tmp/ccuCIcBx.s:454    .text:0000000000000278 .L0 
     /tmp/ccuCIcBx.s:458    .text:000000000000027c .L0 
     /tmp/ccuCIcBx.s:459    .text:000000000000027c .L0 
     /tmp/ccuCIcBx.s:460    .text:0000000000000280 .L0 
     /tmp/ccuCIcBx.s:462    .text:0000000000000284 .L0 
     /tmp/ccuCIcBx.s:463    .text:0000000000000284 .L0 
     /tmp/ccuCIcBx.s:465    .text:0000000000000288 .L0 
     /tmp/ccuCIcBx.s:468    .text:000000000000028c .L0 
     /tmp/ccuCIcBx.s:471    .text:0000000000000290 .L0 
     /tmp/ccuCIcBx.s:473    .text:0000000000000294 .L0 
     /tmp/ccuCIcBx.s:479    .text:0000000000000294 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccuCIcBx.s:482    .text:0000000000000294 .L0 
     /tmp/ccuCIcBx.s:484    .text:0000000000000294 .L0 
     /tmp/ccuCIcBx.s:485    .text:0000000000000298 .L0 
     /tmp/ccuCIcBx.s:488    .text:00000000000002a0 .L0 
     /tmp/ccuCIcBx.s:489    .text:00000000000002a0 .L0 
     /tmp/ccuCIcBx.s:491    .text:00000000000002a4 .L0 
     /tmp/ccuCIcBx.s:493    .text:00000000000002a4 .L0 
     /tmp/ccuCIcBx.s:494    .text:00000000000002a4 .L0 
     /tmp/ccuCIcBx.s:497    .text:00000000000002ac .L0 
     /tmp/ccuCIcBx.s:498    .text:00000000000002b0 .L0 
     /tmp/ccuCIcBx.s:500    .text:00000000000002b4 .L0 
     /tmp/ccuCIcBx.s:501    .text:00000000000002b4 .L0 
     /tmp/ccuCIcBx.s:503    .text:00000000000002b8 .L0 
     /tmp/ccuCIcBx.s:505    .text:00000000000002bc .L0 
     /tmp/ccuCIcBx.s:511    .text:00000000000002bc _ZN15MemoryAllocator20insertNewFreeSegmentEPvm
     /tmp/ccuCIcBx.s:514    .text:00000000000002bc .L0 
     /tmp/ccuCIcBx.s:516    .text:00000000000002bc .L0 
     /tmp/ccuCIcBx.s:517    .text:00000000000002c0 .L0 
     /tmp/ccuCIcBx.s:522    .text:00000000000002d0 .L0 
     /tmp/ccuCIcBx.s:523    .text:00000000000002d0 .L0 
     /tmp/ccuCIcBx.s:524    .text:00000000000002d0 .L0 
     /tmp/ccuCIcBx.s:525    .text:00000000000002d0 .L0 
     /tmp/ccuCIcBx.s:527    .text:00000000000002d4 .L0 
     /tmp/ccuCIcBx.s:531    .text:00000000000002dc .L0 
GAS LISTING /tmp/ccuCIcBx.s 			page 29


     /tmp/ccuCIcBx.s:532    .text:00000000000002dc .L0 
     /tmp/ccuCIcBx.s:535    .text:00000000000002e4 .L0 
     /tmp/ccuCIcBx.s:536    .text:00000000000002e4 .L0 
     /tmp/ccuCIcBx.s:537    .text:00000000000002e4 .L0 
     /tmp/ccuCIcBx.s:540    .text:00000000000002ec .L0 
     /tmp/ccuCIcBx.s:541    .text:00000000000002ec .L0 
     /tmp/ccuCIcBx.s:542    .text:00000000000002ec .L0 
     /tmp/ccuCIcBx.s:544    .text:00000000000002f0 .L0 
     /tmp/ccuCIcBx.s:545    .text:00000000000002f0 .L0 
     /tmp/ccuCIcBx.s:547    .text:00000000000002f4 .L0 
     /tmp/ccuCIcBx.s:551    .text:00000000000002f8 .L0 
     /tmp/ccuCIcBx.s:552    .text:00000000000002f8 .L0 
     /tmp/ccuCIcBx.s:554    .text:00000000000002fc .L0 
     /tmp/ccuCIcBx.s:557    .text:0000000000000300 .L0 
     /tmp/ccuCIcBx.s:558    .text:0000000000000300 .L0 
     /tmp/ccuCIcBx.s:559    .text:0000000000000300 .L0 
     /tmp/ccuCIcBx.s:561    .text:0000000000000304 .L0 
     /tmp/ccuCIcBx.s:564    .text:0000000000000308 .L0 
     /tmp/ccuCIcBx.s:567    .text:000000000000030c .L0 
     /tmp/ccuCIcBx.s:568    .text:000000000000030c .L0 
     /tmp/ccuCIcBx.s:571    .text:0000000000000310 .L0 
     /tmp/ccuCIcBx.s:572    .text:0000000000000310 .L0 
     /tmp/ccuCIcBx.s:574    .text:0000000000000314 .L0 
     /tmp/ccuCIcBx.s:575    .text:0000000000000314 .L0 
     /tmp/ccuCIcBx.s:579    .text:0000000000000318 .L0 
     /tmp/ccuCIcBx.s:580    .text:0000000000000318 .L0 
     /tmp/ccuCIcBx.s:582    .text:000000000000031c .L0 
     /tmp/ccuCIcBx.s:584    .text:0000000000000320 .L0 
     /tmp/ccuCIcBx.s:586    .text:0000000000000324 .L0 
     /tmp/ccuCIcBx.s:589    .text:000000000000032c .L0 
     /tmp/ccuCIcBx.s:592    .text:0000000000000330 .L0 
     /tmp/ccuCIcBx.s:594    .text:0000000000000334 .L0 
     /tmp/ccuCIcBx.s:596    .text:0000000000000338 .L0 
     /tmp/ccuCIcBx.s:599    .text:0000000000000340 .L0 
     /tmp/ccuCIcBx.s:602    .text:0000000000000344 .L0 
     /tmp/ccuCIcBx.s:603    .text:0000000000000348 .L0 
     /tmp/ccuCIcBx.s:604    .text:0000000000000348 .L0 
     /tmp/ccuCIcBx.s:606    .text:000000000000034c .L0 
     /tmp/ccuCIcBx.s:607    .text:000000000000034c .L0 
     /tmp/ccuCIcBx.s:609    .text:0000000000000350 .L0 
     /tmp/ccuCIcBx.s:612    .text:0000000000000354 .L0 
     /tmp/ccuCIcBx.s:615    .text:0000000000000358 .L0 
     /tmp/ccuCIcBx.s:619    .text:000000000000035c .L0 
     /tmp/ccuCIcBx.s:621    .text:000000000000035c .L0 
     /tmp/ccuCIcBx.s:622    .text:000000000000035c .L0 
     /tmp/ccuCIcBx.s:627    .text:0000000000000368 .L0 
     /tmp/ccuCIcBx.s:628    .text:0000000000000368 .L0 
     /tmp/ccuCIcBx.s:630    .text:000000000000036c .L0 
     /tmp/ccuCIcBx.s:634    .text:0000000000000378 .L0 
     /tmp/ccuCIcBx.s:635    .text:0000000000000378 .L0 
     /tmp/ccuCIcBx.s:637    .text:000000000000037c .L0 
     /tmp/ccuCIcBx.s:641    .text:0000000000000384 .L0 
     /tmp/ccuCIcBx.s:642    .text:0000000000000384 .L0 
     /tmp/ccuCIcBx.s:644    .text:0000000000000388 .L0 
     /tmp/ccuCIcBx.s:648    .text:0000000000000394 .L0 
     /tmp/ccuCIcBx.s:649    .text:0000000000000394 .L0 
     /tmp/ccuCIcBx.s:651    .text:0000000000000398 .L0 
GAS LISTING /tmp/ccuCIcBx.s 			page 30


     /tmp/ccuCIcBx.s:653    .text:000000000000039c .L0 
     /tmp/ccuCIcBx.s:654    .text:00000000000003a0 .L0 
     /tmp/ccuCIcBx.s:660    .text:00000000000003a0 _ZN15MemoryAllocator16tryToFreeSegmentEPv
     /tmp/ccuCIcBx.s:663    .text:00000000000003a0 .L0 
     /tmp/ccuCIcBx.s:665    .text:00000000000003a0 .L0 
     /tmp/ccuCIcBx.s:666    .text:00000000000003a4 .L0 
     /tmp/ccuCIcBx.s:671    .text:00000000000003b4 .L0 
     /tmp/ccuCIcBx.s:672    .text:00000000000003b4 .L0 
     /tmp/ccuCIcBx.s:673    .text:00000000000003b4 .L0 
     /tmp/ccuCIcBx.s:674    .text:00000000000003b4 .L0 
     /tmp/ccuCIcBx.s:676    .text:00000000000003b8 .L0 
     /tmp/ccuCIcBx.s:679    .text:00000000000003bc .L0 
     /tmp/ccuCIcBx.s:680    .text:00000000000003bc .L0 
     /tmp/ccuCIcBx.s:683    .text:00000000000003c4 .L0 
     /tmp/ccuCIcBx.s:684    .text:00000000000003c4 .L0 
     /tmp/ccuCIcBx.s:685    .text:00000000000003c4 .L0 
     /tmp/ccuCIcBx.s:688    .text:00000000000003cc .L0 
     /tmp/ccuCIcBx.s:692    .text:00000000000003d0 .L0 
     /tmp/ccuCIcBx.s:693    .text:00000000000003d0 .L0 
     /tmp/ccuCIcBx.s:695    .text:00000000000003d4 .L0 
     /tmp/ccuCIcBx.s:696    .text:00000000000003d4 .L0 
     /tmp/ccuCIcBx.s:698    .text:00000000000003d8 .L0 
     /tmp/ccuCIcBx.s:701    .text:00000000000003dc .L0 
     /tmp/ccuCIcBx.s:702    .text:00000000000003dc .L0 
     /tmp/ccuCIcBx.s:703    .text:00000000000003dc .L0 
     /tmp/ccuCIcBx.s:705    .text:00000000000003e0 .L0 
     /tmp/ccuCIcBx.s:708    .text:00000000000003e4 .L0 
     /tmp/ccuCIcBx.s:711    .text:00000000000003e8 .L0 
     /tmp/ccuCIcBx.s:713    .text:00000000000003ec .L0 
     /tmp/ccuCIcBx.s:714    .text:00000000000003ec .L0 
     /tmp/ccuCIcBx.s:716    .text:00000000000003f0 .L0 
     /tmp/ccuCIcBx.s:720    .text:00000000000003f4 .L0 
     /tmp/ccuCIcBx.s:721    .text:00000000000003f4 .L0 
     /tmp/ccuCIcBx.s:727    .text:0000000000000404 .L0 
     /tmp/ccuCIcBx.s:728    .text:0000000000000404 .L0 
     /tmp/ccuCIcBx.s:730    .text:0000000000000408 .L0 
     /tmp/ccuCIcBx.s:733    .text:000000000000040c .L0 
     /tmp/ccuCIcBx.s:734    .text:0000000000000410 .L0 
     /tmp/ccuCIcBx.s:735    .text:0000000000000410 .L0 
     /tmp/ccuCIcBx.s:737    .text:0000000000000414 .L0 
     /tmp/ccuCIcBx.s:738    .text:0000000000000414 .L0 
     /tmp/ccuCIcBx.s:740    .text:0000000000000418 .L0 
     /tmp/ccuCIcBx.s:743    .text:000000000000041c .L0 
     /tmp/ccuCIcBx.s:746    .text:0000000000000420 .L0 
     /tmp/ccuCIcBx.s:750    .text:0000000000000424 .L0 
     /tmp/ccuCIcBx.s:752    .text:0000000000000424 .L0 
     /tmp/ccuCIcBx.s:753    .text:0000000000000424 .L0 
     /tmp/ccuCIcBx.s:755    .text:0000000000000428 .L0 
     /tmp/ccuCIcBx.s:760    .text:0000000000000434 .L0 
     /tmp/ccuCIcBx.s:762    .text:000000000000043c .L0 
     /tmp/ccuCIcBx.s:768    .text:000000000000043c _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccuCIcBx.s:771    .text:000000000000043c .L0 
     /tmp/ccuCIcBx.s:773    .text:000000000000043c .L0 
     /tmp/ccuCIcBx.s:774    .text:0000000000000440 .L0 
     /tmp/ccuCIcBx.s:777    .text:0000000000000448 .L0 
     /tmp/ccuCIcBx.s:778    .text:0000000000000448 .L0 
     /tmp/ccuCIcBx.s:780    .text:000000000000044c .L0 
GAS LISTING /tmp/ccuCIcBx.s 			page 31


     /tmp/ccuCIcBx.s:782    .text:000000000000044c .L0 
     /tmp/ccuCIcBx.s:783    .text:000000000000044c .L0 
     /tmp/ccuCIcBx.s:786    .text:0000000000000454 .L0 
     /tmp/ccuCIcBx.s:787    .text:0000000000000458 .L0 
     /tmp/ccuCIcBx.s:789    .text:000000000000045c .L0 
     /tmp/ccuCIcBx.s:790    .text:000000000000045c .L0 
     /tmp/ccuCIcBx.s:792    .text:0000000000000460 .L0 
     /tmp/ccuCIcBx.s:794    .text:0000000000000464 .L0 
     /tmp/ccuCIcBx.s:800    .text:0000000000000464 _ZN15MemoryAllocator7kmallocEm
     /tmp/ccuCIcBx.s:803    .text:0000000000000464 .L0 
     /tmp/ccuCIcBx.s:805    .text:0000000000000464 .L0 
     /tmp/ccuCIcBx.s:806    .text:0000000000000468 .L0 
     /tmp/ccuCIcBx.s:809    .text:0000000000000470 .L0 
     /tmp/ccuCIcBx.s:810    .text:0000000000000470 .L0 
     /tmp/ccuCIcBx.s:812    .text:0000000000000474 .L0 
     /tmp/ccuCIcBx.s:814    .text:0000000000000474 .L0 
     /tmp/ccuCIcBx.s:815    .text:0000000000000474 .L0 
     /tmp/ccuCIcBx.s:818    .text:000000000000047c .L0 
     /tmp/ccuCIcBx.s:819    .text:0000000000000480 .L0 
     /tmp/ccuCIcBx.s:821    .text:0000000000000484 .L0 
     /tmp/ccuCIcBx.s:822    .text:0000000000000484 .L0 
     /tmp/ccuCIcBx.s:824    .text:0000000000000488 .L0 
     /tmp/ccuCIcBx.s:826    .text:000000000000048c .L0 
     /tmp/ccuCIcBx.s:832    .text:000000000000048c _ZN15MemoryAllocator15memAllocHandlerEv
     /tmp/ccuCIcBx.s:835    .text:000000000000048c .L0 
     /tmp/ccuCIcBx.s:836    .text:000000000000048c .L0 
     /tmp/ccuCIcBx.s:837    .text:0000000000000490 .L0 
     /tmp/ccuCIcBx.s:840    .text:0000000000000498 .L0 
     /tmp/ccuCIcBx.s:841    .text:0000000000000498 .L0 
     /tmp/ccuCIcBx.s:843    .text:000000000000049c .L0 
     /tmp/ccuCIcBx.s:845    .text:000000000000049c .L0 
     /tmp/ccuCIcBx.s:846    .text:000000000000049c .L0 
src/MemoryAllocator.cpp:211    .text:000000000000049c .L0 
     /tmp/ccuCIcBx.s:853    .text:00000000000004a0 .L0 
     /tmp/ccuCIcBx.s:854    .text:00000000000004a0 .L0 
     /tmp/ccuCIcBx.s:856    .text:00000000000004a0 .L0 
     /tmp/ccuCIcBx.s:861    .text:00000000000004ac .L0 
src/MemoryAllocator.cpp:214    .text:00000000000004ac .L0 
     /tmp/ccuCIcBx.s:867    .text:00000000000004b0 .L0 
     /tmp/ccuCIcBx.s:869    .text:00000000000004b0 .L0 
     /tmp/ccuCIcBx.s:872    .text:00000000000004b8 .L0 
     /tmp/ccuCIcBx.s:873    .text:00000000000004bc .L0 
     /tmp/ccuCIcBx.s:875    .text:00000000000004c0 .L0 
     /tmp/ccuCIcBx.s:876    .text:00000000000004c0 .L0 
     /tmp/ccuCIcBx.s:878    .text:00000000000004c4 .L0 
     /tmp/ccuCIcBx.s:880    .text:00000000000004c8 .L0 
     /tmp/ccuCIcBx.s:886    .text:00000000000004c8 _ZN15MemoryAllocator5kfreeEPv
     /tmp/ccuCIcBx.s:889    .text:00000000000004c8 .L0 
     /tmp/ccuCIcBx.s:891    .text:00000000000004c8 .L0 
     /tmp/ccuCIcBx.s:892    .text:00000000000004cc .L0 
     /tmp/ccuCIcBx.s:895    .text:00000000000004d4 .L0 
     /tmp/ccuCIcBx.s:896    .text:00000000000004d4 .L0 
     /tmp/ccuCIcBx.s:898    .text:00000000000004d8 .L0 
     /tmp/ccuCIcBx.s:900    .text:00000000000004d8 .L0 
     /tmp/ccuCIcBx.s:901    .text:00000000000004d8 .L0 
     /tmp/ccuCIcBx.s:904    .text:00000000000004e0 .L0 
     /tmp/ccuCIcBx.s:905    .text:00000000000004e4 .L0 
GAS LISTING /tmp/ccuCIcBx.s 			page 32


     /tmp/ccuCIcBx.s:907    .text:00000000000004e8 .L0 
     /tmp/ccuCIcBx.s:908    .text:00000000000004e8 .L0 
     /tmp/ccuCIcBx.s:910    .text:00000000000004ec .L0 
     /tmp/ccuCIcBx.s:912    .text:00000000000004f0 .L0 
     /tmp/ccuCIcBx.s:918    .text:00000000000004f0 _ZN15MemoryAllocator14memFreeHandlerEv
     /tmp/ccuCIcBx.s:921    .text:00000000000004f0 .L0 
     /tmp/ccuCIcBx.s:922    .text:00000000000004f0 .L0 
     /tmp/ccuCIcBx.s:923    .text:00000000000004f4 .L0 
     /tmp/ccuCIcBx.s:926    .text:00000000000004fc .L0 
     /tmp/ccuCIcBx.s:927    .text:00000000000004fc .L0 
     /tmp/ccuCIcBx.s:929    .text:0000000000000500 .L0 
     /tmp/ccuCIcBx.s:932    .text:0000000000000500 .L0 
     /tmp/ccuCIcBx.s:933    .text:0000000000000500 .L0 
src/MemoryAllocator.cpp:221    .text:0000000000000500 .L0 
     /tmp/ccuCIcBx.s:940    .text:0000000000000504 .L0 
     /tmp/ccuCIcBx.s:942    .text:0000000000000504 .L0 
     /tmp/ccuCIcBx.s:945    .text:000000000000050c .L0 
src/MemoryAllocator.cpp:223    .text:000000000000050c .L0 
     /tmp/ccuCIcBx.s:951    .text:0000000000000510 .L0 
     /tmp/ccuCIcBx.s:953    .text:0000000000000510 .L0 
     /tmp/ccuCIcBx.s:956    .text:0000000000000518 .L0 
     /tmp/ccuCIcBx.s:957    .text:000000000000051c .L0 
     /tmp/ccuCIcBx.s:959    .text:0000000000000520 .L0 
     /tmp/ccuCIcBx.s:960    .text:0000000000000520 .L0 
     /tmp/ccuCIcBx.s:962    .text:0000000000000524 .L0 
     /tmp/ccuCIcBx.s:964    .text:0000000000000528 .L0 
     /tmp/ccuCIcBx.s:975    .bss:0000000000000000 _ZN15MemoryAllocator18memoryInitiliaizedE
     /tmp/ccuCIcBx.s:984    .bss:0000000000000010 _ZN15MemoryAllocator8headFreeE
     /tmp/ccuCIcBx.s:980    .bss:0000000000000008 _ZN15MemoryAllocator13headAllocatedE
     /tmp/ccuCIcBx.s:972    .bss:0000000000000000 .LANCHOR0
     /tmp/ccuCIcBx.s:991    .text:0000000000000528 .L0 
     /tmp/ccuCIcBx.s:22     .text:000000000000000c .L0 
     /tmp/ccuCIcBx.s:28     .text:000000000000001c .L0 
     /tmp/ccuCIcBx.s:36     .text:0000000000000030 .L0 
     /tmp/ccuCIcBx.s:44     .text:0000000000000044 .L0 
     /tmp/ccuCIcBx.s:103    .text:00000000000000a8 .L0 
     /tmp/ccuCIcBx.s:111    .text:00000000000000b4 .L0 
     /tmp/ccuCIcBx.s:156    .text:00000000000000ec .L0 
     /tmp/ccuCIcBx.s:165    .text:00000000000000fc .L0 
     /tmp/ccuCIcBx.s:202    .text:0000000000000130 .L0 
     /tmp/ccuCIcBx.s:264    .text:000000000000017c .L0 
     /tmp/ccuCIcBx.s:299    .text:00000000000001ac .L0 
     /tmp/ccuCIcBx.s:348    .text:00000000000001e0 .L0 
     /tmp/ccuCIcBx.s:384    .text:0000000000000218 .L0 
     /tmp/ccuCIcBx.s:409    .text:000000000000023c .L0 
     /tmp/ccuCIcBx.s:445    .text:000000000000026c .L0 
     /tmp/ccuCIcBx.s:537    .text:00000000000002e4 .L0 
     /tmp/ccuCIcBx.s:622    .text:000000000000035c .L0 
     /tmp/ccuCIcBx.s:685    .text:00000000000003c4 .L0 
     /tmp/ccuCIcBx.s:755    .text:0000000000000428 .L0 
     /tmp/ccuCIcBx.s:53     .text:0000000000000064 .L1
     /tmp/ccuCIcBx.s:151    .text:00000000000000ec .L9
     /tmp/ccuCIcBx.s:158    .text:00000000000000f8 .L7
     /tmp/ccuCIcBx.s:127    .text:00000000000000d0 .L4
     /tmp/ccuCIcBx.s:235    .text:000000000000015c .L11
     /tmp/ccuCIcBx.s:230    .text:0000000000000158 .L17
     /tmp/ccuCIcBx.s:214    .text:0000000000000144 .L13
GAS LISTING /tmp/ccuCIcBx.s 			page 33


     /tmp/ccuCIcBx.s:260    .text:000000000000017c .L18
     /tmp/ccuCIcBx.s:242    .text:0000000000000164 .L10
     /tmp/ccuCIcBx.s:448    .text:0000000000000278 .L29
     /tmp/ccuCIcBx.s:327    .text:00000000000001d0 .L31
     /tmp/ccuCIcBx.s:304    .text:00000000000001b8 .L28
     /tmp/ccuCIcBx.s:416    .text:000000000000024c .L22
     /tmp/ccuCIcBx.s:387    .text:0000000000000224 .L23
     /tmp/ccuCIcBx.s:381    .text:0000000000000218 .L24
     /tmp/ccuCIcBx.s:425    .text:0000000000000254 .L25
     /tmp/ccuCIcBx.s:403    .text:0000000000000238 .L26
     /tmp/ccuCIcBx.s:441    .text:000000000000026c .L27
     /tmp/ccuCIcBx.s:456    .text:000000000000027c .L20
     /tmp/ccuCIcBx.s:570    .text:0000000000000310 .L35
     /tmp/ccuCIcBx.s:565    .text:000000000000030c .L43
     /tmp/ccuCIcBx.s:549    .text:00000000000002f8 .L37
     /tmp/ccuCIcBx.s:618    .text:000000000000035c .L44
     /tmp/ccuCIcBx.s:590    .text:0000000000000330 .L40
     /tmp/ccuCIcBx.s:625    .text:0000000000000368 .L45
     /tmp/ccuCIcBx.s:600    .text:0000000000000344 .L34
     /tmp/ccuCIcBx.s:639    .text:0000000000000384 .L46
     /tmp/ccuCIcBx.s:577    .text:0000000000000318 .L39
     /tmp/ccuCIcBx.s:726    .text:0000000000000404 .L48
     /tmp/ccuCIcBx.s:709    .text:00000000000003e8 .L56
     /tmp/ccuCIcBx.s:690    .text:00000000000003d0 .L52
     /tmp/ccuCIcBx.s:749    .text:0000000000000424 .L50
     /tmp/ccuCIcBx.s:758    .text:0000000000000434 .L54
     /tmp/ccuCIcBx.s:718    .text:00000000000003f4 .L51
     /tmp/ccuCIcBx.s:731    .text:000000000000040c .L47
     /tmp/ccuCIcBx.s:2210   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccuCIcBx.s:3734   .debug_str:0000000000000865 .LASF151
     /tmp/ccuCIcBx.s:3714   .debug_str:00000000000007d5 .LASF152
     /tmp/ccuCIcBx.s:3570   .debug_str:00000000000002e9 .LASF153
     /tmp/ccuCIcBx.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccuCIcBx.s:987    .text:0000000000000528 .Letext0
     /tmp/ccuCIcBx.s:3484   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccuCIcBx.s:3590   .debug_str:00000000000003b9 .LASF0
     /tmp/ccuCIcBx.s:3614   .debug_str:0000000000000476 .LASF1
     /tmp/ccuCIcBx.s:3686   .debug_str:00000000000006f7 .LASF2
     /tmp/ccuCIcBx.s:3694   .debug_str:0000000000000737 .LASF4
     /tmp/ccuCIcBx.s:3602   .debug_str:0000000000000412 .LASF3
     /tmp/ccuCIcBx.s:3496   .debug_str:0000000000000092 .LASF5
     /tmp/ccuCIcBx.s:3668   .debug_str:000000000000066c .LASF6
     /tmp/ccuCIcBx.s:3606   .debug_str:0000000000000446 .LASF7
     /tmp/ccuCIcBx.s:3568   .debug_str:00000000000002d9 .LASF8
     /tmp/ccuCIcBx.s:3574   .debug_str:0000000000000323 .LASF9
     /tmp/ccuCIcBx.s:3524   .debug_str:0000000000000166 .LASF10
     /tmp/ccuCIcBx.s:3562   .debug_str:00000000000002b8 .LASF11
     /tmp/ccuCIcBx.s:3532   .debug_str:00000000000001a4 .LASF12
     /tmp/ccuCIcBx.s:3522   .debug_str:0000000000000156 .LASF13
     /tmp/ccuCIcBx.s:3720   .debug_str:00000000000007fc .LASF14
     /tmp/ccuCIcBx.s:3554   .debug_str:0000000000000270 .LASF15
     /tmp/ccuCIcBx.s:3710   .debug_str:00000000000007b0 .LASF16
     /tmp/ccuCIcBx.s:3666   .debug_str:000000000000065c .LASF49
     /tmp/ccuCIcBx.s:3706   .debug_str:000000000000079d .LASF19
     /tmp/ccuCIcBx.s:3612   .debug_str:0000000000000471 .LASF17
     /tmp/ccuCIcBx.s:3526   .debug_str:0000000000000175 .LASF18
     /tmp/ccuCIcBx.s:3566   .debug_str:00000000000002d0 .LASF20
GAS LISTING /tmp/ccuCIcBx.s 			page 34


     /tmp/ccuCIcBx.s:3616   .debug_str:0000000000000489 .LASF21
     /tmp/ccuCIcBx.s:3618   .debug_str:0000000000000497 .LASF22
     /tmp/ccuCIcBx.s:3564   .debug_str:00000000000002c7 .LASF23
     /tmp/ccuCIcBx.s:3790   .debug_str:0000000000000b15 .LASF24
     /tmp/ccuCIcBx.s:3634   .debug_str:0000000000000542 .LASF25
     /tmp/ccuCIcBx.s:3500   .debug_str:00000000000000a4 .LASF27
     /tmp/ccuCIcBx.s:3724   .debug_str:000000000000082d .LASF26
     /tmp/ccuCIcBx.s:3636   .debug_str:000000000000054c .LASF28
     /tmp/ccuCIcBx.s:3758   .debug_str:0000000000000a07 .LASF37
     /tmp/ccuCIcBx.s:3738   .debug_str:000000000000093d .LASF39
     /tmp/ccuCIcBx.s:3672   .debug_str:0000000000000694 .LASF31
     /tmp/ccuCIcBx.s:3494   .debug_str:000000000000005d .LASF33
     /tmp/ccuCIcBx.s:3770   .debug_str:0000000000000a55 .LASF29
     /tmp/ccuCIcBx.s:3490   .debug_str:0000000000000027 .LASF30
     /tmp/ccuCIcBx.s:3726   .debug_str:0000000000000836 .LASF32
     /tmp/ccuCIcBx.s:3578   .debug_str:0000000000000344 .LASF34
     /tmp/ccuCIcBx.s:3486   .debug_str:0000000000000000 .LASF35
     /tmp/ccuCIcBx.s:3660   .debug_str:00000000000005ea .LASF36
     /tmp/ccuCIcBx.s:3556   .debug_str:0000000000000286 .LASF38
     /tmp/ccuCIcBx.s:3772   .debug_str:0000000000000a6b .LASF40
     /tmp/ccuCIcBx.s:3712   .debug_str:00000000000007c6 .LASF41
     /tmp/ccuCIcBx.s:3548   .debug_str:000000000000022c .LASF42
     /tmp/ccuCIcBx.s:3542   .debug_str:00000000000001fd .LASF43
     /tmp/ccuCIcBx.s:3756   .debug_str:00000000000009d8 .LASF44
     /tmp/ccuCIcBx.s:3778   .debug_str:0000000000000abb .LASF45
     /tmp/ccuCIcBx.s:3628   .debug_str:00000000000004fd .LASF46
     /tmp/ccuCIcBx.s:3530   .debug_str:000000000000019e .LASF47
     /tmp/ccuCIcBx.s:3662   .debug_str:0000000000000614 .LASF48
     /tmp/ccuCIcBx.s:3766   .debug_str:0000000000000a45 .LASF50
     /tmp/ccuCIcBx.s:3586   .debug_str:0000000000000396 .LASF70
     /tmp/ccuCIcBx.s:3622   .debug_str:00000000000004c8 .LASF72
     /tmp/ccuCIcBx.s:3752   .debug_str:00000000000009c0 .LASF51
     /tmp/ccuCIcBx.s:3782   .debug_str:0000000000000ad9 .LASF52
     /tmp/ccuCIcBx.s:3704   .debug_str:0000000000000781 .LASF53
     /tmp/ccuCIcBx.s:3644   .debug_str:000000000000058f .LASF54
     /tmp/ccuCIcBx.s:3626   .debug_str:00000000000004e5 .LASF55
     /tmp/ccuCIcBx.s:3552   .debug_str:0000000000000266 .LASF56
     /tmp/ccuCIcBx.s:3488   .debug_str:0000000000000011 .LASF57
     /tmp/ccuCIcBx.s:3630   .debug_str:000000000000051c .LASF58
     /tmp/ccuCIcBx.s:3762   .debug_str:0000000000000a1d .LASF59
     /tmp/ccuCIcBx.s:3518   .debug_str:0000000000000132 .LASF60
     /tmp/ccuCIcBx.s:3620   .debug_str:00000000000004aa .LASF61
     /tmp/ccuCIcBx.s:3546   .debug_str:0000000000000215 .LASF62
     /tmp/ccuCIcBx.s:3528   .debug_str:000000000000017a .LASF63
     /tmp/ccuCIcBx.s:3598   .debug_str:00000000000003ed .LASF64
     /tmp/ccuCIcBx.s:3534   .debug_str:00000000000001b4 .LASF65
     /tmp/ccuCIcBx.s:3700   .debug_str:0000000000000758 .LASF66
     /tmp/ccuCIcBx.s:3558   .debug_str:0000000000000296 .LASF67
     /tmp/ccuCIcBx.s:3592   .debug_str:00000000000003c6 .LASF68
     /tmp/ccuCIcBx.s:3776   .debug_str:0000000000000aa1 .LASF69
     /tmp/ccuCIcBx.s:3750   .debug_str:00000000000009b7 .LASF71
     /tmp/ccuCIcBx.s:3744   .debug_str:0000000000000987 .LASF73
     /tmp/ccuCIcBx.s:3682   .debug_str:00000000000006e3 .LASF74
     /tmp/ccuCIcBx.s:3658   .debug_str:00000000000005d5 .LASF75
     /tmp/ccuCIcBx.s:3754   .debug_str:00000000000009d1 .LASF76
     /tmp/ccuCIcBx.s:3674   .debug_str:00000000000006af .LASF77
     /tmp/ccuCIcBx.s:3654   .debug_str:00000000000005ba .LASF78
GAS LISTING /tmp/ccuCIcBx.s 			page 35


     /tmp/ccuCIcBx.s:3608   .debug_str:0000000000000459 .LASF79
     /tmp/ccuCIcBx.s:3646   .debug_str:000000000000059a .LASF80
     /tmp/ccuCIcBx.s:3736   .debug_str:0000000000000929 .LASF81
     /tmp/ccuCIcBx.s:3648   .debug_str:00000000000005a2 .LASF82
     /tmp/ccuCIcBx.s:3656   .debug_str:00000000000005c1 .LASF83
     /tmp/ccuCIcBx.s:3638   .debug_str:000000000000056d .LASF84
     /tmp/ccuCIcBx.s:3676   .debug_str:00000000000006c2 .LASF85
     /tmp/ccuCIcBx.s:3788   .debug_str:0000000000000b0d .LASF86
     /tmp/ccuCIcBx.s:3596   .debug_str:00000000000003d9 .LASF87
     /tmp/ccuCIcBx.s:3784   .debug_str:0000000000000ae8 .LASF88
     /tmp/ccuCIcBx.s:3718   .debug_str:00000000000007f5 .LASF89
     /tmp/ccuCIcBx.s:3696   .debug_str:000000000000073e .LASF90
     /tmp/ccuCIcBx.s:3698   .debug_str:0000000000000751 .LASF91
     /tmp/ccuCIcBx.s:3550   .debug_str:0000000000000253 .LASF92
     /tmp/ccuCIcBx.s:3544   .debug_str:000000000000020f .LASF93
     /tmp/ccuCIcBx.s:3502   .debug_str:00000000000000c5 .LASF94
     /tmp/ccuCIcBx.s:3594   .debug_str:00000000000003d3 .LASF95
     /tmp/ccuCIcBx.s:3540   .debug_str:00000000000001eb .LASF96
     /tmp/ccuCIcBx.s:3514   .debug_str:0000000000000110 .LASF97
     /tmp/ccuCIcBx.s:3702   .debug_str:0000000000000766 .LASF98
     /tmp/ccuCIcBx.s:3498   .debug_str:0000000000000099 .LASF99
     /tmp/ccuCIcBx.s:3690   .debug_str:000000000000070c .LASF100
     /tmp/ccuCIcBx.s:3684   .debug_str:00000000000006ec .LASF101
     /tmp/ccuCIcBx.s:3786   .debug_str:0000000000000af5 .LASF102
     /tmp/ccuCIcBx.s:3688   .debug_str:0000000000000705 .LASF103
     /tmp/ccuCIcBx.s:3520   .debug_str:0000000000000143 .LASF104
     /tmp/ccuCIcBx.s:3708   .debug_str:00000000000007a9 .LASF105
     /tmp/ccuCIcBx.s:3692   .debug_str:0000000000000724 .LASF106
     /tmp/ccuCIcBx.s:3768   .debug_str:0000000000000a4b .LASF107
     /tmp/ccuCIcBx.s:3780   .debug_str:0000000000000ac3 .LASF108
     /tmp/ccuCIcBx.s:3764   .debug_str:0000000000000a3b .LASF109
     /tmp/ccuCIcBx.s:3632   .debug_str:000000000000052c .LASF110
     /tmp/ccuCIcBx.s:3538   .debug_str:00000000000001e5 .LASF111
     /tmp/ccuCIcBx.s:3580   .debug_str:0000000000000373 .LASF112
     /tmp/ccuCIcBx.s:3584   .debug_str:0000000000000390 .LASF113
     /tmp/ccuCIcBx.s:3536   .debug_str:00000000000001d3 .LASF114
     /tmp/ccuCIcBx.s:3582   .debug_str:0000000000000385 .LASF115
     /tmp/ccuCIcBx.s:3588   .debug_str:00000000000003a1 .LASF116
     /tmp/ccuCIcBx.s:3748   .debug_str:00000000000009a8 .LASF117
     /tmp/ccuCIcBx.s:3572   .debug_str:0000000000000307 .LASF118
     /tmp/ccuCIcBx.s:3670   .debug_str:000000000000067f .LASF119
     /tmp/ccuCIcBx.s:3604   .debug_str:0000000000000424 .LASF120
     /tmp/ccuCIcBx.s:3680   .debug_str:00000000000006dc .LASF121
     /tmp/ccuCIcBx.s:3492   .debug_str:0000000000000055 .LASF122
     /tmp/ccuCIcBx.s:3508   .debug_str:00000000000000e9 .LASF123
     /tmp/ccuCIcBx.s:3746   .debug_str:000000000000099c .LASF124
     /tmp/ccuCIcBx.s:3510   .debug_str:00000000000000f8 .LASF125
     /tmp/ccuCIcBx.s:3642   .debug_str:000000000000057d .LASF126
     /tmp/ccuCIcBx.s:3576   .debug_str:0000000000000331 .LASF127
     /tmp/ccuCIcBx.s:3600   .debug_str:00000000000003ff .LASF128
     /tmp/ccuCIcBx.s:3516   .debug_str:000000000000011e .LASF129
     /tmp/ccuCIcBx.s:3730   .debug_str:0000000000000850 .LASF130
     /tmp/ccuCIcBx.s:3624   .debug_str:00000000000004e0 .LASF131
     /tmp/ccuCIcBx.s:3728   .debug_str:000000000000084b .LASF132
     /tmp/ccuCIcBx.s:3722   .debug_str:0000000000000808 .LASF133
     /tmp/ccuCIcBx.s:3740   .debug_str:0000000000000960 .LASF134
     /tmp/ccuCIcBx.s:3664   .debug_str:0000000000000632 .LASF135
GAS LISTING /tmp/ccuCIcBx.s 			page 36


     /tmp/ccuCIcBx.s:887    .text:00000000000004c8 .LFB36
     /tmp/ccuCIcBx.s:913    .text:00000000000004f0 .LFE36
     /tmp/ccuCIcBx.s:2803   .debug_loc:0000000000000000 .LLST33
     /tmp/ccuCIcBx.s:902    .text:00000000000004e0 .LVL81
     /tmp/ccuCIcBx.s:801    .text:0000000000000464 .LFB35
     /tmp/ccuCIcBx.s:827    .text:000000000000048c .LFE35
     /tmp/ccuCIcBx.s:2817   .debug_loc:0000000000000039 .LLST30
     /tmp/ccuCIcBx.s:816    .text:000000000000047c .LVL75
     /tmp/ccuCIcBx.s:919    .text:00000000000004f0 .LFB34
     /tmp/ccuCIcBx.s:965    .text:0000000000000528 .LFE34
     /tmp/ccuCIcBx.s:3512   .debug_str:000000000000010b .LASF136
     /tmp/ccuCIcBx.s:2831   .debug_loc:0000000000000072 .LLST34
     /tmp/ccuCIcBx.s:3560   .debug_str:00000000000002b1 .LASF137
     /tmp/ccuCIcBx.s:2843   .debug_loc:00000000000000a9 .LLST35
     /tmp/ccuCIcBx.s:943    .text:000000000000050c .LVL84
     /tmp/ccuCIcBx.s:954    .text:0000000000000518 .LVL85
     /tmp/ccuCIcBx.s:833    .text:000000000000048c .LFB33
     /tmp/ccuCIcBx.s:881    .text:00000000000004c8 .LFE33
     /tmp/ccuCIcBx.s:2850   .debug_loc:00000000000000cc .LLST31
     /tmp/ccuCIcBx.s:3774   .debug_str:0000000000000a93 .LASF138
     /tmp/ccuCIcBx.s:2865   .debug_loc:0000000000000106 .LLST32
     /tmp/ccuCIcBx.s:859    .text:00000000000004ac .LVL78
     /tmp/ccuCIcBx.s:870    .text:00000000000004b8 .LVL79
     /tmp/ccuCIcBx.s:661    .text:00000000000003a0 .LFB32
     /tmp/ccuCIcBx.s:763    .text:000000000000043c .LFE32
     /tmp/ccuCIcBx.s:2872   .debug_loc:0000000000000129 .LLST26
     /tmp/ccuCIcBx.s:3504   .debug_str:00000000000000d7 .LASF139
     /tmp/ccuCIcBx.s:2894   .debug_loc:0000000000000188 .LLST27
     /tmp/ccuCIcBx.s:3792   .debug_str:0000000000000b1f .LASF140
     /tmp/ccuCIcBx.s:2918   .debug_loc:00000000000001f8 .LLST28
     /tmp/ccuCIcBx.s:681    .text:00000000000003c4 .LVL61
     /tmp/ccuCIcBx.s:724    .text:0000000000000404 .LVL67
     /tmp/ccuCIcBx.s:512    .text:00000000000002bc .LFB31
     /tmp/ccuCIcBx.s:655    .text:00000000000003a0 .LFE31
     /tmp/ccuCIcBx.s:2938   .debug_loc:0000000000000255 .LLST21
     /tmp/ccuCIcBx.s:2960   .debug_loc:00000000000002b4 .LLST22
     /tmp/ccuCIcBx.s:2982   .debug_loc:0000000000000313 .LLST23
     /tmp/ccuCIcBx.s:3002   .debug_loc:0000000000000370 .LLST24
     /tmp/ccuCIcBx.s:3732   .debug_str:000000000000085a .LASF141
     /tmp/ccuCIcBx.s:3022   .debug_loc:00000000000003cd .LLST25
     /tmp/ccuCIcBx.s:533    .text:00000000000002e4 .LVL50
     /tmp/ccuCIcBx.s:274    .text:0000000000000188 .LFB30
     /tmp/ccuCIcBx.s:474    .text:0000000000000294 .LFE30
     /tmp/ccuCIcBx.s:3040   .debug_loc:0000000000000419 .LLST10
     /tmp/ccuCIcBx.s:3059   .debug_loc:0000000000000475 .LLST11
     /tmp/ccuCIcBx.s:3080   .debug_loc:00000000000004d3 .LLST12
     /tmp/ccuCIcBx.s:3108   .debug_loc:0000000000000556 .LLST13
     /tmp/ccuCIcBx.s:330    .text:00000000000001d0 .LBB10
     /tmp/ccuCIcBx.s:450    .text:0000000000000278 .LBE10
     /tmp/ccuCIcBx.s:3652   .debug_str:00000000000005b2 .LASF142
     /tmp/ccuCIcBx.s:3124   .debug_loc:00000000000005a0 .LLST14
     /tmp/ccuCIcBx.s:3640   .debug_str:0000000000000575 .LASF143
     /tmp/ccuCIcBx.s:3131   .debug_loc:00000000000005c3 .LLST15
     /tmp/ccuCIcBx.s:3760   .debug_str:0000000000000a12 .LASF144
     /tmp/ccuCIcBx.s:3208   .debug_loc:00000000000006a4 .LLST16
     /tmp/ccuCIcBx.s:3610   .debug_str:000000000000046c .LASF145
     /tmp/ccuCIcBx.s:3219   .debug_loc:00000000000006da .LLST17
GAS LISTING /tmp/ccuCIcBx.s 			page 37


     /tmp/ccuCIcBx.s:352    .text:00000000000001f0 .LBB12
     /tmp/ccuCIcBx.s:418    .text:000000000000024c .LBE12
     /tmp/ccuCIcBx.s:3678   .debug_str:00000000000006d6 .LASF146
     /tmp/ccuCIcBx.s:3226   .debug_loc:00000000000006fd .LLST18
     /tmp/ccuCIcBx.s:361    .text:00000000000001fc .LBB14
     /tmp/ccuCIcBx.s:388    .text:0000000000000224 .LBE14
     /tmp/ccuCIcBx.s:3650   .debug_str:00000000000005aa .LASF147
     /tmp/ccuCIcBx.s:3243   .debug_loc:0000000000000748 .LLST19
     /tmp/ccuCIcBx.s:432    .text:0000000000000264 .LVL40
     /tmp/ccuCIcBx.s:294    .text:00000000000001ac .LVL20
     /tmp/ccuCIcBx.s:177    .text:0000000000000108 .LFB29
     /tmp/ccuCIcBx.s:268    .text:0000000000000188 .LFE29
     /tmp/ccuCIcBx.s:3250   .debug_loc:000000000000076b .LLST5
     /tmp/ccuCIcBx.s:3272   .debug_loc:00000000000007ca .LLST6
     /tmp/ccuCIcBx.s:3294   .debug_loc:0000000000000829 .LLST7
     /tmp/ccuCIcBx.s:3314   .debug_loc:0000000000000886 .LLST8
     /tmp/ccuCIcBx.s:3506   .debug_str:00000000000000dc .LASF148
     /tmp/ccuCIcBx.s:3334   .debug_loc:00000000000008e3 .LLST9
     /tmp/ccuCIcBx.s:198    .text:0000000000000130 .LVL9
     /tmp/ccuCIcBx.s:68     .text:0000000000000070 .LFB28
     /tmp/ccuCIcBx.s:171    .text:0000000000000108 .LFE28
     /tmp/ccuCIcBx.s:3352   .debug_loc:000000000000092f .LLST0
     /tmp/ccuCIcBx.s:3374   .debug_loc:000000000000098e .LLST1
     /tmp/ccuCIcBx.s:3716   .debug_str:00000000000007ed .LASF149
     /tmp/ccuCIcBx.s:3396   .debug_loc:00000000000009ed .LLST2
     /tmp/ccuCIcBx.s:3418   .debug_loc:0000000000000a4c .LLST3
     /tmp/ccuCIcBx.s:115    .text:00000000000000c4 .LBB4
     /tmp/ccuCIcBx.s:128    .text:00000000000000d0 .LBE4
     /tmp/ccuCIcBx.s:3742   .debug_str:000000000000097f .LASF150
     /tmp/ccuCIcBx.s:3436   .debug_loc:0000000000000a98 .LLST4
     /tmp/ccuCIcBx.s:92     .text:00000000000000a0 .LVL1
     /tmp/ccuCIcBx.s:10     .text:0000000000000000 .LFB27
     /tmp/ccuCIcBx.s:62     .text:0000000000000070 .LFE27
     /tmp/ccuCIcBx.s:769    .text:000000000000043c .LFB26
     /tmp/ccuCIcBx.s:795    .text:0000000000000464 .LFE26
     /tmp/ccuCIcBx.s:3443   .debug_loc:0000000000000abb .LLST29
     /tmp/ccuCIcBx.s:784    .text:0000000000000454 .LVL73
     /tmp/ccuCIcBx.s:480    .text:0000000000000294 .LFB25
     /tmp/ccuCIcBx.s:506    .text:00000000000002bc .LFE25
     /tmp/ccuCIcBx.s:3457   .debug_loc:0000000000000af4 .LLST20
     /tmp/ccuCIcBx.s:495    .text:00000000000002ac .LVL48
     /tmp/ccuCIcBx.s:890    .text:00000000000004c8 .LVL80
     /tmp/ccuCIcBx.s:804    .text:0000000000000464 .LVL74
     /tmp/ccuCIcBx.s:931    .text:0000000000000500 .LVL82
     /tmp/ccuCIcBx.s:938    .text:0000000000000504 .LVL83
     /tmp/ccuCIcBx.s:851    .text:00000000000004a0 .LVL76
     /tmp/ccuCIcBx.s:857    .text:00000000000004a4 .LVL77
     /tmp/ccuCIcBx.s:664    .text:00000000000003a0 .LVL60
     /tmp/ccuCIcBx.s:744    .text:000000000000041c .LVL69
     /tmp/ccuCIcBx.s:748    .text:0000000000000424 .LVL70
     /tmp/ccuCIcBx.s:689    .text:00000000000003d0 .LVL63
     /tmp/ccuCIcBx.s:700    .text:00000000000003dc .LVL64
     /tmp/ccuCIcBx.s:706    .text:00000000000003e4 .LVL65
     /tmp/ccuCIcBx.s:717    .text:00000000000003f4 .LVL66
     /tmp/ccuCIcBx.s:756    .text:0000000000000430 .LVL71
     /tmp/ccuCIcBx.s:686    .text:00000000000003cc .LVL62
     /tmp/ccuCIcBx.s:741    .text:0000000000000418 .LVL68
GAS LISTING /tmp/ccuCIcBx.s 			page 38


     /tmp/ccuCIcBx.s:515    .text:00000000000002bc .LVL49
     /tmp/ccuCIcBx.s:610    .text:0000000000000350 .LVL56
     /tmp/ccuCIcBx.s:617    .text:000000000000035c .LVL58
     /tmp/ccuCIcBx.s:613    .text:0000000000000354 .LVL57
     /tmp/ccuCIcBx.s:548    .text:00000000000002f8 .LVL52
     /tmp/ccuCIcBx.s:556    .text:0000000000000300 .LVL53
     /tmp/ccuCIcBx.s:562    .text:0000000000000308 .LVL54
     /tmp/ccuCIcBx.s:538    .text:00000000000002ec .LVL51
     /tmp/ccuCIcBx.s:576    .text:0000000000000318 .LVL55
     /tmp/ccuCIcBx.s:623    .text:0000000000000364 .LVL59
     /tmp/ccuCIcBx.s:277    .text:0000000000000188 .LVL19
     /tmp/ccuCIcBx.s:386    .text:0000000000000224 .LVL31
     /tmp/ccuCIcBx.s:415    .text:000000000000024c .LVL38
     /tmp/ccuCIcBx.s:469    .text:000000000000028c .LVL46
     /tmp/ccuCIcBx.s:436    .text:0000000000000268 .LVL41
     /tmp/ccuCIcBx.s:440    .text:000000000000026c .LVL42
     /tmp/ccuCIcBx.s:455    .text:000000000000027c .LVL44
     /tmp/ccuCIcBx.s:303    .text:00000000000001b8 .LVL22
     /tmp/ccuCIcBx.s:317    .text:00000000000001c4 .LVL23
     /tmp/ccuCIcBx.s:323    .text:00000000000001cc .LVL24
     /tmp/ccuCIcBx.s:407    .text:000000000000023c .LVL35
     /tmp/ccuCIcBx.s:424    .text:0000000000000254 .LVL39
     /tmp/ccuCIcBx.s:300    .text:00000000000001b4 .LVL21
     /tmp/ccuCIcBx.s:466    .text:0000000000000288 .LVL45
     /tmp/ccuCIcBx.s:332    .text:00000000000001d0 .LVL25
     /tmp/ccuCIcBx.s:447    .text:0000000000000278 .LVL43
     /tmp/ccuCIcBx.s:338    .text:00000000000001d8 .LVL26
     /tmp/ccuCIcBx.s:395    .text:000000000000022c .LVL32
     /tmp/ccuCIcBx.s:400    .text:0000000000000234 .LVL33
     /tmp/ccuCIcBx.s:402    .text:0000000000000238 .LVL34
     /tmp/ccuCIcBx.s:410    .text:0000000000000244 .LVL36
     /tmp/ccuCIcBx.s:413    .text:0000000000000248 .LVL37
     /tmp/ccuCIcBx.s:344    .text:00000000000001e0 .LVL27
     /tmp/ccuCIcBx.s:356    .text:00000000000001f4 .LVL28
     /tmp/ccuCIcBx.s:372    .text:0000000000000208 .LVL30
     /tmp/ccuCIcBx.s:363    .text:00000000000001fc .LVL29
     /tmp/ccuCIcBx.s:180    .text:0000000000000108 .LVL8
     /tmp/ccuCIcBx.s:252    .text:0000000000000170 .LVL15
     /tmp/ccuCIcBx.s:259    .text:000000000000017c .LVL17
     /tmp/ccuCIcBx.s:255    .text:0000000000000174 .LVL16
     /tmp/ccuCIcBx.s:213    .text:0000000000000144 .LVL11
     /tmp/ccuCIcBx.s:221    .text:000000000000014c .LVL12
     /tmp/ccuCIcBx.s:227    .text:0000000000000154 .LVL13
     /tmp/ccuCIcBx.s:203    .text:0000000000000138 .LVL10
     /tmp/ccuCIcBx.s:241    .text:0000000000000164 .LVL14
     /tmp/ccuCIcBx.s:265    .text:0000000000000184 .LVL18
     /tmp/ccuCIcBx.s:71     .text:0000000000000070 .LVL0
     /tmp/ccuCIcBx.s:140    .text:00000000000000dc .LVL4
     /tmp/ccuCIcBx.s:150    .text:00000000000000ec .LVL7
     /tmp/ccuCIcBx.s:146    .text:00000000000000e4 .LVL6
     /tmp/ccuCIcBx.s:143    .text:00000000000000e0 .LVL5
     /tmp/ccuCIcBx.s:117    .text:00000000000000c4 .LVL2
     /tmp/ccuCIcBx.s:126    .text:00000000000000d0 .LVL3
     /tmp/ccuCIcBx.s:772    .text:000000000000043c .LVL72
     /tmp/ccuCIcBx.s:483    .text:0000000000000294 .LVL47
     /tmp/ccuCIcBx.s:992    .debug_info:0000000000000000 .Ldebug_info0

GAS LISTING /tmp/ccuCIcBx.s 			page 39


UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
_ZN5Riscv13w_a0_sscratchEv
