GAS LISTING /tmp/ccl2M3Tu.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv20initMemoryAllocationEv
   9              	_ZN5Riscv20initMemoryAllocationEv:
  10              	.LFB27:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Scheduler.hpp"
  12:src/Riscv.cpp **** #include "../h/buddyTests.hpp"
  13:src/Riscv.cpp **** #include "../h/slabTests.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  16:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  17:src/Riscv.cpp **** bool Riscv::kernelMainCalled = false;
  18:src/Riscv.cpp **** kmem_cache_t * Riscv::pcbCache = nullptr;
  19:src/Riscv.cpp **** kmem_cache_t * Riscv::semaphoreCache = nullptr;
  20:src/Riscv.cpp **** void* Riscv::mainPMT = nullptr;
  21:src/Riscv.cpp **** void* Riscv::riscvBuddy = nullptr;
  22:src/Riscv.cpp **** 
  23:src/Riscv.cpp **** void Riscv::initMemoryAllocation()
  24:src/Riscv.cpp **** {
  12              		.loc 1 24 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  25:src/Riscv.cpp ****     size_t totalNumOfBytes = (size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1;
  22              		.loc 1 25 5
  23              		.loc 1 25 52 is_stmt 0
  24 0010 97070000 		la	a5,HEAP_START_ADDR
  24      83B70700 
  25 0018 03B50700 		ld	a0,0(a5)
  26 001c 97070000 		la	a5,HEAP_END_ADDR
  26      83B70700 
  27 0024 83B70700 		ld	a5,0(a5)
  28 0028 B387A740 		sub	a5,a5,a0
  29              		.loc 1 25 12
  30 002c 93871700 		addi	a5,a5,1
  31              	.LVL0:
GAS LISTING /tmp/ccl2M3Tu.s 			page 2


  26:src/Riscv.cpp ****     size_t bytesForKernel = totalNumOfBytes / 10; //TODO change this if needed
  32              		.loc 1 26 5 is_stmt 1
  33              		.loc 1 26 12 is_stmt 0
  34 0030 1307A000 		li	a4,10
  35 0034 B3D7E702 		divu	a5,a5,a4
  36              	.LVL1:
  27:src/Riscv.cpp ****     size_t numOfBlocks = (bytesForKernel + BLOCK_NUM_OF_BYTES - 1) / BLOCK_NUM_OF_BYTES;
  37              		.loc 1 27 5 is_stmt 1
  38              		.loc 1 27 63 is_stmt 0
  39 0038 37170000 		li	a4,4096
  40 003c 1307F7FF 		addi	a4,a4,-1
  41 0040 B387E700 		add	a5,a5,a4
  42              	.LVL2:
  28:src/Riscv.cpp **** 
  29:src/Riscv.cpp ****     void* newStartAddr = (void*)((size_t)HEAP_START_ADDR + numOfBlocks*BLOCK_NUM_OF_BYTES);
  43              		.loc 1 29 5 is_stmt 1
  44              		.loc 1 29 71 is_stmt 0
  45 0044 37F7FFFF 		li	a4,-4096
  46 0048 B3F7E700 		and	a5,a5,a4
  47              	.LVL3:
  30:src/Riscv.cpp ****     MemoryAllocator::initMemory(newStartAddr);
  48              		.loc 1 30 5 is_stmt 1
  49              		.loc 1 30 32 is_stmt 0
  50 004c 3305F500 		add	a0,a0,a5
  51              	.LVL4:
  52 0050 97000000 		call	_ZN15MemoryAllocator10initMemoryEPv@plt
  52      E7800000 
  53              	.LVL5:
  31:src/Riscv.cpp **** 
  32:src/Riscv.cpp ****     //kmem_init((void*)HEAP_START_ADDR, numOfBlocks);
  33:src/Riscv.cpp ****     //pcbCache = kmem_cache_create("Cache of PCBs", sizeof(PCB), nullptr, nullptr);
  34:src/Riscv.cpp ****     //semaphoreCache = kmem_cache_create("Cache of KSemaphore", sizeof(KSemaphore), nullptr, nullpt
  35:src/Riscv.cpp **** }
  54              		.loc 1 35 1
  55 0058 83308100 		ld	ra,8(sp)
  56              		.cfi_restore 1
  57 005c 03340100 		ld	s0,0(sp)
  58              		.cfi_restore 8
  59              		.cfi_def_cfa 2, 16
  60 0060 13010101 		addi	sp,sp,16
  61              		.cfi_def_cfa_offset 0
  62 0064 67800000 		jr	ra
  63              		.cfi_endproc
  64              	.LFE27:
  66              		.align	2
  67              		.globl	_ZN5Riscv17initVirtualMemoryEv
  69              	_ZN5Riscv17initVirtualMemoryEv:
  70              	.LFB28:
  36:src/Riscv.cpp **** 
  37:src/Riscv.cpp **** void Riscv::initVirtualMemory()
  38:src/Riscv.cpp **** {
  71              		.loc 1 38 1 is_stmt 1
  72              		.cfi_startproc
  73 0068 130101FF 		addi	sp,sp,-16
  74              		.cfi_def_cfa_offset 16
  75 006c 23348100 		sd	s0,8(sp)
  76              		.cfi_offset 8, -8
GAS LISTING /tmp/ccl2M3Tu.s 			page 3


  77 0070 13040101 		addi	s0,sp,16
  78              		.cfi_def_cfa 8, 0
  39:src/Riscv.cpp ****     //size_t addr = (size_t)getNextBlockAddr((size_t)HEAP_START_ADDR);
  40:src/Riscv.cpp **** 
  41:src/Riscv.cpp ****     //size_t pmtSize = (1 << 9);
  42:src/Riscv.cpp ****     //size_t descSize = 64;
  43:src/Riscv.cpp ****     //size_t
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp **** }
  79              		.loc 1 45 1 is_stmt 0
  80 0074 03348100 		ld	s0,8(sp)
  81              		.cfi_restore 8
  82              		.cfi_def_cfa 2, 16
  83 0078 13010101 		addi	sp,sp,16
  84              		.cfi_def_cfa_offset 0
  85 007c 67800000 		jr	ra
  86              		.cfi_endproc
  87              	.LFE28:
  89              		.align	2
  90              		.globl	_ZN5Riscv16enableInterruptsEv
  92              	_ZN5Riscv16enableInterruptsEv:
  93              	.LFB31:
  46:src/Riscv.cpp **** 
  47:src/Riscv.cpp **** void Riscv::initSystem()
  48:src/Riscv.cpp **** {
  49:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  50:src/Riscv.cpp **** 
  51:src/Riscv.cpp ****     riscvBuddy = (void*)getNextBlockAddr((size_t)HEAP_START_ADDR);
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp ****     size_t totalNumOfBytes = (size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1;
  54:src/Riscv.cpp ****     size_t bytesForKernel = totalNumOfBytes / 6; //TODO change this if needed
  55:src/Riscv.cpp ****     size_t numOfBlocks = (bytesForKernel + BLOCK_NUM_OF_BYTES - 1) / BLOCK_NUM_OF_BYTES;
  56:src/Riscv.cpp ****     void* newStartAddr = (void*)((size_t)HEAP_START_ADDR + numOfBlocks*BLOCK_NUM_OF_BYTES);
  57:src/Riscv.cpp ****     MemoryAllocator::initMemory(newStartAddr);
  58:src/Riscv.cpp **** 
  59:src/Riscv.cpp ****     kmem_init((void*)HEAP_START_ADDR, numOfBlocks);
  60:src/Riscv.cpp ****     pcbCache = kmem_cache_create("Cache of PCBs", sizeof(PCB), nullptr, nullptr);
  61:src/Riscv.cpp ****     semaphoreCache = kmem_cache_create("Cache of KSemaphore", sizeof(KSemaphore), nullptr, nullptr)
  62:src/Riscv.cpp **** 
  63:src/Riscv.cpp ****     //initMemoryAllocation();
  64:src/Riscv.cpp ****     PCB::initialize();
  65:src/Riscv.cpp ****     KConsole::initialize();
  66:src/Riscv.cpp **** 
  67:src/Riscv.cpp ****     //KConsole::trapPrintStringInt("Buddy allocator: ", (size_t)riscvBuddy, 16);
  68:src/Riscv.cpp ****     //printSlabAllocatorInfo();
  69:src/Riscv.cpp ****     mainPMT = buddy_alloc((buddyAllocator*)riscvBuddy, 1);
  70:src/Riscv.cpp ****     for(size_t i = 0; i < (1 << 9);i++)
  71:src/Riscv.cpp ****         ((size_t*)mainPMT)[i] = 0;
  72:src/Riscv.cpp **** 
  73:src/Riscv.cpp ****     KConsole::trapPrintStringInt("main PMT ", (size_t)mainPMT,16);
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****     //printBuddyInfo((buddyAllocator*)riscvBuddy);
  76:src/Riscv.cpp **** 
  77:src/Riscv.cpp ****     //for(int i = 0; i < 20;i++)
  78:src/Riscv.cpp ****     //    buddy_alloc((buddyAllocator*)riscvBuddy, 1);
  79:src/Riscv.cpp **** 
  80:src/Riscv.cpp ****     for(size_t addr = 0x80000000; addr < (size_t)HEAP_START_ADDR;addr++)
GAS LISTING /tmp/ccl2M3Tu.s 			page 4


  81:src/Riscv.cpp ****         addVirtualAddrInstr(addr);
  82:src/Riscv.cpp **** 
  83:src/Riscv.cpp ****     /*size_t x = (((size_t*)mainPMT)[2] >> 10) << 12;
  84:src/Riscv.cpp ****     x = (((size_t*)x)[0] >> 10) << 12;
  85:src/Riscv.cpp ****     for(int i = 0;i < 512;i++)
  86:src/Riscv.cpp ****     {
  87:src/Riscv.cpp ****         KConsole::trapPrintStringInt("i ", i);
  88:src/Riscv.cpp ****         KConsole::trapPrintInt(((size_t*)x)[i], 16);
  89:src/Riscv.cpp ****         KConsole::trapPrintString("\n");
  90:src/Riscv.cpp ****         //size_t x = ((size_t*)x)[i] >> 10)) << 12;
  91:src/Riscv.cpp ****         KConsole::trapPrintInt((((size_t*)x)[i] >> 10) << 12, 16);
  92:src/Riscv.cpp ****         KConsole::trapPrintString("\n");
  93:src/Riscv.cpp **** 
  94:src/Riscv.cpp ****     }*/
  95:src/Riscv.cpp **** 
  96:src/Riscv.cpp ****     //printBuddyInfo((buddyAllocator*)riscvBuddy);
  97:src/Riscv.cpp **** 
  98:src/Riscv.cpp ****     for(size_t addr = (size_t)HEAP_START_ADDR;addr < (size_t)HEAP_END_ADDR;addr+=4096)
  99:src/Riscv.cpp ****         addVirtualAddr(addr);
 100:src/Riscv.cpp **** 
 101:src/Riscv.cpp ****     //KConsole::trapPrintStringInt("Num of blocks ", numOfBlocks);
 102:src/Riscv.cpp ****     //size_t x = (size_t)HEAP_START_ADDR - 0x80000000;
 103:src/Riscv.cpp ****     //x/=BLOCK_SIZE;
 104:src/Riscv.cpp ****     //KConsole::trapPrintStringInt("X ", x);
 105:src/Riscv.cpp ****     //x/=BLOCK_SIZE;
 106:src/Riscv.cpp ****     //KConsole::trapPrintStringInt("x2 ", x);
 107:src/Riscv.cpp **** 
 108:src/Riscv.cpp ****     addVirtualAddr((size_t)CONSOLE_RX_DATA);
 109:src/Riscv.cpp ****     addVirtualAddr((size_t)CONSOLE_TX_DATA);
 110:src/Riscv.cpp ****     addVirtualAddr((size_t)CONSOLE_STATUS);
 111:src/Riscv.cpp ****     addVirtualAddr(0xc201004);
 112:src/Riscv.cpp **** 
 113:src/Riscv.cpp **** 
 114:src/Riscv.cpp ****     //Riscv::w_sstatus()
 115:src/Riscv.cpp ****     size_t satp = ((size_t)1 << 63) | ((size_t)mainPMT / BLOCK_SIZE);
 116:src/Riscv.cpp ****     __asm__ volatile("csrw satp, %0" : :"r"(satp));
 117:src/Riscv.cpp **** }
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp **** void Riscv::endSystem()
 120:src/Riscv.cpp **** {
 121:src/Riscv.cpp ****     disableInterrupts();
 122:src/Riscv.cpp ****     finishSystem = true;
 123:src/Riscv.cpp ****     PCB* pcb = 0;
 124:src/Riscv.cpp ****     while(true)
 125:src/Riscv.cpp ****     {
 126:src/Riscv.cpp ****         pcb = Scheduler::get();
 127:src/Riscv.cpp ****         if(pcb == 0) break;
 128:src/Riscv.cpp ****     }
 129:src/Riscv.cpp ****     Scheduler::put(PCB::consolePCB);
 130:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 131:src/Riscv.cpp ****     enableInterrupts();
 132:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 133:src/Riscv.cpp ****     {
 134:src/Riscv.cpp ****         thread_dispatch();
 135:src/Riscv.cpp ****     }
 136:src/Riscv.cpp ****     disableInterrupts();
 137:src/Riscv.cpp **** }
GAS LISTING /tmp/ccl2M3Tu.s 			page 5


 138:src/Riscv.cpp **** 
 139:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  94              		.loc 1 139 32 is_stmt 1
  95              		.cfi_startproc
  96 0080 130101FF 		addi	sp,sp,-16
  97              		.cfi_def_cfa_offset 16
  98 0084 23348100 		sd	s0,8(sp)
  99              		.cfi_offset 8, -8
 100 0088 13040101 		addi	s0,sp,16
 101              		.cfi_def_cfa 8, 0
 140:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 102              		.loc 1 140 5
 103              	.LVL6:
 104              	.LBB44:
 105              	.LBB45:
 106              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/userMain.hpp"
  10:src/../h/Riscv.hpp **** #include "slabAllocator.hpp"
  11:src/../h/Riscv.hpp **** 
  12:src/../h/Riscv.hpp **** class Riscv
  13:src/../h/Riscv.hpp **** {
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void kernelMain();
  16:src/../h/Riscv.hpp **** private:
  17:src/../h/Riscv.hpp ****     static bool kernelMainCalled;
  18:src/../h/Riscv.hpp ****     static void changePrivMode();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void* mainPMT;
  21:src/../h/Riscv.hpp ****     static void* riscvBuddy;
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void addVirtualAddr(size_t addr);
  24:src/../h/Riscv.hpp ****     static void addVirtualAddrInstr(size_t addr);
  25:src/../h/Riscv.hpp ****     static void setVirtualAddr(size_t addr, size_t mask, size_t maskLeaf);
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     static void initVirtualMemory();
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static void initSystem();
  30:src/../h/Riscv.hpp ****     static void endSystem();
  31:src/../h/Riscv.hpp ****     static void initMemoryAllocation();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static void enableInterrupts();
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     static void disableInterrupts();
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     static void pushRegisters();
GAS LISTING /tmp/ccl2M3Tu.s 			page 6


  42:src/../h/Riscv.hpp ****     static void popRegisters();
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     static uint64 r_scause();
  45:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  48:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  51:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  52:src/../h/Riscv.hpp **** 
  53:src/../h/Riscv.hpp ****     static uint64 r_stval();
  54:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static bool finishSystem;
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     enum BitMaskSip
  59:src/../h/Riscv.hpp ****     {
  60:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  61:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  62:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  63:src/../h/Riscv.hpp ****     };
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static uint64 r_sip();
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  74:src/../h/Riscv.hpp ****     {
  75:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  76:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  77:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  78:src/../h/Riscv.hpp ****     };
  79:src/../h/Riscv.hpp **** 
  80:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  81:src/../h/Riscv.hpp **** 
  82:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  83:src/../h/Riscv.hpp **** 
  84:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  85:src/../h/Riscv.hpp **** 
  86:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  87:src/../h/Riscv.hpp **** 
  88:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  93:src/../h/Riscv.hpp **** 
  94:src/../h/Riscv.hpp ****     static uint64 r_sie();
  95:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  96:src/../h/Riscv.hpp ****     static void popSppSpie();
  97:src/../h/Riscv.hpp **** 
  98:src/../h/Riscv.hpp ****     static void supervisorTrap();
GAS LISTING /tmp/ccl2M3Tu.s 			page 7


  99:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
 100:src/../h/Riscv.hpp **** 
 101:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
 102:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
 103:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
 104:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
 105:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
 106:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
 107:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
 108:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
 109:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp ****     static uint64 totalTime;
 112:src/../h/Riscv.hpp **** 
 113:src/../h/Riscv.hpp ****     static kmem_cache_t * pcbCache;
 114:src/../h/Riscv.hpp ****     static kmem_cache_t* semaphoreCache;
 115:src/../h/Riscv.hpp **** 
 116:src/../h/Riscv.hpp ****     friend class PCB;
 117:src/../h/Riscv.hpp ****     friend class Scheduler;
 118:src/../h/Riscv.hpp ****     friend class SleepPCBList;
 119:src/../h/Riscv.hpp ****     friend class KSemaphore;
 120:src/../h/Riscv.hpp ****     friend class KConsole;
 121:src/../h/Riscv.hpp ****     friend class MemoryAllocator;
 122:src/../h/Riscv.hpp **** };
 123:src/../h/Riscv.hpp **** 
 124:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 125:src/../h/Riscv.hpp **** {
 126:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 130:src/../h/Riscv.hpp ****     uint64 volatile scause;
 131:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 132:src/../h/Riscv.hpp ****     return scause;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 136:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 140:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 141:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 142:src/../h/Riscv.hpp ****     return sepc;
 143:src/../h/Riscv.hpp **** }
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 146:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 147:src/../h/Riscv.hpp **** }
 148:src/../h/Riscv.hpp **** 
 149:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 150:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 151:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 152:src/../h/Riscv.hpp ****     return stvec;
 153:src/../h/Riscv.hpp **** }
 154:src/../h/Riscv.hpp **** 
 155:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
GAS LISTING /tmp/ccl2M3Tu.s 			page 8


 156:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
 157:src/../h/Riscv.hpp **** }
 158:src/../h/Riscv.hpp **** 
 159:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 160:src/../h/Riscv.hpp ****     uint64 volatile stval;
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 162:src/../h/Riscv.hpp ****     return stval;
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
 165:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 166:src/../h/Riscv.hpp **** {
 167:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 168:src/../h/Riscv.hpp **** }
 169:src/../h/Riscv.hpp **** 
 170:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 171:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 172:src/../h/Riscv.hpp **** }
 173:src/../h/Riscv.hpp **** 
 174:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 175:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 176:src/../h/Riscv.hpp **** }
 177:src/../h/Riscv.hpp **** 
 178:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 179:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 180:src/../h/Riscv.hpp **** }
 181:src/../h/Riscv.hpp **** 
 182:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 183:src/../h/Riscv.hpp **** {
 184:src/../h/Riscv.hpp ****     uint64 volatile sie;
 185:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 186:src/../h/Riscv.hpp ****     return sie;
 187:src/../h/Riscv.hpp **** }
 188:src/../h/Riscv.hpp **** 
 189:src/../h/Riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 190:src/../h/Riscv.hpp **** {
 191:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sie, %0" : :"r"(mask));
 192:src/../h/Riscv.hpp **** }
 193:src/../h/Riscv.hpp **** 
 194:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 195:src/../h/Riscv.hpp ****     uint64 volatile sip;
 196:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 197:src/../h/Riscv.hpp ****     return sip;
 198:src/../h/Riscv.hpp **** }
 199:src/../h/Riscv.hpp **** 
 200:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 201:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 202:src/../h/Riscv.hpp **** }
 203:src/../h/Riscv.hpp **** 
 204:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 205:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 107              		.loc 2 205 5
 108              		.loc 2 205 54 is_stmt 0
 109 008c 93072000 		li	a5,2
 110              	#APP
 111              	# 205 "src/../h/Riscv.hpp" 1
 206              	}
 112              		csrs sstatus, a5
GAS LISTING /tmp/ccl2M3Tu.s 			page 9


 113              	# 0 "" 2
 114              	.LVL7:
 115              	#NO_APP
 116              	.LBE45:
 117              	.LBE44:
 141:src/Riscv.cpp **** }
 118              		.loc 1 141 1
 119 0094 03348100 		ld	s0,8(sp)
 120              		.cfi_restore 8
 121              		.cfi_def_cfa 2, 16
 122 0098 13010101 		addi	sp,sp,16
 123              		.cfi_def_cfa_offset 0
 124 009c 67800000 		jr	ra
 125              		.cfi_endproc
 126              	.LFE31:
 128              		.align	2
 129              		.globl	_ZN5Riscv17disableInterruptsEv
 131              	_ZN5Riscv17disableInterruptsEv:
 132              	.LFB32:
 142:src/Riscv.cpp **** 
 143:src/Riscv.cpp **** void Riscv::disableInterrupts()
 144:src/Riscv.cpp **** {
 133              		.loc 1 144 1 is_stmt 1
 134              		.cfi_startproc
 135 00a0 130101FF 		addi	sp,sp,-16
 136              		.cfi_def_cfa_offset 16
 137 00a4 23348100 		sd	s0,8(sp)
 138              		.cfi_offset 8, -8
 139 00a8 13040101 		addi	s0,sp,16
 140              		.cfi_def_cfa 8, 0
 145:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 141              		.loc 1 145 5
 142              	.LVL8:
 143              	.LBB46:
 144              	.LBB47:
 207:src/../h/Riscv.hpp **** 
 208:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 209:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 145              		.loc 2 209 5
 146              		.loc 2 209 54 is_stmt 0
 147 00ac 93072000 		li	a5,2
 148              	#APP
 149              	# 209 "src/../h/Riscv.hpp" 1
 210              	}
 150              		csrc sstatus, a5
 151              	# 0 "" 2
 152              	.LVL9:
 153              	#NO_APP
 154              	.LBE47:
 155              	.LBE46:
 146:src/Riscv.cpp **** }
 156              		.loc 1 146 1
 157 00b4 03348100 		ld	s0,8(sp)
 158              		.cfi_restore 8
 159              		.cfi_def_cfa 2, 16
 160 00b8 13010101 		addi	sp,sp,16
 161              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccl2M3Tu.s 			page 10


 162 00bc 67800000 		jr	ra
 163              		.cfi_endproc
 164              	.LFE32:
 166              		.align	2
 167              		.globl	_ZN5Riscv9endSystemEv
 169              	_ZN5Riscv9endSystemEv:
 170              	.LFB30:
 120:src/Riscv.cpp ****     disableInterrupts();
 171              		.loc 1 120 1 is_stmt 1
 172              		.cfi_startproc
 173 00c0 130101FF 		addi	sp,sp,-16
 174              		.cfi_def_cfa_offset 16
 175 00c4 23341100 		sd	ra,8(sp)
 176 00c8 23308100 		sd	s0,0(sp)
 177              		.cfi_offset 1, -8
 178              		.cfi_offset 8, -16
 179 00cc 13040101 		addi	s0,sp,16
 180              		.cfi_def_cfa 8, 0
 121:src/Riscv.cpp ****     finishSystem = true;
 181              		.loc 1 121 5
 121:src/Riscv.cpp ****     finishSystem = true;
 182              		.loc 1 121 22 is_stmt 0
 183 00d0 97000000 		call	_ZN5Riscv17disableInterruptsEv
 183      E7800000 
 184              	.LVL10:
 122:src/Riscv.cpp ****     PCB* pcb = 0;
 185              		.loc 1 122 5 is_stmt 1
 122:src/Riscv.cpp ****     PCB* pcb = 0;
 186              		.loc 1 122 18 is_stmt 0
 187 00d8 93071000 		li	a5,1
 188 00dc 17070000 		sb	a5,.LANCHOR0,a4
 188      2300F700 
 123:src/Riscv.cpp ****     while(true)
 189              		.loc 1 123 5 is_stmt 1
 190              	.LVL11:
 191              	.L10:
 124:src/Riscv.cpp ****     {
 192              		.loc 1 124 5
 126:src/Riscv.cpp ****         if(pcb == 0) break;
 193              		.loc 1 126 9
 126:src/Riscv.cpp ****         if(pcb == 0) break;
 194              		.loc 1 126 29 is_stmt 0
 195 00e4 97000000 		call	_ZN9Scheduler3getEv@plt
 195      E7800000 
 196              	.LVL12:
 127:src/Riscv.cpp ****     }
 197              		.loc 1 127 9 is_stmt 1
 198 00ec E31C05FE 		bnez	a0,.L10
 129:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 199              		.loc 1 129 5
 129:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 200              		.loc 1 129 19 is_stmt 0
 201 00f0 97070000 		la	a5,_ZN3PCB10consolePCBE
 201      83B70700 
 202 00f8 03B50700 		ld	a0,0(a5)
 203              	.LVL13:
 204 00fc 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
GAS LISTING /tmp/ccl2M3Tu.s 			page 11


 204      E7800000 
 205              	.LVL14:
 130:src/Riscv.cpp ****     enableInterrupts();
 206              		.loc 1 130 5 is_stmt 1
 130:src/Riscv.cpp ****     enableInterrupts();
 207              		.loc 1 130 27 is_stmt 0
 208 0104 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 208      83B70700 
 209 010c 23B00700 		sd	zero,0(a5)
 131:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 210              		.loc 1 131 5 is_stmt 1
 131:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 211              		.loc 1 131 21 is_stmt 0
 212 0110 97000000 		call	_ZN5Riscv16enableInterruptsEv
 212      E7800000 
 213              	.LVL15:
 214              	.L12:
 132:src/Riscv.cpp ****     {
 215              		.loc 1 132 5 is_stmt 1
 132:src/Riscv.cpp ****     {
 216              		.loc 1 132 11
 132:src/Riscv.cpp ****     {
 217              		.loc 1 132 39 is_stmt 0
 218 0118 97070000 		la	a5,_ZN3PCB10consolePCBE
 218      83B70700 
 219 0120 03B50700 		ld	a0,0(a5)
 220 0124 97000000 		call	_ZN3PCB10isFinishedEv@plt
 220      E7800000 
 221              	.LVL16:
 132:src/Riscv.cpp ****     {
 222              		.loc 1 132 11
 223 012c 63180500 		bnez	a0,.L11
 134:src/Riscv.cpp ****     }
 224              		.loc 1 134 9 is_stmt 1
 134:src/Riscv.cpp ****     }
 225              		.loc 1 134 24 is_stmt 0
 226 0130 97000000 		call	_Z15thread_dispatchv@plt
 226      E7800000 
 227              	.LVL17:
 132:src/Riscv.cpp ****     {
 228              		.loc 1 132 5
 229 0138 6FF01FFE 		j	.L12
 230              	.L11:
 136:src/Riscv.cpp **** }
 231              		.loc 1 136 5 is_stmt 1
 136:src/Riscv.cpp **** }
 232              		.loc 1 136 22 is_stmt 0
 233 013c 97000000 		call	_ZN5Riscv17disableInterruptsEv
 233      E7800000 
 234              	.LVL18:
 137:src/Riscv.cpp **** 
 235              		.loc 1 137 1
 236 0144 83308100 		ld	ra,8(sp)
 237              		.cfi_restore 1
 238 0148 03340100 		ld	s0,0(sp)
 239              		.cfi_restore 8
 240              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/ccl2M3Tu.s 			page 12


 241 014c 13010101 		addi	sp,sp,16
 242              		.cfi_def_cfa_offset 0
 243 0150 67800000 		jr	ra
 244              		.cfi_endproc
 245              	.LFE30:
 247              		.align	2
 248              		.globl	_ZN5Riscv10popSppSpieEv
 250              	_ZN5Riscv10popSppSpieEv:
 251              	.LFB33:
 147:src/Riscv.cpp **** 
 148:src/Riscv.cpp **** void Riscv::popSppSpie()
 149:src/Riscv.cpp **** {
 252              		.loc 1 149 1 is_stmt 1
 253              		.cfi_startproc
 254 0154 130101FF 		addi	sp,sp,-16
 255              		.cfi_def_cfa_offset 16
 256 0158 23348100 		sd	s0,8(sp)
 257              		.cfi_offset 8, -8
 258 015c 13040101 		addi	s0,sp,16
 259              		.cfi_def_cfa 8, 0
 150:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 260              		.loc 1 150 5
 261              		.loc 1 150 39 is_stmt 0
 262              	#APP
 263              	# 150 "src/Riscv.cpp" 1
 151              	    __asm__ volatile ("sret");
 264              		csrw sepc, ra
 265              	# 0 "" 2
 266              		.loc 1 151 5 is_stmt 1
 267              		.loc 1 151 30 is_stmt 0
 268              	# 151 "src/Riscv.cpp" 1
 152              	}
 269              		sret
 270              	# 0 "" 2
 271              		.loc 1 152 1
 272              	#NO_APP
 273 0168 03348100 		ld	s0,8(sp)
 274              		.cfi_restore 8
 275              		.cfi_def_cfa 2, 16
 276 016c 13010101 		addi	sp,sp,16
 277              		.cfi_def_cfa_offset 0
 278 0170 67800000 		jr	ra
 279              		.cfi_endproc
 280              	.LFE33:
 282              		.align	2
 283              		.globl	_ZN5Riscv14setVirtualAddrEmmm
 285              	_ZN5Riscv14setVirtualAddrEmmm:
 286              	.LFB34:
 153:src/Riscv.cpp **** 
 154:src/Riscv.cpp **** void Riscv::setVirtualAddr(size_t addr, size_t mask, size_t maskLeaf)
 155:src/Riscv.cpp **** {
 287              		.loc 1 155 1 is_stmt 1
 288              		.cfi_startproc
 289              	.LVL19:
 290 0174 130101FB 		addi	sp,sp,-80
 291              		.cfi_def_cfa_offset 80
 292 0178 23341104 		sd	ra,72(sp)
GAS LISTING /tmp/ccl2M3Tu.s 			page 13


 293 017c 23308104 		sd	s0,64(sp)
 294 0180 233C9102 		sd	s1,56(sp)
 295 0184 23382103 		sd	s2,48(sp)
 296 0188 23343103 		sd	s3,40(sp)
 297 018c 23304103 		sd	s4,32(sp)
 298 0190 233C5101 		sd	s5,24(sp)
 299 0194 23386101 		sd	s6,16(sp)
 300 0198 23347101 		sd	s7,8(sp)
 301              		.cfi_offset 1, -8
 302              		.cfi_offset 8, -16
 303              		.cfi_offset 9, -24
 304              		.cfi_offset 18, -32
 305              		.cfi_offset 19, -40
 306              		.cfi_offset 20, -48
 307              		.cfi_offset 21, -56
 308              		.cfi_offset 22, -64
 309              		.cfi_offset 23, -72
 310 019c 13040105 		addi	s0,sp,80
 311              		.cfi_def_cfa 8, 0
 312 01a0 93890500 		mv	s3,a1
 313 01a4 130A0600 		mv	s4,a2
 156:src/Riscv.cpp ****     size_t l2 = addr >> 30;
 314              		.loc 1 156 5
 315              		.loc 1 156 12 is_stmt 0
 316 01a8 935BE501 		srli	s7,a0,30
 317              	.LVL20:
 157:src/Riscv.cpp ****     size_t l1 = (addr >> 21) & (0x1ff);
 318              		.loc 1 157 5 is_stmt 1
 319              		.loc 1 157 23 is_stmt 0
 320 01ac 135B5501 		srli	s6,a0,21
 321              		.loc 1 157 12
 322 01b0 137BFB1F 		andi	s6,s6,511
 323              	.LVL21:
 158:src/Riscv.cpp ****     size_t l0 = (addr >> 12) & (0x1ff);
 324              		.loc 1 158 5 is_stmt 1
 325              		.loc 1 158 23 is_stmt 0
 326 01b4 9354C500 		srli	s1,a0,12
 327              		.loc 1 158 12
 328 01b8 13F9F41F 		andi	s2,s1,511
 329              	.LVL22:
 159:src/Riscv.cpp ****     //size_t offset = addr & 0xfff;
 160:src/Riscv.cpp ****     size_t pmt2Desc = ((size_t*)mainPMT)[l2];
 330              		.loc 1 160 5 is_stmt 1
 331              		.loc 1 160 44 is_stmt 0
 332 01bc 939B3B00 		slli	s7,s7,3
 333              	.LVL23:
 334 01c0 97070000 		ld	a5,.LANCHOR0+8
 334      83B70700 
 335 01c8 B3877701 		add	a5,a5,s7
 336              		.loc 1 160 12
 337 01cc 03B50700 		ld	a0,0(a5)
 338              	.LVL24:
 161:src/Riscv.cpp ****     void* pmt1 = nullptr;
 339              		.loc 1 161 5 is_stmt 1
 162:src/Riscv.cpp ****     if(pmt2Desc == 0)
 340              		.loc 1 162 5
 341              	.LBB48:
GAS LISTING /tmp/ccl2M3Tu.s 			page 14


 342 01d0 63060506 		beqz	a0,.L27
 163:src/Riscv.cpp ****     {
 164:src/Riscv.cpp ****         pmt1 = buddy_alloc((buddyAllocator*)riscvBuddy, 1);
 165:src/Riscv.cpp ****         for(int i = 0; i < (1 << 9);i++)
 166:src/Riscv.cpp ****         {
 167:src/Riscv.cpp ****             ((size_t*)pmt1)[i] = 0;
 168:src/Riscv.cpp ****         }
 169:src/Riscv.cpp ****         size_t newDesc = (((size_t)pmt1 >> 12) << 10) | mask;
 170:src/Riscv.cpp ****         ((size_t*)mainPMT)[l2] = newDesc;
 171:src/Riscv.cpp ****     }
 172:src/Riscv.cpp ****     else
 173:src/Riscv.cpp ****     {
 174:src/Riscv.cpp ****         pmt1 = (void*)((pmt2Desc >> 10) << 12);
 343              		.loc 1 174 9
 344              		.loc 1 174 34 is_stmt 0
 345 01d4 1355A500 		srli	a0,a0,10
 346              	.LVL25:
 347              		.loc 1 174 41
 348 01d8 1315C500 		slli	a0,a0,12
 349              	.LVL26:
 350              	.L20:
 351              	.LBE48:
 175:src/Riscv.cpp ****     }
 176:src/Riscv.cpp ****     size_t pmt1Desc = ((size_t*)pmt1)[l1];
 352              		.loc 1 176 5 is_stmt 1
 353              		.loc 1 176 41 is_stmt 0
 354 01dc 931A3B00 		slli	s5,s6,3
 355 01e0 B30A5501 		add	s5,a0,s5
 356              		.loc 1 176 12
 357 01e4 03B50A00 		ld	a0,0(s5)
 358              	.LVL27:
 177:src/Riscv.cpp ****     void* pmt0 = nullptr;
 359              		.loc 1 177 5 is_stmt 1
 178:src/Riscv.cpp ****     if(pmt1Desc == 0)
 360              		.loc 1 178 5
 361              	.LBB51:
 362 01e8 6304050A 		beqz	a0,.L28
 179:src/Riscv.cpp ****     {
 180:src/Riscv.cpp ****         pmt0 = buddy_alloc((buddyAllocator*)riscvBuddy, 1);
 181:src/Riscv.cpp ****         for(int i = 0; i < (1 << 9);i++)
 182:src/Riscv.cpp ****         {
 183:src/Riscv.cpp ****             ((size_t*)pmt0)[i] = 0;
 184:src/Riscv.cpp ****         }
 185:src/Riscv.cpp ****         size_t newDesc = (((size_t)pmt0 >> 12) << 10) | mask;
 186:src/Riscv.cpp ****         ((size_t*)pmt1)[l1] = newDesc;
 187:src/Riscv.cpp ****     }
 188:src/Riscv.cpp ****     else
 189:src/Riscv.cpp ****     {
 190:src/Riscv.cpp ****         pmt0 = (void*)((pmt1Desc >> 10) << 12);
 363              		.loc 1 190 9
 364              		.loc 1 190 34 is_stmt 0
 365 01ec 1355A500 		srli	a0,a0,10
 366              	.LVL28:
 367              		.loc 1 190 41
 368 01f0 1315C500 		slli	a0,a0,12
 369              	.LVL29:
 370              	.L24:
GAS LISTING /tmp/ccl2M3Tu.s 			page 15


 371              	.LBE51:
 191:src/Riscv.cpp ****     }
 192:src/Riscv.cpp **** 
 193:src/Riscv.cpp ****     size_t pmt0Desc = ((size_t*)pmt0)[l0];
 372              		.loc 1 193 5 is_stmt 1
 373              		.loc 1 193 41 is_stmt 0
 374 01f4 13193900 		slli	s2,s2,3
 375              	.LVL30:
 376 01f8 33052501 		add	a0,a0,s2
 377              	.LVL31:
 378              		.loc 1 193 12
 379 01fc 83370500 		ld	a5,0(a0)
 380              	.LVL32:
 194:src/Riscv.cpp ****     if(pmt0Desc == 0)
 381              		.loc 1 194 5 is_stmt 1
 382 0200 63980700 		bnez	a5,.L16
 195:src/Riscv.cpp ****     {
 196:src/Riscv.cpp ****         ((size_t*)pmt0)[l0] = ((addr >> 12) << 10) | maskLeaf;
 383              		.loc 1 196 9
 384              		.loc 1 196 45 is_stmt 0
 385 0204 9394A400 		slli	s1,s1,10
 386              	.LVL33:
 387              		.loc 1 196 52
 388 0208 33EA4401 		or	s4,s1,s4
 389              	.LVL34:
 390              		.loc 1 196 29
 391 020c 23304501 		sd	s4,0(a0)
 392              	.L16:
 197:src/Riscv.cpp ****     }
 198:src/Riscv.cpp **** }
 393              		.loc 1 198 1
 394 0210 83308104 		ld	ra,72(sp)
 395              		.cfi_remember_state
 396              		.cfi_restore 1
 397 0214 03340104 		ld	s0,64(sp)
 398              		.cfi_restore 8
 399              		.cfi_def_cfa 2, 80
 400 0218 83348103 		ld	s1,56(sp)
 401              		.cfi_restore 9
 402 021c 03390103 		ld	s2,48(sp)
 403              		.cfi_restore 18
 404 0220 83398102 		ld	s3,40(sp)
 405              		.cfi_restore 19
 406 0224 033A0102 		ld	s4,32(sp)
 407              		.cfi_restore 20
 408 0228 833A8101 		ld	s5,24(sp)
 409              		.cfi_restore 21
 410 022c 033B0101 		ld	s6,16(sp)
 411              		.cfi_restore 22
 412              	.LVL35:
 413 0230 833B8100 		ld	s7,8(sp)
 414              		.cfi_restore 23
 415 0234 13010105 		addi	sp,sp,80
 416              		.cfi_def_cfa_offset 0
 417 0238 67800000 		jr	ra
 418              	.LVL36:
 419              	.L27:
GAS LISTING /tmp/ccl2M3Tu.s 			page 16


 420              		.cfi_restore_state
 421              	.LBB54:
 422              	.LBB49:
 164:src/Riscv.cpp ****         for(int i = 0; i < (1 << 9);i++)
 423              		.loc 1 164 9 is_stmt 1
 164:src/Riscv.cpp ****         for(int i = 0; i < (1 << 9);i++)
 424              		.loc 1 164 27 is_stmt 0
 425 023c 93051000 		li	a1,1
 426              	.LVL37:
 427 0240 17050000 		ld	a0,.LANCHOR0+16
 427      03350500 
 428              	.LVL38:
 429 0248 97000000 		call	_Z11buddy_allocP14buddyAllocatorm@plt
 429      E7800000 
 430              	.LVL39:
 165:src/Riscv.cpp ****         {
 431              		.loc 1 165 9 is_stmt 1
 432              	.LBB50:
 165:src/Riscv.cpp ****         {
 433              		.loc 1 165 17 is_stmt 0
 434 0250 93070000 		li	a5,0
 435              	.LVL40:
 436              	.L19:
 165:src/Riscv.cpp ****         {
 437              		.loc 1 165 26 is_stmt 1 discriminator 3
 438 0254 1307F01F 		li	a4,511
 439 0258 634CF700 		bgt	a5,a4,.L18
 167:src/Riscv.cpp ****         }
 440              		.loc 1 167 13 discriminator 2
 167:src/Riscv.cpp ****         }
 441              		.loc 1 167 30 is_stmt 0 discriminator 2
 442 025c 13973700 		slli	a4,a5,3
 443 0260 3307E500 		add	a4,a0,a4
 167:src/Riscv.cpp ****         }
 444              		.loc 1 167 32 discriminator 2
 445 0264 23300700 		sd	zero,0(a4)
 165:src/Riscv.cpp ****         {
 446              		.loc 1 165 9 is_stmt 1 discriminator 2
 447 0268 9B871700 		addiw	a5,a5,1
 448              	.LVL41:
 449 026c 6FF09FFE 		j	.L19
 450              	.LVL42:
 451              	.L18:
 452              	.LBE50:
 169:src/Riscv.cpp ****         ((size_t*)mainPMT)[l2] = newDesc;
 453              		.loc 1 169 9
 169:src/Riscv.cpp ****         ((size_t*)mainPMT)[l2] = newDesc;
 454              		.loc 1 169 41 is_stmt 0
 455 0270 9357C500 		srli	a5,a0,12
 456              	.LVL43:
 169:src/Riscv.cpp ****         ((size_t*)mainPMT)[l2] = newDesc;
 457              		.loc 1 169 48
 458 0274 9397A700 		slli	a5,a5,10
 169:src/Riscv.cpp ****         ((size_t*)mainPMT)[l2] = newDesc;
 459              		.loc 1 169 16
 460 0278 B3E73701 		or	a5,a5,s3
 461              	.LVL44:
GAS LISTING /tmp/ccl2M3Tu.s 			page 17


 170:src/Riscv.cpp ****     }
 462              		.loc 1 170 9 is_stmt 1
 170:src/Riscv.cpp ****     }
 463              		.loc 1 170 10 is_stmt 0
 464 027c 17070000 		ld	a4,.LANCHOR0+8
 464      03370700 
 170:src/Riscv.cpp ****     }
 465              		.loc 1 170 30
 466 0284 B30B7701 		add	s7,a4,s7
 170:src/Riscv.cpp ****     }
 467              		.loc 1 170 32
 468 0288 23B0FB00 		sd	a5,0(s7)
 469              	.LBE49:
 470 028c 6FF01FF5 		j	.L20
 471              	.LVL45:
 472              	.L28:
 473              	.LBE54:
 474              	.LBB55:
 475              	.LBB52:
 180:src/Riscv.cpp ****         for(int i = 0; i < (1 << 9);i++)
 476              		.loc 1 180 9 is_stmt 1
 180:src/Riscv.cpp ****         for(int i = 0; i < (1 << 9);i++)
 477              		.loc 1 180 27 is_stmt 0
 478 0290 93051000 		li	a1,1
 479 0294 17050000 		ld	a0,.LANCHOR0+16
 479      03350500 
 480              	.LVL46:
 481 029c 97000000 		call	_Z11buddy_allocP14buddyAllocatorm@plt
 481      E7800000 
 482              	.LVL47:
 181:src/Riscv.cpp ****         {
 483              		.loc 1 181 9 is_stmt 1
 484              	.LBB53:
 181:src/Riscv.cpp ****         {
 485              		.loc 1 181 17 is_stmt 0
 486 02a4 93070000 		li	a5,0
 487              	.LVL48:
 488              	.L23:
 181:src/Riscv.cpp ****         {
 489              		.loc 1 181 26 is_stmt 1 discriminator 3
 490 02a8 1307F01F 		li	a4,511
 491 02ac 634CF700 		bgt	a5,a4,.L22
 183:src/Riscv.cpp ****         }
 492              		.loc 1 183 13 discriminator 2
 183:src/Riscv.cpp ****         }
 493              		.loc 1 183 30 is_stmt 0 discriminator 2
 494 02b0 13973700 		slli	a4,a5,3
 495 02b4 3307E500 		add	a4,a0,a4
 183:src/Riscv.cpp ****         }
 496              		.loc 1 183 32 discriminator 2
 497 02b8 23300700 		sd	zero,0(a4)
 181:src/Riscv.cpp ****         {
 498              		.loc 1 181 9 is_stmt 1 discriminator 2
 499 02bc 9B871700 		addiw	a5,a5,1
 500              	.LVL49:
 501 02c0 6FF09FFE 		j	.L23
 502              	.LVL50:
GAS LISTING /tmp/ccl2M3Tu.s 			page 18


 503              	.L22:
 504              	.LBE53:
 185:src/Riscv.cpp ****         ((size_t*)pmt1)[l1] = newDesc;
 505              		.loc 1 185 9
 185:src/Riscv.cpp ****         ((size_t*)pmt1)[l1] = newDesc;
 506              		.loc 1 185 41 is_stmt 0
 507 02c4 9357C500 		srli	a5,a0,12
 508              	.LVL51:
 185:src/Riscv.cpp ****         ((size_t*)pmt1)[l1] = newDesc;
 509              		.loc 1 185 48
 510 02c8 9397A700 		slli	a5,a5,10
 185:src/Riscv.cpp ****         ((size_t*)pmt1)[l1] = newDesc;
 511              		.loc 1 185 16
 512 02cc B3E93701 		or	s3,a5,s3
 513              	.LVL52:
 186:src/Riscv.cpp ****     }
 514              		.loc 1 186 9 is_stmt 1
 186:src/Riscv.cpp ****     }
 515              		.loc 1 186 29 is_stmt 0
 516 02d0 23B03A01 		sd	s3,0(s5)
 517              	.LBE52:
 518 02d4 6FF01FF2 		j	.L24
 519              	.LBE55:
 520              		.cfi_endproc
 521              	.LFE34:
 523              		.align	2
 524              		.globl	_ZN5Riscv14addVirtualAddrEm
 526              	_ZN5Riscv14addVirtualAddrEm:
 527              	.LFB35:
 199:src/Riscv.cpp **** 
 200:src/Riscv.cpp **** void Riscv::addVirtualAddr(size_t addr)
 201:src/Riscv.cpp **** {
 528              		.loc 1 201 1 is_stmt 1
 529              		.cfi_startproc
 530              	.LVL53:
 531 02d8 130101FF 		addi	sp,sp,-16
 532              		.cfi_def_cfa_offset 16
 533 02dc 23341100 		sd	ra,8(sp)
 534 02e0 23308100 		sd	s0,0(sp)
 535              		.cfi_offset 1, -8
 536              		.cfi_offset 8, -16
 537 02e4 13040101 		addi	s0,sp,16
 538              		.cfi_def_cfa 8, 0
 202:src/Riscv.cpp ****     setVirtualAddr(addr, 0x0, 0xf);
 539              		.loc 1 202 5
 540              		.loc 1 202 19 is_stmt 0
 541 02e8 1306F000 		li	a2,15
 542 02ec 93050000 		li	a1,0
 543 02f0 97000000 		call	_ZN5Riscv14setVirtualAddrEmmm
 543      E7800000 
 544              	.LVL54:
 203:src/Riscv.cpp **** }
 545              		.loc 1 203 1
 546 02f8 83308100 		ld	ra,8(sp)
 547              		.cfi_restore 1
 548 02fc 03340100 		ld	s0,0(sp)
 549              		.cfi_restore 8
GAS LISTING /tmp/ccl2M3Tu.s 			page 19


 550              		.cfi_def_cfa 2, 16
 551 0300 13010101 		addi	sp,sp,16
 552              		.cfi_def_cfa_offset 0
 553 0304 67800000 		jr	ra
 554              		.cfi_endproc
 555              	.LFE35:
 557              		.align	2
 558              		.globl	_ZN5Riscv19addVirtualAddrInstrEm
 560              	_ZN5Riscv19addVirtualAddrInstrEm:
 561              	.LFB36:
 204:src/Riscv.cpp **** 
 205:src/Riscv.cpp **** void Riscv::addVirtualAddrInstr(size_t addr)
 206:src/Riscv.cpp **** {
 562              		.loc 1 206 1 is_stmt 1
 563              		.cfi_startproc
 564              	.LVL55:
 565 0308 130101FF 		addi	sp,sp,-16
 566              		.cfi_def_cfa_offset 16
 567 030c 23341100 		sd	ra,8(sp)
 568 0310 23308100 		sd	s0,0(sp)
 569              		.cfi_offset 1, -8
 570              		.cfi_offset 8, -16
 571 0314 13040101 		addi	s0,sp,16
 572              		.cfi_def_cfa 8, 0
 207:src/Riscv.cpp ****     setVirtualAddr(addr, 0x0, 0xf);
 573              		.loc 1 207 5
 574              		.loc 1 207 19 is_stmt 0
 575 0318 1306F000 		li	a2,15
 576 031c 93050000 		li	a1,0
 577 0320 97000000 		call	_ZN5Riscv14setVirtualAddrEmmm
 577      E7800000 
 578              	.LVL56:
 208:src/Riscv.cpp **** }
 579              		.loc 1 208 1
 580 0328 83308100 		ld	ra,8(sp)
 581              		.cfi_restore 1
 582 032c 03340100 		ld	s0,0(sp)
 583              		.cfi_restore 8
 584              		.cfi_def_cfa 2, 16
 585 0330 13010101 		addi	sp,sp,16
 586              		.cfi_def_cfa_offset 0
 587 0334 67800000 		jr	ra
 588              		.cfi_endproc
 589              	.LFE36:
 591              		.section	.rodata.str1.8,"aMS",@progbits,1
 592              		.align	3
 593              	.LC0:
 594 0000 43616368 		.string	"Cache of PCBs"
 594      65206F66 
 594      20504342 
 594      7300
 595 000e 0000     		.align	3
 596              	.LC1:
 597 0010 43616368 		.string	"Cache of KSemaphore"
 597      65206F66 
 597      204B5365 
 597      6D617068 
GAS LISTING /tmp/ccl2M3Tu.s 			page 20


 597      6F726500 
 598 0024 00000000 		.align	3
 599              	.LC2:
 600 0028 6D61696E 		.string	"main PMT "
 600      20504D54 
 600      2000
 601              		.text
 602              		.align	2
 603              		.globl	_ZN5Riscv10initSystemEv
 605              	_ZN5Riscv10initSystemEv:
 606              	.LFB29:
  48:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
 607              		.loc 1 48 1 is_stmt 1
 608              		.cfi_startproc
 609 0338 130101FD 		addi	sp,sp,-48
 610              		.cfi_def_cfa_offset 48
 611 033c 23341102 		sd	ra,40(sp)
 612 0340 23308102 		sd	s0,32(sp)
 613 0344 233C9100 		sd	s1,24(sp)
 614 0348 23382101 		sd	s2,16(sp)
 615 034c 23343101 		sd	s3,8(sp)
 616              		.cfi_offset 1, -8
 617              		.cfi_offset 8, -16
 618              		.cfi_offset 9, -24
 619              		.cfi_offset 18, -32
 620              		.cfi_offset 19, -40
 621 0350 13040103 		addi	s0,sp,48
 622              		.cfi_def_cfa 8, 0
  49:src/Riscv.cpp **** 
 623              		.loc 1 49 5
  49:src/Riscv.cpp **** 
 624              		.loc 1 49 12 is_stmt 0
 625 0354 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 625      83B70700 
 626              	.LVL57:
 627              	.LBB56:
 628              	.LBB57:
 156:src/../h/Riscv.hpp **** }
 629              		.loc 2 156 5 is_stmt 1
 156:src/../h/Riscv.hpp **** }
 630              		.loc 2 156 53 is_stmt 0
 631              	#APP
 632              	# 156 "src/../h/Riscv.hpp" 1
 633              		csrw stvec, a5
 634              	# 0 "" 2
 635              	.LVL58:
 636              	#NO_APP
 637              	.LBE57:
 638              	.LBE56:
  51:src/Riscv.cpp **** 
 639              		.loc 1 51 5 is_stmt 1
  51:src/Riscv.cpp **** 
 640              		.loc 1 51 41 is_stmt 0
 641 0360 17090000 		la	s2,HEAP_START_ADDR
 641      03390900 
 642 0368 03350900 		ld	a0,0(s2)
 643 036c 97000000 		call	_Z16getNextBlockAddrm@plt
GAS LISTING /tmp/ccl2M3Tu.s 			page 21


 643      E7800000 
 644              	.LVL59:
  51:src/Riscv.cpp **** 
 645              		.loc 1 51 16
 646 0374 97040000 		lla	s1,.LANCHOR0
 646      93840400 
 647 037c 23B8A400 		sd	a0,16(s1)
  53:src/Riscv.cpp ****     size_t bytesForKernel = totalNumOfBytes / 6; //TODO change this if needed
 648              		.loc 1 53 5 is_stmt 1
  53:src/Riscv.cpp ****     size_t bytesForKernel = totalNumOfBytes / 6; //TODO change this if needed
 649              		.loc 1 53 52 is_stmt 0
 650 0380 03350900 		ld	a0,0(s2)
 651 0384 97070000 		la	a5,HEAP_END_ADDR
 651      83B70700 
 652 038c 83B70700 		ld	a5,0(a5)
 653 0390 B387A740 		sub	a5,a5,a0
  53:src/Riscv.cpp ****     size_t bytesForKernel = totalNumOfBytes / 6; //TODO change this if needed
 654              		.loc 1 53 12
 655 0394 93871700 		addi	a5,a5,1
 656              	.LVL60:
  54:src/Riscv.cpp ****     size_t numOfBlocks = (bytesForKernel + BLOCK_NUM_OF_BYTES - 1) / BLOCK_NUM_OF_BYTES;
 657              		.loc 1 54 5 is_stmt 1
  54:src/Riscv.cpp ****     size_t numOfBlocks = (bytesForKernel + BLOCK_NUM_OF_BYTES - 1) / BLOCK_NUM_OF_BYTES;
 658              		.loc 1 54 12 is_stmt 0
 659 0398 13076000 		li	a4,6
 660 039c B3D7E702 		divu	a5,a5,a4
 661              	.LVL61:
  55:src/Riscv.cpp ****     void* newStartAddr = (void*)((size_t)HEAP_START_ADDR + numOfBlocks*BLOCK_NUM_OF_BYTES);
 662              		.loc 1 55 5 is_stmt 1
  55:src/Riscv.cpp ****     void* newStartAddr = (void*)((size_t)HEAP_START_ADDR + numOfBlocks*BLOCK_NUM_OF_BYTES);
 663              		.loc 1 55 63 is_stmt 0
 664 03a0 37170000 		li	a4,4096
 665 03a4 1307F7FF 		addi	a4,a4,-1
 666 03a8 B387E700 		add	a5,a5,a4
 667              	.LVL62:
  55:src/Riscv.cpp ****     void* newStartAddr = (void*)((size_t)HEAP_START_ADDR + numOfBlocks*BLOCK_NUM_OF_BYTES);
 668              		.loc 1 55 12
 669 03ac 93D9C700 		srli	s3,a5,12
 670              	.LVL63:
  56:src/Riscv.cpp ****     MemoryAllocator::initMemory(newStartAddr);
 671              		.loc 1 56 5 is_stmt 1
  56:src/Riscv.cpp ****     MemoryAllocator::initMemory(newStartAddr);
 672              		.loc 1 56 71 is_stmt 0
 673 03b0 37F7FFFF 		li	a4,-4096
 674 03b4 B3F7E700 		and	a5,a5,a4
 675              	.LVL64:
  57:src/Riscv.cpp **** 
 676              		.loc 1 57 5 is_stmt 1
  57:src/Riscv.cpp **** 
 677              		.loc 1 57 32 is_stmt 0
 678 03b8 3305F500 		add	a0,a0,a5
 679              	.LVL65:
 680 03bc 97000000 		call	_ZN15MemoryAllocator10initMemoryEPv@plt
 680      E7800000 
 681              	.LVL66:
  59:src/Riscv.cpp ****     pcbCache = kmem_cache_create("Cache of PCBs", sizeof(PCB), nullptr, nullptr);
 682              		.loc 1 59 5 is_stmt 1
GAS LISTING /tmp/ccl2M3Tu.s 			page 22


  59:src/Riscv.cpp ****     pcbCache = kmem_cache_create("Cache of PCBs", sizeof(PCB), nullptr, nullptr);
 683              		.loc 1 59 14 is_stmt 0
 684 03c4 9B850900 		sext.w	a1,s3
 685 03c8 03350900 		ld	a0,0(s2)
 686 03cc 97000000 		call	_Z9kmem_initPvi@plt
 686      E7800000 
 687              	.LVL67:
  60:src/Riscv.cpp ****     semaphoreCache = kmem_cache_create("Cache of KSemaphore", sizeof(KSemaphore), nullptr, nullptr)
 688              		.loc 1 60 5 is_stmt 1
  60:src/Riscv.cpp ****     semaphoreCache = kmem_cache_create("Cache of KSemaphore", sizeof(KSemaphore), nullptr, nullptr)
 689              		.loc 1 60 33 is_stmt 0
 690 03d4 93060000 		li	a3,0
 691 03d8 13060000 		li	a2,0
 692 03dc 93050006 		li	a1,96
 693 03e0 17050000 		lla	a0,.LC0
 693      13050500 
 694 03e8 97000000 		call	_Z17kmem_cache_createPKcmPFvPvES3_@plt
 694      E7800000 
 695              	.LVL68:
  60:src/Riscv.cpp ****     semaphoreCache = kmem_cache_create("Cache of KSemaphore", sizeof(KSemaphore), nullptr, nullptr)
 696              		.loc 1 60 14
 697 03f0 23BCA400 		sd	a0,24(s1)
  61:src/Riscv.cpp **** 
 698              		.loc 1 61 5 is_stmt 1
  61:src/Riscv.cpp **** 
 699              		.loc 1 61 39 is_stmt 0
 700 03f4 93060000 		li	a3,0
 701 03f8 13060000 		li	a2,0
 702 03fc 93058001 		li	a1,24
 703 0400 17050000 		lla	a0,.LC1
 703      13050500 
 704 0408 97000000 		call	_Z17kmem_cache_createPKcmPFvPvES3_@plt
 704      E7800000 
 705              	.LVL69:
  61:src/Riscv.cpp **** 
 706              		.loc 1 61 20
 707 0410 23B0A402 		sd	a0,32(s1)
  64:src/Riscv.cpp ****     KConsole::initialize();
 708              		.loc 1 64 5 is_stmt 1
  64:src/Riscv.cpp ****     KConsole::initialize();
 709              		.loc 1 64 20 is_stmt 0
 710 0414 97000000 		call	_ZN3PCB10initializeEv@plt
 710      E7800000 
 711              	.LVL70:
  65:src/Riscv.cpp **** 
 712              		.loc 1 65 5 is_stmt 1
  65:src/Riscv.cpp **** 
 713              		.loc 1 65 25 is_stmt 0
 714 041c 97000000 		call	_ZN8KConsole10initializeEv@plt
 714      E7800000 
 715              	.LVL71:
  69:src/Riscv.cpp ****     for(size_t i = 0; i < (1 << 9);i++)
 716              		.loc 1 69 5 is_stmt 1
  69:src/Riscv.cpp ****     for(size_t i = 0; i < (1 << 9);i++)
 717              		.loc 1 69 26 is_stmt 0
 718 0424 93051000 		li	a1,1
 719 0428 03B50401 		ld	a0,16(s1)
GAS LISTING /tmp/ccl2M3Tu.s 			page 23


 720 042c 97000000 		call	_Z11buddy_allocP14buddyAllocatorm@plt
 720      E7800000 
 721              	.LVL72:
  69:src/Riscv.cpp ****     for(size_t i = 0; i < (1 << 9);i++)
 722              		.loc 1 69 13
 723 0434 23B4A400 		sd	a0,8(s1)
  70:src/Riscv.cpp ****         ((size_t*)mainPMT)[i] = 0;
 724              		.loc 1 70 5 is_stmt 1
 725              	.LVL73:
 726              	.LBB58:
  70:src/Riscv.cpp ****         ((size_t*)mainPMT)[i] = 0;
 727              		.loc 1 70 16 is_stmt 0
 728 0438 93070000 		li	a5,0
 729              	.LVL74:
 730              	.L35:
  70:src/Riscv.cpp ****         ((size_t*)mainPMT)[i] = 0;
 731              		.loc 1 70 25 is_stmt 1 discriminator 3
 732 043c 1307F01F 		li	a4,511
 733 0440 6360F702 		bgtu	a5,a4,.L34
  71:src/Riscv.cpp **** 
 734              		.loc 1 71 9 discriminator 2
  71:src/Riscv.cpp **** 
 735              		.loc 1 71 29 is_stmt 0 discriminator 2
 736 0444 93963700 		slli	a3,a5,3
 737 0448 17070000 		ld	a4,.LANCHOR0+8
 737      03370700 
 738 0450 3307D700 		add	a4,a4,a3
  71:src/Riscv.cpp **** 
 739              		.loc 1 71 31 discriminator 2
 740 0454 23300700 		sd	zero,0(a4)
  70:src/Riscv.cpp ****         ((size_t*)mainPMT)[i] = 0;
 741              		.loc 1 70 5 is_stmt 1 discriminator 2
 742 0458 93871700 		addi	a5,a5,1
 743              	.LVL75:
 744 045c 6FF01FFE 		j	.L35
 745              	.L34:
 746              	.LBE58:
  73:src/Riscv.cpp **** 
 747              		.loc 1 73 5
  73:src/Riscv.cpp **** 
 748              		.loc 1 73 33 is_stmt 0
 749 0460 13060001 		li	a2,16
 750 0464 97050000 		ld	a1,.LANCHOR0+8
 750      83B50500 
 751 046c 17050000 		lla	a0,.LC2
 751      13050500 
 752 0474 97000000 		call	_ZN8KConsole18trapPrintStringIntEPKcmi@plt
 752      E7800000 
 753              	.LVL76:
  80:src/Riscv.cpp ****         addVirtualAddrInstr(addr);
 754              		.loc 1 80 5 is_stmt 1
 755              	.LBB59:
  80:src/Riscv.cpp ****         addVirtualAddrInstr(addr);
 756              		.loc 1 80 16 is_stmt 0
 757 047c 13091000 		li	s2,1
 758 0480 1319F901 		slli	s2,s2,31
 759              	.LVL77:
GAS LISTING /tmp/ccl2M3Tu.s 			page 24


 760              	.L37:
  80:src/Riscv.cpp ****         addVirtualAddrInstr(addr);
 761              		.loc 1 80 40 is_stmt 1 discriminator 3
 762 0484 97070000 		la	a5,HEAP_START_ADDR
 762      83B70700 
 763 048c 83B40700 		ld	s1,0(a5)
 764 0490 637C9900 		bleu	s1,s2,.L36
  81:src/Riscv.cpp **** 
 765              		.loc 1 81 9 discriminator 2
  81:src/Riscv.cpp **** 
 766              		.loc 1 81 28 is_stmt 0 discriminator 2
 767 0494 13050900 		mv	a0,s2
 768 0498 97000000 		call	_ZN5Riscv19addVirtualAddrInstrEm
 768      E7800000 
 769              	.LVL78:
  80:src/Riscv.cpp ****         addVirtualAddrInstr(addr);
 770              		.loc 1 80 5 is_stmt 1 discriminator 2
 771 04a0 13091900 		addi	s2,s2,1
 772              	.LVL79:
 773 04a4 6FF01FFE 		j	.L37
 774              	.L36:
 775              	.LVL80:
 776              	.LBE59:
 777              	.LBB60:
  98:src/Riscv.cpp ****         addVirtualAddr(addr);
 778              		.loc 1 98 52 discriminator 3
 779 04a8 97070000 		la	a5,HEAP_END_ADDR
 779      83B70700 
 780 04b0 83B70700 		ld	a5,0(a5)
 781 04b4 63FEF400 		bleu	a5,s1,.L38
  99:src/Riscv.cpp **** 
 782              		.loc 1 99 9 discriminator 2
  99:src/Riscv.cpp **** 
 783              		.loc 1 99 23 is_stmt 0 discriminator 2
 784 04b8 13850400 		mv	a0,s1
 785 04bc 97000000 		call	_ZN5Riscv14addVirtualAddrEm
 785      E7800000 
 786              	.LVL81:
  98:src/Riscv.cpp ****         addVirtualAddr(addr);
 787              		.loc 1 98 5 is_stmt 1 discriminator 2
  98:src/Riscv.cpp ****         addVirtualAddr(addr);
 788              		.loc 1 98 80 is_stmt 0 discriminator 2
 789 04c4 B7170000 		li	a5,4096
 790 04c8 B384F400 		add	s1,s1,a5
 791              	.LVL82:
  98:src/Riscv.cpp ****         addVirtualAddr(addr);
 792              		.loc 1 98 5 discriminator 2
 793 04cc 6FF0DFFD 		j	.L36
 794              	.L38:
 795              	.LBE60:
 108:src/Riscv.cpp ****     addVirtualAddr((size_t)CONSOLE_TX_DATA);
 796              		.loc 1 108 5 is_stmt 1
 108:src/Riscv.cpp ****     addVirtualAddr((size_t)CONSOLE_TX_DATA);
 797              		.loc 1 108 19 is_stmt 0
 798 04d0 97070000 		la	a5,CONSOLE_RX_DATA
 798      83B70700 
 799 04d8 03B50700 		ld	a0,0(a5)
GAS LISTING /tmp/ccl2M3Tu.s 			page 25


 800 04dc 97000000 		call	_ZN5Riscv14addVirtualAddrEm
 800      E7800000 
 801              	.LVL83:
 109:src/Riscv.cpp ****     addVirtualAddr((size_t)CONSOLE_STATUS);
 802              		.loc 1 109 5 is_stmt 1
 109:src/Riscv.cpp ****     addVirtualAddr((size_t)CONSOLE_STATUS);
 803              		.loc 1 109 19 is_stmt 0
 804 04e4 97070000 		la	a5,CONSOLE_TX_DATA
 804      83B70700 
 805 04ec 03B50700 		ld	a0,0(a5)
 806 04f0 97000000 		call	_ZN5Riscv14addVirtualAddrEm
 806      E7800000 
 807              	.LVL84:
 110:src/Riscv.cpp ****     addVirtualAddr(0xc201004);
 808              		.loc 1 110 5 is_stmt 1
 110:src/Riscv.cpp ****     addVirtualAddr(0xc201004);
 809              		.loc 1 110 19 is_stmt 0
 810 04f8 97070000 		la	a5,CONSOLE_STATUS
 810      83B70700 
 811 0500 03B50700 		ld	a0,0(a5)
 812 0504 97000000 		call	_ZN5Riscv14addVirtualAddrEm
 812      E7800000 
 813              	.LVL85:
 111:src/Riscv.cpp **** 
 814              		.loc 1 111 5 is_stmt 1
 111:src/Riscv.cpp **** 
 815              		.loc 1 111 19 is_stmt 0
 816 050c 3715200C 		li	a0,203427840
 817 0510 13054500 		addi	a0,a0,4
 818 0514 97000000 		call	_ZN5Riscv14addVirtualAddrEm
 818      E7800000 
 819              	.LVL86:
 115:src/Riscv.cpp ****     __asm__ volatile("csrw satp, %0" : :"r"(satp));
 820              		.loc 1 115 5 is_stmt 1
 115:src/Riscv.cpp ****     __asm__ volatile("csrw satp, %0" : :"r"(satp));
 821              		.loc 1 115 56 is_stmt 0
 822 051c 97070000 		ld	a5,.LANCHOR0+8
 822      83B70700 
 823 0524 93D7C700 		srli	a5,a5,12
 115:src/Riscv.cpp ****     __asm__ volatile("csrw satp, %0" : :"r"(satp));
 824              		.loc 1 115 12
 825 0528 1307F0FF 		li	a4,-1
 826 052c 1317F703 		slli	a4,a4,63
 827 0530 B3E7E700 		or	a5,a5,a4
 828              	.LVL87:
 116:src/Riscv.cpp **** }
 829              		.loc 1 116 5 is_stmt 1
 116:src/Riscv.cpp **** }
 830              		.loc 1 116 51 is_stmt 0
 831              	#APP
 832              	# 116 "src/Riscv.cpp" 1
 117:src/Riscv.cpp **** 
 833              		csrw satp, a5
 834              	# 0 "" 2
 835              		.loc 1 117 1
 836              	#NO_APP
 837 0538 83308102 		ld	ra,40(sp)
GAS LISTING /tmp/ccl2M3Tu.s 			page 26


 838              		.cfi_restore 1
 839 053c 03340102 		ld	s0,32(sp)
 840              		.cfi_restore 8
 841              		.cfi_def_cfa 2, 48
 842 0540 83348101 		ld	s1,24(sp)
 843              		.cfi_restore 9
 844              	.LVL88:
 845 0544 03390101 		ld	s2,16(sp)
 846              		.cfi_restore 18
 847              	.LVL89:
 848 0548 83398100 		ld	s3,8(sp)
 849              		.cfi_restore 19
 850              	.LVL90:
 851 054c 13010103 		addi	sp,sp,48
 852              		.cfi_def_cfa_offset 0
 853 0550 67800000 		jr	ra
 854              		.cfi_endproc
 855              	.LFE29:
 857              		.align	2
 858              		.globl	_ZN5Riscv10kernelMainEv
 860              	_ZN5Riscv10kernelMainEv:
 861              	.LFB38:
 209:src/Riscv.cpp **** 
 210:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
 211:src/Riscv.cpp **** {
 212:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 213:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 214:src/Riscv.cpp **** 
 215:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
 216:src/Riscv.cpp **** 
 217:src/Riscv.cpp ****     static const size_t storePF = 15;
 218:src/Riscv.cpp ****     static const size_t loadPF = 13;
 219:src/Riscv.cpp ****     static const size_t instrPF = 12;
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp ****     switch(scause)
 222:src/Riscv.cpp ****     {
 223:src/Riscv.cpp ****         case storePF:
 224:src/Riscv.cpp ****         {
 225:src/Riscv.cpp ****             size_t addrPF = 0;
 226:src/Riscv.cpp ****             __asm__ volatile("csrr %0, stval":"=r"(addrPF));
 227:src/Riscv.cpp ****             addVirtualAddr(addrPF);
 228:src/Riscv.cpp ****         }
 229:src/Riscv.cpp ****         case loadPF:
 230:src/Riscv.cpp ****         {
 231:src/Riscv.cpp ****             size_t addrPF = 0;
 232:src/Riscv.cpp ****             __asm__ volatile("csrr %0, stval":"=r"(addrPF));
 233:src/Riscv.cpp ****             addVirtualAddr(addrPF);
 234:src/Riscv.cpp ****         }
 235:src/Riscv.cpp ****         case instrPF:
 236:src/Riscv.cpp ****         {
 237:src/Riscv.cpp ****             //KConsole::trapPrintString("instr PF\n");
 238:src/Riscv.cpp ****             size_t addrPF = 0;
 239:src/Riscv.cpp ****             __asm__ volatile("csrr %0, stval":"=r"(addrPF));
 240:src/Riscv.cpp ****             addVirtualAddrInstr(addrPF);
 241:src/Riscv.cpp ****         }
 242:src/Riscv.cpp ****         case timerInterrupt:
 243:src/Riscv.cpp ****         {
GAS LISTING /tmp/ccl2M3Tu.s 			page 27


 244:src/Riscv.cpp ****             //KConsole::trapPrintString("timerInterrupt\n");
 245:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 246:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 247:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 248:src/Riscv.cpp ****             //static uint64 total = 0;
 249:src/Riscv.cpp ****             totalTime++;
 250:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 251:src/Riscv.cpp **** 
 252:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 253:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 254:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 255:src/Riscv.cpp ****             {
 256:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 257:src/Riscv.cpp ****                 PCB::dispatch();
 258:src/Riscv.cpp ****             }
 259:src/Riscv.cpp **** 
 260:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 261:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 262:src/Riscv.cpp ****             changePrivMode();
 263:src/Riscv.cpp ****             break;
 264:src/Riscv.cpp ****         }
 265:src/Riscv.cpp ****         case hwInterrupt:
 266:src/Riscv.cpp ****         {
 267:src/Riscv.cpp ****             KConsole::getCharactersFromConsole();
 268:src/Riscv.cpp ****             plic_complete(plic_claim());
 269:src/Riscv.cpp ****             break;
 270:src/Riscv.cpp ****         }
 271:src/Riscv.cpp ****         case operationInterrupt:
 272:src/Riscv.cpp ****         {
 273:src/Riscv.cpp ****             PCB::threadExitHandler();
 274:src/Riscv.cpp ****             break;
 275:src/Riscv.cpp ****         }
 276:src/Riscv.cpp ****         case addrReadInterrupt:
 277:src/Riscv.cpp ****         {
 278:src/Riscv.cpp ****             PCB::threadExitHandler();
 279:src/Riscv.cpp ****             break;
 280:src/Riscv.cpp ****         }
 281:src/Riscv.cpp ****         case addrWriteInterrupt:
 282:src/Riscv.cpp ****         {
 283:src/Riscv.cpp ****             PCB::threadExitHandler();
 284:src/Riscv.cpp ****             break;
 285:src/Riscv.cpp ****         }
 286:src/Riscv.cpp ****         case ecallSystemInterupt:
 287:src/Riscv.cpp ****         case ecallUserInterrupt:
 288:src/Riscv.cpp ****         {
 289:src/Riscv.cpp ****             uint64 operation;
 290:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 291:src/Riscv.cpp **** 
 292:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 293:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 294:src/Riscv.cpp **** 
 295:src/Riscv.cpp ****             switch(operation)
 296:src/Riscv.cpp ****             {
 297:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 298:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 299:src/Riscv.cpp ****                     break;
 300:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
GAS LISTING /tmp/ccl2M3Tu.s 			page 28


 301:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 302:src/Riscv.cpp ****                     break;
 303:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 304:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 305:src/Riscv.cpp ****                     break;
 306:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 307:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 308:src/Riscv.cpp ****                     break;
 309:src/Riscv.cpp ****                 case PCB::THREAD_START:
 310:src/Riscv.cpp ****                     PCB::threadStartHandler();
 311:src/Riscv.cpp ****                     break;
 312:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 313:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 314:src/Riscv.cpp ****                     break;
 315:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 316:src/Riscv.cpp ****                     PCB::threadExitHandler();
 317:src/Riscv.cpp ****                     break;
 318:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 319:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 320:src/Riscv.cpp ****                     break;
 321:src/Riscv.cpp ****                 case PCB::THREAD_DEL_PCB:
 322:src/Riscv.cpp ****                      PCB::threadDelPCBHandler();
 323:src/Riscv.cpp ****                      break;
 324:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 325:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 326:src/Riscv.cpp ****                     break;
 327:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 328:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 329:src/Riscv.cpp ****                     break;
 330:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 331:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 332:src/Riscv.cpp ****                     break;
 333:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 334:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 335:src/Riscv.cpp ****                     break;
 336:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 337:src/Riscv.cpp ****                     KConsole::getcHandler();
 338:src/Riscv.cpp ****                     break;
 339:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 340:src/Riscv.cpp ****                     KConsole::putcHandler();
 341:src/Riscv.cpp ****                     break;
 342:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 343:src/Riscv.cpp ****                     KConsole::getCharHandler();
 344:src/Riscv.cpp ****                     break;
 345:src/Riscv.cpp ****             }
 346:src/Riscv.cpp **** 
 347:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 348:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 349:src/Riscv.cpp ****             changePrivMode();
 350:src/Riscv.cpp ****             break;
 351:src/Riscv.cpp ****         }
 352:src/Riscv.cpp ****     }
 353:src/Riscv.cpp **** }
 354:src/Riscv.cpp **** 
 355:src/Riscv.cpp **** void Riscv::kernelMain()
 356:src/Riscv.cpp **** {
 862              		.loc 1 356 1 is_stmt 1
GAS LISTING /tmp/ccl2M3Tu.s 			page 29


 863              		.cfi_startproc
 357:src/Riscv.cpp ****     if(kernelMainCalled) return;
 864              		.loc 1 357 5
 865 0554 97070000 		lbu	a5,.LANCHOR0+40
 865      83C70700 
 866 055c 63840700 		beqz	a5,.L48
 867 0560 67800000 		ret
 868              	.L48:
 356:src/Riscv.cpp ****     if(kernelMainCalled) return;
 869              		.loc 1 356 1 is_stmt 0
 870 0564 130101FF 		addi	sp,sp,-16
 871              		.cfi_def_cfa_offset 16
 872 0568 23341100 		sd	ra,8(sp)
 873 056c 23308100 		sd	s0,0(sp)
 874              		.cfi_offset 1, -8
 875              		.cfi_offset 8, -16
 876 0570 13040101 		addi	s0,sp,16
 877              		.cfi_def_cfa 8, 0
 358:src/Riscv.cpp ****     kernelMainCalled = true;
 878              		.loc 1 358 5 is_stmt 1
 879              		.loc 1 358 22 is_stmt 0
 880 0574 93071000 		li	a5,1
 881 0578 17070000 		sb	a5,.LANCHOR0+40,a4
 881      2300F700 
 359:src/Riscv.cpp **** 
 360:src/Riscv.cpp ****     initSystem();
 882              		.loc 1 360 5 is_stmt 1
 883              		.loc 1 360 15 is_stmt 0
 884 0580 97000000 		call	_ZN5Riscv10initSystemEv
 884      E7800000 
 885              	.LVL91:
 361:src/Riscv.cpp **** 
 362:src/Riscv.cpp ****     //testOS2();
 363:src/Riscv.cpp **** 
 364:src/Riscv.cpp **** 
 365:src/Riscv.cpp ****     enableInterrupts();
 886              		.loc 1 365 5 is_stmt 1
 887              		.loc 1 365 21 is_stmt 0
 888 0588 97000000 		call	_ZN5Riscv16enableInterruptsEv
 888      E7800000 
 889              	.LVL92:
 890              	.L43:
 366:src/Riscv.cpp **** 
 367:src/Riscv.cpp ****     while(!PCB::userPCB->isFinished())
 891              		.loc 1 367 5 is_stmt 1
 892              		.loc 1 367 11
 893              		.loc 1 367 36 is_stmt 0
 894 0590 97070000 		la	a5,_ZN3PCB7userPCBE
 894      83B70700 
 895 0598 03B50700 		ld	a0,0(a5)
 896 059c 97000000 		call	_ZN3PCB10isFinishedEv@plt
 896      E7800000 
 897              	.LVL93:
 898              		.loc 1 367 11
 899 05a4 63180500 		bnez	a0,.L42
 368:src/Riscv.cpp ****     {
 369:src/Riscv.cpp ****         thread_dispatch();
GAS LISTING /tmp/ccl2M3Tu.s 			page 30


 900              		.loc 1 369 9 is_stmt 1
 901              		.loc 1 369 24 is_stmt 0
 902 05a8 97000000 		call	_Z15thread_dispatchv@plt
 902      E7800000 
 903              	.LVL94:
 367:src/Riscv.cpp ****     {
 904              		.loc 1 367 5
 905 05b0 6FF01FFE 		j	.L43
 906              	.L42:
 370:src/Riscv.cpp ****     }
 371:src/Riscv.cpp **** 
 372:src/Riscv.cpp ****     endSystem();
 907              		.loc 1 372 5 is_stmt 1
 908              		.loc 1 372 14 is_stmt 0
 909 05b4 97000000 		call	_ZN5Riscv9endSystemEv
 909      E7800000 
 910              	.LVL95:
 373:src/Riscv.cpp **** }
 911              		.loc 1 373 1
 912 05bc 83308100 		ld	ra,8(sp)
 913              		.cfi_restore 1
 914 05c0 03340100 		ld	s0,0(sp)
 915              		.cfi_restore 8
 916              		.cfi_def_cfa 2, 16
 917 05c4 13010101 		addi	sp,sp,16
 918              		.cfi_def_cfa_offset 0
 919 05c8 67800000 		jr	ra
 920              		.cfi_endproc
 921              	.LFE38:
 923              		.align	2
 924              		.globl	_ZN5Riscv15userMainWrapperEPv
 926              	_ZN5Riscv15userMainWrapperEPv:
 927              	.LFB39:
 374:src/Riscv.cpp **** 
 375:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 376:src/Riscv.cpp **** {
 928              		.loc 1 376 1 is_stmt 1
 929              		.cfi_startproc
 930 05cc 130101FF 		addi	sp,sp,-16
 931              		.cfi_def_cfa_offset 16
 932 05d0 23341100 		sd	ra,8(sp)
 933 05d4 23308100 		sd	s0,0(sp)
 934              		.cfi_offset 1, -8
 935              		.cfi_offset 8, -16
 936 05d8 13040101 		addi	s0,sp,16
 937              		.cfi_def_cfa 8, 0
 377:src/Riscv.cpp ****     userMain();
 938              		.loc 1 377 5
 939              		.loc 1 377 13 is_stmt 0
 940 05dc 97000000 		call	_Z8userMainv@plt
 940      E7800000 
 941              	.LVL96:
 378:src/Riscv.cpp **** }
 942              		.loc 1 378 1
 943 05e4 83308100 		ld	ra,8(sp)
 944              		.cfi_restore 1
 945 05e8 03340100 		ld	s0,0(sp)
GAS LISTING /tmp/ccl2M3Tu.s 			page 31


 946              		.cfi_restore 8
 947              		.cfi_def_cfa 2, 16
 948 05ec 13010101 		addi	sp,sp,16
 949              		.cfi_def_cfa_offset 0
 950 05f0 67800000 		jr	ra
 951              		.cfi_endproc
 952              	.LFE39:
 954              		.align	2
 955              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 957              	_ZN5Riscv22disableTimerInterruptsEv:
 958              	.LFB40:
 379:src/Riscv.cpp **** 
 380:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 381:src/Riscv.cpp **** {
 959              		.loc 1 381 1 is_stmt 1
 960              		.cfi_startproc
 961 05f4 130101FF 		addi	sp,sp,-16
 962              		.cfi_def_cfa_offset 16
 963 05f8 23348100 		sd	s0,8(sp)
 964              		.cfi_offset 8, -8
 965 05fc 13040101 		addi	s0,sp,16
 966              		.cfi_def_cfa 8, 0
 382:src/Riscv.cpp ****     uint64 x = 0x2;
 967              		.loc 1 382 5
 968              	.LVL97:
 383:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 969              		.loc 1 383 5
 970              		.loc 1 383 45 is_stmt 0
 971 0600 93072000 		li	a5,2
 972              	#APP
 973              	# 383 "src/Riscv.cpp" 1
 384              	}
 974              		csrc sie, a5
 975              	# 0 "" 2
 976              		.loc 1 384 1
 977              	#NO_APP
 978 0608 03348100 		ld	s0,8(sp)
 979              		.cfi_restore 8
 980              		.cfi_def_cfa 2, 16
 981 060c 13010101 		addi	sp,sp,16
 982              		.cfi_def_cfa_offset 0
 983 0610 67800000 		jr	ra
 984              		.cfi_endproc
 985              	.LFE40:
 987              		.align	2
 988              		.globl	_ZN5Riscv13w_a0_sscratchEv
 990              	_ZN5Riscv13w_a0_sscratchEv:
 991              	.LFB41:
 385:src/Riscv.cpp **** 
 386:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 387:src/Riscv.cpp **** {
 992              		.loc 1 387 1 is_stmt 1
 993              		.cfi_startproc
 994 0614 130101FF 		addi	sp,sp,-16
 995              		.cfi_def_cfa_offset 16
 996 0618 23348100 		sd	s0,8(sp)
 997              		.cfi_offset 8, -8
GAS LISTING /tmp/ccl2M3Tu.s 			page 32


 998 061c 13040101 		addi	s0,sp,16
 999              		.cfi_def_cfa 8, 0
 388:src/Riscv.cpp ****     uint64 a1Temp;
 1000              		.loc 1 388 5
 389:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 1001              		.loc 1 389 5
 1002              		.loc 1 389 47 is_stmt 0
 1003              	#APP
 1004              	# 389 "src/Riscv.cpp" 1
 390              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 1005              		mv a5, a1
 1006              	# 0 "" 2
 1007              	.LVL98:
 1008              		.loc 1 390 5 is_stmt 1
 1009              		.loc 1 390 53 is_stmt 0
 1010              	#NO_APP
 1011 0624 17070000 		la	a4,_ZN3PCB7runningE
 1011      03370700 
 1012 062c 03370700 		ld	a4,0(a4)
 1013 0630 03370701 		ld	a4,16(a4)
 1014              		.loc 1 390 63
 1015              	#APP
 1016              	# 390 "src/Riscv.cpp" 1
 391              	    __asm__ volatile("sd a0, 80(a1)");
 1017              		mv a1, a4
 1018              	# 0 "" 2
 1019              		.loc 1 391 5 is_stmt 1
 1020              		.loc 1 391 38 is_stmt 0
 1021              	# 391 "src/Riscv.cpp" 1
 392              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 1022              		sd a0, 80(a1)
 1023              	# 0 "" 2
 1024              		.loc 1 392 5 is_stmt 1
 1025              		.loc 1 392 46 is_stmt 0
 1026              	# 392 "src/Riscv.cpp" 1
 393              	}
 1027              		mv a1,a5
 1028              	# 0 "" 2
 1029              		.loc 1 393 1
 1030              	#NO_APP
 1031 0640 03348100 		ld	s0,8(sp)
 1032              		.cfi_restore 8
 1033              		.cfi_def_cfa 2, 16
 1034 0644 13010101 		addi	sp,sp,16
 1035              		.cfi_def_cfa_offset 0
 1036 0648 67800000 		jr	ra
 1037              		.cfi_endproc
 1038              	.LFE41:
 1040              		.align	2
 1041              		.globl	_ZN5Riscv14changePrivModeEv
 1043              	_ZN5Riscv14changePrivModeEv:
 1044              	.LFB42:
 394:src/Riscv.cpp **** 
 395:src/Riscv.cpp **** void Riscv::changePrivMode()
 396:src/Riscv.cpp **** {
 1045              		.loc 1 396 1 is_stmt 1
 1046              		.cfi_startproc
GAS LISTING /tmp/ccl2M3Tu.s 			page 33


 1047 064c 130101FF 		addi	sp,sp,-16
 1048              		.cfi_def_cfa_offset 16
 1049 0650 23348100 		sd	s0,8(sp)
 1050              		.cfi_offset 8, -8
 1051 0654 13040101 		addi	s0,sp,16
 1052              		.cfi_def_cfa 8, 0
 397:src/Riscv.cpp ****     if(PCB::running->systemThread)
 1053              		.loc 1 397 5
 1054              		.loc 1 397 22 is_stmt 0
 1055 0658 97070000 		la	a5,_ZN3PCB7runningE
 1055      83B70700 
 1056 0660 83B70700 		ld	a5,0(a5)
 1057 0664 83C70700 		lbu	a5,0(a5)
 1058              		.loc 1 397 5
 1059 0668 638C0700 		beqz	a5,.L56
 398:src/Riscv.cpp ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 1060              		.loc 1 398 9 is_stmt 1
 1061              	.LVL99:
 1062              	.LBB61:
 1063              	.LBB62:
 205:src/../h/Riscv.hpp **** }
 1064              		.loc 2 205 5
 205:src/../h/Riscv.hpp **** }
 1065              		.loc 2 205 54 is_stmt 0
 1066 066c 93070010 		li	a5,256
 1067              	#APP
 1068              	# 205 "src/../h/Riscv.hpp" 1
 1069              		csrs sstatus, a5
 1070              	# 0 "" 2
 1071              	.LVL100:
 1072              	#NO_APP
 1073              	.L55:
 1074              	.LBE62:
 1075              	.LBE61:
 399:src/Riscv.cpp ****     else
 400:src/Riscv.cpp ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 401:src/Riscv.cpp **** }
 1076              		.loc 1 401 1
 1077 0674 03348100 		ld	s0,8(sp)
 1078              		.cfi_remember_state
 1079              		.cfi_restore 8
 1080              		.cfi_def_cfa 2, 16
 1081 0678 13010101 		addi	sp,sp,16
 1082              		.cfi_def_cfa_offset 0
 1083 067c 67800000 		jr	ra
 1084              	.L56:
 1085              		.cfi_restore_state
 400:src/Riscv.cpp **** }
 1086              		.loc 1 400 9 is_stmt 1
 1087              	.LVL101:
 1088              	.LBB63:
 1089              	.LBB64:
 209:src/../h/Riscv.hpp **** }
 1090              		.loc 2 209 5
 209:src/../h/Riscv.hpp **** }
 1091              		.loc 2 209 54 is_stmt 0
 1092 0680 93070010 		li	a5,256
GAS LISTING /tmp/ccl2M3Tu.s 			page 34


 1093              	#APP
 1094              	# 209 "src/../h/Riscv.hpp" 1
 1095              		csrc sstatus, a5
 1096              	# 0 "" 2
 1097              	.LVL102:
 1098              	#NO_APP
 1099              	.LBE64:
 1100              	.LBE63:
 1101              		.loc 1 401 1
 1102 0688 6FF0DFFE 		j	.L55
 1103              		.cfi_endproc
 1104              	.LFE42:
 1106              		.align	2
 1107              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 1109              	_ZN5Riscv20handleSupervisorTrapEv:
 1110              	.LFB37:
 211:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 1111              		.loc 1 211 1 is_stmt 1
 1112              		.cfi_startproc
 1113 068c 130101F9 		addi	sp,sp,-112
 1114              		.cfi_def_cfa_offset 112
 1115 0690 23341106 		sd	ra,104(sp)
 1116 0694 23308106 		sd	s0,96(sp)
 1117 0698 233C9104 		sd	s1,88(sp)
 1118              		.cfi_offset 1, -8
 1119              		.cfi_offset 8, -16
 1120              		.cfi_offset 9, -24
 1121 069c 13040107 		addi	s0,sp,112
 1122              		.cfi_def_cfa 8, 0
 212:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 1123              		.loc 1 212 5
 212:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 1124              		.loc 1 212 58 is_stmt 0
 1125              	#APP
 1126              	# 212 "src/Riscv.cpp" 1
 1127              		mv a4, a4
 1128              	# 0 "" 2
 1129              	#NO_APP
 1130 06a4 97070000 		la	a5,_ZN3PCB10savedRegA4E
 1130      83B70700 
 1131 06ac 23B0E700 		sd	a4,0(a5)
 213:src/Riscv.cpp **** 
 1132              		.loc 1 213 5 is_stmt 1
 213:src/Riscv.cpp **** 
 1133              		.loc 1 213 61 is_stmt 0
 1134 06b0 97070000 		la	a5,_ZN3PCB7runningE
 1134      83B70700 
 1135 06b8 83B70700 		ld	a5,0(a5)
 213:src/Riscv.cpp **** 
 1136              		.loc 1 213 71
 1137              	#APP
 1138              	# 213 "src/Riscv.cpp" 1
 1139              		csrr a4, sscratch
 1140              	# 0 "" 2
 1141              	#NO_APP
 1142 06c0 23B8E700 		sd	a4,16(a5)
 215:src/Riscv.cpp **** 
GAS LISTING /tmp/ccl2M3Tu.s 			page 35


 1143              		.loc 1 215 5 is_stmt 1
 1144              	.LBB65:
 1145              	.LBB66:
 130:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 1146              		.loc 2 130 5
 131:src/../h/Riscv.hpp ****     return scause;
 1147              		.loc 2 131 5
 131:src/../h/Riscv.hpp ****     return scause;
 1148              		.loc 2 131 55 is_stmt 0
 1149              	#APP
 1150              	# 131 "src/../h/Riscv.hpp" 1
 1151              		csrr a5, scause
 1152              	# 0 "" 2
 1153              	#NO_APP
 1154 06c8 233CF4FA 		sd	a5,-72(s0)
 132:src/../h/Riscv.hpp **** }
 1155              		.loc 2 132 5 is_stmt 1
 132:src/../h/Riscv.hpp **** }
 1156              		.loc 2 132 12 is_stmt 0
 1157 06cc 833784FB 		ld	a5,-72(s0)
 1158              	.LVL103:
 1159              	.LBE66:
 1160              	.LBE65:
 217:src/Riscv.cpp ****     static const size_t loadPF = 13;
 1161              		.loc 1 217 5 is_stmt 1
 218:src/Riscv.cpp ****     static const size_t instrPF = 12;
 1162              		.loc 1 218 5
 219:src/Riscv.cpp **** 
 1163              		.loc 1 219 5
 221:src/Riscv.cpp ****     {
 1164              		.loc 1 221 5
 1165              	.LBB67:
 1166 06d0 1307F000 		li	a4,15
 1167 06d4 6368F702 		bgtu	a5,a4,.L60
 1168 06d8 13072000 		li	a4,2
 1169 06dc 63E8E710 		bltu	a5,a4,.L59
 1170 06e0 1307F000 		li	a4,15
 1171 06e4 6364F710 		bgtu	a5,a4,.L59
 1172 06e8 93972700 		slli	a5,a5,2
 1173              	.LVL104:
 1174 06ec 17070000 		lla	a4,.L63
 1174      13070700 
 1175 06f4 B387E700 		add	a5,a5,a4
 1176 06f8 83A70700 		lw	a5,0(a5)
 1177 06fc B387E700 		add	a5,a5,a4
 1178 0700 67800700 		jr	a5
 1179              		.section	.rodata
 1180              		.align	2
 1181              		.align	2
 1182              	.L63:
 1183 0000 00000000 		.word	.L59-.L63
 1184 0004 00000000 		.word	.L59-.L63
 1185 0008 00000000 		.word	.L69-.L63
 1186 000c 00000000 		.word	.L59-.L63
 1187 0010 00000000 		.word	.L59-.L63
 1188 0014 00000000 		.word	.L68-.L63
 1189 0018 00000000 		.word	.L59-.L63
GAS LISTING /tmp/ccl2M3Tu.s 			page 36


 1190 001c 00000000 		.word	.L67-.L63
 1191 0020 00000000 		.word	.L66-.L63
 1192 0024 00000000 		.word	.L66-.L63
 1193 0028 00000000 		.word	.L59-.L63
 1194 002c 00000000 		.word	.L59-.L63
 1195 0030 00000000 		.word	.L65-.L63
 1196 0034 00000000 		.word	.L64-.L63
 1197 0038 00000000 		.word	.L59-.L63
 1198 003c 00000000 		.word	.L62-.L63
 1199              		.text
 1200              	.LVL105:
 1201              	.L60:
 1202 0704 1307F0FF 		li	a4,-1
 1203 0708 1317F703 		slli	a4,a4,63
 1204 070c 13071700 		addi	a4,a4,1
 1205 0710 638AE704 		beq	a5,a4,.L70
 1206 0714 1307F0FF 		li	a4,-1
 1207 0718 1317F703 		slli	a4,a4,63
 1208 071c 13079700 		addi	a4,a4,9
 1209 0720 6396E70C 		bne	a5,a4,.L59
 1210              	.LBB68:
 265:src/Riscv.cpp ****         {
 1211              		.loc 1 265 9
 266:src/Riscv.cpp ****             KConsole::getCharactersFromConsole();
 1212              		.loc 1 266 9
 267:src/Riscv.cpp ****             plic_complete(plic_claim());
 1213              		.loc 1 267 13
 267:src/Riscv.cpp ****             plic_complete(plic_claim());
 1214              		.loc 1 267 47 is_stmt 0
 1215 0724 97000000 		call	_ZN8KConsole24getCharactersFromConsoleEv@plt
 1215      E7800000 
 1216              	.LVL106:
 268:src/Riscv.cpp ****             break;
 1217              		.loc 1 268 13 is_stmt 1
 268:src/Riscv.cpp ****             break;
 1218              		.loc 1 268 26 is_stmt 0
 1219 072c 97000000 		call	plic_claim@plt
 1219      E7800000 
 1220              	.LVL107:
 1221 0734 97000000 		call	plic_complete@plt
 1221      E7800000 
 1222              	.LVL108:
 269:src/Riscv.cpp ****         }
 1223              		.loc 1 269 13 is_stmt 1
 1224 073c 6F00000B 		j	.L59
 1225              	.L62:
 223:src/Riscv.cpp ****         {
 1226              		.loc 1 223 9
 224:src/Riscv.cpp ****             size_t addrPF = 0;
 1227              		.loc 1 224 9
 1228              	.LBB69:
 225:src/Riscv.cpp ****             __asm__ volatile("csrr %0, stval":"=r"(addrPF));
 1229              		.loc 1 225 13
 1230              	.LVL109:
 226:src/Riscv.cpp ****             addVirtualAddr(addrPF);
 1231              		.loc 1 226 13
 226:src/Riscv.cpp ****             addVirtualAddr(addrPF);
GAS LISTING /tmp/ccl2M3Tu.s 			page 37


 1232              		.loc 1 226 60 is_stmt 0
 1233              	#APP
 1234              	# 226 "src/Riscv.cpp" 1
 1235              		csrr a0, stval
 1236              	# 0 "" 2
 1237              	.LVL110:
 227:src/Riscv.cpp ****         }
 1238              		.loc 1 227 13 is_stmt 1
 227:src/Riscv.cpp ****         }
 1239              		.loc 1 227 27 is_stmt 0
 1240              	#NO_APP
 1241 0744 97000000 		call	_ZN5Riscv14addVirtualAddrEm
 1241      E7800000 
 1242              	.LVL111:
 1243              	.L64:
 1244              	.LBE69:
 229:src/Riscv.cpp ****         {
 1245              		.loc 1 229 9 is_stmt 1
 230:src/Riscv.cpp ****             size_t addrPF = 0;
 1246              		.loc 1 230 9
 1247              	.LBB70:
 231:src/Riscv.cpp ****             __asm__ volatile("csrr %0, stval":"=r"(addrPF));
 1248              		.loc 1 231 13
 232:src/Riscv.cpp ****             addVirtualAddr(addrPF);
 1249              		.loc 1 232 13
 232:src/Riscv.cpp ****             addVirtualAddr(addrPF);
 1250              		.loc 1 232 60 is_stmt 0
 1251              	#APP
 1252              	# 232 "src/Riscv.cpp" 1
 1253              		csrr a0, stval
 1254              	# 0 "" 2
 1255              	.LVL112:
 233:src/Riscv.cpp ****         }
 1256              		.loc 1 233 13 is_stmt 1
 233:src/Riscv.cpp ****         }
 1257              		.loc 1 233 27 is_stmt 0
 1258              	#NO_APP
 1259 0750 97000000 		call	_ZN5Riscv14addVirtualAddrEm
 1259      E7800000 
 1260              	.LVL113:
 1261              	.L65:
 1262              	.LBE70:
 235:src/Riscv.cpp ****         {
 1263              		.loc 1 235 9 is_stmt 1
 236:src/Riscv.cpp ****             //KConsole::trapPrintString("instr PF\n");
 1264              		.loc 1 236 9
 1265              	.LBB71:
 238:src/Riscv.cpp ****             __asm__ volatile("csrr %0, stval":"=r"(addrPF));
 1266              		.loc 1 238 13
 239:src/Riscv.cpp ****             addVirtualAddrInstr(addrPF);
 1267              		.loc 1 239 13
 239:src/Riscv.cpp ****             addVirtualAddrInstr(addrPF);
 1268              		.loc 1 239 60 is_stmt 0
 1269              	#APP
 1270              	# 239 "src/Riscv.cpp" 1
 1271              		csrr a0, stval
 1272              	# 0 "" 2
GAS LISTING /tmp/ccl2M3Tu.s 			page 38


 1273              	.LVL114:
 240:src/Riscv.cpp ****         }
 1274              		.loc 1 240 13 is_stmt 1
 240:src/Riscv.cpp ****         }
 1275              		.loc 1 240 32 is_stmt 0
 1276              	#NO_APP
 1277 075c 97000000 		call	_ZN5Riscv19addVirtualAddrInstrEm
 1277      E7800000 
 1278              	.LVL115:
 1279              	.L70:
 1280              	.LBE71:
 242:src/Riscv.cpp ****         {
 1281              		.loc 1 242 9 is_stmt 1
 243:src/Riscv.cpp ****             //KConsole::trapPrintString("timerInterrupt\n");
 1282              		.loc 1 243 9
 1283              	.LBB72:
 245:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1284              		.loc 1 245 13
 1285              	.LBB73:
 1286              	.LBB74:
 140:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 1287              		.loc 2 140 5
 141:src/../h/Riscv.hpp ****     return sepc;
 1288              		.loc 2 141 5
 141:src/../h/Riscv.hpp ****     return sepc;
 1289              		.loc 2 141 51 is_stmt 0
 1290              	#APP
 1291              	# 141 "src/../h/Riscv.hpp" 1
 1292              		csrr a5, sepc
 1293              	# 0 "" 2
 1294              	#NO_APP
 1295 0768 2334F4FC 		sd	a5,-56(s0)
 142:src/../h/Riscv.hpp **** }
 1296              		.loc 2 142 5 is_stmt 1
 142:src/../h/Riscv.hpp **** }
 1297              		.loc 2 142 12 is_stmt 0
 1298 076c 833784FC 		ld	a5,-56(s0)
 1299              	.LBE74:
 1300              	.LBE73:
 245:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1301              		.loc 1 245 50
 1302 0770 233CF4F8 		sd	a5,-104(s0)
 246:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 1303              		.loc 1 246 13 is_stmt 1
 1304              	.LBB75:
 1305              	.LBB76:
 211:src/../h/Riscv.hpp **** 
 212:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 213:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 1306              		.loc 2 213 5
 214:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1307              		.loc 2 214 5
 1308              		.loc 2 214 57 is_stmt 0
 1309              	#APP
 1310              	# 214 "src/../h/Riscv.hpp" 1
 215              	    return sstatus;
 1311              		csrr a5, sstatus
GAS LISTING /tmp/ccl2M3Tu.s 			page 39


 1312              	# 0 "" 2
 1313              	#NO_APP
 1314 0778 2330F4FC 		sd	a5,-64(s0)
 1315              		.loc 2 215 5 is_stmt 1
 1316              		.loc 2 215 12 is_stmt 0
 1317 077c 833704FC 		ld	a5,-64(s0)
 1318              	.LBE76:
 1319              	.LBE75:
 246:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 1320              		.loc 1 246 56
 1321 0780 2330F4FA 		sd	a5,-96(s0)
 247:src/Riscv.cpp ****             //static uint64 total = 0;
 1322              		.loc 1 247 13 is_stmt 1
 1323              	.LVL116:
 1324              	.LBB77:
 1325              	.LBB78:
 179:src/../h/Riscv.hpp **** }
 1326              		.loc 2 179 5
 179:src/../h/Riscv.hpp **** }
 1327              		.loc 2 179 50 is_stmt 0
 1328 0784 93072000 		li	a5,2
 1329              	#APP
 1330              	# 179 "src/../h/Riscv.hpp" 1
 1331              		csrc sip, a5
 1332              	# 0 "" 2
 1333              	.LVL117:
 1334              	#NO_APP
 1335              	.LBE78:
 1336              	.LBE77:
 249:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 1337              		.loc 1 249 13 is_stmt 1
 249:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 1338              		.loc 1 249 22 is_stmt 0
 1339 078c 17070000 		lla	a4,.LANCHOR0
 1339      13070700 
 1340 0794 83370703 		ld	a5,48(a4)
 1341 0798 93871700 		addi	a5,a5,1
 1342 079c 2338F702 		sd	a5,48(a4)
 252:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 1343              		.loc 1 252 13 is_stmt 1
 252:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 1344              		.loc 1 252 34 is_stmt 0
 1345 07a0 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 1345      83B40400 
 1346 07a8 83B70400 		ld	a5,0(s1)
 1347 07ac 93871700 		addi	a5,a5,1
 1348 07b0 23B0F400 		sd	a5,0(s1)
 253:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 1349              		.loc 1 253 13 is_stmt 1
 253:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 1350              		.loc 1 253 40 is_stmt 0
 1351 07b4 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 1351      E7800000 
 1352              	.LVL118:
 254:src/Riscv.cpp ****             {
 1353              		.loc 1 254 13 is_stmt 1
 254:src/Riscv.cpp ****             {
GAS LISTING /tmp/ccl2M3Tu.s 			page 40


 1354              		.loc 1 254 68 is_stmt 0
 1355 07bc 97070000 		la	a5,_ZN3PCB7runningE
 1355      83B70700 
 1356 07c4 83B70700 		ld	a5,0(a5)
 1357              	.LVL119:
 1358              	.LBB79:
 1359              	.LBB80:
 1360              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** 
  10:src/../h/PCB.hpp **** class PCB
  11:src/../h/PCB.hpp **** {
  12:src/../h/PCB.hpp **** private:
  13:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  14:src/../h/PCB.hpp **** 
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp **** 
  23:src/../h/PCB.hpp ****     static PCB* running;
  24:src/../h/PCB.hpp **** 
  25:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  26:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 1361              		.loc 3 26 29 is_stmt 1
 1362              		.loc 3 26 36 is_stmt 0
 1363 07c8 83B78701 		ld	a5,24(a5)
 1364              	.LVL120:
 1365              	.LBE80:
 1366              	.LBE79:
 254:src/Riscv.cpp ****             {
 1367              		.loc 1 254 39
 1368 07cc 03B70400 		ld	a4,0(s1)
 254:src/Riscv.cpp ****             {
 1369              		.loc 1 254 13
 1370 07d0 6378F702 		bgeu	a4,a5,.L92
 1371              	.L72:
 260:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1372              		.loc 1 260 13 is_stmt 1
 260:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1373              		.loc 1 260 29 is_stmt 0
 1374 07d4 833704FA 		ld	a5,-96(s0)
 1375              	.LVL121:
 1376              	.LBB81:
 1377              	.LBB82:
 216:src/../h/Riscv.hpp **** }
 217:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccl2M3Tu.s 			page 41


 218:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 219:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 1378              		.loc 2 219 5 is_stmt 1
 1379              		.loc 2 219 57 is_stmt 0
 1380              	#APP
 1381              	# 219 "src/../h/Riscv.hpp" 1
 220              	}
 1382              		csrw sstatus, a5
 1383              	# 0 "" 2
 1384              	.LVL122:
 1385              	#NO_APP
 1386              	.LBE82:
 1387              	.LBE81:
 261:src/Riscv.cpp ****             changePrivMode();
 1388              		.loc 1 261 13 is_stmt 1
 261:src/Riscv.cpp ****             changePrivMode();
 1389              		.loc 1 261 26 is_stmt 0
 1390 07dc 833784F9 		ld	a5,-104(s0)
 1391              	.LVL123:
 1392              	.LBB83:
 1393              	.LBB84:
 146:src/../h/Riscv.hpp **** }
 1394              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 1395              		.loc 2 146 51 is_stmt 0
 1396              	#APP
 1397              	# 146 "src/../h/Riscv.hpp" 1
 1398              		csrw sepc, a5
 1399              	# 0 "" 2
 1400              	.LVL124:
 1401              	#NO_APP
 1402              	.LBE84:
 1403              	.LBE83:
 262:src/Riscv.cpp ****             break;
 1404              		.loc 1 262 13 is_stmt 1
 262:src/Riscv.cpp ****             break;
 1405              		.loc 1 262 27 is_stmt 0
 1406 07e4 97000000 		call	_ZN5Riscv14changePrivModeEv
 1406      E7800000 
 1407              	.LVL125:
 263:src/Riscv.cpp ****         }
 1408              		.loc 1 263 13 is_stmt 1
 1409              	.L59:
 1410              	.LBE72:
 1411              	.LBE68:
 1412              	.LBE67:
 353:src/Riscv.cpp **** 
 1413              		.loc 1 353 1 is_stmt 0
 1414 07ec 83308106 		ld	ra,104(sp)
 1415              		.cfi_remember_state
 1416              		.cfi_restore 1
 1417 07f0 03340106 		ld	s0,96(sp)
 1418              		.cfi_restore 8
 1419              		.cfi_def_cfa 2, 112
 1420 07f4 83348105 		ld	s1,88(sp)
 1421              		.cfi_restore 9
 1422 07f8 13010107 		addi	sp,sp,112
GAS LISTING /tmp/ccl2M3Tu.s 			page 42


 1423              		.cfi_def_cfa_offset 0
 1424 07fc 67800000 		jr	ra
 1425              	.L92:
 1426              		.cfi_restore_state
 1427              	.LBB98:
 1428              	.LBB96:
 1429              	.LBB85:
 256:src/Riscv.cpp ****                 PCB::dispatch();
 1430              		.loc 1 256 17 is_stmt 1
 256:src/Riscv.cpp ****                 PCB::dispatch();
 1431              		.loc 1 256 39 is_stmt 0
 1432 0800 23B00400 		sd	zero,0(s1)
 257:src/Riscv.cpp ****             }
 1433              		.loc 1 257 17 is_stmt 1
 257:src/Riscv.cpp ****             }
 1434              		.loc 1 257 30 is_stmt 0
 1435 0804 97000000 		call	_ZN3PCB8dispatchEv@plt
 1435      E7800000 
 1436              	.LVL126:
 1437 080c 6FF09FFC 		j	.L72
 1438              	.L69:
 1439              	.LBE85:
 271:src/Riscv.cpp ****         {
 1440              		.loc 1 271 9 is_stmt 1
 272:src/Riscv.cpp ****             PCB::threadExitHandler();
 1441              		.loc 1 272 9
 273:src/Riscv.cpp ****             break;
 1442              		.loc 1 273 13
 273:src/Riscv.cpp ****             break;
 1443              		.loc 1 273 35 is_stmt 0
 1444 0810 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1444      E7800000 
 1445              	.LVL127:
 274:src/Riscv.cpp ****         }
 1446              		.loc 1 274 13 is_stmt 1
 1447 0818 6FF05FFD 		j	.L59
 1448              	.L68:
 276:src/Riscv.cpp ****         {
 1449              		.loc 1 276 9
 277:src/Riscv.cpp ****             PCB::threadExitHandler();
 1450              		.loc 1 277 9
 278:src/Riscv.cpp ****             break;
 1451              		.loc 1 278 13
 278:src/Riscv.cpp ****             break;
 1452              		.loc 1 278 35 is_stmt 0
 1453 081c 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1453      E7800000 
 1454              	.LVL128:
 279:src/Riscv.cpp ****         }
 1455              		.loc 1 279 13 is_stmt 1
 1456 0824 6FF09FFC 		j	.L59
 1457              	.L67:
 281:src/Riscv.cpp ****         {
 1458              		.loc 1 281 9
 282:src/Riscv.cpp ****             PCB::threadExitHandler();
 1459              		.loc 1 282 9
 283:src/Riscv.cpp ****             break;
GAS LISTING /tmp/ccl2M3Tu.s 			page 43


 1460              		.loc 1 283 13
 283:src/Riscv.cpp ****             break;
 1461              		.loc 1 283 35 is_stmt 0
 1462 0828 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1462      E7800000 
 1463              	.LVL129:
 284:src/Riscv.cpp ****         }
 1464              		.loc 1 284 13 is_stmt 1
 1465 0830 6FF0DFFB 		j	.L59
 1466              	.L66:
 286:src/Riscv.cpp ****         case ecallUserInterrupt:
 1467              		.loc 1 286 9
 287:src/Riscv.cpp ****         {
 1468              		.loc 1 287 9
 288:src/Riscv.cpp ****             uint64 operation;
 1469              		.loc 1 288 9
 1470              	.LBB86:
 289:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 1471              		.loc 1 289 13
 290:src/Riscv.cpp **** 
 1472              		.loc 1 290 13
 290:src/Riscv.cpp **** 
 1473              		.loc 1 290 61 is_stmt 0
 1474              	#APP
 1475              	# 290 "src/Riscv.cpp" 1
 1476              		mv a5, a0
 1477              	# 0 "" 2
 1478              	.LVL130:
 292:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1479              		.loc 1 292 13 is_stmt 1
 1480              	#NO_APP
 1481              	.LBB87:
 1482              	.LBB88:
 140:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 1483              		.loc 2 140 5
 141:src/../h/Riscv.hpp ****     return sepc;
 1484              		.loc 2 141 5
 141:src/../h/Riscv.hpp ****     return sepc;
 1485              		.loc 2 141 51 is_stmt 0
 1486              	#APP
 1487              	# 141 "src/../h/Riscv.hpp" 1
 1488              		csrr a4, sepc
 1489              	# 0 "" 2
 1490              	#NO_APP
 1491 083c 233CE4FC 		sd	a4,-40(s0)
 142:src/../h/Riscv.hpp **** }
 1492              		.loc 2 142 5 is_stmt 1
 142:src/../h/Riscv.hpp **** }
 1493              		.loc 2 142 12 is_stmt 0
 1494 0840 033784FD 		ld	a4,-40(s0)
 1495              	.LBE88:
 1496              	.LBE87:
 292:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1497              		.loc 1 292 52
 1498 0844 13074700 		addi	a4,a4,4
 292:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 1499              		.loc 1 292 54
GAS LISTING /tmp/ccl2M3Tu.s 			page 44


 1500 0848 2334E4FA 		sd	a4,-88(s0)
 293:src/Riscv.cpp **** 
 1501              		.loc 1 293 13 is_stmt 1
 1502              	.LBB89:
 1503              	.LBB90:
 213:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 1504              		.loc 2 213 5
 214:src/../h/Riscv.hpp ****     return sstatus;
 1505              		.loc 2 214 5
 214:src/../h/Riscv.hpp ****     return sstatus;
 1506              		.loc 2 214 57 is_stmt 0
 1507              	#APP
 1508              	# 214 "src/../h/Riscv.hpp" 1
 1509              		csrr a4, sstatus
 1510              	# 0 "" 2
 1511              	#NO_APP
 1512 0850 2338E4FC 		sd	a4,-48(s0)
 215:src/../h/Riscv.hpp **** }
 1513              		.loc 2 215 5 is_stmt 1
 215:src/../h/Riscv.hpp **** }
 1514              		.loc 2 215 12 is_stmt 0
 1515 0854 033704FD 		ld	a4,-48(s0)
 1516              	.LBE90:
 1517              	.LBE89:
 293:src/Riscv.cpp **** 
 1518              		.loc 1 293 56
 1519 0858 2338E4FA 		sd	a4,-80(s0)
 295:src/Riscv.cpp ****             {
 1520              		.loc 1 295 13 is_stmt 1
 1521 085c 13073004 		li	a4,67
 1522 0860 6364F702 		bgtu	a5,a4,.L73
 1523 0864 93972700 		slli	a5,a5,2
 1524              	.LVL131:
 1525 0868 17070000 		lla	a4,.L75
 1525      13070700 
 1526 0870 B387E700 		add	a5,a5,a4
 1527 0874 83A70700 		lw	a5,0(a5)
 1528 0878 B387E700 		add	a5,a5,a4
 1529 087c 67800700 		jr	a5
 1530              		.section	.rodata
 1531              		.align	2
 1532              		.align	2
 1533              	.L75:
 1534 0040 00000000 		.word	.L73-.L75
 1535 0044 00000000 		.word	.L90-.L75
 1536 0048 00000000 		.word	.L89-.L75
 1537 004c 00000000 		.word	.L73-.L75
 1538 0050 00000000 		.word	.L73-.L75
 1539 0054 00000000 		.word	.L73-.L75
 1540 0058 00000000 		.word	.L73-.L75
 1541 005c 00000000 		.word	.L73-.L75
 1542 0060 00000000 		.word	.L73-.L75
 1543 0064 00000000 		.word	.L73-.L75
 1544 0068 00000000 		.word	.L73-.L75
 1545 006c 00000000 		.word	.L73-.L75
 1546 0070 00000000 		.word	.L73-.L75
 1547 0074 00000000 		.word	.L73-.L75
GAS LISTING /tmp/ccl2M3Tu.s 			page 45


 1548 0078 00000000 		.word	.L73-.L75
 1549 007c 00000000 		.word	.L73-.L75
 1550 0080 00000000 		.word	.L73-.L75
 1551 0084 00000000 		.word	.L88-.L75
 1552 0088 00000000 		.word	.L87-.L75
 1553 008c 00000000 		.word	.L86-.L75
 1554 0090 00000000 		.word	.L85-.L75
 1555 0094 00000000 		.word	.L84-.L75
 1556 0098 00000000 		.word	.L83-.L75
 1557 009c 00000000 		.word	.L73-.L75
 1558 00a0 00000000 		.word	.L73-.L75
 1559 00a4 00000000 		.word	.L73-.L75
 1560 00a8 00000000 		.word	.L73-.L75
 1561 00ac 00000000 		.word	.L73-.L75
 1562 00b0 00000000 		.word	.L73-.L75
 1563 00b4 00000000 		.word	.L73-.L75
 1564 00b8 00000000 		.word	.L73-.L75
 1565 00bc 00000000 		.word	.L73-.L75
 1566 00c0 00000000 		.word	.L73-.L75
 1567 00c4 00000000 		.word	.L82-.L75
 1568 00c8 00000000 		.word	.L81-.L75
 1569 00cc 00000000 		.word	.L80-.L75
 1570 00d0 00000000 		.word	.L79-.L75
 1571 00d4 00000000 		.word	.L73-.L75
 1572 00d8 00000000 		.word	.L73-.L75
 1573 00dc 00000000 		.word	.L73-.L75
 1574 00e0 00000000 		.word	.L73-.L75
 1575 00e4 00000000 		.word	.L73-.L75
 1576 00e8 00000000 		.word	.L73-.L75
 1577 00ec 00000000 		.word	.L73-.L75
 1578 00f0 00000000 		.word	.L73-.L75
 1579 00f4 00000000 		.word	.L73-.L75
 1580 00f8 00000000 		.word	.L73-.L75
 1581 00fc 00000000 		.word	.L73-.L75
 1582 0100 00000000 		.word	.L73-.L75
 1583 0104 00000000 		.word	.L78-.L75
 1584 0108 00000000 		.word	.L73-.L75
 1585 010c 00000000 		.word	.L73-.L75
 1586 0110 00000000 		.word	.L73-.L75
 1587 0114 00000000 		.word	.L73-.L75
 1588 0118 00000000 		.word	.L73-.L75
 1589 011c 00000000 		.word	.L73-.L75
 1590 0120 00000000 		.word	.L73-.L75
 1591 0124 00000000 		.word	.L73-.L75
 1592 0128 00000000 		.word	.L73-.L75
 1593 012c 00000000 		.word	.L73-.L75
 1594 0130 00000000 		.word	.L73-.L75
 1595 0134 00000000 		.word	.L73-.L75
 1596 0138 00000000 		.word	.L73-.L75
 1597 013c 00000000 		.word	.L73-.L75
 1598 0140 00000000 		.word	.L73-.L75
 1599 0144 00000000 		.word	.L77-.L75
 1600 0148 00000000 		.word	.L76-.L75
 1601 014c 00000000 		.word	.L74-.L75
 1602              		.text
 1603              	.L90:
 297:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
GAS LISTING /tmp/ccl2M3Tu.s 			page 46


 1604              		.loc 1 297 17
 298:src/Riscv.cpp ****                     break;
 1605              		.loc 1 298 21
 298:src/Riscv.cpp ****                     break;
 1606              		.loc 1 298 53 is_stmt 0
 1607 0880 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 1607      E7800000 
 1608              	.LVL132:
 299:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 1609              		.loc 1 299 21 is_stmt 1
 1610              	.L73:
 347:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1611              		.loc 1 347 13
 347:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1612              		.loc 1 347 29 is_stmt 0
 1613 0888 833704FB 		ld	a5,-80(s0)
 1614              	.LVL133:
 1615              	.LBB91:
 1616              	.LBB92:
 219:src/../h/Riscv.hpp **** }
 1617              		.loc 2 219 5 is_stmt 1
 219:src/../h/Riscv.hpp **** }
 1618              		.loc 2 219 57 is_stmt 0
 1619              	#APP
 1620              	# 219 "src/../h/Riscv.hpp" 1
 1621              		csrw sstatus, a5
 1622              	# 0 "" 2
 1623              	.LVL134:
 1624              	#NO_APP
 1625              	.LBE92:
 1626              	.LBE91:
 348:src/Riscv.cpp ****             changePrivMode();
 1627              		.loc 1 348 13 is_stmt 1
 348:src/Riscv.cpp ****             changePrivMode();
 1628              		.loc 1 348 26 is_stmt 0
 1629 0890 833784FA 		ld	a5,-88(s0)
 1630              	.LVL135:
 1631              	.LBB93:
 1632              	.LBB94:
 146:src/../h/Riscv.hpp **** }
 1633              		.loc 2 146 5 is_stmt 1
 146:src/../h/Riscv.hpp **** }
 1634              		.loc 2 146 51 is_stmt 0
 1635              	#APP
 1636              	# 146 "src/../h/Riscv.hpp" 1
 1637              		csrw sepc, a5
 1638              	# 0 "" 2
 1639              	.LVL136:
 1640              	#NO_APP
 1641              	.LBE94:
 1642              	.LBE93:
 349:src/Riscv.cpp ****             break;
 1643              		.loc 1 349 13 is_stmt 1
 349:src/Riscv.cpp ****             break;
 1644              		.loc 1 349 27 is_stmt 0
 1645 0898 97000000 		call	_ZN5Riscv14changePrivModeEv
 1645      E7800000 
GAS LISTING /tmp/ccl2M3Tu.s 			page 47


 1646              	.LVL137:
 350:src/Riscv.cpp ****         }
 1647              		.loc 1 350 13 is_stmt 1
 1648              	.LBE86:
 1649              	.LBE96:
 1650              	.LBE98:
 353:src/Riscv.cpp **** 
 1651              		.loc 1 353 1 is_stmt 0
 1652 08a0 6FF0DFF4 		j	.L59
 1653              	.L89:
 1654              	.LBB99:
 1655              	.LBB97:
 1656              	.LBB95:
 300:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 1657              		.loc 1 300 17 is_stmt 1
 301:src/Riscv.cpp ****                     break;
 1658              		.loc 1 301 21
 301:src/Riscv.cpp ****                     break;
 1659              		.loc 1 301 52 is_stmt 0
 1660 08a4 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 1660      E7800000 
 1661              	.LVL138:
 302:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 1662              		.loc 1 302 21 is_stmt 1
 1663 08ac 6FF0DFFD 		j	.L73
 1664              	.L85:
 303:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 1665              		.loc 1 303 17
 304:src/Riscv.cpp ****                     break;
 1666              		.loc 1 304 21
 304:src/Riscv.cpp ****                     break;
 1667              		.loc 1 304 46 is_stmt 0
 1668 08b0 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 1668      E7800000 
 1669              	.LVL139:
 305:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 1670              		.loc 1 305 21 is_stmt 1
 1671 08b8 6FF01FFD 		j	.L73
 1672              	.L88:
 306:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 1673              		.loc 1 306 17
 307:src/Riscv.cpp ****                     break;
 1674              		.loc 1 307 21
 307:src/Riscv.cpp ****                     break;
 1675              		.loc 1 307 45 is_stmt 0
 1676 08bc 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 1676      E7800000 
 1677              	.LVL140:
 308:src/Riscv.cpp ****                 case PCB::THREAD_START:
 1678              		.loc 1 308 21 is_stmt 1
 1679 08c4 6FF05FFC 		j	.L73
 1680              	.L84:
 309:src/Riscv.cpp ****                     PCB::threadStartHandler();
 1681              		.loc 1 309 17
 310:src/Riscv.cpp ****                     break;
 1682              		.loc 1 310 21
 310:src/Riscv.cpp ****                     break;
GAS LISTING /tmp/ccl2M3Tu.s 			page 48


 1683              		.loc 1 310 44 is_stmt 0
 1684 08c8 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 1684      E7800000 
 1685              	.LVL141:
 311:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 1686              		.loc 1 311 21 is_stmt 1
 1687 08d0 6FF09FFB 		j	.L73
 1688              	.L86:
 312:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 1689              		.loc 1 312 17
 313:src/Riscv.cpp ****                     break;
 1690              		.loc 1 313 21
 313:src/Riscv.cpp ****                     break;
 1691              		.loc 1 313 47 is_stmt 0
 1692 08d4 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 1692      E7800000 
 1693              	.LVL142:
 314:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 1694              		.loc 1 314 21 is_stmt 1
 1695 08dc 6FF0DFFA 		j	.L73
 1696              	.L87:
 315:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1697              		.loc 1 315 17
 316:src/Riscv.cpp ****                     break;
 1698              		.loc 1 316 21
 316:src/Riscv.cpp ****                     break;
 1699              		.loc 1 316 43 is_stmt 0
 1700 08e0 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1700      E7800000 
 1701              	.LVL143:
 317:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1702              		.loc 1 317 21 is_stmt 1
 1703 08e8 6FF01FFA 		j	.L73
 1704              	.L78:
 318:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1705              		.loc 1 318 17
 319:src/Riscv.cpp ****                     break;
 1706              		.loc 1 319 21
 319:src/Riscv.cpp ****                     break;
 1707              		.loc 1 319 44 is_stmt 0
 1708 08ec 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1708      E7800000 
 1709              	.LVL144:
 320:src/Riscv.cpp ****                 case PCB::THREAD_DEL_PCB:
 1710              		.loc 1 320 21 is_stmt 1
 1711 08f4 6FF05FF9 		j	.L73
 1712              	.L83:
 321:src/Riscv.cpp ****                      PCB::threadDelPCBHandler();
 1713              		.loc 1 321 17
 322:src/Riscv.cpp ****                      break;
 1714              		.loc 1 322 22
 322:src/Riscv.cpp ****                      break;
 1715              		.loc 1 322 46 is_stmt 0
 1716 08f8 97000000 		call	_ZN3PCB19threadDelPCBHandlerEv@plt
 1716      E7800000 
 1717              	.LVL145:
 323:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
GAS LISTING /tmp/ccl2M3Tu.s 			page 49


 1718              		.loc 1 323 22 is_stmt 1
 1719 0900 6FF09FF8 		j	.L73
 1720              	.L82:
 324:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1721              		.loc 1 324 17
 325:src/Riscv.cpp ****                     break;
 1722              		.loc 1 325 21
 325:src/Riscv.cpp ****                     break;
 1723              		.loc 1 325 47 is_stmt 0
 1724 0904 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1724      E7800000 
 1725              	.LVL146:
 326:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1726              		.loc 1 326 21 is_stmt 1
 1727 090c 6FF0DFF7 		j	.L73
 1728              	.L80:
 327:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1729              		.loc 1 327 17
 328:src/Riscv.cpp ****                     break;
 1730              		.loc 1 328 21
 328:src/Riscv.cpp ****                     break;
 1731              		.loc 1 328 47 is_stmt 0
 1732 0910 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1732      E7800000 
 1733              	.LVL147:
 329:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 1734              		.loc 1 329 21 is_stmt 1
 1735 0918 6FF01FF7 		j	.L73
 1736              	.L79:
 330:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 1737              		.loc 1 330 17
 331:src/Riscv.cpp ****                     break;
 1738              		.loc 1 331 21
 331:src/Riscv.cpp ****                     break;
 1739              		.loc 1 331 49 is_stmt 0
 1740 091c 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1740      E7800000 
 1741              	.LVL148:
 332:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1742              		.loc 1 332 21 is_stmt 1
 1743 0924 6FF05FF6 		j	.L73
 1744              	.L81:
 333:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1745              		.loc 1 333 17
 334:src/Riscv.cpp ****                     break;
 1746              		.loc 1 334 21
 334:src/Riscv.cpp ****                     break;
 1747              		.loc 1 334 48 is_stmt 0
 1748 0928 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1748      E7800000 
 1749              	.LVL149:
 335:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1750              		.loc 1 335 21 is_stmt 1
 1751 0930 6FF09FF5 		j	.L73
 1752              	.L77:
 336:src/Riscv.cpp ****                     KConsole::getcHandler();
 1753              		.loc 1 336 17
GAS LISTING /tmp/ccl2M3Tu.s 			page 50


 337:src/Riscv.cpp ****                     break;
 1754              		.loc 1 337 21
 337:src/Riscv.cpp ****                     break;
 1755              		.loc 1 337 42 is_stmt 0
 1756 0934 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 1756      E7800000 
 1757              	.LVL150:
 338:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1758              		.loc 1 338 21 is_stmt 1
 1759 093c 6FF0DFF4 		j	.L73
 1760              	.L76:
 339:src/Riscv.cpp ****                     KConsole::putcHandler();
 1761              		.loc 1 339 17
 340:src/Riscv.cpp ****                     break;
 1762              		.loc 1 340 21
 340:src/Riscv.cpp ****                     break;
 1763              		.loc 1 340 42 is_stmt 0
 1764 0940 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1764      E7800000 
 1765              	.LVL151:
 341:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 1766              		.loc 1 341 21 is_stmt 1
 1767 0948 6FF01FF4 		j	.L73
 1768              	.L74:
 342:src/Riscv.cpp ****                     KConsole::getCharHandler();
 1769              		.loc 1 342 17
 343:src/Riscv.cpp ****                     break;
 1770              		.loc 1 343 21
 343:src/Riscv.cpp ****                     break;
 1771              		.loc 1 343 45 is_stmt 0
 1772 094c 97000000 		call	_ZN8KConsole14getCharHandlerEv@plt
 1772      E7800000 
 1773              	.LVL152:
 344:src/Riscv.cpp ****             }
 1774              		.loc 1 344 21 is_stmt 1
 1775 0954 6FF05FF3 		j	.L73
 1776              	.LBE95:
 1777              	.LBE97:
 1778              	.LBE99:
 1779              		.cfi_endproc
 1780              	.LFE37:
 1782              		.globl	_ZN5Riscv10riscvBuddyE
 1783              		.globl	_ZN5Riscv7mainPMTE
 1784              		.globl	_ZN5Riscv14semaphoreCacheE
 1785              		.globl	_ZN5Riscv8pcbCacheE
 1786              		.globl	_ZN5Riscv16kernelMainCalledE
 1787              		.globl	_ZN5Riscv12finishSystemE
 1788              		.globl	_ZN5Riscv9totalTimeE
 1789              		.bss
 1790              		.align	3
 1791              		.set	.LANCHOR0,. + 0
 1794              	_ZN5Riscv12finishSystemE:
 1795 0000 00       		.zero	1
 1796 0001 00000000 		.zero	7
 1796      000000
 1799              	_ZN5Riscv7mainPMTE:
 1800 0008 00000000 		.zero	8
GAS LISTING /tmp/ccl2M3Tu.s 			page 51


 1800      00000000 
 1803              	_ZN5Riscv10riscvBuddyE:
 1804 0010 00000000 		.zero	8
 1804      00000000 
 1807              	_ZN5Riscv8pcbCacheE:
 1808 0018 00000000 		.zero	8
 1808      00000000 
 1811              	_ZN5Riscv14semaphoreCacheE:
 1812 0020 00000000 		.zero	8
 1812      00000000 
 1815              	_ZN5Riscv16kernelMainCalledE:
 1816 0028 00       		.zero	1
 1817 0029 00000000 		.zero	7
 1817      000000
 1820              	_ZN5Riscv9totalTimeE:
 1821 0030 00000000 		.zero	8
 1821      00000000 
 1822              		.text
 1823              	.Letext0:
 1824              		.file 4 "src/../h/../lib/hw.h"
 1825              		.file 5 "src/../h/slabAllocator.hpp"
 1826              		.file 6 "src/../h/MemoryAllocator.hpp"
 1827              		.file 7 "src/../h/SleepPCBList.hpp"
 1828              		.file 8 "src/../h/KSemaphore.hpp"
 1829              		.file 9 "src/../h/KConsole.hpp"
 1830              		.file 10 "src/../h/Scheduler.hpp"
 1831              		.file 11 "src/../h/buddyAllocator.hpp"
 1832              		.file 12 "src/../h/../test/userMain.hpp"
 1833              		.file 13 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccl2M3Tu.s 			page 52


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccl2M3Tu.s:9      .text:0000000000000000 _ZN5Riscv20initMemoryAllocationEv
     /tmp/ccl2M3Tu.s:13     .text:0000000000000000 .L0 
     /tmp/ccl2M3Tu.s:14     .text:0000000000000000 .L0 
     /tmp/ccl2M3Tu.s:15     .text:0000000000000004 .L0 
     /tmp/ccl2M3Tu.s:18     .text:000000000000000c .L0 
     /tmp/ccl2M3Tu.s:19     .text:000000000000000c .L0 
     /tmp/ccl2M3Tu.s:21     .text:0000000000000010 .L0 
     /tmp/ccl2M3Tu.s:23     .text:0000000000000010 .L0 
     /tmp/ccl2M3Tu.s:24     .text:0000000000000010 .L0 
     /tmp/ccl2M3Tu.s:30     .text:000000000000002c .L0 
     /tmp/ccl2M3Tu.s:33     .text:0000000000000030 .L0 
     /tmp/ccl2M3Tu.s:34     .text:0000000000000030 .L0 
     /tmp/ccl2M3Tu.s:38     .text:0000000000000038 .L0 
     /tmp/ccl2M3Tu.s:39     .text:0000000000000038 .L0 
     /tmp/ccl2M3Tu.s:44     .text:0000000000000044 .L0 
     /tmp/ccl2M3Tu.s:45     .text:0000000000000044 .L0 
     /tmp/ccl2M3Tu.s:49     .text:000000000000004c .L0 
     /tmp/ccl2M3Tu.s:50     .text:000000000000004c .L0 
     /tmp/ccl2M3Tu.s:55     .text:0000000000000058 .L0 
     /tmp/ccl2M3Tu.s:56     .text:000000000000005c .L0 
     /tmp/ccl2M3Tu.s:58     .text:0000000000000060 .L0 
     /tmp/ccl2M3Tu.s:59     .text:0000000000000060 .L0 
     /tmp/ccl2M3Tu.s:61     .text:0000000000000064 .L0 
     /tmp/ccl2M3Tu.s:63     .text:0000000000000068 .L0 
     /tmp/ccl2M3Tu.s:69     .text:0000000000000068 _ZN5Riscv17initVirtualMemoryEv
     /tmp/ccl2M3Tu.s:72     .text:0000000000000068 .L0 
     /tmp/ccl2M3Tu.s:73     .text:0000000000000068 .L0 
     /tmp/ccl2M3Tu.s:74     .text:000000000000006c .L0 
     /tmp/ccl2M3Tu.s:76     .text:0000000000000070 .L0 
     /tmp/ccl2M3Tu.s:78     .text:0000000000000074 .L0 
     /tmp/ccl2M3Tu.s:80     .text:0000000000000074 .L0 
     /tmp/ccl2M3Tu.s:81     .text:0000000000000078 .L0 
     /tmp/ccl2M3Tu.s:82     .text:0000000000000078 .L0 
     /tmp/ccl2M3Tu.s:84     .text:000000000000007c .L0 
     /tmp/ccl2M3Tu.s:86     .text:0000000000000080 .L0 
     /tmp/ccl2M3Tu.s:92     .text:0000000000000080 _ZN5Riscv16enableInterruptsEv
     /tmp/ccl2M3Tu.s:95     .text:0000000000000080 .L0 
     /tmp/ccl2M3Tu.s:96     .text:0000000000000080 .L0 
     /tmp/ccl2M3Tu.s:97     .text:0000000000000084 .L0 
     /tmp/ccl2M3Tu.s:99     .text:0000000000000088 .L0 
     /tmp/ccl2M3Tu.s:101    .text:000000000000008c .L0 
     /tmp/ccl2M3Tu.s:107    .text:000000000000008c .L0 
     /tmp/ccl2M3Tu.s:108    .text:000000000000008c .L0 
     /tmp/ccl2M3Tu.s:109    .text:000000000000008c .L0 
     /tmp/ccl2M3Tu.s:119    .text:0000000000000094 .L0 
     /tmp/ccl2M3Tu.s:120    .text:0000000000000098 .L0 
     /tmp/ccl2M3Tu.s:121    .text:0000000000000098 .L0 
     /tmp/ccl2M3Tu.s:123    .text:000000000000009c .L0 
     /tmp/ccl2M3Tu.s:125    .text:00000000000000a0 .L0 
     /tmp/ccl2M3Tu.s:131    .text:00000000000000a0 _ZN5Riscv17disableInterruptsEv
     /tmp/ccl2M3Tu.s:134    .text:00000000000000a0 .L0 
     /tmp/ccl2M3Tu.s:135    .text:00000000000000a0 .L0 
     /tmp/ccl2M3Tu.s:136    .text:00000000000000a4 .L0 
     /tmp/ccl2M3Tu.s:138    .text:00000000000000a8 .L0 
     /tmp/ccl2M3Tu.s:140    .text:00000000000000ac .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 53


     /tmp/ccl2M3Tu.s:145    .text:00000000000000ac .L0 
     /tmp/ccl2M3Tu.s:146    .text:00000000000000ac .L0 
     /tmp/ccl2M3Tu.s:147    .text:00000000000000ac .L0 
     /tmp/ccl2M3Tu.s:157    .text:00000000000000b4 .L0 
     /tmp/ccl2M3Tu.s:158    .text:00000000000000b8 .L0 
     /tmp/ccl2M3Tu.s:159    .text:00000000000000b8 .L0 
     /tmp/ccl2M3Tu.s:161    .text:00000000000000bc .L0 
     /tmp/ccl2M3Tu.s:163    .text:00000000000000c0 .L0 
     /tmp/ccl2M3Tu.s:169    .text:00000000000000c0 _ZN5Riscv9endSystemEv
     /tmp/ccl2M3Tu.s:172    .text:00000000000000c0 .L0 
     /tmp/ccl2M3Tu.s:173    .text:00000000000000c0 .L0 
     /tmp/ccl2M3Tu.s:174    .text:00000000000000c4 .L0 
     /tmp/ccl2M3Tu.s:177    .text:00000000000000cc .L0 
     /tmp/ccl2M3Tu.s:178    .text:00000000000000cc .L0 
     /tmp/ccl2M3Tu.s:180    .text:00000000000000d0 .L0 
     /tmp/ccl2M3Tu.s:182    .text:00000000000000d0 .L0 
     /tmp/ccl2M3Tu.s:183    .text:00000000000000d0 .L0 
     /tmp/ccl2M3Tu.s:186    .text:00000000000000d8 .L0 
     /tmp/ccl2M3Tu.s:187    .text:00000000000000d8 .L0 
     /tmp/ccl2M3Tu.s:192    .text:00000000000000e4 .L0 
     /tmp/ccl2M3Tu.s:193    .text:00000000000000e4 .L0 
     /tmp/ccl2M3Tu.s:194    .text:00000000000000e4 .L0 
     /tmp/ccl2M3Tu.s:195    .text:00000000000000e4 .L0 
     /tmp/ccl2M3Tu.s:198    .text:00000000000000ec .L0 
     /tmp/ccl2M3Tu.s:200    .text:00000000000000f0 .L0 
     /tmp/ccl2M3Tu.s:201    .text:00000000000000f0 .L0 
     /tmp/ccl2M3Tu.s:207    .text:0000000000000104 .L0 
     /tmp/ccl2M3Tu.s:208    .text:0000000000000104 .L0 
     /tmp/ccl2M3Tu.s:211    .text:0000000000000110 .L0 
     /tmp/ccl2M3Tu.s:212    .text:0000000000000110 .L0 
     /tmp/ccl2M3Tu.s:216    .text:0000000000000118 .L0 
     /tmp/ccl2M3Tu.s:217    .text:0000000000000118 .L0 
     /tmp/ccl2M3Tu.s:218    .text:0000000000000118 .L0 
     /tmp/ccl2M3Tu.s:223    .text:000000000000012c .L0 
     /tmp/ccl2M3Tu.s:225    .text:0000000000000130 .L0 
     /tmp/ccl2M3Tu.s:226    .text:0000000000000130 .L0 
     /tmp/ccl2M3Tu.s:229    .text:0000000000000138 .L0 
     /tmp/ccl2M3Tu.s:232    .text:000000000000013c .L0 
     /tmp/ccl2M3Tu.s:233    .text:000000000000013c .L0 
     /tmp/ccl2M3Tu.s:236    .text:0000000000000144 .L0 
     /tmp/ccl2M3Tu.s:237    .text:0000000000000148 .L0 
     /tmp/ccl2M3Tu.s:239    .text:000000000000014c .L0 
     /tmp/ccl2M3Tu.s:240    .text:000000000000014c .L0 
     /tmp/ccl2M3Tu.s:242    .text:0000000000000150 .L0 
     /tmp/ccl2M3Tu.s:244    .text:0000000000000154 .L0 
     /tmp/ccl2M3Tu.s:250    .text:0000000000000154 _ZN5Riscv10popSppSpieEv
     /tmp/ccl2M3Tu.s:253    .text:0000000000000154 .L0 
     /tmp/ccl2M3Tu.s:254    .text:0000000000000154 .L0 
     /tmp/ccl2M3Tu.s:255    .text:0000000000000158 .L0 
     /tmp/ccl2M3Tu.s:257    .text:000000000000015c .L0 
     /tmp/ccl2M3Tu.s:259    .text:0000000000000160 .L0 
     /tmp/ccl2M3Tu.s:261    .text:0000000000000160 .L0 
       src/Riscv.cpp:150    .text:0000000000000160 .L0 
     /tmp/ccl2M3Tu.s:267    .text:0000000000000164 .L0 
       src/Riscv.cpp:151    .text:0000000000000164 .L0 
     /tmp/ccl2M3Tu.s:273    .text:0000000000000168 .L0 
     /tmp/ccl2M3Tu.s:274    .text:000000000000016c .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 54


     /tmp/ccl2M3Tu.s:275    .text:000000000000016c .L0 
     /tmp/ccl2M3Tu.s:277    .text:0000000000000170 .L0 
     /tmp/ccl2M3Tu.s:279    .text:0000000000000174 .L0 
     /tmp/ccl2M3Tu.s:285    .text:0000000000000174 _ZN5Riscv14setVirtualAddrEmmm
     /tmp/ccl2M3Tu.s:288    .text:0000000000000174 .L0 
     /tmp/ccl2M3Tu.s:290    .text:0000000000000174 .L0 
     /tmp/ccl2M3Tu.s:291    .text:0000000000000178 .L0 
     /tmp/ccl2M3Tu.s:301    .text:000000000000019c .L0 
     /tmp/ccl2M3Tu.s:302    .text:000000000000019c .L0 
     /tmp/ccl2M3Tu.s:303    .text:000000000000019c .L0 
     /tmp/ccl2M3Tu.s:304    .text:000000000000019c .L0 
     /tmp/ccl2M3Tu.s:305    .text:000000000000019c .L0 
     /tmp/ccl2M3Tu.s:306    .text:000000000000019c .L0 
     /tmp/ccl2M3Tu.s:307    .text:000000000000019c .L0 
     /tmp/ccl2M3Tu.s:308    .text:000000000000019c .L0 
     /tmp/ccl2M3Tu.s:309    .text:000000000000019c .L0 
     /tmp/ccl2M3Tu.s:311    .text:00000000000001a0 .L0 
     /tmp/ccl2M3Tu.s:315    .text:00000000000001a8 .L0 
     /tmp/ccl2M3Tu.s:316    .text:00000000000001a8 .L0 
     /tmp/ccl2M3Tu.s:319    .text:00000000000001ac .L0 
     /tmp/ccl2M3Tu.s:320    .text:00000000000001ac .L0 
     /tmp/ccl2M3Tu.s:322    .text:00000000000001b0 .L0 
     /tmp/ccl2M3Tu.s:325    .text:00000000000001b4 .L0 
     /tmp/ccl2M3Tu.s:326    .text:00000000000001b4 .L0 
     /tmp/ccl2M3Tu.s:328    .text:00000000000001b8 .L0 
     /tmp/ccl2M3Tu.s:331    .text:00000000000001bc .L0 
     /tmp/ccl2M3Tu.s:332    .text:00000000000001bc .L0 
     /tmp/ccl2M3Tu.s:337    .text:00000000000001cc .L0 
     /tmp/ccl2M3Tu.s:340    .text:00000000000001d0 .L0 
     /tmp/ccl2M3Tu.s:342    .text:00000000000001d0 .L0 
     /tmp/ccl2M3Tu.s:344    .text:00000000000001d4 .L0 
     /tmp/ccl2M3Tu.s:345    .text:00000000000001d4 .L0 
     /tmp/ccl2M3Tu.s:348    .text:00000000000001d8 .L0 
     /tmp/ccl2M3Tu.s:353    .text:00000000000001dc .L0 
     /tmp/ccl2M3Tu.s:354    .text:00000000000001dc .L0 
     /tmp/ccl2M3Tu.s:357    .text:00000000000001e4 .L0 
     /tmp/ccl2M3Tu.s:360    .text:00000000000001e8 .L0 
     /tmp/ccl2M3Tu.s:362    .text:00000000000001e8 .L0 
     /tmp/ccl2M3Tu.s:364    .text:00000000000001ec .L0 
     /tmp/ccl2M3Tu.s:365    .text:00000000000001ec .L0 
     /tmp/ccl2M3Tu.s:368    .text:00000000000001f0 .L0 
     /tmp/ccl2M3Tu.s:373    .text:00000000000001f4 .L0 
     /tmp/ccl2M3Tu.s:374    .text:00000000000001f4 .L0 
     /tmp/ccl2M3Tu.s:379    .text:00000000000001fc .L0 
     /tmp/ccl2M3Tu.s:382    .text:0000000000000200 .L0 
     /tmp/ccl2M3Tu.s:384    .text:0000000000000204 .L0 
     /tmp/ccl2M3Tu.s:385    .text:0000000000000204 .L0 
     /tmp/ccl2M3Tu.s:388    .text:0000000000000208 .L0 
     /tmp/ccl2M3Tu.s:391    .text:000000000000020c .L0 
     /tmp/ccl2M3Tu.s:394    .text:0000000000000210 .L0 
     /tmp/ccl2M3Tu.s:395    .text:0000000000000214 .L0 
     /tmp/ccl2M3Tu.s:396    .text:0000000000000214 .L0 
     /tmp/ccl2M3Tu.s:398    .text:0000000000000218 .L0 
     /tmp/ccl2M3Tu.s:399    .text:0000000000000218 .L0 
     /tmp/ccl2M3Tu.s:401    .text:000000000000021c .L0 
     /tmp/ccl2M3Tu.s:403    .text:0000000000000220 .L0 
     /tmp/ccl2M3Tu.s:405    .text:0000000000000224 .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 55


     /tmp/ccl2M3Tu.s:407    .text:0000000000000228 .L0 
     /tmp/ccl2M3Tu.s:409    .text:000000000000022c .L0 
     /tmp/ccl2M3Tu.s:411    .text:0000000000000230 .L0 
     /tmp/ccl2M3Tu.s:414    .text:0000000000000234 .L0 
     /tmp/ccl2M3Tu.s:416    .text:0000000000000238 .L0 
     /tmp/ccl2M3Tu.s:420    .text:000000000000023c .L0 
     /tmp/ccl2M3Tu.s:424    .text:000000000000023c .L0 
     /tmp/ccl2M3Tu.s:425    .text:000000000000023c .L0 
     /tmp/ccl2M3Tu.s:433    .text:0000000000000250 .L0 
     /tmp/ccl2M3Tu.s:434    .text:0000000000000250 .L0 
     /tmp/ccl2M3Tu.s:438    .text:0000000000000254 .L0 
     /tmp/ccl2M3Tu.s:441    .text:000000000000025c .L0 
     /tmp/ccl2M3Tu.s:442    .text:000000000000025c .L0 
     /tmp/ccl2M3Tu.s:445    .text:0000000000000264 .L0 
     /tmp/ccl2M3Tu.s:447    .text:0000000000000268 .L0 
     /tmp/ccl2M3Tu.s:454    .text:0000000000000270 .L0 
     /tmp/ccl2M3Tu.s:455    .text:0000000000000270 .L0 
     /tmp/ccl2M3Tu.s:458    .text:0000000000000274 .L0 
     /tmp/ccl2M3Tu.s:460    .text:0000000000000278 .L0 
     /tmp/ccl2M3Tu.s:463    .text:000000000000027c .L0 
     /tmp/ccl2M3Tu.s:464    .text:000000000000027c .L0 
     /tmp/ccl2M3Tu.s:466    .text:0000000000000284 .L0 
     /tmp/ccl2M3Tu.s:468    .text:0000000000000288 .L0 
     /tmp/ccl2M3Tu.s:477    .text:0000000000000290 .L0 
     /tmp/ccl2M3Tu.s:478    .text:0000000000000290 .L0 
     /tmp/ccl2M3Tu.s:485    .text:00000000000002a4 .L0 
     /tmp/ccl2M3Tu.s:486    .text:00000000000002a4 .L0 
     /tmp/ccl2M3Tu.s:490    .text:00000000000002a8 .L0 
     /tmp/ccl2M3Tu.s:493    .text:00000000000002b0 .L0 
     /tmp/ccl2M3Tu.s:494    .text:00000000000002b0 .L0 
     /tmp/ccl2M3Tu.s:497    .text:00000000000002b8 .L0 
     /tmp/ccl2M3Tu.s:499    .text:00000000000002bc .L0 
     /tmp/ccl2M3Tu.s:506    .text:00000000000002c4 .L0 
     /tmp/ccl2M3Tu.s:507    .text:00000000000002c4 .L0 
     /tmp/ccl2M3Tu.s:510    .text:00000000000002c8 .L0 
     /tmp/ccl2M3Tu.s:512    .text:00000000000002cc .L0 
     /tmp/ccl2M3Tu.s:515    .text:00000000000002d0 .L0 
     /tmp/ccl2M3Tu.s:516    .text:00000000000002d0 .L0 
     /tmp/ccl2M3Tu.s:520    .text:00000000000002d8 .L0 
     /tmp/ccl2M3Tu.s:526    .text:00000000000002d8 _ZN5Riscv14addVirtualAddrEm
     /tmp/ccl2M3Tu.s:529    .text:00000000000002d8 .L0 
     /tmp/ccl2M3Tu.s:531    .text:00000000000002d8 .L0 
     /tmp/ccl2M3Tu.s:532    .text:00000000000002dc .L0 
     /tmp/ccl2M3Tu.s:535    .text:00000000000002e4 .L0 
     /tmp/ccl2M3Tu.s:536    .text:00000000000002e4 .L0 
     /tmp/ccl2M3Tu.s:538    .text:00000000000002e8 .L0 
     /tmp/ccl2M3Tu.s:540    .text:00000000000002e8 .L0 
     /tmp/ccl2M3Tu.s:541    .text:00000000000002e8 .L0 
     /tmp/ccl2M3Tu.s:546    .text:00000000000002f8 .L0 
     /tmp/ccl2M3Tu.s:547    .text:00000000000002fc .L0 
     /tmp/ccl2M3Tu.s:549    .text:0000000000000300 .L0 
     /tmp/ccl2M3Tu.s:550    .text:0000000000000300 .L0 
     /tmp/ccl2M3Tu.s:552    .text:0000000000000304 .L0 
     /tmp/ccl2M3Tu.s:554    .text:0000000000000308 .L0 
     /tmp/ccl2M3Tu.s:560    .text:0000000000000308 _ZN5Riscv19addVirtualAddrInstrEm
     /tmp/ccl2M3Tu.s:563    .text:0000000000000308 .L0 
     /tmp/ccl2M3Tu.s:565    .text:0000000000000308 .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 56


     /tmp/ccl2M3Tu.s:566    .text:000000000000030c .L0 
     /tmp/ccl2M3Tu.s:569    .text:0000000000000314 .L0 
     /tmp/ccl2M3Tu.s:570    .text:0000000000000314 .L0 
     /tmp/ccl2M3Tu.s:572    .text:0000000000000318 .L0 
     /tmp/ccl2M3Tu.s:574    .text:0000000000000318 .L0 
     /tmp/ccl2M3Tu.s:575    .text:0000000000000318 .L0 
     /tmp/ccl2M3Tu.s:580    .text:0000000000000328 .L0 
     /tmp/ccl2M3Tu.s:581    .text:000000000000032c .L0 
     /tmp/ccl2M3Tu.s:583    .text:0000000000000330 .L0 
     /tmp/ccl2M3Tu.s:584    .text:0000000000000330 .L0 
     /tmp/ccl2M3Tu.s:586    .text:0000000000000334 .L0 
     /tmp/ccl2M3Tu.s:588    .text:0000000000000338 .L0 
     /tmp/ccl2M3Tu.s:605    .text:0000000000000338 _ZN5Riscv10initSystemEv
     /tmp/ccl2M3Tu.s:608    .text:0000000000000338 .L0 
     /tmp/ccl2M3Tu.s:609    .text:0000000000000338 .L0 
     /tmp/ccl2M3Tu.s:610    .text:000000000000033c .L0 
     /tmp/ccl2M3Tu.s:616    .text:0000000000000350 .L0 
     /tmp/ccl2M3Tu.s:617    .text:0000000000000350 .L0 
     /tmp/ccl2M3Tu.s:618    .text:0000000000000350 .L0 
     /tmp/ccl2M3Tu.s:619    .text:0000000000000350 .L0 
     /tmp/ccl2M3Tu.s:620    .text:0000000000000350 .L0 
     /tmp/ccl2M3Tu.s:622    .text:0000000000000354 .L0 
     /tmp/ccl2M3Tu.s:624    .text:0000000000000354 .L0 
     /tmp/ccl2M3Tu.s:625    .text:0000000000000354 .L0 
     /tmp/ccl2M3Tu.s:630    .text:000000000000035c .L0 
  src/../h/Riscv.hpp:156    .text:000000000000035c .L0 
     /tmp/ccl2M3Tu.s:640    .text:0000000000000360 .L0 
     /tmp/ccl2M3Tu.s:641    .text:0000000000000360 .L0 
     /tmp/ccl2M3Tu.s:646    .text:0000000000000374 .L0 
     /tmp/ccl2M3Tu.s:649    .text:0000000000000380 .L0 
     /tmp/ccl2M3Tu.s:650    .text:0000000000000380 .L0 
     /tmp/ccl2M3Tu.s:655    .text:0000000000000394 .L0 
     /tmp/ccl2M3Tu.s:658    .text:0000000000000398 .L0 
     /tmp/ccl2M3Tu.s:659    .text:0000000000000398 .L0 
     /tmp/ccl2M3Tu.s:663    .text:00000000000003a0 .L0 
     /tmp/ccl2M3Tu.s:664    .text:00000000000003a0 .L0 
     /tmp/ccl2M3Tu.s:669    .text:00000000000003ac .L0 
     /tmp/ccl2M3Tu.s:672    .text:00000000000003b0 .L0 
     /tmp/ccl2M3Tu.s:673    .text:00000000000003b0 .L0 
     /tmp/ccl2M3Tu.s:677    .text:00000000000003b8 .L0 
     /tmp/ccl2M3Tu.s:678    .text:00000000000003b8 .L0 
     /tmp/ccl2M3Tu.s:683    .text:00000000000003c4 .L0 
     /tmp/ccl2M3Tu.s:684    .text:00000000000003c4 .L0 
     /tmp/ccl2M3Tu.s:689    .text:00000000000003d4 .L0 
     /tmp/ccl2M3Tu.s:690    .text:00000000000003d4 .L0 
     /tmp/ccl2M3Tu.s:697    .text:00000000000003f0 .L0 
     /tmp/ccl2M3Tu.s:699    .text:00000000000003f4 .L0 
     /tmp/ccl2M3Tu.s:700    .text:00000000000003f4 .L0 
     /tmp/ccl2M3Tu.s:707    .text:0000000000000410 .L0 
     /tmp/ccl2M3Tu.s:709    .text:0000000000000414 .L0 
     /tmp/ccl2M3Tu.s:710    .text:0000000000000414 .L0 
     /tmp/ccl2M3Tu.s:713    .text:000000000000041c .L0 
     /tmp/ccl2M3Tu.s:714    .text:000000000000041c .L0 
     /tmp/ccl2M3Tu.s:717    .text:0000000000000424 .L0 
     /tmp/ccl2M3Tu.s:718    .text:0000000000000424 .L0 
     /tmp/ccl2M3Tu.s:723    .text:0000000000000434 .L0 
     /tmp/ccl2M3Tu.s:727    .text:0000000000000438 .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 57


     /tmp/ccl2M3Tu.s:728    .text:0000000000000438 .L0 
     /tmp/ccl2M3Tu.s:732    .text:000000000000043c .L0 
     /tmp/ccl2M3Tu.s:735    .text:0000000000000444 .L0 
     /tmp/ccl2M3Tu.s:736    .text:0000000000000444 .L0 
     /tmp/ccl2M3Tu.s:740    .text:0000000000000454 .L0 
     /tmp/ccl2M3Tu.s:742    .text:0000000000000458 .L0 
     /tmp/ccl2M3Tu.s:748    .text:0000000000000460 .L0 
     /tmp/ccl2M3Tu.s:749    .text:0000000000000460 .L0 
     /tmp/ccl2M3Tu.s:756    .text:000000000000047c .L0 
     /tmp/ccl2M3Tu.s:757    .text:000000000000047c .L0 
     /tmp/ccl2M3Tu.s:762    .text:0000000000000484 .L0 
     /tmp/ccl2M3Tu.s:766    .text:0000000000000494 .L0 
     /tmp/ccl2M3Tu.s:767    .text:0000000000000494 .L0 
     /tmp/ccl2M3Tu.s:771    .text:00000000000004a0 .L0 
     /tmp/ccl2M3Tu.s:779    .text:00000000000004a8 .L0 
     /tmp/ccl2M3Tu.s:783    .text:00000000000004b8 .L0 
     /tmp/ccl2M3Tu.s:784    .text:00000000000004b8 .L0 
     /tmp/ccl2M3Tu.s:788    .text:00000000000004c4 .L0 
     /tmp/ccl2M3Tu.s:789    .text:00000000000004c4 .L0 
     /tmp/ccl2M3Tu.s:793    .text:00000000000004cc .L0 
     /tmp/ccl2M3Tu.s:797    .text:00000000000004d0 .L0 
     /tmp/ccl2M3Tu.s:798    .text:00000000000004d0 .L0 
     /tmp/ccl2M3Tu.s:803    .text:00000000000004e4 .L0 
     /tmp/ccl2M3Tu.s:804    .text:00000000000004e4 .L0 
     /tmp/ccl2M3Tu.s:809    .text:00000000000004f8 .L0 
     /tmp/ccl2M3Tu.s:810    .text:00000000000004f8 .L0 
     /tmp/ccl2M3Tu.s:815    .text:000000000000050c .L0 
     /tmp/ccl2M3Tu.s:816    .text:000000000000050c .L0 
     /tmp/ccl2M3Tu.s:821    .text:000000000000051c .L0 
     /tmp/ccl2M3Tu.s:822    .text:000000000000051c .L0 
     /tmp/ccl2M3Tu.s:825    .text:0000000000000528 .L0 
     /tmp/ccl2M3Tu.s:830    .text:0000000000000534 .L0 
       src/Riscv.cpp:116    .text:0000000000000534 .L0 
     /tmp/ccl2M3Tu.s:837    .text:0000000000000538 .L0 
     /tmp/ccl2M3Tu.s:838    .text:000000000000053c .L0 
     /tmp/ccl2M3Tu.s:840    .text:0000000000000540 .L0 
     /tmp/ccl2M3Tu.s:841    .text:0000000000000540 .L0 
     /tmp/ccl2M3Tu.s:843    .text:0000000000000544 .L0 
     /tmp/ccl2M3Tu.s:846    .text:0000000000000548 .L0 
     /tmp/ccl2M3Tu.s:849    .text:000000000000054c .L0 
     /tmp/ccl2M3Tu.s:852    .text:0000000000000550 .L0 
     /tmp/ccl2M3Tu.s:854    .text:0000000000000554 .L0 
     /tmp/ccl2M3Tu.s:860    .text:0000000000000554 _ZN5Riscv10kernelMainEv
     /tmp/ccl2M3Tu.s:863    .text:0000000000000554 .L0 
     /tmp/ccl2M3Tu.s:864    .text:0000000000000554 .L0 
     /tmp/ccl2M3Tu.s:865    .text:0000000000000554 .L0 
     /tmp/ccl2M3Tu.s:870    .text:0000000000000564 .L0 
     /tmp/ccl2M3Tu.s:871    .text:0000000000000568 .L0 
     /tmp/ccl2M3Tu.s:874    .text:0000000000000570 .L0 
     /tmp/ccl2M3Tu.s:875    .text:0000000000000570 .L0 
     /tmp/ccl2M3Tu.s:877    .text:0000000000000574 .L0 
     /tmp/ccl2M3Tu.s:879    .text:0000000000000574 .L0 
     /tmp/ccl2M3Tu.s:880    .text:0000000000000574 .L0 
     /tmp/ccl2M3Tu.s:883    .text:0000000000000580 .L0 
     /tmp/ccl2M3Tu.s:884    .text:0000000000000580 .L0 
     /tmp/ccl2M3Tu.s:887    .text:0000000000000588 .L0 
     /tmp/ccl2M3Tu.s:888    .text:0000000000000588 .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 58


     /tmp/ccl2M3Tu.s:892    .text:0000000000000590 .L0 
     /tmp/ccl2M3Tu.s:893    .text:0000000000000590 .L0 
     /tmp/ccl2M3Tu.s:894    .text:0000000000000590 .L0 
     /tmp/ccl2M3Tu.s:899    .text:00000000000005a4 .L0 
     /tmp/ccl2M3Tu.s:901    .text:00000000000005a8 .L0 
     /tmp/ccl2M3Tu.s:902    .text:00000000000005a8 .L0 
     /tmp/ccl2M3Tu.s:905    .text:00000000000005b0 .L0 
     /tmp/ccl2M3Tu.s:908    .text:00000000000005b4 .L0 
     /tmp/ccl2M3Tu.s:909    .text:00000000000005b4 .L0 
     /tmp/ccl2M3Tu.s:912    .text:00000000000005bc .L0 
     /tmp/ccl2M3Tu.s:913    .text:00000000000005c0 .L0 
     /tmp/ccl2M3Tu.s:915    .text:00000000000005c4 .L0 
     /tmp/ccl2M3Tu.s:916    .text:00000000000005c4 .L0 
     /tmp/ccl2M3Tu.s:918    .text:00000000000005c8 .L0 
     /tmp/ccl2M3Tu.s:920    .text:00000000000005cc .L0 
     /tmp/ccl2M3Tu.s:926    .text:00000000000005cc _ZN5Riscv15userMainWrapperEPv
     /tmp/ccl2M3Tu.s:929    .text:00000000000005cc .L0 
     /tmp/ccl2M3Tu.s:930    .text:00000000000005cc .L0 
     /tmp/ccl2M3Tu.s:931    .text:00000000000005d0 .L0 
     /tmp/ccl2M3Tu.s:934    .text:00000000000005d8 .L0 
     /tmp/ccl2M3Tu.s:935    .text:00000000000005d8 .L0 
     /tmp/ccl2M3Tu.s:937    .text:00000000000005dc .L0 
     /tmp/ccl2M3Tu.s:939    .text:00000000000005dc .L0 
     /tmp/ccl2M3Tu.s:940    .text:00000000000005dc .L0 
     /tmp/ccl2M3Tu.s:943    .text:00000000000005e4 .L0 
     /tmp/ccl2M3Tu.s:944    .text:00000000000005e8 .L0 
     /tmp/ccl2M3Tu.s:946    .text:00000000000005ec .L0 
     /tmp/ccl2M3Tu.s:947    .text:00000000000005ec .L0 
     /tmp/ccl2M3Tu.s:949    .text:00000000000005f0 .L0 
     /tmp/ccl2M3Tu.s:951    .text:00000000000005f4 .L0 
     /tmp/ccl2M3Tu.s:957    .text:00000000000005f4 _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccl2M3Tu.s:960    .text:00000000000005f4 .L0 
     /tmp/ccl2M3Tu.s:961    .text:00000000000005f4 .L0 
     /tmp/ccl2M3Tu.s:962    .text:00000000000005f8 .L0 
     /tmp/ccl2M3Tu.s:964    .text:00000000000005fc .L0 
     /tmp/ccl2M3Tu.s:966    .text:0000000000000600 .L0 
     /tmp/ccl2M3Tu.s:969    .text:0000000000000600 .L0 
     /tmp/ccl2M3Tu.s:970    .text:0000000000000600 .L0 
     /tmp/ccl2M3Tu.s:971    .text:0000000000000600 .L0 
     /tmp/ccl2M3Tu.s:978    .text:0000000000000608 .L0 
     /tmp/ccl2M3Tu.s:979    .text:000000000000060c .L0 
     /tmp/ccl2M3Tu.s:980    .text:000000000000060c .L0 
     /tmp/ccl2M3Tu.s:982    .text:0000000000000610 .L0 
     /tmp/ccl2M3Tu.s:984    .text:0000000000000614 .L0 
     /tmp/ccl2M3Tu.s:990    .text:0000000000000614 _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccl2M3Tu.s:993    .text:0000000000000614 .L0 
     /tmp/ccl2M3Tu.s:994    .text:0000000000000614 .L0 
     /tmp/ccl2M3Tu.s:995    .text:0000000000000618 .L0 
     /tmp/ccl2M3Tu.s:997    .text:000000000000061c .L0 
     /tmp/ccl2M3Tu.s:999    .text:0000000000000620 .L0 
     /tmp/ccl2M3Tu.s:1001   .text:0000000000000620 .L0 
     /tmp/ccl2M3Tu.s:1002   .text:0000000000000620 .L0 
       src/Riscv.cpp:389    .text:0000000000000620 .L0 
     /tmp/ccl2M3Tu.s:1009   .text:0000000000000624 .L0 
     /tmp/ccl2M3Tu.s:1011   .text:0000000000000624 .L0 
       src/Riscv.cpp:390    .text:0000000000000634 .L0 
     /tmp/ccl2M3Tu.s:1020   .text:0000000000000638 .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 59


       src/Riscv.cpp:391    .text:0000000000000638 .L0 
     /tmp/ccl2M3Tu.s:1025   .text:000000000000063c .L0 
       src/Riscv.cpp:392    .text:000000000000063c .L0 
     /tmp/ccl2M3Tu.s:1031   .text:0000000000000640 .L0 
     /tmp/ccl2M3Tu.s:1032   .text:0000000000000644 .L0 
     /tmp/ccl2M3Tu.s:1033   .text:0000000000000644 .L0 
     /tmp/ccl2M3Tu.s:1035   .text:0000000000000648 .L0 
     /tmp/ccl2M3Tu.s:1037   .text:000000000000064c .L0 
     /tmp/ccl2M3Tu.s:1043   .text:000000000000064c _ZN5Riscv14changePrivModeEv
     /tmp/ccl2M3Tu.s:1046   .text:000000000000064c .L0 
     /tmp/ccl2M3Tu.s:1047   .text:000000000000064c .L0 
     /tmp/ccl2M3Tu.s:1048   .text:0000000000000650 .L0 
     /tmp/ccl2M3Tu.s:1050   .text:0000000000000654 .L0 
     /tmp/ccl2M3Tu.s:1052   .text:0000000000000658 .L0 
     /tmp/ccl2M3Tu.s:1054   .text:0000000000000658 .L0 
     /tmp/ccl2M3Tu.s:1055   .text:0000000000000658 .L0 
     /tmp/ccl2M3Tu.s:1059   .text:0000000000000668 .L0 
     /tmp/ccl2M3Tu.s:1064   .text:000000000000066c .L0 
     /tmp/ccl2M3Tu.s:1065   .text:000000000000066c .L0 
     /tmp/ccl2M3Tu.s:1066   .text:000000000000066c .L0 
     /tmp/ccl2M3Tu.s:1077   .text:0000000000000674 .L0 
     /tmp/ccl2M3Tu.s:1078   .text:0000000000000678 .L0 
     /tmp/ccl2M3Tu.s:1079   .text:0000000000000678 .L0 
     /tmp/ccl2M3Tu.s:1080   .text:0000000000000678 .L0 
     /tmp/ccl2M3Tu.s:1082   .text:000000000000067c .L0 
     /tmp/ccl2M3Tu.s:1085   .text:0000000000000680 .L0 
     /tmp/ccl2M3Tu.s:1090   .text:0000000000000680 .L0 
     /tmp/ccl2M3Tu.s:1091   .text:0000000000000680 .L0 
     /tmp/ccl2M3Tu.s:1092   .text:0000000000000680 .L0 
     /tmp/ccl2M3Tu.s:1102   .text:0000000000000688 .L0 
     /tmp/ccl2M3Tu.s:1103   .text:000000000000068c .L0 
     /tmp/ccl2M3Tu.s:1109   .text:000000000000068c _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccl2M3Tu.s:1112   .text:000000000000068c .L0 
     /tmp/ccl2M3Tu.s:1113   .text:000000000000068c .L0 
     /tmp/ccl2M3Tu.s:1114   .text:0000000000000690 .L0 
     /tmp/ccl2M3Tu.s:1118   .text:000000000000069c .L0 
     /tmp/ccl2M3Tu.s:1119   .text:000000000000069c .L0 
     /tmp/ccl2M3Tu.s:1120   .text:000000000000069c .L0 
     /tmp/ccl2M3Tu.s:1122   .text:00000000000006a0 .L0 
     /tmp/ccl2M3Tu.s:1124   .text:00000000000006a0 .L0 
       src/Riscv.cpp:212    .text:00000000000006a0 .L0 
     /tmp/ccl2M3Tu.s:1133   .text:00000000000006b0 .L0 
     /tmp/ccl2M3Tu.s:1134   .text:00000000000006b0 .L0 
       src/Riscv.cpp:213    .text:00000000000006bc .L0 
     /tmp/ccl2M3Tu.s:1146   .text:00000000000006c4 .L0 
     /tmp/ccl2M3Tu.s:1147   .text:00000000000006c4 .L0 
     /tmp/ccl2M3Tu.s:1148   .text:00000000000006c4 .L0 
  src/../h/Riscv.hpp:131    .text:00000000000006c4 .L0 
     /tmp/ccl2M3Tu.s:1156   .text:00000000000006cc .L0 
     /tmp/ccl2M3Tu.s:1157   .text:00000000000006cc .L0 
     /tmp/ccl2M3Tu.s:1162   .text:00000000000006d0 .L0 
     /tmp/ccl2M3Tu.s:1163   .text:00000000000006d0 .L0 
     /tmp/ccl2M3Tu.s:1164   .text:00000000000006d0 .L0 
     /tmp/ccl2M3Tu.s:1166   .text:00000000000006d0 .L0 
     /tmp/ccl2M3Tu.s:1212   .text:0000000000000724 .L0 
     /tmp/ccl2M3Tu.s:1213   .text:0000000000000724 .L0 
     /tmp/ccl2M3Tu.s:1214   .text:0000000000000724 .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 60


     /tmp/ccl2M3Tu.s:1215   .text:0000000000000724 .L0 
     /tmp/ccl2M3Tu.s:1218   .text:000000000000072c .L0 
     /tmp/ccl2M3Tu.s:1219   .text:000000000000072c .L0 
     /tmp/ccl2M3Tu.s:1224   .text:000000000000073c .L0 
     /tmp/ccl2M3Tu.s:1227   .text:0000000000000740 .L0 
     /tmp/ccl2M3Tu.s:1229   .text:0000000000000740 .L0 
     /tmp/ccl2M3Tu.s:1231   .text:0000000000000740 .L0 
     /tmp/ccl2M3Tu.s:1232   .text:0000000000000740 .L0 
       src/Riscv.cpp:226    .text:0000000000000740 .L0 
     /tmp/ccl2M3Tu.s:1239   .text:0000000000000744 .L0 
     /tmp/ccl2M3Tu.s:1241   .text:0000000000000744 .L0 
     /tmp/ccl2M3Tu.s:1246   .text:000000000000074c .L0 
     /tmp/ccl2M3Tu.s:1248   .text:000000000000074c .L0 
     /tmp/ccl2M3Tu.s:1249   .text:000000000000074c .L0 
     /tmp/ccl2M3Tu.s:1250   .text:000000000000074c .L0 
       src/Riscv.cpp:232    .text:000000000000074c .L0 
     /tmp/ccl2M3Tu.s:1257   .text:0000000000000750 .L0 
     /tmp/ccl2M3Tu.s:1259   .text:0000000000000750 .L0 
     /tmp/ccl2M3Tu.s:1264   .text:0000000000000758 .L0 
     /tmp/ccl2M3Tu.s:1266   .text:0000000000000758 .L0 
     /tmp/ccl2M3Tu.s:1267   .text:0000000000000758 .L0 
     /tmp/ccl2M3Tu.s:1268   .text:0000000000000758 .L0 
       src/Riscv.cpp:239    .text:0000000000000758 .L0 
     /tmp/ccl2M3Tu.s:1275   .text:000000000000075c .L0 
     /tmp/ccl2M3Tu.s:1277   .text:000000000000075c .L0 
     /tmp/ccl2M3Tu.s:1282   .text:0000000000000764 .L0 
     /tmp/ccl2M3Tu.s:1284   .text:0000000000000764 .L0 
     /tmp/ccl2M3Tu.s:1287   .text:0000000000000764 .L0 
     /tmp/ccl2M3Tu.s:1288   .text:0000000000000764 .L0 
     /tmp/ccl2M3Tu.s:1289   .text:0000000000000764 .L0 
  src/../h/Riscv.hpp:141    .text:0000000000000764 .L0 
     /tmp/ccl2M3Tu.s:1297   .text:000000000000076c .L0 
     /tmp/ccl2M3Tu.s:1298   .text:000000000000076c .L0 
     /tmp/ccl2M3Tu.s:1302   .text:0000000000000770 .L0 
     /tmp/ccl2M3Tu.s:1306   .text:0000000000000774 .L0 
     /tmp/ccl2M3Tu.s:1307   .text:0000000000000774 .L0 
     /tmp/ccl2M3Tu.s:1308   .text:0000000000000774 .L0 
  src/../h/Riscv.hpp:214    .text:0000000000000774 .L0 
     /tmp/ccl2M3Tu.s:1316   .text:000000000000077c .L0 
     /tmp/ccl2M3Tu.s:1317   .text:000000000000077c .L0 
     /tmp/ccl2M3Tu.s:1321   .text:0000000000000780 .L0 
     /tmp/ccl2M3Tu.s:1326   .text:0000000000000784 .L0 
     /tmp/ccl2M3Tu.s:1327   .text:0000000000000784 .L0 
     /tmp/ccl2M3Tu.s:1328   .text:0000000000000784 .L0 
     /tmp/ccl2M3Tu.s:1338   .text:000000000000078c .L0 
     /tmp/ccl2M3Tu.s:1339   .text:000000000000078c .L0 
     /tmp/ccl2M3Tu.s:1344   .text:00000000000007a0 .L0 
     /tmp/ccl2M3Tu.s:1345   .text:00000000000007a0 .L0 
     /tmp/ccl2M3Tu.s:1350   .text:00000000000007b4 .L0 
     /tmp/ccl2M3Tu.s:1351   .text:00000000000007b4 .L0 
     /tmp/ccl2M3Tu.s:1354   .text:00000000000007bc .L0 
     /tmp/ccl2M3Tu.s:1355   .text:00000000000007bc .L0 
     /tmp/ccl2M3Tu.s:1362   .text:00000000000007c8 .L0 
     /tmp/ccl2M3Tu.s:1363   .text:00000000000007c8 .L0 
     /tmp/ccl2M3Tu.s:1368   .text:00000000000007cc .L0 
     /tmp/ccl2M3Tu.s:1370   .text:00000000000007d0 .L0 
     /tmp/ccl2M3Tu.s:1373   .text:00000000000007d4 .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 61


     /tmp/ccl2M3Tu.s:1374   .text:00000000000007d4 .L0 
     /tmp/ccl2M3Tu.s:1379   .text:00000000000007d8 .L0 
  src/../h/Riscv.hpp:219    .text:00000000000007d8 .L0 
     /tmp/ccl2M3Tu.s:1389   .text:00000000000007dc .L0 
     /tmp/ccl2M3Tu.s:1390   .text:00000000000007dc .L0 
     /tmp/ccl2M3Tu.s:1395   .text:00000000000007e0 .L0 
  src/../h/Riscv.hpp:146    .text:00000000000007e0 .L0 
     /tmp/ccl2M3Tu.s:1405   .text:00000000000007e4 .L0 
     /tmp/ccl2M3Tu.s:1406   .text:00000000000007e4 .L0 
     /tmp/ccl2M3Tu.s:1413   .text:00000000000007ec .L0 
     /tmp/ccl2M3Tu.s:1414   .text:00000000000007ec .L0 
     /tmp/ccl2M3Tu.s:1415   .text:00000000000007f0 .L0 
     /tmp/ccl2M3Tu.s:1416   .text:00000000000007f0 .L0 
     /tmp/ccl2M3Tu.s:1418   .text:00000000000007f4 .L0 
     /tmp/ccl2M3Tu.s:1419   .text:00000000000007f4 .L0 
     /tmp/ccl2M3Tu.s:1421   .text:00000000000007f8 .L0 
     /tmp/ccl2M3Tu.s:1423   .text:00000000000007fc .L0 
     /tmp/ccl2M3Tu.s:1426   .text:0000000000000800 .L0 
     /tmp/ccl2M3Tu.s:1431   .text:0000000000000800 .L0 
     /tmp/ccl2M3Tu.s:1432   .text:0000000000000800 .L0 
     /tmp/ccl2M3Tu.s:1434   .text:0000000000000804 .L0 
     /tmp/ccl2M3Tu.s:1435   .text:0000000000000804 .L0 
     /tmp/ccl2M3Tu.s:1441   .text:0000000000000810 .L0 
     /tmp/ccl2M3Tu.s:1442   .text:0000000000000810 .L0 
     /tmp/ccl2M3Tu.s:1443   .text:0000000000000810 .L0 
     /tmp/ccl2M3Tu.s:1444   .text:0000000000000810 .L0 
     /tmp/ccl2M3Tu.s:1447   .text:0000000000000818 .L0 
     /tmp/ccl2M3Tu.s:1450   .text:000000000000081c .L0 
     /tmp/ccl2M3Tu.s:1451   .text:000000000000081c .L0 
     /tmp/ccl2M3Tu.s:1452   .text:000000000000081c .L0 
     /tmp/ccl2M3Tu.s:1453   .text:000000000000081c .L0 
     /tmp/ccl2M3Tu.s:1456   .text:0000000000000824 .L0 
     /tmp/ccl2M3Tu.s:1459   .text:0000000000000828 .L0 
     /tmp/ccl2M3Tu.s:1460   .text:0000000000000828 .L0 
     /tmp/ccl2M3Tu.s:1461   .text:0000000000000828 .L0 
     /tmp/ccl2M3Tu.s:1462   .text:0000000000000828 .L0 
     /tmp/ccl2M3Tu.s:1465   .text:0000000000000830 .L0 
     /tmp/ccl2M3Tu.s:1468   .text:0000000000000834 .L0 
     /tmp/ccl2M3Tu.s:1469   .text:0000000000000834 .L0 
     /tmp/ccl2M3Tu.s:1471   .text:0000000000000834 .L0 
     /tmp/ccl2M3Tu.s:1472   .text:0000000000000834 .L0 
     /tmp/ccl2M3Tu.s:1473   .text:0000000000000834 .L0 
       src/Riscv.cpp:290    .text:0000000000000834 .L0 
     /tmp/ccl2M3Tu.s:1483   .text:0000000000000838 .L0 
     /tmp/ccl2M3Tu.s:1484   .text:0000000000000838 .L0 
     /tmp/ccl2M3Tu.s:1485   .text:0000000000000838 .L0 
  src/../h/Riscv.hpp:141    .text:0000000000000838 .L0 
     /tmp/ccl2M3Tu.s:1493   .text:0000000000000840 .L0 
     /tmp/ccl2M3Tu.s:1494   .text:0000000000000840 .L0 
     /tmp/ccl2M3Tu.s:1498   .text:0000000000000844 .L0 
     /tmp/ccl2M3Tu.s:1500   .text:0000000000000848 .L0 
     /tmp/ccl2M3Tu.s:1504   .text:000000000000084c .L0 
     /tmp/ccl2M3Tu.s:1505   .text:000000000000084c .L0 
     /tmp/ccl2M3Tu.s:1506   .text:000000000000084c .L0 
  src/../h/Riscv.hpp:214    .text:000000000000084c .L0 
     /tmp/ccl2M3Tu.s:1514   .text:0000000000000854 .L0 
     /tmp/ccl2M3Tu.s:1515   .text:0000000000000854 .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 62


     /tmp/ccl2M3Tu.s:1519   .text:0000000000000858 .L0 
     /tmp/ccl2M3Tu.s:1521   .text:000000000000085c .L0 
     /tmp/ccl2M3Tu.s:1605   .text:0000000000000880 .L0 
     /tmp/ccl2M3Tu.s:1606   .text:0000000000000880 .L0 
     /tmp/ccl2M3Tu.s:1607   .text:0000000000000880 .L0 
     /tmp/ccl2M3Tu.s:1611   .text:0000000000000888 .L0 
     /tmp/ccl2M3Tu.s:1612   .text:0000000000000888 .L0 
     /tmp/ccl2M3Tu.s:1613   .text:0000000000000888 .L0 
     /tmp/ccl2M3Tu.s:1618   .text:000000000000088c .L0 
  src/../h/Riscv.hpp:219    .text:000000000000088c .L0 
     /tmp/ccl2M3Tu.s:1628   .text:0000000000000890 .L0 
     /tmp/ccl2M3Tu.s:1629   .text:0000000000000890 .L0 
     /tmp/ccl2M3Tu.s:1634   .text:0000000000000894 .L0 
  src/../h/Riscv.hpp:146    .text:0000000000000894 .L0 
     /tmp/ccl2M3Tu.s:1644   .text:0000000000000898 .L0 
     /tmp/ccl2M3Tu.s:1645   .text:0000000000000898 .L0 
     /tmp/ccl2M3Tu.s:1651   .text:00000000000008a0 .L0 
     /tmp/ccl2M3Tu.s:1652   .text:00000000000008a0 .L0 
     /tmp/ccl2M3Tu.s:1658   .text:00000000000008a4 .L0 
     /tmp/ccl2M3Tu.s:1659   .text:00000000000008a4 .L0 
     /tmp/ccl2M3Tu.s:1660   .text:00000000000008a4 .L0 
     /tmp/ccl2M3Tu.s:1663   .text:00000000000008ac .L0 
     /tmp/ccl2M3Tu.s:1666   .text:00000000000008b0 .L0 
     /tmp/ccl2M3Tu.s:1667   .text:00000000000008b0 .L0 
     /tmp/ccl2M3Tu.s:1668   .text:00000000000008b0 .L0 
     /tmp/ccl2M3Tu.s:1671   .text:00000000000008b8 .L0 
     /tmp/ccl2M3Tu.s:1674   .text:00000000000008bc .L0 
     /tmp/ccl2M3Tu.s:1675   .text:00000000000008bc .L0 
     /tmp/ccl2M3Tu.s:1676   .text:00000000000008bc .L0 
     /tmp/ccl2M3Tu.s:1679   .text:00000000000008c4 .L0 
     /tmp/ccl2M3Tu.s:1682   .text:00000000000008c8 .L0 
     /tmp/ccl2M3Tu.s:1683   .text:00000000000008c8 .L0 
     /tmp/ccl2M3Tu.s:1684   .text:00000000000008c8 .L0 
     /tmp/ccl2M3Tu.s:1687   .text:00000000000008d0 .L0 
     /tmp/ccl2M3Tu.s:1690   .text:00000000000008d4 .L0 
     /tmp/ccl2M3Tu.s:1691   .text:00000000000008d4 .L0 
     /tmp/ccl2M3Tu.s:1692   .text:00000000000008d4 .L0 
     /tmp/ccl2M3Tu.s:1695   .text:00000000000008dc .L0 
     /tmp/ccl2M3Tu.s:1698   .text:00000000000008e0 .L0 
     /tmp/ccl2M3Tu.s:1699   .text:00000000000008e0 .L0 
     /tmp/ccl2M3Tu.s:1700   .text:00000000000008e0 .L0 
     /tmp/ccl2M3Tu.s:1703   .text:00000000000008e8 .L0 
     /tmp/ccl2M3Tu.s:1706   .text:00000000000008ec .L0 
     /tmp/ccl2M3Tu.s:1707   .text:00000000000008ec .L0 
     /tmp/ccl2M3Tu.s:1708   .text:00000000000008ec .L0 
     /tmp/ccl2M3Tu.s:1711   .text:00000000000008f4 .L0 
     /tmp/ccl2M3Tu.s:1714   .text:00000000000008f8 .L0 
     /tmp/ccl2M3Tu.s:1715   .text:00000000000008f8 .L0 
     /tmp/ccl2M3Tu.s:1716   .text:00000000000008f8 .L0 
     /tmp/ccl2M3Tu.s:1719   .text:0000000000000900 .L0 
     /tmp/ccl2M3Tu.s:1722   .text:0000000000000904 .L0 
     /tmp/ccl2M3Tu.s:1723   .text:0000000000000904 .L0 
     /tmp/ccl2M3Tu.s:1724   .text:0000000000000904 .L0 
     /tmp/ccl2M3Tu.s:1727   .text:000000000000090c .L0 
     /tmp/ccl2M3Tu.s:1730   .text:0000000000000910 .L0 
     /tmp/ccl2M3Tu.s:1731   .text:0000000000000910 .L0 
     /tmp/ccl2M3Tu.s:1732   .text:0000000000000910 .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 63


     /tmp/ccl2M3Tu.s:1735   .text:0000000000000918 .L0 
     /tmp/ccl2M3Tu.s:1738   .text:000000000000091c .L0 
     /tmp/ccl2M3Tu.s:1739   .text:000000000000091c .L0 
     /tmp/ccl2M3Tu.s:1740   .text:000000000000091c .L0 
     /tmp/ccl2M3Tu.s:1743   .text:0000000000000924 .L0 
     /tmp/ccl2M3Tu.s:1746   .text:0000000000000928 .L0 
     /tmp/ccl2M3Tu.s:1747   .text:0000000000000928 .L0 
     /tmp/ccl2M3Tu.s:1748   .text:0000000000000928 .L0 
     /tmp/ccl2M3Tu.s:1751   .text:0000000000000930 .L0 
     /tmp/ccl2M3Tu.s:1754   .text:0000000000000934 .L0 
     /tmp/ccl2M3Tu.s:1755   .text:0000000000000934 .L0 
     /tmp/ccl2M3Tu.s:1756   .text:0000000000000934 .L0 
     /tmp/ccl2M3Tu.s:1759   .text:000000000000093c .L0 
     /tmp/ccl2M3Tu.s:1762   .text:0000000000000940 .L0 
     /tmp/ccl2M3Tu.s:1763   .text:0000000000000940 .L0 
     /tmp/ccl2M3Tu.s:1764   .text:0000000000000940 .L0 
     /tmp/ccl2M3Tu.s:1767   .text:0000000000000948 .L0 
     /tmp/ccl2M3Tu.s:1770   .text:000000000000094c .L0 
     /tmp/ccl2M3Tu.s:1771   .text:000000000000094c .L0 
     /tmp/ccl2M3Tu.s:1772   .text:000000000000094c .L0 
     /tmp/ccl2M3Tu.s:1775   .text:0000000000000954 .L0 
     /tmp/ccl2M3Tu.s:1779   .text:0000000000000958 .L0 
     /tmp/ccl2M3Tu.s:1803   .bss:0000000000000010 _ZN5Riscv10riscvBuddyE
     /tmp/ccl2M3Tu.s:1799   .bss:0000000000000008 _ZN5Riscv7mainPMTE
     /tmp/ccl2M3Tu.s:1811   .bss:0000000000000020 _ZN5Riscv14semaphoreCacheE
     /tmp/ccl2M3Tu.s:1807   .bss:0000000000000018 _ZN5Riscv8pcbCacheE
     /tmp/ccl2M3Tu.s:1815   .bss:0000000000000028 _ZN5Riscv16kernelMainCalledE
     /tmp/ccl2M3Tu.s:1794   .bss:0000000000000000 _ZN5Riscv12finishSystemE
     /tmp/ccl2M3Tu.s:1820   .bss:0000000000000030 _ZN5Riscv9totalTimeE
     /tmp/ccl2M3Tu.s:1791   .bss:0000000000000000 .LANCHOR0
     /tmp/ccl2M3Tu.s:1834   .text:0000000000000958 .L0 
     /tmp/ccl2M3Tu.s:24     .text:0000000000000010 .L0 
     /tmp/ccl2M3Tu.s:26     .text:000000000000001c .L0 
     /tmp/ccl2M3Tu.s:188    .text:00000000000000dc .L0 
     /tmp/ccl2M3Tu.s:201    .text:00000000000000f0 .L0 
     /tmp/ccl2M3Tu.s:208    .text:0000000000000104 .L0 
     /tmp/ccl2M3Tu.s:218    .text:0000000000000118 .L0 
     /tmp/ccl2M3Tu.s:334    .text:00000000000001c0 .L0 
     /tmp/ccl2M3Tu.s:427    .text:0000000000000240 .L0 
     /tmp/ccl2M3Tu.s:464    .text:000000000000027c .L0 
     /tmp/ccl2M3Tu.s:479    .text:0000000000000294 .L0 
     /tmp/ccl2M3Tu.s:625    .text:0000000000000354 .L0 
     /tmp/ccl2M3Tu.s:641    .text:0000000000000360 .L0 
     /tmp/ccl2M3Tu.s:646    .text:0000000000000374 .L0 
     /tmp/ccl2M3Tu.s:651    .text:0000000000000384 .L0 
     /tmp/ccl2M3Tu.s:593    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccl2M3Tu.s:693    .text:00000000000003e0 .L0 
     /tmp/ccl2M3Tu.s:596    .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccl2M3Tu.s:703    .text:0000000000000400 .L0 
     /tmp/ccl2M3Tu.s:737    .text:0000000000000448 .L0 
     /tmp/ccl2M3Tu.s:750    .text:0000000000000464 .L0 
     /tmp/ccl2M3Tu.s:599    .rodata.str1.8:0000000000000028 .LC2
     /tmp/ccl2M3Tu.s:751    .text:000000000000046c .L0 
     /tmp/ccl2M3Tu.s:762    .text:0000000000000484 .L0 
     /tmp/ccl2M3Tu.s:779    .text:00000000000004a8 .L0 
     /tmp/ccl2M3Tu.s:798    .text:00000000000004d0 .L0 
     /tmp/ccl2M3Tu.s:804    .text:00000000000004e4 .L0 
GAS LISTING /tmp/ccl2M3Tu.s 			page 64


     /tmp/ccl2M3Tu.s:810    .text:00000000000004f8 .L0 
     /tmp/ccl2M3Tu.s:822    .text:000000000000051c .L0 
     /tmp/ccl2M3Tu.s:865    .text:0000000000000554 .L0 
     /tmp/ccl2M3Tu.s:881    .text:0000000000000578 .L0 
     /tmp/ccl2M3Tu.s:894    .text:0000000000000590 .L0 
     /tmp/ccl2M3Tu.s:1011   .text:0000000000000624 .L0 
     /tmp/ccl2M3Tu.s:1055   .text:0000000000000658 .L0 
     /tmp/ccl2M3Tu.s:1130   .text:00000000000006a4 .L0 
     /tmp/ccl2M3Tu.s:1134   .text:00000000000006b0 .L0 
     /tmp/ccl2M3Tu.s:1182   .rodata:0000000000000000 .L63
     /tmp/ccl2M3Tu.s:1174   .text:00000000000006ec .L0 
     /tmp/ccl2M3Tu.s:1339   .text:000000000000078c .L0 
     /tmp/ccl2M3Tu.s:1345   .text:00000000000007a0 .L0 
     /tmp/ccl2M3Tu.s:1355   .text:00000000000007bc .L0 
     /tmp/ccl2M3Tu.s:1533   .rodata:0000000000000040 .L75
     /tmp/ccl2M3Tu.s:1525   .text:0000000000000868 .L0 
     /tmp/ccl2M3Tu.s:191    .text:00000000000000e4 .L10
     /tmp/ccl2M3Tu.s:230    .text:000000000000013c .L11
     /tmp/ccl2M3Tu.s:214    .text:0000000000000118 .L12
     /tmp/ccl2M3Tu.s:419    .text:000000000000023c .L27
     /tmp/ccl2M3Tu.s:472    .text:0000000000000290 .L28
     /tmp/ccl2M3Tu.s:392    .text:0000000000000210 .L16
     /tmp/ccl2M3Tu.s:451    .text:0000000000000270 .L18
     /tmp/ccl2M3Tu.s:436    .text:0000000000000254 .L19
     /tmp/ccl2M3Tu.s:350    .text:00000000000001dc .L20
     /tmp/ccl2M3Tu.s:503    .text:00000000000002c4 .L22
     /tmp/ccl2M3Tu.s:488    .text:00000000000002a8 .L23
     /tmp/ccl2M3Tu.s:370    .text:00000000000001f4 .L24
     /tmp/ccl2M3Tu.s:745    .text:0000000000000460 .L34
     /tmp/ccl2M3Tu.s:730    .text:000000000000043c .L35
     /tmp/ccl2M3Tu.s:774    .text:00000000000004a8 .L36
     /tmp/ccl2M3Tu.s:760    .text:0000000000000484 .L37
     /tmp/ccl2M3Tu.s:794    .text:00000000000004d0 .L38
     /tmp/ccl2M3Tu.s:868    .text:0000000000000564 .L48
     /tmp/ccl2M3Tu.s:906    .text:00000000000005b4 .L42
     /tmp/ccl2M3Tu.s:890    .text:0000000000000590 .L43
     /tmp/ccl2M3Tu.s:1084   .text:0000000000000680 .L56
     /tmp/ccl2M3Tu.s:1073   .text:0000000000000674 .L55
     /tmp/ccl2M3Tu.s:1201   .text:0000000000000704 .L60
     /tmp/ccl2M3Tu.s:1409   .text:00000000000007ec .L59
     /tmp/ccl2M3Tu.s:1279   .text:0000000000000764 .L70
     /tmp/ccl2M3Tu.s:1425   .text:0000000000000800 .L92
     /tmp/ccl2M3Tu.s:1371   .text:00000000000007d4 .L72
     /tmp/ccl2M3Tu.s:1610   .text:0000000000000888 .L73
     /tmp/ccl2M3Tu.s:1438   .text:0000000000000810 .L69
     /tmp/ccl2M3Tu.s:1448   .text:000000000000081c .L68
     /tmp/ccl2M3Tu.s:1457   .text:0000000000000828 .L67
     /tmp/ccl2M3Tu.s:1466   .text:0000000000000834 .L66
     /tmp/ccl2M3Tu.s:1261   .text:0000000000000758 .L65
     /tmp/ccl2M3Tu.s:1243   .text:000000000000074c .L64
     /tmp/ccl2M3Tu.s:1225   .text:0000000000000740 .L62
     /tmp/ccl2M3Tu.s:1603   .text:0000000000000880 .L90
     /tmp/ccl2M3Tu.s:1653   .text:00000000000008a4 .L89
     /tmp/ccl2M3Tu.s:1672   .text:00000000000008bc .L88
     /tmp/ccl2M3Tu.s:1696   .text:00000000000008e0 .L87
     /tmp/ccl2M3Tu.s:1688   .text:00000000000008d4 .L86
     /tmp/ccl2M3Tu.s:1664   .text:00000000000008b0 .L85
GAS LISTING /tmp/ccl2M3Tu.s 			page 65


     /tmp/ccl2M3Tu.s:1680   .text:00000000000008c8 .L84
     /tmp/ccl2M3Tu.s:1712   .text:00000000000008f8 .L83
     /tmp/ccl2M3Tu.s:1720   .text:0000000000000904 .L82
     /tmp/ccl2M3Tu.s:1744   .text:0000000000000928 .L81
     /tmp/ccl2M3Tu.s:1728   .text:0000000000000910 .L80
     /tmp/ccl2M3Tu.s:1736   .text:000000000000091c .L79
     /tmp/ccl2M3Tu.s:1704   .text:00000000000008ec .L78
     /tmp/ccl2M3Tu.s:1752   .text:0000000000000934 .L77
     /tmp/ccl2M3Tu.s:1760   .text:0000000000000940 .L76
     /tmp/ccl2M3Tu.s:1768   .text:000000000000094c .L74
     /tmp/ccl2M3Tu.s:5100   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccl2M3Tu.s:7599   .debug_str:0000000000001649 .LASF379
     /tmp/ccl2M3Tu.s:6967   .debug_str:000000000000013e .LASF380
     /tmp/ccl2M3Tu.s:7427   .debug_str:0000000000001117 .LASF381
     /tmp/ccl2M3Tu.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccl2M3Tu.s:1823   .text:0000000000000958 .Letext0
     /tmp/ccl2M3Tu.s:6921   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccl2M3Tu.s:6975   .debug_str:000000000000018a .LASF0
     /tmp/ccl2M3Tu.s:7631   .debug_str:000000000000185f .LASF1
     /tmp/ccl2M3Tu.s:7553   .debug_str:00000000000014dd .LASF2
     /tmp/ccl2M3Tu.s:7499   .debug_str:0000000000001328 .LASF4
     /tmp/ccl2M3Tu.s:7519   .debug_str:00000000000013ca .LASF3
     /tmp/ccl2M3Tu.s:7145   .debug_str:00000000000007c8 .LASF5
     /tmp/ccl2M3Tu.s:7229   .debug_str:0000000000000a75 .LASF6
     /tmp/ccl2M3Tu.s:7423   .debug_str:00000000000010f9 .LASF7
     /tmp/ccl2M3Tu.s:7013   .debug_str:00000000000002b7 .LASF8
     /tmp/ccl2M3Tu.s:7615   .debug_str:00000000000017d0 .LASF9
     /tmp/ccl2M3Tu.s:7149   .debug_str:00000000000007e5 .LASF10
     /tmp/ccl2M3Tu.s:7645   .debug_str:00000000000018ee .LASF11
     /tmp/ccl2M3Tu.s:7067   .debug_str:00000000000004e9 .LASF12
     /tmp/ccl2M3Tu.s:7267   .debug_str:0000000000000bee .LASF13
     /tmp/ccl2M3Tu.s:7157   .debug_str:000000000000081d .LASF14
     /tmp/ccl2M3Tu.s:7483   .debug_str:00000000000012ca .LASF15
     /tmp/ccl2M3Tu.s:7161   .debug_str:0000000000000857 .LASF16
     /tmp/ccl2M3Tu.s:7125   .debug_str:0000000000000712 .LASF17
     /tmp/ccl2M3Tu.s:7251   .debug_str:0000000000000b2e .LASF18
     /tmp/ccl2M3Tu.s:7249   .debug_str:0000000000000b21 .LASF382
     /tmp/ccl2M3Tu.s:7051   .debug_str:0000000000000441 .LASF122
     /tmp/ccl2M3Tu.s:7173   .debug_str:00000000000008b7 .LASF22
     /tmp/ccl2M3Tu.s:7141   .debug_str:00000000000007b2 .LASF19
     /tmp/ccl2M3Tu.s:7451   .debug_str:0000000000001208 .LASF20
     /tmp/ccl2M3Tu.s:7495   .debug_str:0000000000001315 .LASF21
     /tmp/ccl2M3Tu.s:7235   .debug_str:0000000000000aa2 .LASF23
     /tmp/ccl2M3Tu.s:7609   .debug_str:0000000000001778 .LASF24
     /tmp/ccl2M3Tu.s:7395   .debug_str:0000000000001043 .LASF25
     /tmp/ccl2M3Tu.s:7177   .debug_str:00000000000008d4 .LASF26
     /tmp/ccl2M3Tu.s:7471   .debug_str:000000000000127f .LASF58
     /tmp/ccl2M3Tu.s:6971   .debug_str:000000000000016a .LASF60
     /tmp/ccl2M3Tu.s:7551   .debug_str:00000000000014cc .LASF27
     /tmp/ccl2M3Tu.s:7299   .debug_str:0000000000000d12 .LASF36
     /tmp/ccl2M3Tu.s:7583   .debug_str:00000000000015ce .LASF38
     /tmp/ccl2M3Tu.s:7473   .debug_str:000000000000128a .LASF28
     /tmp/ccl2M3Tu.s:7411   .debug_str:00000000000010bc .LASF29
     /tmp/ccl2M3Tu.s:6981   .debug_str:00000000000001a8 .LASF30
     /tmp/ccl2M3Tu.s:7571   .debug_str:000000000000155f .LASF32
     /tmp/ccl2M3Tu.s:6963   .debug_str:0000000000000112 .LASF31
     /tmp/ccl2M3Tu.s:7509   .debug_str:0000000000001384 .LASF33
GAS LISTING /tmp/ccl2M3Tu.s 			page 66


     /tmp/ccl2M3Tu.s:7665   .debug_str:00000000000019a6 .LASF34
     /tmp/ccl2M3Tu.s:7391   .debug_str:0000000000001013 .LASF35
     /tmp/ccl2M3Tu.s:7477   .debug_str:000000000000129a .LASF37
     /tmp/ccl2M3Tu.s:7211   .debug_str:00000000000009f3 .LASF39
     /tmp/ccl2M3Tu.s:7417   .debug_str:00000000000010d9 .LASF40
     /tmp/ccl2M3Tu.s:7581   .debug_str:00000000000015b6 .LASF41
     /tmp/ccl2M3Tu.s:7587   .debug_str:00000000000015ff .LASF42
     /tmp/ccl2M3Tu.s:7147   .debug_str:00000000000007cf .LASF43
     /tmp/ccl2M3Tu.s:7525   .debug_str:00000000000013ef .LASF44
     /tmp/ccl2M3Tu.s:7639   .debug_str:00000000000018ac .LASF45
     /tmp/ccl2M3Tu.s:7097   .debug_str:0000000000000635 .LASF46
     /tmp/ccl2M3Tu.s:7285   .debug_str:0000000000000c7d .LASF47
     /tmp/ccl2M3Tu.s:7699   .debug_str:0000000000001abc .LASF48
     /tmp/ccl2M3Tu.s:7437   .debug_str:000000000000116b .LASF49
     /tmp/ccl2M3Tu.s:6991   .debug_str:00000000000001f5 .LASF50
     /tmp/ccl2M3Tu.s:7613   .debug_str:00000000000017ac .LASF51
     /tmp/ccl2M3Tu.s:7221   .debug_str:0000000000000a4a .LASF52
     /tmp/ccl2M3Tu.s:7283   .debug_str:0000000000000c5e .LASF53
     /tmp/ccl2M3Tu.s:7053   .debug_str:0000000000000447 .LASF54
     /tmp/ccl2M3Tu.s:7293   .debug_str:0000000000000cda .LASF55
     /tmp/ccl2M3Tu.s:7255   .debug_str:0000000000000b4b .LASF56
     /tmp/ccl2M3Tu.s:7575   .debug_str:0000000000001586 .LASF57
     /tmp/ccl2M3Tu.s:7673   .debug_str:00000000000019e1 .LASF59
     /tmp/ccl2M3Tu.s:7607   .debug_str:0000000000001763 .LASF61
     /tmp/ccl2M3Tu.s:7467   .debug_str:0000000000001270 .LASF62
     /tmp/ccl2M3Tu.s:7007   .debug_str:0000000000000282 .LASF63
     /tmp/ccl2M3Tu.s:7089   .debug_str:00000000000005d1 .LASF64
     /tmp/ccl2M3Tu.s:7171   .debug_str:00000000000008a4 .LASF65
     /tmp/ccl2M3Tu.s:7139   .debug_str:00000000000007ab .LASF66
     /tmp/ccl2M3Tu.s:7001   .debug_str:000000000000025d .LASF67
     /tmp/ccl2M3Tu.s:7635   .debug_str:0000000000001890 .LASF68
     /tmp/ccl2M3Tu.s:7479   .debug_str:00000000000012ac .LASF69
     /tmp/ccl2M3Tu.s:7475   .debug_str:0000000000001292 .LASF70
     /tmp/ccl2M3Tu.s:7047   .debug_str:0000000000000423 .LASF71
     /tmp/ccl2M3Tu.s:7407   .debug_str:0000000000001085 .LASF72
     /tmp/ccl2M3Tu.s:6931   .debug_str:0000000000000030 .LASF73
     /tmp/ccl2M3Tu.s:7277   .debug_str:0000000000000c29 .LASF74
     /tmp/ccl2M3Tu.s:7237   .debug_str:0000000000000ab1 .LASF75
     /tmp/ccl2M3Tu.s:7589   .debug_str:0000000000001609 .LASF76
     /tmp/ccl2M3Tu.s:7667   .debug_str:00000000000019b5 .LASF77
     /tmp/ccl2M3Tu.s:7347   .debug_str:0000000000000ee1 .LASF78
     /tmp/ccl2M3Tu.s:7231   .debug_str:0000000000000a88 .LASF79
     /tmp/ccl2M3Tu.s:7549   .debug_str:00000000000014b9 .LASF80
     /tmp/ccl2M3Tu.s:7309   .debug_str:0000000000000da7 .LASF81
     /tmp/ccl2M3Tu.s:7659   .debug_str:0000000000001977 .LASF82
     /tmp/ccl2M3Tu.s:7523   .debug_str:00000000000013e9 .LASF83
     /tmp/ccl2M3Tu.s:7393   .debug_str:0000000000001031 .LASF84
     /tmp/ccl2M3Tu.s:7689   .debug_str:0000000000001a68 .LASF85
     /tmp/ccl2M3Tu.s:7643   .debug_str:00000000000018d3 .LASF86
     /tmp/ccl2M3Tu.s:7443   .debug_str:00000000000011b3 .LASF87
     /tmp/ccl2M3Tu.s:7065   .debug_str:00000000000004d1 .LASF88
     /tmp/ccl2M3Tu.s:7003   .debug_str:0000000000000270 .LASF89
     /tmp/ccl2M3Tu.s:7687   .debug_str:0000000000001a50 .LASF90
     /tmp/ccl2M3Tu.s:7225   .debug_str:0000000000000a61 .LASF91
     /tmp/ccl2M3Tu.s:7085   .debug_str:00000000000005a4 .LASF92
     /tmp/ccl2M3Tu.s:7557   .debug_str:00000000000014fc .LASF93
     /tmp/ccl2M3Tu.s:7195   .debug_str:0000000000000958 .LASF94
GAS LISTING /tmp/ccl2M3Tu.s 			page 67


     /tmp/ccl2M3Tu.s:7153   .debug_str:0000000000000800 .LASF95
     /tmp/ccl2M3Tu.s:7109   .debug_str:0000000000000692 .LASF96
     /tmp/ccl2M3Tu.s:7497   .debug_str:000000000000131e .LASF97
     /tmp/ccl2M3Tu.s:7245   .debug_str:0000000000000af6 .LASF98
     /tmp/ccl2M3Tu.s:7205   .debug_str:00000000000009d2 .LASF99
     /tmp/ccl2M3Tu.s:7337   .debug_str:0000000000000e8d .LASF100
     /tmp/ccl2M3Tu.s:7511   .debug_str:00000000000013a5 .LASF101
     /tmp/ccl2M3Tu.s:7123   .debug_str:0000000000000700 .LASF102
     /tmp/ccl2M3Tu.s:7425   .debug_str:000000000000110c .LASF103
     /tmp/ccl2M3Tu.s:7601   .debug_str:0000000000001719 .LASF104
     /tmp/ccl2M3Tu.s:7455   .debug_str:000000000000121c .LASF105
     /tmp/ccl2M3Tu.s:7069   .debug_str:00000000000004f8 .LASF106
     /tmp/ccl2M3Tu.s:6983   .debug_str:00000000000001b7 .LASF107
     /tmp/ccl2M3Tu.s:7263   .debug_str:0000000000000b9d .LASF108
     /tmp/ccl2M3Tu.s:6949   .debug_str:00000000000000b5 .LASF109
     /tmp/ccl2M3Tu.s:7547   .debug_str:00000000000014b1 .LASF110
     /tmp/ccl2M3Tu.s:7355   .debug_str:0000000000000f13 .LASF111
     /tmp/ccl2M3Tu.s:7401   .debug_str:0000000000001061 .LASF112
     /tmp/ccl2M3Tu.s:7233   .debug_str:0000000000000a8f .LASF113
     /tmp/ccl2M3Tu.s:7403   .debug_str:000000000000106d .LASF114
     /tmp/ccl2M3Tu.s:6951   .debug_str:00000000000000bc .LASF115
     /tmp/ccl2M3Tu.s:7083   .debug_str:0000000000000591 .LASF116
     /tmp/ccl2M3Tu.s:7035   .debug_str:0000000000000395 .LASF117
     /tmp/ccl2M3Tu.s:7517   .debug_str:00000000000013c0 .LASF118
     /tmp/ccl2M3Tu.s:7239   .debug_str:0000000000000ac5 .LASF119
     /tmp/ccl2M3Tu.s:7597   .debug_str:000000000000163a .LASF120
     /tmp/ccl2M3Tu.s:7297   .debug_str:0000000000000d0d .LASF121
     /tmp/ccl2M3Tu.s:7677   .debug_str:00000000000019fa .LASF123
     /tmp/ccl2M3Tu.s:7129   .debug_str:0000000000000738 .LASF130
     /tmp/ccl2M3Tu.s:7321   .debug_str:0000000000000df6 .LASF124
     /tmp/ccl2M3Tu.s:6979   .debug_str:00000000000001a3 .LASF125
     /tmp/ccl2M3Tu.s:7565   .debug_str:000000000000153a .LASF126
     /tmp/ccl2M3Tu.s:7133   .debug_str:0000000000000758 .LASF128
     /tmp/ccl2M3Tu.s:7257   .debug_str:0000000000000b58 .LASF127
     /tmp/ccl2M3Tu.s:7449   .debug_str:00000000000011ea .LASF129
     /tmp/ccl2M3Tu.s:7351   .debug_str:0000000000000f05 .LASF131
     /tmp/ccl2M3Tu.s:7367   .debug_str:0000000000000f65 .LASF132
     /tmp/ccl2M3Tu.s:7335   .debug_str:0000000000000e7a .LASF133
     /tmp/ccl2M3Tu.s:7657   .debug_str:000000000000196e .LASF134
     /tmp/ccl2M3Tu.s:7121   .debug_str:00000000000006f6 .LASF135
     /tmp/ccl2M3Tu.s:6933   .debug_str:0000000000000044 .LASF136
     /tmp/ccl2M3Tu.s:7373   .debug_str:0000000000000f8b .LASF138
     /tmp/ccl2M3Tu.s:6939   .debug_str:0000000000000068 .LASF137
     /tmp/ccl2M3Tu.s:7019   .debug_str:00000000000002ec .LASF139
     /tmp/ccl2M3Tu.s:7573   .debug_str:000000000000157b .LASF140
     /tmp/ccl2M3Tu.s:7281   .debug_str:0000000000000c3a .LASF141
     /tmp/ccl2M3Tu.s:7539   .debug_str:0000000000001466 .LASF142
     /tmp/ccl2M3Tu.s:7093   .debug_str:00000000000005f0 .LASF143
     /tmp/ccl2M3Tu.s:7503   .debug_str:0000000000001334 .LASF144
     /tmp/ccl2M3Tu.s:7061   .debug_str:0000000000000494 .LASF145
     /tmp/ccl2M3Tu.s:7073   .debug_str:0000000000000537 .LASF146
     /tmp/ccl2M3Tu.s:7409   .debug_str:000000000000108d .LASF147
     /tmp/ccl2M3Tu.s:7527   .debug_str:0000000000001404 .LASF148
     /tmp/ccl2M3Tu.s:7159   .debug_str:000000000000082d .LASF149
     /tmp/ccl2M3Tu.s:7675   .debug_str:00000000000019ea .LASF150
     /tmp/ccl2M3Tu.s:7695   .debug_str:0000000000001a8b .LASF151
     /tmp/ccl2M3Tu.s:6923   .debug_str:0000000000000000 .LASF152
GAS LISTING /tmp/ccl2M3Tu.s 			page 68


     /tmp/ccl2M3Tu.s:7333   .debug_str:0000000000000e53 .LASF153
     /tmp/ccl2M3Tu.s:7021   .debug_str:000000000000030d .LASF383
     /tmp/ccl2M3Tu.s:7265   .debug_str:0000000000000bbf .LASF384
     /tmp/ccl2M3Tu.s:7017   .debug_str:00000000000002e6 .LASF154
     /tmp/ccl2M3Tu.s:7291   .debug_str:0000000000000cd4 .LASF155
     /tmp/ccl2M3Tu.s:7361   .debug_str:0000000000000f3b .LASF156
     /tmp/ccl2M3Tu.s:7529   .debug_str:0000000000001415 .LASF157
     /tmp/ccl2M3Tu.s:7219   .debug_str:0000000000000a41 .LASF158
     /tmp/ccl2M3Tu.s:7199   .debug_str:0000000000000994 .LASF159
     /tmp/ccl2M3Tu.s:7691   .debug_str:0000000000001a76 .LASF160
     /tmp/ccl2M3Tu.s:7415   .debug_str:00000000000010d1 .LASF161
     /tmp/ccl2M3Tu.s:7117   .debug_str:00000000000006e8 .LASF162
     /tmp/ccl2M3Tu.s:7619   .debug_str:00000000000017e3 .LASF163
     /tmp/ccl2M3Tu.s:7295   .debug_str:0000000000000cf5 .LASF385
     /tmp/ccl2M3Tu.s:7617   .debug_str:00000000000017de .LASF164
     /tmp/ccl2M3Tu.s:7163   .debug_str:000000000000086d .LASF165
     /tmp/ccl2M3Tu.s:7151   .debug_str:00000000000007f4 .LASF166
     /tmp/ccl2M3Tu.s:7489   .debug_str:00000000000012fa .LASF167
     /tmp/ccl2M3Tu.s:7241   .debug_str:0000000000000ace .LASF168
     /tmp/ccl2M3Tu.s:7275   .debug_str:0000000000000c20 .LASF169
     /tmp/ccl2M3Tu.s:7213   .debug_str:0000000000000a12 .LASF170
     /tmp/ccl2M3Tu.s:7669   .debug_str:00000000000019bc .LASF171
     /tmp/ccl2M3Tu.s:7567   .debug_str:0000000000001542 .LASF172
     /tmp/ccl2M3Tu.s:7041   .debug_str:00000000000003db .LASF173
     /tmp/ccl2M3Tu.s:7243   .debug_str:0000000000000ade .LASF174
     /tmp/ccl2M3Tu.s:7369   .debug_str:0000000000000f73 .LASF175
     /tmp/ccl2M3Tu.s:7011   .debug_str:00000000000002ab .LASF176
     /tmp/ccl2M3Tu.s:7363   .debug_str:0000000000000f43 .LASF177
     /tmp/ccl2M3Tu.s:7435   .debug_str:000000000000115e .LASF178
     /tmp/ccl2M3Tu.s:7381   .debug_str:0000000000000fe9 .LASF179
     /tmp/ccl2M3Tu.s:7029   .debug_str:0000000000000363 .LASF180
     /tmp/ccl2M3Tu.s:7461   .debug_str:0000000000001244 .LASF181
     /tmp/ccl2M3Tu.s:6953   .debug_str:00000000000000cf .LASF182
     /tmp/ccl2M3Tu.s:7271   .debug_str:0000000000000c06 .LASF183
     /tmp/ccl2M3Tu.s:7191   .debug_str:0000000000000928 .LASF184
     /tmp/ccl2M3Tu.s:7441   .debug_str:00000000000011a4 .LASF185
     /tmp/ccl2M3Tu.s:7305   .debug_str:0000000000000d6a .LASF186
     /tmp/ccl2M3Tu.s:7563   .debug_str:000000000000152c .LASF187
     /tmp/ccl2M3Tu.s:7569   .debug_str:0000000000001553 .LASF188
     /tmp/ccl2M3Tu.s:7457   .debug_str:000000000000122b .LASF189
     /tmp/ccl2M3Tu.s:7095   .debug_str:0000000000000625 .LASF190
     /tmp/ccl2M3Tu.s:7143   .debug_str:00000000000007bb .LASF191
     /tmp/ccl2M3Tu.s:7663   .debug_str:0000000000001997 .LASF192
     /tmp/ccl2M3Tu.s:6937   .debug_str:000000000000005d .LASF193
     /tmp/ccl2M3Tu.s:7227   .debug_str:0000000000000a68 .LASF194
     /tmp/ccl2M3Tu.s:7453   .debug_str:0000000000001211 .LASF195
     /tmp/ccl2M3Tu.s:7591   .debug_str:0000000000001616 .LASF196
     /tmp/ccl2M3Tu.s:7217   .debug_str:0000000000000a36 .LASF197
     /tmp/ccl2M3Tu.s:6995   .debug_str:000000000000022f .LASF198
     /tmp/ccl2M3Tu.s:7595   .debug_str:0000000000001632 .LASF199
     /tmp/ccl2M3Tu.s:7331   .debug_str:0000000000000e3f .LASF200
     /tmp/ccl2M3Tu.s:7015   .debug_str:00000000000002c7 .LASF201
     /tmp/ccl2M3Tu.s:7465   .debug_str:000000000000125e .LASF202
     /tmp/ccl2M3Tu.s:7671   .debug_str:00000000000019c4 .LASF203
     /tmp/ccl2M3Tu.s:7325   .debug_str:0000000000000e08 .LASF204
     /tmp/ccl2M3Tu.s:7651   .debug_str:0000000000001926 .LASF205
     /tmp/ccl2M3Tu.s:7075   .debug_str:000000000000054c .LASF206
GAS LISTING /tmp/ccl2M3Tu.s 			page 69


     /tmp/ccl2M3Tu.s:7633   .debug_str:0000000000001872 .LASF207
     /tmp/ccl2M3Tu.s:7537   .debug_str:0000000000001453 .LASF208
     /tmp/ccl2M3Tu.s:6969   .debug_str:000000000000014c .LASF209
     /tmp/ccl2M3Tu.s:7585   .debug_str:00000000000015ea .LASF210
     /tmp/ccl2M3Tu.s:7679   .debug_str:0000000000001a0a .LASF211
     /tmp/ccl2M3Tu.s:7329   .debug_str:0000000000000e2b .LASF212
     /tmp/ccl2M3Tu.s:7625   .debug_str:0000000000001809 .LASF213
     /tmp/ccl2M3Tu.s:7037   .debug_str:00000000000003a9 .LASF214
     /tmp/ccl2M3Tu.s:7383   .debug_str:0000000000000ff2 .LASF215
     /tmp/ccl2M3Tu.s:7025   .debug_str:000000000000034b .LASF216
     /tmp/ccl2M3Tu.s:7049   .debug_str:0000000000000437 .LASF217
     /tmp/ccl2M3Tu.s:7541   .debug_str:0000000000001481 .LASF218
     /tmp/ccl2M3Tu.s:7603   .debug_str:0000000000001731 .LASF219
     /tmp/ccl2M3Tu.s:7611   .debug_str:0000000000001784 .LASF220
     /tmp/ccl2M3Tu.s:7189   .debug_str:0000000000000913 .LASF221
     /tmp/ccl2M3Tu.s:7023   .debug_str:000000000000031f .LASF222
     /tmp/ccl2M3Tu.s:7313   .debug_str:0000000000000db6 .LASF223
     /tmp/ccl2M3Tu.s:7683   .debug_str:0000000000001a31 .LASF224
     /tmp/ccl2M3Tu.s:7535   .debug_str:000000000000144e .LASF225
     /tmp/ccl2M3Tu.s:7399   .debug_str:000000000000105c .LASF226
     /tmp/ccl2M3Tu.s:6987   .debug_str:00000000000001db .LASF227
     /tmp/ccl2M3Tu.s:7593   .debug_str:000000000000162c .LASF228
     /tmp/ccl2M3Tu.s:7359   .debug_str:0000000000000f33 .LASF229
     /tmp/ccl2M3Tu.s:7215   .debug_str:0000000000000a25 .LASF230
     /tmp/ccl2M3Tu.s:7223   .debug_str:0000000000000a5c .LASF231
     /tmp/ccl2M3Tu.s:7327   .debug_str:0000000000000e1e .LASF232
     /tmp/ccl2M3Tu.s:7027   .debug_str:0000000000000353 .LASF233
     /tmp/ccl2M3Tu.s:7649   .debug_str:0000000000001914 .LASF234
     /tmp/ccl2M3Tu.s:7507   .debug_str:000000000000135d .LASF235
     /tmp/ccl2M3Tu.s:7661   .debug_str:0000000000001989 .LASF236
     /tmp/ccl2M3Tu.s:7201   .debug_str:000000000000099c .LASF237
     /tmp/ccl2M3Tu.s:7371   .debug_str:0000000000000f80 .LASF238
     /tmp/ccl2M3Tu.s:7107   .debug_str:000000000000067e .LASF239
     /tmp/ccl2M3Tu.s:7179   .debug_str:00000000000008e0 .LASF240
     /tmp/ccl2M3Tu.s:7009   .debug_str:0000000000000297 .LASF241
     /tmp/ccl2M3Tu.s:7353   .debug_str:0000000000000f0e .LASF242
     /tmp/ccl2M3Tu.s:7287   .debug_str:0000000000000c9b .LASF243
     /tmp/ccl2M3Tu.s:6961   .debug_str:000000000000010b .LASF244
     /tmp/ccl2M3Tu.s:7105   .debug_str:0000000000000665 .LASF245
     /tmp/ccl2M3Tu.s:7397   .debug_str:0000000000001050 .LASF246
     /tmp/ccl2M3Tu.s:7545   .debug_str:00000000000014a5 .LASF247
     /tmp/ccl2M3Tu.s:7637   .debug_str:0000000000001898 .LASF248
     /tmp/ccl2M3Tu.s:7429   .debug_str:000000000000112c .LASF249
     /tmp/ccl2M3Tu.s:7279   .debug_str:0000000000000c31 .LASF250
     /tmp/ccl2M3Tu.s:7491   .debug_str:0000000000001300 .LASF251
     /tmp/ccl2M3Tu.s:7315   .debug_str:0000000000000dbd .LASF252
     /tmp/ccl2M3Tu.s:7493   .debug_str:000000000000130a .LASF253
     /tmp/ccl2M3Tu.s:6997   .debug_str:0000000000000245 .LASF254
     /tmp/ccl2M3Tu.s:7111   .debug_str:00000000000006a8 .LASF255
     /tmp/ccl2M3Tu.s:7655   .debug_str:000000000000195f .LASF256
     /tmp/ccl2M3Tu.s:7375   .debug_str:0000000000000fac .LASF257
     /tmp/ccl2M3Tu.s:7349   .debug_str:0000000000000ef4 .LASF258
     /tmp/ccl2M3Tu.s:7259   .debug_str:0000000000000b5e .LASF259
     /tmp/ccl2M3Tu.s:7629   .debug_str:000000000000184f .LASF260
     /tmp/ccl2M3Tu.s:7307   .debug_str:0000000000000d84 .LASF261
     /tmp/ccl2M3Tu.s:7469   .debug_str:0000000000001279 .LASF262
     /tmp/ccl2M3Tu.s:6965   .debug_str:0000000000000126 .LASF263
GAS LISTING /tmp/ccl2M3Tu.s 			page 70


     /tmp/ccl2M3Tu.s:6973   .debug_str:0000000000000182 .LASF264
     /tmp/ccl2M3Tu.s:7087   .debug_str:00000000000005b7 .LASF265
     /tmp/ccl2M3Tu.s:7431   .debug_str:0000000000001141 .LASF266
     /tmp/ccl2M3Tu.s:7137   .debug_str:0000000000000788 .LASF267
     /tmp/ccl2M3Tu.s:7203   .debug_str:00000000000009bf .LASF268
     /tmp/ccl2M3Tu.s:7303   .debug_str:0000000000000d44 .LASF269
     /tmp/ccl2M3Tu.s:7531   .debug_str:000000000000141f .LASF270
     /tmp/ccl2M3Tu.s:7605   .debug_str:000000000000173f .LASF271
     /tmp/ccl2M3Tu.s:7311   .debug_str:0000000000000dad .LASF272
     /tmp/ccl2M3Tu.s:7621   .debug_str:00000000000017ee .LASF273
     /tmp/ccl2M3Tu.s:7043   .debug_str:00000000000003e8 .LASF274
     /tmp/ccl2M3Tu.s:7169   .debug_str:0000000000000897 .LASF275
     /tmp/ccl2M3Tu.s:7485   .debug_str:00000000000012d6 .LASF276
     /tmp/ccl2M3Tu.s:7505   .debug_str:000000000000134a .LASF277
     /tmp/ccl2M3Tu.s:7627   .debug_str:0000000000001828 .LASF278
     /tmp/ccl2M3Tu.s:7181   .debug_str:00000000000008ec .LASF279
     /tmp/ccl2M3Tu.s:7131   .debug_str:0000000000000744 .LASF280
     /tmp/ccl2M3Tu.s:6955   .debug_str:00000000000000eb .LASF281
     /tmp/ccl2M3Tu.s:7055   .debug_str:0000000000000455 .LASF282
     /tmp/ccl2M3Tu.s:7387   .debug_str:0000000000001002 .LASF283
     /tmp/ccl2M3Tu.s:6957   .debug_str:00000000000000f5 .LASF284
     /tmp/ccl2M3Tu.s:6941   .debug_str:0000000000000071 .LASF285
     /tmp/ccl2M3Tu.s:7103   .debug_str:0000000000000659 .LASF286
     /tmp/ccl2M3Tu.s:7561   .debug_str:000000000000151f .LASF287
     /tmp/ccl2M3Tu.s:7101   .debug_str:000000000000064d .LASF288
     /tmp/ccl2M3Tu.s:7515   .debug_str:00000000000013b4 .LASF289
     /tmp/ccl2M3Tu.s:7057   .debug_str:0000000000000460 .LASF290
     /tmp/ccl2M3Tu.s:7289   .debug_str:0000000000000cb2 .LASF291
     /tmp/ccl2M3Tu.s:7207   .debug_str:00000000000009d8 .LASF292
     /tmp/ccl2M3Tu.s:7533   .debug_str:000000000000142c .LASF293
     /tmp/ccl2M3Tu.s:7113   .debug_str:00000000000006ca .LASF294
     /tmp/ccl2M3Tu.s:7059   .debug_str:0000000000000472 .LASF295
     /tmp/ccl2M3Tu.s:7155   .debug_str:000000000000080a .LASF296
     /tmp/ccl2M3Tu.s:7071   .debug_str:0000000000000514 .LASF297
     /tmp/ccl2M3Tu.s:7031   .debug_str:0000000000000376 .LASF298
     /tmp/ccl2M3Tu.s:7301   .debug_str:0000000000000d21 .LASF299
     /tmp/ccl2M3Tu.s:7439   .debug_str:0000000000001189 .LASF300
     /tmp/ccl2M3Tu.s:7063   .debug_str:00000000000004c2 .LASF301
     /tmp/ccl2M3Tu.s:7317   .debug_str:0000000000000dc6 .LASF302
     /tmp/ccl2M3Tu.s:7045   .debug_str:000000000000040a .LASF303
     /tmp/ccl2M3Tu.s:7197   .debug_str:000000000000096b .LASF304
     /tmp/ccl2M3Tu.s:7543   .debug_str:000000000000148d .LASF305
     /tmp/ccl2M3Tu.s:7039   .debug_str:00000000000003b2 .LASF306
     /tmp/ccl2M3Tu.s:7135   .debug_str:0000000000000777 .LASF307
     /tmp/ccl2M3Tu.s:7365   .debug_str:0000000000000f53 .LASF308
     /tmp/ccl2M3Tu.s:6943   .debug_str:000000000000007c .LASF309
     /tmp/ccl2M3Tu.s:7323   .debug_str:0000000000000dfb .LASF310
     /tmp/ccl2M3Tu.s:7319   .debug_str:0000000000000de5 .LASF311
     /tmp/ccl2M3Tu.s:7033   .debug_str:0000000000000389 .LASF312
     /tmp/ccl2M3Tu.s:7559   .debug_str:0000000000001503 .LASF313
     /tmp/ccl2M3Tu.s:7693   .debug_str:0000000000001a7f .LASF314
     /tmp/ccl2M3Tu.s:7167   .debug_str:000000000000087b .LASF315
     /tmp/ccl2M3Tu.s:7481   .debug_str:00000000000012c0 .LASF316
     /tmp/ccl2M3Tu.s:7091   .debug_str:00000000000005d8 .LASF386
     /tmp/ccl2M3Tu.s:7377   .debug_str:0000000000000fce .LASF387
     /tmp/ccl2M3Tu.s:7175   .debug_str:00000000000008c2 .LASF317
     /tmp/ccl2M3Tu.s:7077   .debug_str:000000000000055f .LASF318
GAS LISTING /tmp/ccl2M3Tu.s 			page 71


     /tmp/ccl2M3Tu.s:7119   .debug_str:00000000000006ee .LASF319
     /tmp/ccl2M3Tu.s:7653   .debug_str:0000000000001947 .LASF320
     /tmp/ccl2M3Tu.s:7405   .debug_str:000000000000107f .LASF321
     /tmp/ccl2M3Tu.s:7345   .debug_str:0000000000000ecb .LASF322
     /tmp/ccl2M3Tu.s:7463   .debug_str:000000000000124d .LASF323
     /tmp/ccl2M3Tu.s:7357   .debug_str:0000000000000f22 .LASF324
     /tmp/ccl2M3Tu.s:7273   .debug_str:0000000000000c15 .LASF325
     /tmp/ccl2M3Tu.s:6959   .debug_str:0000000000000100 .LASF326
     /tmp/ccl2M3Tu.s:7579   .debug_str:00000000000015b0 .LASF327
     /tmp/ccl2M3Tu.s:7185   .debug_str:0000000000000907 .LASF328
     /tmp/ccl2M3Tu.s:6935   .debug_str:000000000000004e .LASF329
     /tmp/ccl2M3Tu.s:6977   .debug_str:0000000000000197 .LASF330
     /tmp/ccl2M3Tu.s:7413   .debug_str:00000000000010c7 .LASF331
     /tmp/ccl2M3Tu.s:7419   .debug_str:00000000000010e4 .LASF332
     /tmp/ccl2M3Tu.s:6999   .debug_str:0000000000000254 .LASF333
     /tmp/ccl2M3Tu.s:7187   .debug_str:000000000000090c .LASF334
     /tmp/ccl2M3Tu.s:7447   .debug_str:00000000000011d5 .LASF335
     /tmp/ccl2M3Tu.s:7081   .debug_str:0000000000000578 .LASF336
     /tmp/ccl2M3Tu.s:7339   .debug_str:0000000000000e9f .LASF339
     /tmp/ccl2M3Tu.s:6925   .debug_str:000000000000000f .LASF337
     /tmp/ccl2M3Tu.s:7261   .debug_str:0000000000000b82 .LASF338
     /tmp/ccl2M3Tu.s:7647   .debug_str:0000000000001901 .LASF340
     /tmp/ccl2M3Tu.s:7445   .debug_str:00000000000011be .LASF341
     /tmp/ccl2M3Tu.s:1044   .text:000000000000064c .LFB42
     /tmp/ccl2M3Tu.s:1104   .text:000000000000068c .LFE42
     /tmp/ccl2M3Tu.s:1062   .text:000000000000066c .LBB61
     /tmp/ccl2M3Tu.s:1075   .text:0000000000000674 .LBE61
     /tmp/ccl2M3Tu.s:6323   .debug_loc:0000000000000000 .LLST30
     /tmp/ccl2M3Tu.s:1088   .text:0000000000000680 .LBB63
     /tmp/ccl2M3Tu.s:1100   .text:0000000000000688 .LBE63
     /tmp/ccl2M3Tu.s:6332   .debug_loc:0000000000000026 .LLST31
     /tmp/ccl2M3Tu.s:991    .text:0000000000000614 .LFB41
     /tmp/ccl2M3Tu.s:1038   .text:000000000000064c .LFE41
     /tmp/ccl2M3Tu.s:7681   .debug_str:0000000000001a2a .LASF342
     /tmp/ccl2M3Tu.s:958    .text:00000000000005f4 .LFB40
     /tmp/ccl2M3Tu.s:985    .text:0000000000000614 .LFE40
     /tmp/ccl2M3Tu.s:927    .text:00000000000005cc .LFB39
     /tmp/ccl2M3Tu.s:952    .text:00000000000005f4 .LFE39
     /tmp/ccl2M3Tu.s:941    .text:00000000000005e4 .LVL96
     /tmp/ccl2M3Tu.s:861    .text:0000000000000554 .LFB38
     /tmp/ccl2M3Tu.s:921    .text:00000000000005cc .LFE38
     /tmp/ccl2M3Tu.s:885    .text:0000000000000588 .LVL91
     /tmp/ccl2M3Tu.s:889    .text:0000000000000590 .LVL92
     /tmp/ccl2M3Tu.s:897    .text:00000000000005a4 .LVL93
     /tmp/ccl2M3Tu.s:903    .text:00000000000005b0 .LVL94
     /tmp/ccl2M3Tu.s:910    .text:00000000000005bc .LVL95
     /tmp/ccl2M3Tu.s:1110   .text:000000000000068c .LFB37
     /tmp/ccl2M3Tu.s:1780   .text:0000000000000958 .LFE37
     /tmp/ccl2M3Tu.s:7379   .debug_str:0000000000000fe2 .LASF343
     /tmp/ccl2M3Tu.s:6341   .debug_loc:000000000000004c .LLST32
     /tmp/ccl2M3Tu.s:7099   .debug_str:0000000000000645 .LASF344
     /tmp/ccl2M3Tu.s:7005   .debug_str:000000000000027b .LASF345
     /tmp/ccl2M3Tu.s:6929   .debug_str:0000000000000028 .LASF346
     /tmp/ccl2M3Tu.s:1228   .text:0000000000000740 .LBB69
     /tmp/ccl2M3Tu.s:1244   .text:000000000000074c .LBE69
     /tmp/ccl2M3Tu.s:7389   .debug_str:000000000000100c .LASF347
     /tmp/ccl2M3Tu.s:6352   .debug_loc:0000000000000082 .LLST33
GAS LISTING /tmp/ccl2M3Tu.s 			page 72


     /tmp/ccl2M3Tu.s:1242   .text:000000000000074c .LVL111
     /tmp/ccl2M3Tu.s:1247   .text:000000000000074c .LBB70
     /tmp/ccl2M3Tu.s:1262   .text:0000000000000758 .LBE70
     /tmp/ccl2M3Tu.s:6364   .debug_loc:00000000000000b9 .LLST34
     /tmp/ccl2M3Tu.s:1260   .text:0000000000000758 .LVL113
     /tmp/ccl2M3Tu.s:1265   .text:0000000000000758 .LBB71
     /tmp/ccl2M3Tu.s:1280   .text:0000000000000764 .LBE71
     /tmp/ccl2M3Tu.s:6376   .debug_loc:00000000000000f0 .LLST35
     /tmp/ccl2M3Tu.s:1278   .text:0000000000000764 .LVL115
     /tmp/ccl2M3Tu.s:6907   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccl2M3Tu.s:7421   .debug_str:00000000000010f4 .LASF348
     /tmp/ccl2M3Tu.s:7269   .debug_str:0000000000000bfe .LASF349
     /tmp/ccl2M3Tu.s:1285   .text:0000000000000764 .LBB73
     /tmp/ccl2M3Tu.s:1300   .text:0000000000000770 .LBE73
     /tmp/ccl2M3Tu.s:1304   .text:0000000000000774 .LBB75
     /tmp/ccl2M3Tu.s:1319   .text:0000000000000780 .LBE75
     /tmp/ccl2M3Tu.s:1324   .text:0000000000000784 .LBB77
     /tmp/ccl2M3Tu.s:1336   .text:000000000000078c .LBE77
     /tmp/ccl2M3Tu.s:6388   .debug_loc:0000000000000127 .LLST36
     /tmp/ccl2M3Tu.s:1358   .text:00000000000007c8 .LBB79
     /tmp/ccl2M3Tu.s:1366   .text:00000000000007cc .LBE79
     /tmp/ccl2M3Tu.s:6396   .debug_loc:000000000000014b .LLST37
     /tmp/ccl2M3Tu.s:1376   .text:00000000000007d8 .LBB81
     /tmp/ccl2M3Tu.s:1387   .text:00000000000007dc .LBE81
     /tmp/ccl2M3Tu.s:6403   .debug_loc:000000000000016e .LLST38
     /tmp/ccl2M3Tu.s:1392   .text:00000000000007e0 .LBB83
     /tmp/ccl2M3Tu.s:1403   .text:00000000000007e4 .LBE83
     /tmp/ccl2M3Tu.s:6410   .debug_loc:0000000000000191 .LLST39
     /tmp/ccl2M3Tu.s:1352   .text:00000000000007bc .LVL118
     /tmp/ccl2M3Tu.s:1407   .text:00000000000007ec .LVL125
     /tmp/ccl2M3Tu.s:1436   .text:000000000000080c .LVL126
     /tmp/ccl2M3Tu.s:6945   .debug_str:0000000000000089 .LASF350
     /tmp/ccl2M3Tu.s:6417   .debug_loc:00000000000001b4 .LLST40
     /tmp/ccl2M3Tu.s:1481   .text:0000000000000838 .LBB87
     /tmp/ccl2M3Tu.s:1496   .text:0000000000000844 .LBE87
     /tmp/ccl2M3Tu.s:1502   .text:000000000000084c .LBB89
     /tmp/ccl2M3Tu.s:1517   .text:0000000000000858 .LBE89
     /tmp/ccl2M3Tu.s:1615   .text:000000000000088c .LBB91
     /tmp/ccl2M3Tu.s:1626   .text:0000000000000890 .LBE91
     /tmp/ccl2M3Tu.s:6424   .debug_loc:00000000000001d7 .LLST41
     /tmp/ccl2M3Tu.s:1631   .text:0000000000000894 .LBB93
     /tmp/ccl2M3Tu.s:1642   .text:0000000000000898 .LBE93
     /tmp/ccl2M3Tu.s:6431   .debug_loc:00000000000001fa .LLST42
     /tmp/ccl2M3Tu.s:1608   .text:0000000000000888 .LVL132
     /tmp/ccl2M3Tu.s:1646   .text:00000000000008a0 .LVL137
     /tmp/ccl2M3Tu.s:1661   .text:00000000000008ac .LVL138
     /tmp/ccl2M3Tu.s:1669   .text:00000000000008b8 .LVL139
     /tmp/ccl2M3Tu.s:1677   .text:00000000000008c4 .LVL140
     /tmp/ccl2M3Tu.s:1685   .text:00000000000008d0 .LVL141
     /tmp/ccl2M3Tu.s:1693   .text:00000000000008dc .LVL142
     /tmp/ccl2M3Tu.s:1701   .text:00000000000008e8 .LVL143
     /tmp/ccl2M3Tu.s:1709   .text:00000000000008f4 .LVL144
     /tmp/ccl2M3Tu.s:1717   .text:0000000000000900 .LVL145
     /tmp/ccl2M3Tu.s:1725   .text:000000000000090c .LVL146
     /tmp/ccl2M3Tu.s:1733   .text:0000000000000918 .LVL147
     /tmp/ccl2M3Tu.s:1741   .text:0000000000000924 .LVL148
     /tmp/ccl2M3Tu.s:1749   .text:0000000000000930 .LVL149
GAS LISTING /tmp/ccl2M3Tu.s 			page 73


     /tmp/ccl2M3Tu.s:1757   .text:000000000000093c .LVL150
     /tmp/ccl2M3Tu.s:1765   .text:0000000000000948 .LVL151
     /tmp/ccl2M3Tu.s:1773   .text:0000000000000954 .LVL152
     /tmp/ccl2M3Tu.s:1144   .text:00000000000006c4 .LBB65
     /tmp/ccl2M3Tu.s:1160   .text:00000000000006d0 .LBE65
     /tmp/ccl2M3Tu.s:1216   .text:000000000000072c .LVL106
     /tmp/ccl2M3Tu.s:1220   .text:0000000000000734 .LVL107
     /tmp/ccl2M3Tu.s:1222   .text:000000000000073c .LVL108
     /tmp/ccl2M3Tu.s:1445   .text:0000000000000818 .LVL127
     /tmp/ccl2M3Tu.s:1454   .text:0000000000000824 .LVL128
     /tmp/ccl2M3Tu.s:1463   .text:0000000000000830 .LVL129
     /tmp/ccl2M3Tu.s:561    .text:0000000000000308 .LFB36
     /tmp/ccl2M3Tu.s:589    .text:0000000000000338 .LFE36
     /tmp/ccl2M3Tu.s:7487   .debug_str:00000000000012f5 .LASF351
     /tmp/ccl2M3Tu.s:6438   .debug_loc:000000000000021d .LLST22
     /tmp/ccl2M3Tu.s:578    .text:0000000000000328 .LVL56
     /tmp/ccl2M3Tu.s:527    .text:00000000000002d8 .LFB35
     /tmp/ccl2M3Tu.s:555    .text:0000000000000308 .LFE35
     /tmp/ccl2M3Tu.s:6452   .debug_loc:0000000000000256 .LLST21
     /tmp/ccl2M3Tu.s:544    .text:00000000000002f8 .LVL54
     /tmp/ccl2M3Tu.s:286    .text:0000000000000174 .LFB34
     /tmp/ccl2M3Tu.s:521    .text:00000000000002d8 .LFE34
     /tmp/ccl2M3Tu.s:6466   .debug_loc:000000000000028f .LLST7
     /tmp/ccl2M3Tu.s:7341   .debug_str:0000000000000ebc .LASF352
     /tmp/ccl2M3Tu.s:6480   .debug_loc:00000000000002c8 .LLST8
     /tmp/ccl2M3Tu.s:7513   .debug_str:00000000000013ab .LASF353
     /tmp/ccl2M3Tu.s:6513   .debug_loc:0000000000000350 .LLST9
     /tmp/ccl2M3Tu.s:6539   .debug_loc:00000000000003c2 .LLST10
     /tmp/ccl2M3Tu.s:6563   .debug_loc:0000000000000414 .LLST11
     /tmp/ccl2M3Tu.s:6586   .debug_loc:0000000000000466 .LLST12
     /tmp/ccl2M3Tu.s:7459   .debug_str:000000000000123b .LASF354
     /tmp/ccl2M3Tu.s:6618   .debug_loc:00000000000004d1 .LLST13
     /tmp/ccl2M3Tu.s:7641   .debug_str:00000000000018ce .LASF355
     /tmp/ccl2M3Tu.s:6639   .debug_loc:000000000000052f .LLST14
     /tmp/ccl2M3Tu.s:7697   .debug_str:0000000000001ab3 .LASF356
     /tmp/ccl2M3Tu.s:6660   .debug_loc:000000000000058d .LLST15
     /tmp/ccl2M3Tu.s:7501   .debug_str:000000000000132f .LASF357
     /tmp/ccl2M3Tu.s:6681   .debug_loc:00000000000005eb .LLST16
     /tmp/ccl2M3Tu.s:7165   .debug_str:0000000000000872 .LASF358
     /tmp/ccl2M3Tu.s:6702   .debug_loc:0000000000000649 .LLST17
     /tmp/ccl2M3Tu.s:422    .text:000000000000023c .LBB49
     /tmp/ccl2M3Tu.s:469    .text:000000000000028c .LBE49
     /tmp/ccl2M3Tu.s:7183   .debug_str:00000000000008ff .LASF359
     /tmp/ccl2M3Tu.s:6709   .debug_loc:000000000000066c .LLST18
     /tmp/ccl2M3Tu.s:432    .text:0000000000000250 .LBB50
     /tmp/ccl2M3Tu.s:452    .text:0000000000000270 .LBE50
     /tmp/ccl2M3Tu.s:6716   .debug_loc:000000000000068f .LLST19
     /tmp/ccl2M3Tu.s:430    .text:0000000000000250 .LVL39
     /tmp/ccl2M3Tu.s:475    .text:0000000000000290 .LBB52
     /tmp/ccl2M3Tu.s:517    .text:00000000000002d4 .LBE52
     /tmp/ccl2M3Tu.s:484    .text:00000000000002a4 .LBB53
     /tmp/ccl2M3Tu.s:504    .text:00000000000002c4 .LBE53
     /tmp/ccl2M3Tu.s:6732   .debug_loc:00000000000006d9 .LLST20
     /tmp/ccl2M3Tu.s:482    .text:00000000000002a4 .LVL47
     /tmp/ccl2M3Tu.s:251    .text:0000000000000154 .LFB33
     /tmp/ccl2M3Tu.s:280    .text:0000000000000174 .LFE33
     /tmp/ccl2M3Tu.s:132    .text:00000000000000a0 .LFB32
GAS LISTING /tmp/ccl2M3Tu.s 			page 74


     /tmp/ccl2M3Tu.s:164    .text:00000000000000c0 .LFE32
     /tmp/ccl2M3Tu.s:143    .text:00000000000000ac .LBB46
     /tmp/ccl2M3Tu.s:155    .text:00000000000000b4 .LBE46
     /tmp/ccl2M3Tu.s:6748   .debug_loc:0000000000000723 .LLST5
     /tmp/ccl2M3Tu.s:93     .text:0000000000000080 .LFB31
     /tmp/ccl2M3Tu.s:126    .text:00000000000000a0 .LFE31
     /tmp/ccl2M3Tu.s:104    .text:000000000000008c .LBB44
     /tmp/ccl2M3Tu.s:117    .text:0000000000000094 .LBE44
     /tmp/ccl2M3Tu.s:6756   .debug_loc:0000000000000747 .LLST4
     /tmp/ccl2M3Tu.s:170    .text:00000000000000c0 .LFB30
     /tmp/ccl2M3Tu.s:245    .text:0000000000000154 .LFE30
     /tmp/ccl2M3Tu.s:6764   .debug_loc:000000000000076b .LLST6
     /tmp/ccl2M3Tu.s:184    .text:00000000000000d8 .LVL10
     /tmp/ccl2M3Tu.s:196    .text:00000000000000ec .LVL12
     /tmp/ccl2M3Tu.s:205    .text:0000000000000104 .LVL14
     /tmp/ccl2M3Tu.s:213    .text:0000000000000118 .LVL15
     /tmp/ccl2M3Tu.s:221    .text:000000000000012c .LVL16
     /tmp/ccl2M3Tu.s:227    .text:0000000000000138 .LVL17
     /tmp/ccl2M3Tu.s:234    .text:0000000000000144 .LVL18
     /tmp/ccl2M3Tu.s:606    .text:0000000000000338 .LFB29
     /tmp/ccl2M3Tu.s:855    .text:0000000000000554 .LFE29
     /tmp/ccl2M3Tu.s:7577   .debug_str:00000000000015a0 .LASF360
     /tmp/ccl2M3Tu.s:6771   .debug_loc:000000000000078e .LLST23
     /tmp/ccl2M3Tu.s:6985   .debug_str:00000000000001cc .LASF361
     /tmp/ccl2M3Tu.s:6778   .debug_loc:00000000000007b1 .LLST24
     /tmp/ccl2M3Tu.s:6791   .debug_loc:00000000000007ea .LLST25
     /tmp/ccl2M3Tu.s:7521   .debug_str:00000000000013dc .LASF362
     /tmp/ccl2M3Tu.s:6798   .debug_loc:000000000000080d .LLST26
     /tmp/ccl2M3Tu.s:6927   .debug_str:0000000000000023 .LASF363
     /tmp/ccl2M3Tu.s:726    .text:0000000000000438 .LBB58
     /tmp/ccl2M3Tu.s:746    .text:0000000000000460 .LBE58
     /tmp/ccl2M3Tu.s:6814   .debug_loc:0000000000000848 .LLST27
     /tmp/ccl2M3Tu.s:755    .text:000000000000047c .LBB59
     /tmp/ccl2M3Tu.s:776    .text:00000000000004a8 .LBE59
     /tmp/ccl2M3Tu.s:6826   .debug_loc:000000000000087f .LLST28
     /tmp/ccl2M3Tu.s:769    .text:00000000000004a0 .LVL78
     /tmp/ccl2M3Tu.s:777    .text:00000000000004a8 .LBB60
     /tmp/ccl2M3Tu.s:795    .text:00000000000004d0 .LBE60
     /tmp/ccl2M3Tu.s:6840   .debug_loc:00000000000008b8 .LLST29
     /tmp/ccl2M3Tu.s:786    .text:00000000000004c4 .LVL81
     /tmp/ccl2M3Tu.s:627    .text:000000000000035c .LBB56
     /tmp/ccl2M3Tu.s:638    .text:0000000000000360 .LBE56
     /tmp/ccl2M3Tu.s:644    .text:0000000000000374 .LVL59
     /tmp/ccl2M3Tu.s:681    .text:00000000000003c4 .LVL66
     /tmp/ccl2M3Tu.s:687    .text:00000000000003d4 .LVL67
     /tmp/ccl2M3Tu.s:695    .text:00000000000003f0 .LVL68
     /tmp/ccl2M3Tu.s:705    .text:0000000000000410 .LVL69
     /tmp/ccl2M3Tu.s:711    .text:000000000000041c .LVL70
     /tmp/ccl2M3Tu.s:715    .text:0000000000000424 .LVL71
     /tmp/ccl2M3Tu.s:721    .text:0000000000000434 .LVL72
     /tmp/ccl2M3Tu.s:753    .text:000000000000047c .LVL76
     /tmp/ccl2M3Tu.s:801    .text:00000000000004e4 .LVL83
     /tmp/ccl2M3Tu.s:807    .text:00000000000004f8 .LVL84
     /tmp/ccl2M3Tu.s:813    .text:000000000000050c .LVL85
     /tmp/ccl2M3Tu.s:819    .text:000000000000051c .LVL86
     /tmp/ccl2M3Tu.s:70     .text:0000000000000068 .LFB28
     /tmp/ccl2M3Tu.s:87     .text:0000000000000080 .LFE28
GAS LISTING /tmp/ccl2M3Tu.s 			page 75


     /tmp/ccl2M3Tu.s:10     .text:0000000000000000 .LFB27
     /tmp/ccl2M3Tu.s:64     .text:0000000000000068 .LFE27
     /tmp/ccl2M3Tu.s:6847   .debug_loc:00000000000008db .LLST0
     /tmp/ccl2M3Tu.s:6854   .debug_loc:00000000000008fe .LLST1
     /tmp/ccl2M3Tu.s:6867   .debug_loc:0000000000000937 .LLST2
     /tmp/ccl2M3Tu.s:6878   .debug_loc:000000000000095e .LLST3
     /tmp/ccl2M3Tu.s:53     .text:0000000000000058 .LVL5
     /tmp/ccl2M3Tu.s:7385   .debug_str:0000000000000ffd .LASF388
     /tmp/ccl2M3Tu.s:7079   .debug_str:0000000000000572 .LASF364
     /tmp/ccl2M3Tu.s:7433   .debug_str:0000000000001151 .LASF365
     /tmp/ccl2M3Tu.s:7209   .debug_str:00000000000009ea .LASF367
     /tmp/ccl2M3Tu.s:7247   .debug_str:0000000000000b0c .LASF366
     /tmp/ccl2M3Tu.s:7127   .debug_str:0000000000000728 .LASF368
     /tmp/ccl2M3Tu.s:7623   .debug_str:00000000000017fe .LASF369
     /tmp/ccl2M3Tu.s:7685   .debug_str:0000000000001a42 .LASF370
     /tmp/ccl2M3Tu.s:6947   .debug_str:0000000000000093 .LASF371
     /tmp/ccl2M3Tu.s:7115   .debug_str:00000000000006dc .LASF372
     /tmp/ccl2M3Tu.s:7193   .debug_str:0000000000000942 .LASF373
     /tmp/ccl2M3Tu.s:7555   .debug_str:00000000000014eb .LASF374
     /tmp/ccl2M3Tu.s:7253   .debug_str:0000000000000b3b .LASF375
     /tmp/ccl2M3Tu.s:7343   .debug_str:0000000000000ec1 .LASF376
     /tmp/ccl2M3Tu.s:6993   .debug_str:000000000000020c .LASF377
     /tmp/ccl2M3Tu.s:6989   .debug_str:00000000000001e3 .LASF378
     /tmp/ccl2M3Tu.s:1061   .text:000000000000066c .LVL99
     /tmp/ccl2M3Tu.s:1071   .text:0000000000000674 .LVL100
     /tmp/ccl2M3Tu.s:1087   .text:0000000000000680 .LVL101
     /tmp/ccl2M3Tu.s:1097   .text:0000000000000688 .LVL102
     /tmp/ccl2M3Tu.s:1158   .text:00000000000006d0 .LVL103
     /tmp/ccl2M3Tu.s:1173   .text:00000000000006ec .LVL104
     /tmp/ccl2M3Tu.s:1200   .text:0000000000000704 .LVL105
     /tmp/ccl2M3Tu.s:1230   .text:0000000000000740 .LVL109
     /tmp/ccl2M3Tu.s:1237   .text:0000000000000744 .LVL110
     /tmp/ccl2M3Tu.s:1255   .text:0000000000000750 .LVL112
     /tmp/ccl2M3Tu.s:1273   .text:000000000000075c .LVL114
     /tmp/ccl2M3Tu.s:1323   .text:0000000000000784 .LVL116
     /tmp/ccl2M3Tu.s:1333   .text:000000000000078c .LVL117
     /tmp/ccl2M3Tu.s:1357   .text:00000000000007c8 .LVL119
     /tmp/ccl2M3Tu.s:1364   .text:00000000000007cc .LVL120
     /tmp/ccl2M3Tu.s:1375   .text:00000000000007d8 .LVL121
     /tmp/ccl2M3Tu.s:1384   .text:00000000000007dc .LVL122
     /tmp/ccl2M3Tu.s:1391   .text:00000000000007e0 .LVL123
     /tmp/ccl2M3Tu.s:1400   .text:00000000000007e4 .LVL124
     /tmp/ccl2M3Tu.s:1478   .text:0000000000000838 .LVL130
     /tmp/ccl2M3Tu.s:1524   .text:0000000000000868 .LVL131
     /tmp/ccl2M3Tu.s:1614   .text:000000000000088c .LVL133
     /tmp/ccl2M3Tu.s:1623   .text:0000000000000890 .LVL134
     /tmp/ccl2M3Tu.s:1630   .text:0000000000000894 .LVL135
     /tmp/ccl2M3Tu.s:1639   .text:0000000000000898 .LVL136
     /tmp/ccl2M3Tu.s:564    .text:0000000000000308 .LVL55
     /tmp/ccl2M3Tu.s:530    .text:00000000000002d8 .LVL53
     /tmp/ccl2M3Tu.s:289    .text:0000000000000174 .LVL19
     /tmp/ccl2M3Tu.s:338    .text:00000000000001d0 .LVL24
     /tmp/ccl2M3Tu.s:349    .text:00000000000001dc .LVL26
     /tmp/ccl2M3Tu.s:369    .text:00000000000001f4 .LVL29
     /tmp/ccl2M3Tu.s:418    .text:000000000000023c .LVL36
     /tmp/ccl2M3Tu.s:426    .text:0000000000000240 .LVL37
     /tmp/ccl2M3Tu.s:513    .text:00000000000002d0 .LVL52
GAS LISTING /tmp/ccl2M3Tu.s 			page 76


     /tmp/ccl2M3Tu.s:389    .text:000000000000020c .LVL34
     /tmp/ccl2M3Tu.s:317    .text:00000000000001ac .LVL20
     /tmp/ccl2M3Tu.s:333    .text:00000000000001c0 .LVL23
     /tmp/ccl2M3Tu.s:323    .text:00000000000001b4 .LVL21
     /tmp/ccl2M3Tu.s:412    .text:0000000000000230 .LVL35
     /tmp/ccl2M3Tu.s:329    .text:00000000000001bc .LVL22
     /tmp/ccl2M3Tu.s:375    .text:00000000000001f8 .LVL30
     /tmp/ccl2M3Tu.s:386    .text:0000000000000208 .LVL33
     /tmp/ccl2M3Tu.s:346    .text:00000000000001d8 .LVL25
     /tmp/ccl2M3Tu.s:428    .text:0000000000000248 .LVL38
     /tmp/ccl2M3Tu.s:358    .text:00000000000001e8 .LVL27
     /tmp/ccl2M3Tu.s:471    .text:0000000000000290 .LVL45
     /tmp/ccl2M3Tu.s:366    .text:00000000000001f0 .LVL28
     /tmp/ccl2M3Tu.s:480    .text:000000000000029c .LVL46
     /tmp/ccl2M3Tu.s:377    .text:00000000000001fc .LVL31
     /tmp/ccl2M3Tu.s:380    .text:0000000000000200 .LVL32
     /tmp/ccl2M3Tu.s:461    .text:000000000000027c .LVL44
     /tmp/ccl2M3Tu.s:435    .text:0000000000000254 .LVL40
     /tmp/ccl2M3Tu.s:448    .text:000000000000026c .LVL41
     /tmp/ccl2M3Tu.s:450    .text:0000000000000270 .LVL42
     /tmp/ccl2M3Tu.s:456    .text:0000000000000274 .LVL43
     /tmp/ccl2M3Tu.s:487    .text:00000000000002a8 .LVL48
     /tmp/ccl2M3Tu.s:500    .text:00000000000002c0 .LVL49
     /tmp/ccl2M3Tu.s:502    .text:00000000000002c4 .LVL50
     /tmp/ccl2M3Tu.s:508    .text:00000000000002c8 .LVL51
     /tmp/ccl2M3Tu.s:142    .text:00000000000000ac .LVL8
     /tmp/ccl2M3Tu.s:152    .text:00000000000000b4 .LVL9
     /tmp/ccl2M3Tu.s:103    .text:000000000000008c .LVL6
     /tmp/ccl2M3Tu.s:114    .text:0000000000000094 .LVL7
     /tmp/ccl2M3Tu.s:203    .text:00000000000000fc .LVL13
     /tmp/ccl2M3Tu.s:656    .text:0000000000000398 .LVL60
     /tmp/ccl2M3Tu.s:661    .text:00000000000003a0 .LVL61
     /tmp/ccl2M3Tu.s:667    .text:00000000000003ac .LVL62
     /tmp/ccl2M3Tu.s:675    .text:00000000000003b8 .LVL64
     /tmp/ccl2M3Tu.s:670    .text:00000000000003b0 .LVL63
     /tmp/ccl2M3Tu.s:850    .text:000000000000054c .LVL90
     /tmp/ccl2M3Tu.s:679    .text:00000000000003bc .LVL65
     /tmp/ccl2M3Tu.s:725    .text:0000000000000438 .LVL73
     /tmp/ccl2M3Tu.s:729    .text:000000000000043c .LVL74
     /tmp/ccl2M3Tu.s:759    .text:0000000000000484 .LVL77
     /tmp/ccl2M3Tu.s:847    .text:0000000000000548 .LVL89
     /tmp/ccl2M3Tu.s:775    .text:00000000000004a8 .LVL80
     /tmp/ccl2M3Tu.s:844    .text:0000000000000544 .LVL88
     /tmp/ccl2M3Tu.s:31     .text:0000000000000030 .LVL0
     /tmp/ccl2M3Tu.s:36     .text:0000000000000038 .LVL1
     /tmp/ccl2M3Tu.s:42     .text:0000000000000044 .LVL2
     /tmp/ccl2M3Tu.s:47     .text:000000000000004c .LVL3
     /tmp/ccl2M3Tu.s:51     .text:0000000000000050 .LVL4
     /tmp/ccl2M3Tu.s:1835   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccl2M3Tu.s:1283   .text:0000000000000764 .LBB72
     /tmp/ccl2M3Tu.s:1410   .text:00000000000007ec .LBE72
     /tmp/ccl2M3Tu.s:1429   .text:0000000000000800 .LBB85
     /tmp/ccl2M3Tu.s:1439   .text:0000000000000810 .LBE85
     /tmp/ccl2M3Tu.s:1470   .text:0000000000000834 .LBB86
     /tmp/ccl2M3Tu.s:1648   .text:00000000000008a0 .LBE86
     /tmp/ccl2M3Tu.s:1656   .text:00000000000008a4 .LBB95
     /tmp/ccl2M3Tu.s:1776   .text:0000000000000958 .LBE95
GAS LISTING /tmp/ccl2M3Tu.s 			page 77



UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
_ZN15MemoryAllocator10initMemoryEPv
_ZN9Scheduler3getEv
_ZN3PCB10consolePCBE
_ZN9Scheduler3putEP3PCB
_ZN8KConsole11pendingGetcE
_ZN3PCB10isFinishedEv
_Z15thread_dispatchv
_Z11buddy_allocP14buddyAllocatorm
_ZN5Riscv14supervisorTrapEv
_Z16getNextBlockAddrm
_Z9kmem_initPvi
_Z17kmem_cache_createPKcmPFvPvES3_
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_ZN8KConsole18trapPrintStringIntEPKcmi
CONSOLE_RX_DATA
CONSOLE_TX_DATA
CONSOLE_STATUS
_ZN3PCB7userPCBE
_Z8userMainv
_ZN3PCB7runningE
_ZN3PCB10savedRegA4E
_ZN8KConsole24getCharactersFromConsoleEv
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN3PCB17threadExitHandlerEv
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN3PCB19threadDelPCBHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_ZN8KConsole14getCharHandlerEv
