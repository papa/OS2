GAS LISTING /tmp/cc3jTngJ.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10initSystemEv
   9              	_ZN5Riscv10initSystemEv:
  10              	.LFB27:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Scheduler.hpp"
  12:src/Riscv.cpp **** #include "../h/buddyTests.hpp"
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  15:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  16:src/Riscv.cpp **** bool Riscv::kernelMainCalled = false;
  17:src/Riscv.cpp **** 
  18:src/Riscv.cpp **** void Riscv::initSystem()
  19:src/Riscv.cpp **** {
  12              		.loc 1 19 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  20:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  22              		.loc 1 20 5
  23              		.loc 1 20 12 is_stmt 0
  24 0010 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  24      83B70700 
  25              	.LVL0:
  26              	.LBB38:
  27              	.LBB39:
  28              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/userMain.hpp"
GAS LISTING /tmp/cc3jTngJ.s 			page 2


  10:src/../h/Riscv.hpp **** 
  11:src/../h/Riscv.hpp **** class Riscv
  12:src/../h/Riscv.hpp **** {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     static void kernelMain();
  15:src/../h/Riscv.hpp **** private:
  16:src/../h/Riscv.hpp ****     static bool kernelMainCalled;
  17:src/../h/Riscv.hpp ****     static void changePrivMode();
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp ****     static void initSystem();
  20:src/../h/Riscv.hpp ****     static void endSystem();
  21:src/../h/Riscv.hpp **** 
  22:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void enableInterrupts();
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  27:src/../h/Riscv.hpp **** 
  28:src/../h/Riscv.hpp ****     static void disableInterrupts();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void pushRegisters();
  31:src/../h/Riscv.hpp ****     static void popRegisters();
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     static uint64 r_scause();
  34:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  35:src/../h/Riscv.hpp **** 
  36:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  37:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  40:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp ****     static uint64 r_stval();
  43:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp ****     static bool finishSystem;
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     enum BitMaskSip
  48:src/../h/Riscv.hpp ****     {
  49:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  50:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  51:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  52:src/../h/Riscv.hpp ****     };
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static uint64 r_sip();
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  61:src/../h/Riscv.hpp **** 
  62:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  63:src/../h/Riscv.hpp ****     {
  64:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  65:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  66:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
GAS LISTING /tmp/cc3jTngJ.s 			page 3


  67:src/../h/Riscv.hpp ****     };
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  80:src/../h/Riscv.hpp **** 
  81:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static uint64 r_sie();
  84:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  85:src/../h/Riscv.hpp ****     static void popSppSpie();
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp ****     static void supervisorTrap();
  88:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  89:src/../h/Riscv.hpp **** 
  90:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  91:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  92:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  93:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  94:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  95:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  96:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  97:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
  98:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
  99:src/../h/Riscv.hpp **** 
 100:src/../h/Riscv.hpp ****     static uint64 totalTime;
 101:src/../h/Riscv.hpp **** 
 102:src/../h/Riscv.hpp ****     friend class PCB;
 103:src/../h/Riscv.hpp ****     friend class Scheduler;
 104:src/../h/Riscv.hpp ****     friend class SleepPCBList;
 105:src/../h/Riscv.hpp ****     friend class KSemaphore;
 106:src/../h/Riscv.hpp ****     friend class KConsole;
 107:src/../h/Riscv.hpp ****     friend class MemoryAllocator;
 108:src/../h/Riscv.hpp **** };
 109:src/../h/Riscv.hpp **** 
 110:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 111:src/../h/Riscv.hpp **** {
 112:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 113:src/../h/Riscv.hpp **** }
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 116:src/../h/Riscv.hpp ****     uint64 volatile scause;
 117:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 118:src/../h/Riscv.hpp ****     return scause;
 119:src/../h/Riscv.hpp **** }
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 123:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/cc3jTngJ.s 			page 4


 124:src/../h/Riscv.hpp **** 
 125:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 126:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 127:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 128:src/../h/Riscv.hpp ****     return sepc;
 129:src/../h/Riscv.hpp **** }
 130:src/../h/Riscv.hpp **** 
 131:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 136:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 137:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 138:src/../h/Riscv.hpp ****     return stvec;
 139:src/../h/Riscv.hpp **** }
 140:src/../h/Riscv.hpp **** 
 141:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 142:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
  29              		.loc 2 142 5 is_stmt 1
  30              		.loc 2 142 53 is_stmt 0
  31              	#APP
  32              	# 142 "src/../h/Riscv.hpp" 1
 143              	}
  33              		csrw stvec, a5
  34              	# 0 "" 2
  35              	.LVL1:
  36              	#NO_APP
  37              	.LBE39:
  38              	.LBE38:
  21:src/Riscv.cpp ****     PCB::initialize();
  39              		.loc 1 21 5 is_stmt 1
  40              		.loc 1 21 20 is_stmt 0
  41 001c 97000000 		call	_ZN3PCB10initializeEv@plt
  41      E7800000 
  42              	.LVL2:
  22:src/Riscv.cpp ****     KConsole::initialize();
  43              		.loc 1 22 5 is_stmt 1
  44              		.loc 1 22 25 is_stmt 0
  45 0024 97000000 		call	_ZN8KConsole10initializeEv@plt
  45      E7800000 
  46              	.LVL3:
  23:src/Riscv.cpp **** }
  47              		.loc 1 23 1
  48 002c 83308100 		ld	ra,8(sp)
  49              		.cfi_restore 1
  50 0030 03340100 		ld	s0,0(sp)
  51              		.cfi_restore 8
  52              		.cfi_def_cfa 2, 16
  53 0034 13010101 		addi	sp,sp,16
  54              		.cfi_def_cfa_offset 0
  55 0038 67800000 		jr	ra
  56              		.cfi_endproc
  57              	.LFE27:
  59              		.align	2
  60              		.globl	_ZN5Riscv16enableInterruptsEv
  62              	_ZN5Riscv16enableInterruptsEv:
GAS LISTING /tmp/cc3jTngJ.s 			page 5


  63              	.LFB29:
  24:src/Riscv.cpp **** 
  25:src/Riscv.cpp **** void Riscv::endSystem()
  26:src/Riscv.cpp **** {
  27:src/Riscv.cpp ****     disableInterrupts();
  28:src/Riscv.cpp ****     finishSystem = true;
  29:src/Riscv.cpp ****     PCB* pcb = 0;
  30:src/Riscv.cpp ****     while(true)
  31:src/Riscv.cpp ****     {
  32:src/Riscv.cpp ****         pcb = Scheduler::get();
  33:src/Riscv.cpp ****         if(pcb == 0) break;
  34:src/Riscv.cpp ****     }
  35:src/Riscv.cpp ****     Scheduler::put(PCB::consolePCB);
  36:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
  37:src/Riscv.cpp ****     enableInterrupts();
  38:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
  39:src/Riscv.cpp ****     {
  40:src/Riscv.cpp ****         thread_dispatch();
  41:src/Riscv.cpp ****     }
  42:src/Riscv.cpp ****     disableInterrupts();
  43:src/Riscv.cpp **** }
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp **** void Riscv::enableInterrupts() {
  64              		.loc 1 45 32 is_stmt 1
  65              		.cfi_startproc
  66 003c 130101FF 		addi	sp,sp,-16
  67              		.cfi_def_cfa_offset 16
  68 0040 23348100 		sd	s0,8(sp)
  69              		.cfi_offset 8, -8
  70 0044 13040101 		addi	s0,sp,16
  71              		.cfi_def_cfa 8, 0
  46:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
  72              		.loc 1 46 5
  73              	.LVL4:
  74              	.LBB40:
  75              	.LBB41:
 144:src/../h/Riscv.hpp **** 
 145:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 146:src/../h/Riscv.hpp ****     uint64 volatile stval;
 147:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 148:src/../h/Riscv.hpp ****     return stval;
 149:src/../h/Riscv.hpp **** }
 150:src/../h/Riscv.hpp **** 
 151:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 152:src/../h/Riscv.hpp **** {
 153:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 154:src/../h/Riscv.hpp **** }
 155:src/../h/Riscv.hpp **** 
 156:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 157:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 158:src/../h/Riscv.hpp **** }
 159:src/../h/Riscv.hpp **** 
 160:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 161:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 162:src/../h/Riscv.hpp **** }
 163:src/../h/Riscv.hpp **** 
 164:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
GAS LISTING /tmp/cc3jTngJ.s 			page 6


 165:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 166:src/../h/Riscv.hpp **** }
 167:src/../h/Riscv.hpp **** 
 168:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 169:src/../h/Riscv.hpp **** {
 170:src/../h/Riscv.hpp ****     uint64 volatile sie;
 171:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 172:src/../h/Riscv.hpp ****     return sie;
 173:src/../h/Riscv.hpp **** }
 174:src/../h/Riscv.hpp **** 
 175:src/../h/Riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 176:src/../h/Riscv.hpp **** {
 177:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sie, %0" : :"r"(mask));
 178:src/../h/Riscv.hpp **** }
 179:src/../h/Riscv.hpp **** 
 180:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 181:src/../h/Riscv.hpp ****     uint64 volatile sip;
 182:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 183:src/../h/Riscv.hpp ****     return sip;
 184:src/../h/Riscv.hpp **** }
 185:src/../h/Riscv.hpp **** 
 186:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 187:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 188:src/../h/Riscv.hpp **** }
 189:src/../h/Riscv.hpp **** 
 190:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 191:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
  76              		.loc 2 191 5
  77              		.loc 2 191 54 is_stmt 0
  78 0048 93072000 		li	a5,2
  79              	#APP
  80              	# 191 "src/../h/Riscv.hpp" 1
 192              	}
  81              		csrs sstatus, a5
  82              	# 0 "" 2
  83              	.LVL5:
  84              	#NO_APP
  85              	.LBE41:
  86              	.LBE40:
  47:src/Riscv.cpp **** }
  87              		.loc 1 47 1
  88 0050 03348100 		ld	s0,8(sp)
  89              		.cfi_restore 8
  90              		.cfi_def_cfa 2, 16
  91 0054 13010101 		addi	sp,sp,16
  92              		.cfi_def_cfa_offset 0
  93 0058 67800000 		jr	ra
  94              		.cfi_endproc
  95              	.LFE29:
  97              		.align	2
  98              		.globl	_ZN5Riscv17disableInterruptsEv
 100              	_ZN5Riscv17disableInterruptsEv:
 101              	.LFB30:
  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp **** void Riscv::disableInterrupts()
  50:src/Riscv.cpp **** {
 102              		.loc 1 50 1 is_stmt 1
GAS LISTING /tmp/cc3jTngJ.s 			page 7


 103              		.cfi_startproc
 104 005c 130101FF 		addi	sp,sp,-16
 105              		.cfi_def_cfa_offset 16
 106 0060 23348100 		sd	s0,8(sp)
 107              		.cfi_offset 8, -8
 108 0064 13040101 		addi	s0,sp,16
 109              		.cfi_def_cfa 8, 0
  51:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 110              		.loc 1 51 5
 111              	.LVL6:
 112              	.LBB42:
 113              	.LBB43:
 193:src/../h/Riscv.hpp **** 
 194:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 195:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 114              		.loc 2 195 5
 115              		.loc 2 195 54 is_stmt 0
 116 0068 93072000 		li	a5,2
 117              	#APP
 118              	# 195 "src/../h/Riscv.hpp" 1
 196              	}
 119              		csrc sstatus, a5
 120              	# 0 "" 2
 121              	.LVL7:
 122              	#NO_APP
 123              	.LBE43:
 124              	.LBE42:
  52:src/Riscv.cpp **** }
 125              		.loc 1 52 1
 126 0070 03348100 		ld	s0,8(sp)
 127              		.cfi_restore 8
 128              		.cfi_def_cfa 2, 16
 129 0074 13010101 		addi	sp,sp,16
 130              		.cfi_def_cfa_offset 0
 131 0078 67800000 		jr	ra
 132              		.cfi_endproc
 133              	.LFE30:
 135              		.align	2
 136              		.globl	_ZN5Riscv9endSystemEv
 138              	_ZN5Riscv9endSystemEv:
 139              	.LFB28:
  26:src/Riscv.cpp ****     disableInterrupts();
 140              		.loc 1 26 1 is_stmt 1
 141              		.cfi_startproc
 142 007c 130101FF 		addi	sp,sp,-16
 143              		.cfi_def_cfa_offset 16
 144 0080 23341100 		sd	ra,8(sp)
 145 0084 23308100 		sd	s0,0(sp)
 146              		.cfi_offset 1, -8
 147              		.cfi_offset 8, -16
 148 0088 13040101 		addi	s0,sp,16
 149              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp ****     finishSystem = true;
 150              		.loc 1 27 5
  27:src/Riscv.cpp ****     finishSystem = true;
 151              		.loc 1 27 22 is_stmt 0
 152 008c 97000000 		call	_ZN5Riscv17disableInterruptsEv
GAS LISTING /tmp/cc3jTngJ.s 			page 8


 152      E7800000 
 153              	.LVL8:
  28:src/Riscv.cpp ****     PCB* pcb = 0;
 154              		.loc 1 28 5 is_stmt 1
  28:src/Riscv.cpp ****     PCB* pcb = 0;
 155              		.loc 1 28 18 is_stmt 0
 156 0094 93071000 		li	a5,1
 157 0098 17070000 		sb	a5,.LANCHOR0,a4
 157      2300F700 
  29:src/Riscv.cpp ****     while(true)
 158              		.loc 1 29 5 is_stmt 1
 159              	.LVL9:
 160              	.L8:
  30:src/Riscv.cpp ****     {
 161              		.loc 1 30 5
  32:src/Riscv.cpp ****         if(pcb == 0) break;
 162              		.loc 1 32 9
  32:src/Riscv.cpp ****         if(pcb == 0) break;
 163              		.loc 1 32 29 is_stmt 0
 164 00a0 97000000 		call	_ZN9Scheduler3getEv@plt
 164      E7800000 
 165              	.LVL10:
  33:src/Riscv.cpp ****     }
 166              		.loc 1 33 9 is_stmt 1
 167 00a8 E31C05FE 		bnez	a0,.L8
  35:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 168              		.loc 1 35 5
  35:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 169              		.loc 1 35 19 is_stmt 0
 170 00ac 97070000 		la	a5,_ZN3PCB10consolePCBE
 170      83B70700 
 171 00b4 03B50700 		ld	a0,0(a5)
 172              	.LVL11:
 173 00b8 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 173      E7800000 
 174              	.LVL12:
  36:src/Riscv.cpp ****     enableInterrupts();
 175              		.loc 1 36 5 is_stmt 1
  36:src/Riscv.cpp ****     enableInterrupts();
 176              		.loc 1 36 27 is_stmt 0
 177 00c0 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 177      83B70700 
 178 00c8 23B00700 		sd	zero,0(a5)
  37:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 179              		.loc 1 37 5 is_stmt 1
  37:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 180              		.loc 1 37 21 is_stmt 0
 181 00cc 97000000 		call	_ZN5Riscv16enableInterruptsEv
 181      E7800000 
 182              	.LVL13:
 183              	.L10:
  38:src/Riscv.cpp ****     {
 184              		.loc 1 38 5 is_stmt 1
  38:src/Riscv.cpp ****     {
 185              		.loc 1 38 11
  38:src/Riscv.cpp ****     {
 186              		.loc 1 38 39 is_stmt 0
GAS LISTING /tmp/cc3jTngJ.s 			page 9


 187 00d4 97070000 		la	a5,_ZN3PCB10consolePCBE
 187      83B70700 
 188 00dc 03B50700 		ld	a0,0(a5)
 189 00e0 97000000 		call	_ZN3PCB10isFinishedEv@plt
 189      E7800000 
 190              	.LVL14:
  38:src/Riscv.cpp ****     {
 191              		.loc 1 38 11
 192 00e8 63180500 		bnez	a0,.L9
  40:src/Riscv.cpp ****     }
 193              		.loc 1 40 9 is_stmt 1
  40:src/Riscv.cpp ****     }
 194              		.loc 1 40 24 is_stmt 0
 195 00ec 97000000 		call	_Z15thread_dispatchv@plt
 195      E7800000 
 196              	.LVL15:
  38:src/Riscv.cpp ****     {
 197              		.loc 1 38 5
 198 00f4 6FF01FFE 		j	.L10
 199              	.L9:
  42:src/Riscv.cpp **** }
 200              		.loc 1 42 5 is_stmt 1
  42:src/Riscv.cpp **** }
 201              		.loc 1 42 22 is_stmt 0
 202 00f8 97000000 		call	_ZN5Riscv17disableInterruptsEv
 202      E7800000 
 203              	.LVL16:
  43:src/Riscv.cpp **** 
 204              		.loc 1 43 1
 205 0100 83308100 		ld	ra,8(sp)
 206              		.cfi_restore 1
 207 0104 03340100 		ld	s0,0(sp)
 208              		.cfi_restore 8
 209              		.cfi_def_cfa 2, 16
 210 0108 13010101 		addi	sp,sp,16
 211              		.cfi_def_cfa_offset 0
 212 010c 67800000 		jr	ra
 213              		.cfi_endproc
 214              	.LFE28:
 216              		.align	2
 217              		.globl	_ZN5Riscv10popSppSpieEv
 219              	_ZN5Riscv10popSppSpieEv:
 220              	.LFB31:
  53:src/Riscv.cpp **** 
  54:src/Riscv.cpp **** void Riscv::popSppSpie()
  55:src/Riscv.cpp **** {
 221              		.loc 1 55 1 is_stmt 1
 222              		.cfi_startproc
 223 0110 130101FF 		addi	sp,sp,-16
 224              		.cfi_def_cfa_offset 16
 225 0114 23348100 		sd	s0,8(sp)
 226              		.cfi_offset 8, -8
 227 0118 13040101 		addi	s0,sp,16
 228              		.cfi_def_cfa 8, 0
  56:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 229              		.loc 1 56 5
 230              		.loc 1 56 39 is_stmt 0
GAS LISTING /tmp/cc3jTngJ.s 			page 10


 231              	#APP
 232              	# 56 "src/Riscv.cpp" 1
  57              	    __asm__ volatile ("sret");
 233              		csrw sepc, ra
 234              	# 0 "" 2
 235              		.loc 1 57 5 is_stmt 1
 236              		.loc 1 57 30 is_stmt 0
 237              	# 57 "src/Riscv.cpp" 1
  58              	}
 238              		sret
 239              	# 0 "" 2
 240              		.loc 1 58 1
 241              	#NO_APP
 242 0124 03348100 		ld	s0,8(sp)
 243              		.cfi_restore 8
 244              		.cfi_def_cfa 2, 16
 245 0128 13010101 		addi	sp,sp,16
 246              		.cfi_def_cfa_offset 0
 247 012c 67800000 		jr	ra
 248              		.cfi_endproc
 249              	.LFE31:
 251              		.align	2
 252              		.globl	_ZN5Riscv10kernelMainEv
 254              	_ZN5Riscv10kernelMainEv:
 255              	.LFB33:
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  61:src/Riscv.cpp **** {
  62:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
  63:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  64:src/Riscv.cpp **** 
  65:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  66:src/Riscv.cpp **** 
  67:src/Riscv.cpp ****     switch(scause)
  68:src/Riscv.cpp ****     {
  69:src/Riscv.cpp ****         case timerInterrupt:
  70:src/Riscv.cpp ****         {
  71:src/Riscv.cpp ****             //KConsole::trapPrintString("timerInterrupt\n");
  72:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
  73:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
  74:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
  75:src/Riscv.cpp ****             //static uint64 total = 0;
  76:src/Riscv.cpp ****             totalTime++;
  77:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
  78:src/Riscv.cpp **** 
  79:src/Riscv.cpp ****             PCB::timeSliceCounter++;
  80:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
  81:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
  82:src/Riscv.cpp ****             {
  83:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
  84:src/Riscv.cpp ****                 PCB::dispatch();
  85:src/Riscv.cpp ****             }
  86:src/Riscv.cpp **** 
  87:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
  88:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
  89:src/Riscv.cpp ****             changePrivMode();
  90:src/Riscv.cpp ****             break;
GAS LISTING /tmp/cc3jTngJ.s 			page 11


  91:src/Riscv.cpp ****         }
  92:src/Riscv.cpp ****         case hwInterrupt:
  93:src/Riscv.cpp ****         {
  94:src/Riscv.cpp ****             KConsole::getCharactersFromConsole();
  95:src/Riscv.cpp ****             plic_complete(plic_claim());
  96:src/Riscv.cpp ****             break;
  97:src/Riscv.cpp ****         }
  98:src/Riscv.cpp ****         case operationInterrupt:
  99:src/Riscv.cpp ****         {
 100:src/Riscv.cpp ****             PCB::threadExitHandler();
 101:src/Riscv.cpp ****             break;
 102:src/Riscv.cpp ****         }
 103:src/Riscv.cpp ****         case addrReadInterrupt:
 104:src/Riscv.cpp ****         {
 105:src/Riscv.cpp ****             PCB::threadExitHandler();
 106:src/Riscv.cpp ****             break;
 107:src/Riscv.cpp ****         }
 108:src/Riscv.cpp ****         case addrWriteInterrupt:
 109:src/Riscv.cpp ****         {
 110:src/Riscv.cpp ****             PCB::threadExitHandler();
 111:src/Riscv.cpp ****             break;
 112:src/Riscv.cpp ****         }
 113:src/Riscv.cpp ****         case ecallSystemInterupt:
 114:src/Riscv.cpp ****         case ecallUserInterrupt:
 115:src/Riscv.cpp ****         {
 116:src/Riscv.cpp ****             uint64 operation;
 117:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 120:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 121:src/Riscv.cpp **** 
 122:src/Riscv.cpp ****             switch(operation)
 123:src/Riscv.cpp ****             {
 124:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 125:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 126:src/Riscv.cpp ****                     break;
 127:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 128:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 129:src/Riscv.cpp ****                     break;
 130:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 131:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 132:src/Riscv.cpp ****                     break;
 133:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 134:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 135:src/Riscv.cpp ****                     break;
 136:src/Riscv.cpp ****                 case PCB::THREAD_START:
 137:src/Riscv.cpp ****                     PCB::threadStartHandler();
 138:src/Riscv.cpp ****                     break;
 139:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 140:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 141:src/Riscv.cpp ****                     break;
 142:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 143:src/Riscv.cpp ****                     PCB::threadExitHandler();
 144:src/Riscv.cpp ****                     break;
 145:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 146:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 147:src/Riscv.cpp ****                     break;
GAS LISTING /tmp/cc3jTngJ.s 			page 12


 148:src/Riscv.cpp ****                 case PCB::THREAD_DEL_PCB:
 149:src/Riscv.cpp ****                      PCB::threadDelPCBHandler();
 150:src/Riscv.cpp ****                      break;
 151:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 152:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 153:src/Riscv.cpp ****                     break;
 154:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 155:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 156:src/Riscv.cpp ****                     break;
 157:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 158:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 159:src/Riscv.cpp ****                     break;
 160:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 161:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 162:src/Riscv.cpp ****                     break;
 163:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 164:src/Riscv.cpp ****                     KConsole::getcHandler();
 165:src/Riscv.cpp ****                     break;
 166:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 167:src/Riscv.cpp ****                     KConsole::putcHandler();
 168:src/Riscv.cpp ****                     break;
 169:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 170:src/Riscv.cpp ****                     KConsole::getCharHandler();
 171:src/Riscv.cpp ****                     break;
 172:src/Riscv.cpp ****             }
 173:src/Riscv.cpp **** 
 174:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 175:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 176:src/Riscv.cpp ****             changePrivMode();
 177:src/Riscv.cpp ****             break;
 178:src/Riscv.cpp ****         }
 179:src/Riscv.cpp ****     }
 180:src/Riscv.cpp **** }
 181:src/Riscv.cpp **** 
 182:src/Riscv.cpp **** void Riscv::kernelMain()
 183:src/Riscv.cpp **** {
 256              		.loc 1 183 1 is_stmt 1
 257              		.cfi_startproc
 184:src/Riscv.cpp ****     if(kernelMainCalled) return;
 258              		.loc 1 184 5
 259 0130 97070000 		lbu	a5,.LANCHOR0+1
 259      83C70700 
 260 0138 63840700 		beqz	a5,.L20
 261 013c 67800000 		ret
 262              	.L20:
 183:src/Riscv.cpp ****     if(kernelMainCalled) return;
 263              		.loc 1 183 1 is_stmt 0
 264 0140 130101FF 		addi	sp,sp,-16
 265              		.cfi_def_cfa_offset 16
 266 0144 23341100 		sd	ra,8(sp)
 267 0148 23308100 		sd	s0,0(sp)
 268              		.cfi_offset 1, -8
 269              		.cfi_offset 8, -16
 270 014c 13040101 		addi	s0,sp,16
 271              		.cfi_def_cfa 8, 0
 185:src/Riscv.cpp ****     kernelMainCalled = true;
 272              		.loc 1 185 5 is_stmt 1
GAS LISTING /tmp/cc3jTngJ.s 			page 13


 273              		.loc 1 185 22 is_stmt 0
 274 0150 93071000 		li	a5,1
 275 0154 17070000 		sb	a5,.LANCHOR0+1,a4
 275      2300F700 
 186:src/Riscv.cpp **** 
 187:src/Riscv.cpp ****     initSystem();
 276              		.loc 1 187 5 is_stmt 1
 277              		.loc 1 187 15 is_stmt 0
 278 015c 97000000 		call	_ZN5Riscv10initSystemEv
 278      E7800000 
 279              	.LVL17:
 188:src/Riscv.cpp ****     buddyOnlyAllocsTest2();
 280              		.loc 1 188 5 is_stmt 1
 281              		.loc 1 188 25 is_stmt 0
 282 0164 97000000 		call	_Z20buddyOnlyAllocsTest2v@plt
 282      E7800000 
 283              	.LVL18:
 189:src/Riscv.cpp ****     //disableTimerInterrupts();
 190:src/Riscv.cpp ****     //enableInterrupts();
 191:src/Riscv.cpp **** 
 192:src/Riscv.cpp ****     /*while(!PCB::userPCB->isFinished())
 193:src/Riscv.cpp ****     {
 194:src/Riscv.cpp ****         thread_dispatch();
 195:src/Riscv.cpp ****     }*/
 196:src/Riscv.cpp **** 
 197:src/Riscv.cpp ****     //printString("End...\n");
 198:src/Riscv.cpp ****     endSystem();
 284              		.loc 1 198 5 is_stmt 1
 285              		.loc 1 198 14 is_stmt 0
 286 016c 97000000 		call	_ZN5Riscv9endSystemEv
 286      E7800000 
 287              	.LVL19:
 199:src/Riscv.cpp **** }
 288              		.loc 1 199 1
 289 0174 83308100 		ld	ra,8(sp)
 290              		.cfi_restore 1
 291 0178 03340100 		ld	s0,0(sp)
 292              		.cfi_restore 8
 293              		.cfi_def_cfa 2, 16
 294 017c 13010101 		addi	sp,sp,16
 295              		.cfi_def_cfa_offset 0
 296 0180 67800000 		jr	ra
 297              		.cfi_endproc
 298              	.LFE33:
 300              		.align	2
 301              		.globl	_ZN5Riscv15userMainWrapperEPv
 303              	_ZN5Riscv15userMainWrapperEPv:
 304              	.LFB34:
 200:src/Riscv.cpp **** 
 201:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 202:src/Riscv.cpp **** {
 305              		.loc 1 202 1 is_stmt 1
 306              		.cfi_startproc
 307 0184 130101FF 		addi	sp,sp,-16
 308              		.cfi_def_cfa_offset 16
 309 0188 23341100 		sd	ra,8(sp)
 310 018c 23308100 		sd	s0,0(sp)
GAS LISTING /tmp/cc3jTngJ.s 			page 14


 311              		.cfi_offset 1, -8
 312              		.cfi_offset 8, -16
 313 0190 13040101 		addi	s0,sp,16
 314              		.cfi_def_cfa 8, 0
 203:src/Riscv.cpp ****     userMain();
 315              		.loc 1 203 5
 316              		.loc 1 203 13 is_stmt 0
 317 0194 97000000 		call	_Z8userMainv@plt
 317      E7800000 
 318              	.LVL20:
 204:src/Riscv.cpp **** }
 319              		.loc 1 204 1
 320 019c 83308100 		ld	ra,8(sp)
 321              		.cfi_restore 1
 322 01a0 03340100 		ld	s0,0(sp)
 323              		.cfi_restore 8
 324              		.cfi_def_cfa 2, 16
 325 01a4 13010101 		addi	sp,sp,16
 326              		.cfi_def_cfa_offset 0
 327 01a8 67800000 		jr	ra
 328              		.cfi_endproc
 329              	.LFE34:
 331              		.align	2
 332              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 334              	_ZN5Riscv22disableTimerInterruptsEv:
 335              	.LFB35:
 205:src/Riscv.cpp **** 
 206:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 207:src/Riscv.cpp **** {
 336              		.loc 1 207 1 is_stmt 1
 337              		.cfi_startproc
 338 01ac 130101FF 		addi	sp,sp,-16
 339              		.cfi_def_cfa_offset 16
 340 01b0 23348100 		sd	s0,8(sp)
 341              		.cfi_offset 8, -8
 342 01b4 13040101 		addi	s0,sp,16
 343              		.cfi_def_cfa 8, 0
 208:src/Riscv.cpp ****     uint64 x = 0x2;
 344              		.loc 1 208 5
 345              	.LVL21:
 209:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 346              		.loc 1 209 5
 347              		.loc 1 209 45 is_stmt 0
 348 01b8 93072000 		li	a5,2
 349              	#APP
 350              	# 209 "src/Riscv.cpp" 1
 210              	}
 351              		csrc sie, a5
 352              	# 0 "" 2
 353              		.loc 1 210 1
 354              	#NO_APP
 355 01c0 03348100 		ld	s0,8(sp)
 356              		.cfi_restore 8
 357              		.cfi_def_cfa 2, 16
 358 01c4 13010101 		addi	sp,sp,16
 359              		.cfi_def_cfa_offset 0
 360 01c8 67800000 		jr	ra
GAS LISTING /tmp/cc3jTngJ.s 			page 15


 361              		.cfi_endproc
 362              	.LFE35:
 364              		.align	2
 365              		.globl	_ZN5Riscv13w_a0_sscratchEv
 367              	_ZN5Riscv13w_a0_sscratchEv:
 368              	.LFB36:
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 213:src/Riscv.cpp **** {
 369              		.loc 1 213 1 is_stmt 1
 370              		.cfi_startproc
 371 01cc 130101FF 		addi	sp,sp,-16
 372              		.cfi_def_cfa_offset 16
 373 01d0 23348100 		sd	s0,8(sp)
 374              		.cfi_offset 8, -8
 375 01d4 13040101 		addi	s0,sp,16
 376              		.cfi_def_cfa 8, 0
 214:src/Riscv.cpp ****     uint64 a1Temp;
 377              		.loc 1 214 5
 215:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 378              		.loc 1 215 5
 379              		.loc 1 215 47 is_stmt 0
 380              	#APP
 381              	# 215 "src/Riscv.cpp" 1
 216              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 382              		mv a5, a1
 383              	# 0 "" 2
 384              	.LVL22:
 385              		.loc 1 216 5 is_stmt 1
 386              		.loc 1 216 53 is_stmt 0
 387              	#NO_APP
 388 01dc 17070000 		la	a4,_ZN3PCB7runningE
 388      03370700 
 389 01e4 03370700 		ld	a4,0(a4)
 390 01e8 03370701 		ld	a4,16(a4)
 391              		.loc 1 216 63
 392              	#APP
 393              	# 216 "src/Riscv.cpp" 1
 217              	    __asm__ volatile("sd a0, 80(a1)");
 394              		mv a1, a4
 395              	# 0 "" 2
 396              		.loc 1 217 5 is_stmt 1
 397              		.loc 1 217 38 is_stmt 0
 398              	# 217 "src/Riscv.cpp" 1
 218              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 399              		sd a0, 80(a1)
 400              	# 0 "" 2
 401              		.loc 1 218 5 is_stmt 1
 402              		.loc 1 218 46 is_stmt 0
 403              	# 218 "src/Riscv.cpp" 1
 219              	}
 404              		mv a1,a5
 405              	# 0 "" 2
 406              		.loc 1 219 1
 407              	#NO_APP
 408 01f8 03348100 		ld	s0,8(sp)
 409              		.cfi_restore 8
GAS LISTING /tmp/cc3jTngJ.s 			page 16


 410              		.cfi_def_cfa 2, 16
 411 01fc 13010101 		addi	sp,sp,16
 412              		.cfi_def_cfa_offset 0
 413 0200 67800000 		jr	ra
 414              		.cfi_endproc
 415              	.LFE36:
 417              		.align	2
 418              		.globl	_ZN5Riscv14changePrivModeEv
 420              	_ZN5Riscv14changePrivModeEv:
 421              	.LFB37:
 220:src/Riscv.cpp **** 
 221:src/Riscv.cpp **** void Riscv::changePrivMode()
 222:src/Riscv.cpp **** {
 422              		.loc 1 222 1 is_stmt 1
 423              		.cfi_startproc
 424 0204 130101FF 		addi	sp,sp,-16
 425              		.cfi_def_cfa_offset 16
 426 0208 23348100 		sd	s0,8(sp)
 427              		.cfi_offset 8, -8
 428 020c 13040101 		addi	s0,sp,16
 429              		.cfi_def_cfa 8, 0
 223:src/Riscv.cpp ****     if(PCB::running->systemThread)
 430              		.loc 1 223 5
 431              		.loc 1 223 22 is_stmt 0
 432 0210 97070000 		la	a5,_ZN3PCB7runningE
 432      83B70700 
 433 0218 83B70700 		ld	a5,0(a5)
 434 021c 83C70700 		lbu	a5,0(a5)
 435              		.loc 1 223 5
 436 0220 638C0700 		beqz	a5,.L28
 224:src/Riscv.cpp ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 437              		.loc 1 224 9 is_stmt 1
 438              	.LVL23:
 439              	.LBB44:
 440              	.LBB45:
 191:src/../h/Riscv.hpp **** }
 441              		.loc 2 191 5
 191:src/../h/Riscv.hpp **** }
 442              		.loc 2 191 54 is_stmt 0
 443 0224 93070010 		li	a5,256
 444              	#APP
 445              	# 191 "src/../h/Riscv.hpp" 1
 446              		csrs sstatus, a5
 447              	# 0 "" 2
 448              	.LVL24:
 449              	#NO_APP
 450              	.L27:
 451              	.LBE45:
 452              	.LBE44:
 225:src/Riscv.cpp ****     else
 226:src/Riscv.cpp ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 227:src/Riscv.cpp **** }
 453              		.loc 1 227 1
 454 022c 03348100 		ld	s0,8(sp)
 455              		.cfi_remember_state
 456              		.cfi_restore 8
 457              		.cfi_def_cfa 2, 16
GAS LISTING /tmp/cc3jTngJ.s 			page 17


 458 0230 13010101 		addi	sp,sp,16
 459              		.cfi_def_cfa_offset 0
 460 0234 67800000 		jr	ra
 461              	.L28:
 462              		.cfi_restore_state
 226:src/Riscv.cpp **** }
 463              		.loc 1 226 9 is_stmt 1
 464              	.LVL25:
 465              	.LBB46:
 466              	.LBB47:
 195:src/../h/Riscv.hpp **** }
 467              		.loc 2 195 5
 195:src/../h/Riscv.hpp **** }
 468              		.loc 2 195 54 is_stmt 0
 469 0238 93070010 		li	a5,256
 470              	#APP
 471              	# 195 "src/../h/Riscv.hpp" 1
 472              		csrc sstatus, a5
 473              	# 0 "" 2
 474              	.LVL26:
 475              	#NO_APP
 476              	.LBE47:
 477              	.LBE46:
 478              		.loc 1 227 1
 479 0240 6FF0DFFE 		j	.L27
 480              		.cfi_endproc
 481              	.LFE37:
 483              		.align	2
 484              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 486              	_ZN5Riscv20handleSupervisorTrapEv:
 487              	.LFB32:
  61:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 488              		.loc 1 61 1 is_stmt 1
 489              		.cfi_startproc
 490 0244 130101F9 		addi	sp,sp,-112
 491              		.cfi_def_cfa_offset 112
 492 0248 23341106 		sd	ra,104(sp)
 493 024c 23308106 		sd	s0,96(sp)
 494 0250 233C9104 		sd	s1,88(sp)
 495              		.cfi_offset 1, -8
 496              		.cfi_offset 8, -16
 497              		.cfi_offset 9, -24
 498 0254 13040107 		addi	s0,sp,112
 499              		.cfi_def_cfa 8, 0
  62:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 500              		.loc 1 62 5
  62:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 501              		.loc 1 62 58 is_stmt 0
 502              	#APP
 503              	# 62 "src/Riscv.cpp" 1
 504              		mv a4, a4
 505              	# 0 "" 2
 506              	#NO_APP
 507 025c 97070000 		la	a5,_ZN3PCB10savedRegA4E
 507      83B70700 
 508 0264 23B0E700 		sd	a4,0(a5)
  63:src/Riscv.cpp **** 
GAS LISTING /tmp/cc3jTngJ.s 			page 18


 509              		.loc 1 63 5 is_stmt 1
  63:src/Riscv.cpp **** 
 510              		.loc 1 63 61 is_stmt 0
 511 0268 97070000 		la	a5,_ZN3PCB7runningE
 511      83B70700 
 512 0270 83B70700 		ld	a5,0(a5)
  63:src/Riscv.cpp **** 
 513              		.loc 1 63 71
 514              	#APP
 515              	# 63 "src/Riscv.cpp" 1
 516              		csrr a4, sscratch
 517              	# 0 "" 2
 518              	#NO_APP
 519 0278 23B8E700 		sd	a4,16(a5)
  65:src/Riscv.cpp **** 
 520              		.loc 1 65 5 is_stmt 1
 521              	.LBB48:
 522              	.LBB49:
 116:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 523              		.loc 2 116 5
 117:src/../h/Riscv.hpp ****     return scause;
 524              		.loc 2 117 5
 117:src/../h/Riscv.hpp ****     return scause;
 525              		.loc 2 117 55 is_stmt 0
 526              	#APP
 527              	# 117 "src/../h/Riscv.hpp" 1
 528              		csrr a5, scause
 529              	# 0 "" 2
 530              	#NO_APP
 531 0280 233CF4FA 		sd	a5,-72(s0)
 118:src/../h/Riscv.hpp **** }
 532              		.loc 2 118 5 is_stmt 1
 118:src/../h/Riscv.hpp **** }
 533              		.loc 2 118 12 is_stmt 0
 534 0284 833784FB 		ld	a5,-72(s0)
 535              	.LVL27:
 536              	.LBE49:
 537              	.LBE48:
  67:src/Riscv.cpp ****     {
 538              		.loc 1 67 5 is_stmt 1
 539              	.LBB50:
 540 0288 13079000 		li	a4,9
 541 028c 636EF702 		bgtu	a5,a4,.L32
 542 0290 13078000 		li	a4,8
 543 0294 63F4E712 		bgeu	a5,a4,.L33
 544 0298 13075000 		li	a4,5
 545 029c 638AE710 		beq	a5,a4,.L34
 546 02a0 13077000 		li	a4,7
 547 02a4 6398E700 		bne	a5,a4,.L60
 548              	.LBB51:
 108:src/Riscv.cpp ****         {
 549              		.loc 1 108 9
 109:src/Riscv.cpp ****             PCB::threadExitHandler();
 550              		.loc 1 109 9
 110:src/Riscv.cpp ****             break;
 551              		.loc 1 110 13
 110:src/Riscv.cpp ****             break;
GAS LISTING /tmp/cc3jTngJ.s 			page 19


 552              		.loc 1 110 35 is_stmt 0
 553 02a8 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 553      E7800000 
 554              	.LVL28:
 111:src/Riscv.cpp ****         }
 555              		.loc 1 111 13 is_stmt 1
 556 02b0 6F00C00D 		j	.L31
 557              	.LVL29:
 558              	.L60:
 559              	.LBE51:
  67:src/Riscv.cpp ****     {
 560              		.loc 1 67 5 is_stmt 0
 561 02b4 13072000 		li	a4,2
 562 02b8 639AE70C 		bne	a5,a4,.L31
 563              	.LBB76:
  98:src/Riscv.cpp ****         {
 564              		.loc 1 98 9 is_stmt 1
  99:src/Riscv.cpp ****             PCB::threadExitHandler();
 565              		.loc 1 99 9
 100:src/Riscv.cpp ****             break;
 566              		.loc 1 100 13
 100:src/Riscv.cpp ****             break;
 567              		.loc 1 100 35 is_stmt 0
 568 02bc 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 568      E7800000 
 569              	.LVL30:
 101:src/Riscv.cpp ****         }
 570              		.loc 1 101 13 is_stmt 1
 571 02c4 6F00800C 		j	.L31
 572              	.LVL31:
 573              	.L32:
 574              	.LBE76:
  67:src/Riscv.cpp ****     {
 575              		.loc 1 67 5 is_stmt 0
 576 02c8 1307F0FF 		li	a4,-1
 577 02cc 1317F703 		slli	a4,a4,63
 578 02d0 13071700 		addi	a4,a4,1
 579 02d4 6388E702 		beq	a5,a4,.L38
 580 02d8 1307F0FF 		li	a4,-1
 581 02dc 1317F703 		slli	a4,a4,63
 582 02e0 13079700 		addi	a4,a4,9
 583 02e4 6394E70A 		bne	a5,a4,.L31
 584              	.LBB77:
  92:src/Riscv.cpp ****         {
 585              		.loc 1 92 9 is_stmt 1
  93:src/Riscv.cpp ****             KConsole::getCharactersFromConsole();
 586              		.loc 1 93 9
  94:src/Riscv.cpp ****             plic_complete(plic_claim());
 587              		.loc 1 94 13
  94:src/Riscv.cpp ****             plic_complete(plic_claim());
 588              		.loc 1 94 47 is_stmt 0
 589 02e8 97000000 		call	_ZN8KConsole24getCharactersFromConsoleEv@plt
 589      E7800000 
 590              	.LVL32:
  95:src/Riscv.cpp ****             break;
 591              		.loc 1 95 13 is_stmt 1
  95:src/Riscv.cpp ****             break;
GAS LISTING /tmp/cc3jTngJ.s 			page 20


 592              		.loc 1 95 26 is_stmt 0
 593 02f0 97000000 		call	plic_claim@plt
 593      E7800000 
 594              	.LVL33:
 595 02f8 97000000 		call	plic_complete@plt
 595      E7800000 
 596              	.LVL34:
  96:src/Riscv.cpp ****         }
 597              		.loc 1 96 13 is_stmt 1
 598 0300 6F00C008 		j	.L31
 599              	.LVL35:
 600              	.L38:
  69:src/Riscv.cpp ****         {
 601              		.loc 1 69 9
  70:src/Riscv.cpp ****             //KConsole::trapPrintString("timerInterrupt\n");
 602              		.loc 1 70 9
 603              	.LBB52:
  72:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 604              		.loc 1 72 13
 605              	.LBB53:
 606              	.LBB54:
 126:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 607              		.loc 2 126 5
 127:src/../h/Riscv.hpp ****     return sepc;
 608              		.loc 2 127 5
 127:src/../h/Riscv.hpp ****     return sepc;
 609              		.loc 2 127 51 is_stmt 0
 610              	#APP
 611              	# 127 "src/../h/Riscv.hpp" 1
 612              		csrr a5, sepc
 613              	# 0 "" 2
 614              	.LVL36:
 615              	#NO_APP
 616 0308 2334F4FC 		sd	a5,-56(s0)
 128:src/../h/Riscv.hpp **** }
 617              		.loc 2 128 5 is_stmt 1
 128:src/../h/Riscv.hpp **** }
 618              		.loc 2 128 12 is_stmt 0
 619 030c 833784FC 		ld	a5,-56(s0)
 620              	.LBE54:
 621              	.LBE53:
  72:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 622              		.loc 1 72 50
 623 0310 233CF4F8 		sd	a5,-104(s0)
  73:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 624              		.loc 1 73 13 is_stmt 1
 625              	.LBB55:
 626              	.LBB56:
 197:src/../h/Riscv.hpp **** 
 198:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 199:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 627              		.loc 2 199 5
 200:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 628              		.loc 2 200 5
 629              		.loc 2 200 57 is_stmt 0
 630              	#APP
 631              	# 200 "src/../h/Riscv.hpp" 1
GAS LISTING /tmp/cc3jTngJ.s 			page 21


 201              	    return sstatus;
 632              		csrr a5, sstatus
 633              	# 0 "" 2
 634              	#NO_APP
 635 0318 2330F4FC 		sd	a5,-64(s0)
 636              		.loc 2 201 5 is_stmt 1
 637              		.loc 2 201 12 is_stmt 0
 638 031c 833704FC 		ld	a5,-64(s0)
 639              	.LBE56:
 640              	.LBE55:
  73:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 641              		.loc 1 73 56
 642 0320 2330F4FA 		sd	a5,-96(s0)
  74:src/Riscv.cpp ****             //static uint64 total = 0;
 643              		.loc 1 74 13 is_stmt 1
 644              	.LVL37:
 645              	.LBB57:
 646              	.LBB58:
 165:src/../h/Riscv.hpp **** }
 647              		.loc 2 165 5
 165:src/../h/Riscv.hpp **** }
 648              		.loc 2 165 50 is_stmt 0
 649 0324 93072000 		li	a5,2
 650              	#APP
 651              	# 165 "src/../h/Riscv.hpp" 1
 652              		csrc sip, a5
 653              	# 0 "" 2
 654              	.LVL38:
 655              	#NO_APP
 656              	.LBE58:
 657              	.LBE57:
  76:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 658              		.loc 1 76 13 is_stmt 1
  76:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 659              		.loc 1 76 22 is_stmt 0
 660 032c 17070000 		lla	a4,.LANCHOR0
 660      13070700 
 661 0334 83378700 		ld	a5,8(a4)
 662 0338 93871700 		addi	a5,a5,1
 663 033c 2334F700 		sd	a5,8(a4)
  79:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 664              		.loc 1 79 13 is_stmt 1
  79:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 665              		.loc 1 79 34 is_stmt 0
 666 0340 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 666      83B40400 
 667 0348 83B70400 		ld	a5,0(s1)
 668 034c 93871700 		addi	a5,a5,1
 669 0350 23B0F400 		sd	a5,0(s1)
  80:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 670              		.loc 1 80 13 is_stmt 1
  80:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 671              		.loc 1 80 40 is_stmt 0
 672 0354 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 672      E7800000 
 673              	.LVL39:
  81:src/Riscv.cpp ****             {
GAS LISTING /tmp/cc3jTngJ.s 			page 22


 674              		.loc 1 81 13 is_stmt 1
  81:src/Riscv.cpp ****             {
 675              		.loc 1 81 68 is_stmt 0
 676 035c 97070000 		la	a5,_ZN3PCB7runningE
 676      83B70700 
 677 0364 83B70700 		ld	a5,0(a5)
 678              	.LVL40:
 679              	.LBB59:
 680              	.LBB60:
 681              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** 
  10:src/../h/PCB.hpp **** class PCB
  11:src/../h/PCB.hpp **** {
  12:src/../h/PCB.hpp **** private:
  13:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  14:src/../h/PCB.hpp **** 
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp **** 
  23:src/../h/PCB.hpp ****     static PCB* running;
  24:src/../h/PCB.hpp **** 
  25:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  26:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 682              		.loc 3 26 29 is_stmt 1
 683              		.loc 3 26 36 is_stmt 0
 684 0368 83B78701 		ld	a5,24(a5)
 685              	.LVL41:
 686              	.LBE60:
 687              	.LBE59:
  81:src/Riscv.cpp ****             {
 688              		.loc 1 81 39
 689 036c 03B70400 		ld	a4,0(s1)
  81:src/Riscv.cpp ****             {
 690              		.loc 1 81 13
 691 0370 6378F702 		bgeu	a4,a5,.L61
 692              	.L40:
  87:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 693              		.loc 1 87 13 is_stmt 1
  87:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 694              		.loc 1 87 29 is_stmt 0
 695 0374 833704FA 		ld	a5,-96(s0)
 696              	.LVL42:
 697              	.LBB61:
 698              	.LBB62:
GAS LISTING /tmp/cc3jTngJ.s 			page 23


 202:src/../h/Riscv.hpp **** }
 203:src/../h/Riscv.hpp **** 
 204:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 205:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 699              		.loc 2 205 5 is_stmt 1
 700              		.loc 2 205 57 is_stmt 0
 701              	#APP
 702              	# 205 "src/../h/Riscv.hpp" 1
 206              	}
 703              		csrw sstatus, a5
 704              	# 0 "" 2
 705              	.LVL43:
 706              	#NO_APP
 707              	.LBE62:
 708              	.LBE61:
  88:src/Riscv.cpp ****             changePrivMode();
 709              		.loc 1 88 13 is_stmt 1
  88:src/Riscv.cpp ****             changePrivMode();
 710              		.loc 1 88 26 is_stmt 0
 711 037c 833784F9 		ld	a5,-104(s0)
 712              	.LVL44:
 713              	.LBB63:
 714              	.LBB64:
 132:src/../h/Riscv.hpp **** }
 715              		.loc 2 132 5 is_stmt 1
 132:src/../h/Riscv.hpp **** }
 716              		.loc 2 132 51 is_stmt 0
 717              	#APP
 718              	# 132 "src/../h/Riscv.hpp" 1
 719              		csrw sepc, a5
 720              	# 0 "" 2
 721              	.LVL45:
 722              	#NO_APP
 723              	.LBE64:
 724              	.LBE63:
  89:src/Riscv.cpp ****             break;
 725              		.loc 1 89 13 is_stmt 1
  89:src/Riscv.cpp ****             break;
 726              		.loc 1 89 27 is_stmt 0
 727 0384 97000000 		call	_ZN5Riscv14changePrivModeEv
 727      E7800000 
 728              	.LVL46:
  90:src/Riscv.cpp ****         }
 729              		.loc 1 90 13 is_stmt 1
 730              	.L31:
 731              	.LBE52:
 732              	.LBE77:
 733              	.LBE50:
 180:src/Riscv.cpp **** 
 734              		.loc 1 180 1 is_stmt 0
 735 038c 83308106 		ld	ra,104(sp)
 736              		.cfi_remember_state
 737              		.cfi_restore 1
 738 0390 03340106 		ld	s0,96(sp)
 739              		.cfi_restore 8
 740              		.cfi_def_cfa 2, 112
 741 0394 83348105 		ld	s1,88(sp)
GAS LISTING /tmp/cc3jTngJ.s 			page 24


 742              		.cfi_restore 9
 743 0398 13010107 		addi	sp,sp,112
 744              		.cfi_def_cfa_offset 0
 745 039c 67800000 		jr	ra
 746              	.L61:
 747              		.cfi_restore_state
 748              	.LBB80:
 749              	.LBB78:
 750              	.LBB65:
  83:src/Riscv.cpp ****                 PCB::dispatch();
 751              		.loc 1 83 17 is_stmt 1
  83:src/Riscv.cpp ****                 PCB::dispatch();
 752              		.loc 1 83 39 is_stmt 0
 753 03a0 23B00400 		sd	zero,0(s1)
  84:src/Riscv.cpp ****             }
 754              		.loc 1 84 17 is_stmt 1
  84:src/Riscv.cpp ****             }
 755              		.loc 1 84 30 is_stmt 0
 756 03a4 97000000 		call	_ZN3PCB8dispatchEv@plt
 756      E7800000 
 757              	.LVL47:
 758 03ac 6FF09FFC 		j	.L40
 759              	.LVL48:
 760              	.L34:
 761              	.LBE65:
 103:src/Riscv.cpp ****         {
 762              		.loc 1 103 9 is_stmt 1
 104:src/Riscv.cpp ****             PCB::threadExitHandler();
 763              		.loc 1 104 9
 105:src/Riscv.cpp ****             break;
 764              		.loc 1 105 13
 105:src/Riscv.cpp ****             break;
 765              		.loc 1 105 35 is_stmt 0
 766 03b0 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 766      E7800000 
 767              	.LVL49:
 106:src/Riscv.cpp ****         }
 768              		.loc 1 106 13 is_stmt 1
 769 03b8 6FF05FFD 		j	.L31
 770              	.LVL50:
 771              	.L33:
 113:src/Riscv.cpp ****         case ecallUserInterrupt:
 772              		.loc 1 113 9
 114:src/Riscv.cpp ****         {
 773              		.loc 1 114 9
 115:src/Riscv.cpp ****             uint64 operation;
 774              		.loc 1 115 9
 775              	.LBB66:
 116:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 776              		.loc 1 116 13
 117:src/Riscv.cpp **** 
 777              		.loc 1 117 13
 117:src/Riscv.cpp **** 
 778              		.loc 1 117 61 is_stmt 0
 779              	#APP
 780              	# 117 "src/Riscv.cpp" 1
 781              		mv a5, a0
GAS LISTING /tmp/cc3jTngJ.s 			page 25


 782              	# 0 "" 2
 783              	.LVL51:
 119:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 784              		.loc 1 119 13 is_stmt 1
 785              	#NO_APP
 786              	.LBB67:
 787              	.LBB68:
 126:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 788              		.loc 2 126 5
 127:src/../h/Riscv.hpp ****     return sepc;
 789              		.loc 2 127 5
 127:src/../h/Riscv.hpp ****     return sepc;
 790              		.loc 2 127 51 is_stmt 0
 791              	#APP
 792              	# 127 "src/../h/Riscv.hpp" 1
 793              		csrr a4, sepc
 794              	# 0 "" 2
 795              	#NO_APP
 796 03c4 233CE4FC 		sd	a4,-40(s0)
 128:src/../h/Riscv.hpp **** }
 797              		.loc 2 128 5 is_stmt 1
 128:src/../h/Riscv.hpp **** }
 798              		.loc 2 128 12 is_stmt 0
 799 03c8 033784FD 		ld	a4,-40(s0)
 800              	.LBE68:
 801              	.LBE67:
 119:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 802              		.loc 1 119 52
 803 03cc 13074700 		addi	a4,a4,4
 119:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 804              		.loc 1 119 54
 805 03d0 2334E4FA 		sd	a4,-88(s0)
 120:src/Riscv.cpp **** 
 806              		.loc 1 120 13 is_stmt 1
 807              	.LBB69:
 808              	.LBB70:
 199:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 809              		.loc 2 199 5
 200:src/../h/Riscv.hpp ****     return sstatus;
 810              		.loc 2 200 5
 200:src/../h/Riscv.hpp ****     return sstatus;
 811              		.loc 2 200 57 is_stmt 0
 812              	#APP
 813              	# 200 "src/../h/Riscv.hpp" 1
 814              		csrr a4, sstatus
 815              	# 0 "" 2
 816              	#NO_APP
 817 03d8 2338E4FC 		sd	a4,-48(s0)
 201:src/../h/Riscv.hpp **** }
 818              		.loc 2 201 5 is_stmt 1
 201:src/../h/Riscv.hpp **** }
 819              		.loc 2 201 12 is_stmt 0
 820 03dc 033704FD 		ld	a4,-48(s0)
 821              	.LBE70:
 822              	.LBE69:
 120:src/Riscv.cpp **** 
 823              		.loc 1 120 56
GAS LISTING /tmp/cc3jTngJ.s 			page 26


 824 03e0 2338E4FA 		sd	a4,-80(s0)
 122:src/Riscv.cpp ****             {
 825              		.loc 1 122 13 is_stmt 1
 826 03e4 13073004 		li	a4,67
 827 03e8 6364F702 		bgtu	a5,a4,.L41
 828 03ec 93972700 		slli	a5,a5,2
 829              	.LVL52:
 830 03f0 17070000 		lla	a4,.L43
 830      13070700 
 831 03f8 B387E700 		add	a5,a5,a4
 832 03fc 83A70700 		lw	a5,0(a5)
 833 0400 B387E700 		add	a5,a5,a4
 834 0404 67800700 		jr	a5
 835              		.section	.rodata
 836              		.align	2
 837              		.align	2
 838              	.L43:
 839 0000 00000000 		.word	.L41-.L43
 840 0004 00000000 		.word	.L58-.L43
 841 0008 00000000 		.word	.L57-.L43
 842 000c 00000000 		.word	.L41-.L43
 843 0010 00000000 		.word	.L41-.L43
 844 0014 00000000 		.word	.L41-.L43
 845 0018 00000000 		.word	.L41-.L43
 846 001c 00000000 		.word	.L41-.L43
 847 0020 00000000 		.word	.L41-.L43
 848 0024 00000000 		.word	.L41-.L43
 849 0028 00000000 		.word	.L41-.L43
 850 002c 00000000 		.word	.L41-.L43
 851 0030 00000000 		.word	.L41-.L43
 852 0034 00000000 		.word	.L41-.L43
 853 0038 00000000 		.word	.L41-.L43
 854 003c 00000000 		.word	.L41-.L43
 855 0040 00000000 		.word	.L41-.L43
 856 0044 00000000 		.word	.L56-.L43
 857 0048 00000000 		.word	.L55-.L43
 858 004c 00000000 		.word	.L54-.L43
 859 0050 00000000 		.word	.L53-.L43
 860 0054 00000000 		.word	.L52-.L43
 861 0058 00000000 		.word	.L51-.L43
 862 005c 00000000 		.word	.L41-.L43
 863 0060 00000000 		.word	.L41-.L43
 864 0064 00000000 		.word	.L41-.L43
 865 0068 00000000 		.word	.L41-.L43
 866 006c 00000000 		.word	.L41-.L43
 867 0070 00000000 		.word	.L41-.L43
 868 0074 00000000 		.word	.L41-.L43
 869 0078 00000000 		.word	.L41-.L43
 870 007c 00000000 		.word	.L41-.L43
 871 0080 00000000 		.word	.L41-.L43
 872 0084 00000000 		.word	.L50-.L43
 873 0088 00000000 		.word	.L49-.L43
 874 008c 00000000 		.word	.L48-.L43
 875 0090 00000000 		.word	.L47-.L43
 876 0094 00000000 		.word	.L41-.L43
 877 0098 00000000 		.word	.L41-.L43
 878 009c 00000000 		.word	.L41-.L43
GAS LISTING /tmp/cc3jTngJ.s 			page 27


 879 00a0 00000000 		.word	.L41-.L43
 880 00a4 00000000 		.word	.L41-.L43
 881 00a8 00000000 		.word	.L41-.L43
 882 00ac 00000000 		.word	.L41-.L43
 883 00b0 00000000 		.word	.L41-.L43
 884 00b4 00000000 		.word	.L41-.L43
 885 00b8 00000000 		.word	.L41-.L43
 886 00bc 00000000 		.word	.L41-.L43
 887 00c0 00000000 		.word	.L41-.L43
 888 00c4 00000000 		.word	.L46-.L43
 889 00c8 00000000 		.word	.L41-.L43
 890 00cc 00000000 		.word	.L41-.L43
 891 00d0 00000000 		.word	.L41-.L43
 892 00d4 00000000 		.word	.L41-.L43
 893 00d8 00000000 		.word	.L41-.L43
 894 00dc 00000000 		.word	.L41-.L43
 895 00e0 00000000 		.word	.L41-.L43
 896 00e4 00000000 		.word	.L41-.L43
 897 00e8 00000000 		.word	.L41-.L43
 898 00ec 00000000 		.word	.L41-.L43
 899 00f0 00000000 		.word	.L41-.L43
 900 00f4 00000000 		.word	.L41-.L43
 901 00f8 00000000 		.word	.L41-.L43
 902 00fc 00000000 		.word	.L41-.L43
 903 0100 00000000 		.word	.L41-.L43
 904 0104 00000000 		.word	.L45-.L43
 905 0108 00000000 		.word	.L44-.L43
 906 010c 00000000 		.word	.L42-.L43
 907              		.text
 908              	.L58:
 124:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 909              		.loc 1 124 17
 125:src/Riscv.cpp ****                     break;
 910              		.loc 1 125 21
 125:src/Riscv.cpp ****                     break;
 911              		.loc 1 125 53 is_stmt 0
 912 0408 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 912      E7800000 
 913              	.LVL53:
 126:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 914              		.loc 1 126 21 is_stmt 1
 915              	.L41:
 174:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 916              		.loc 1 174 13
 174:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 917              		.loc 1 174 29 is_stmt 0
 918 0410 833704FB 		ld	a5,-80(s0)
 919              	.LVL54:
 920              	.LBB71:
 921              	.LBB72:
 205:src/../h/Riscv.hpp **** }
 922              		.loc 2 205 5 is_stmt 1
 205:src/../h/Riscv.hpp **** }
 923              		.loc 2 205 57 is_stmt 0
 924              	#APP
 925              	# 205 "src/../h/Riscv.hpp" 1
 926              		csrw sstatus, a5
GAS LISTING /tmp/cc3jTngJ.s 			page 28


 927              	# 0 "" 2
 928              	.LVL55:
 929              	#NO_APP
 930              	.LBE72:
 931              	.LBE71:
 175:src/Riscv.cpp ****             changePrivMode();
 932              		.loc 1 175 13 is_stmt 1
 175:src/Riscv.cpp ****             changePrivMode();
 933              		.loc 1 175 26 is_stmt 0
 934 0418 833784FA 		ld	a5,-88(s0)
 935              	.LVL56:
 936              	.LBB73:
 937              	.LBB74:
 132:src/../h/Riscv.hpp **** }
 938              		.loc 2 132 5 is_stmt 1
 132:src/../h/Riscv.hpp **** }
 939              		.loc 2 132 51 is_stmt 0
 940              	#APP
 941              	# 132 "src/../h/Riscv.hpp" 1
 942              		csrw sepc, a5
 943              	# 0 "" 2
 944              	.LVL57:
 945              	#NO_APP
 946              	.LBE74:
 947              	.LBE73:
 176:src/Riscv.cpp ****             break;
 948              		.loc 1 176 13 is_stmt 1
 176:src/Riscv.cpp ****             break;
 949              		.loc 1 176 27 is_stmt 0
 950 0420 97000000 		call	_ZN5Riscv14changePrivModeEv
 950      E7800000 
 951              	.LVL58:
 177:src/Riscv.cpp ****         }
 952              		.loc 1 177 13 is_stmt 1
 953              	.LBE66:
 954              	.LBE78:
 955              	.LBE80:
 180:src/Riscv.cpp **** 
 956              		.loc 1 180 1 is_stmt 0
 957 0428 6FF05FF6 		j	.L31
 958              	.L57:
 959              	.LBB81:
 960              	.LBB79:
 961              	.LBB75:
 127:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 962              		.loc 1 127 17 is_stmt 1
 128:src/Riscv.cpp ****                     break;
 963              		.loc 1 128 21
 128:src/Riscv.cpp ****                     break;
 964              		.loc 1 128 52 is_stmt 0
 965 042c 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 965      E7800000 
 966              	.LVL59:
 129:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 967              		.loc 1 129 21 is_stmt 1
 968 0434 6FF0DFFD 		j	.L41
 969              	.L53:
GAS LISTING /tmp/cc3jTngJ.s 			page 29


 130:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 970              		.loc 1 130 17
 131:src/Riscv.cpp ****                     break;
 971              		.loc 1 131 21
 131:src/Riscv.cpp ****                     break;
 972              		.loc 1 131 46 is_stmt 0
 973 0438 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 973      E7800000 
 974              	.LVL60:
 132:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 975              		.loc 1 132 21 is_stmt 1
 976 0440 6FF01FFD 		j	.L41
 977              	.L56:
 133:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 978              		.loc 1 133 17
 134:src/Riscv.cpp ****                     break;
 979              		.loc 1 134 21
 134:src/Riscv.cpp ****                     break;
 980              		.loc 1 134 45 is_stmt 0
 981 0444 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 981      E7800000 
 982              	.LVL61:
 135:src/Riscv.cpp ****                 case PCB::THREAD_START:
 983              		.loc 1 135 21 is_stmt 1
 984 044c 6FF05FFC 		j	.L41
 985              	.L52:
 136:src/Riscv.cpp ****                     PCB::threadStartHandler();
 986              		.loc 1 136 17
 137:src/Riscv.cpp ****                     break;
 987              		.loc 1 137 21
 137:src/Riscv.cpp ****                     break;
 988              		.loc 1 137 44 is_stmt 0
 989 0450 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 989      E7800000 
 990              	.LVL62:
 138:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 991              		.loc 1 138 21 is_stmt 1
 992 0458 6FF09FFB 		j	.L41
 993              	.L54:
 139:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 994              		.loc 1 139 17
 140:src/Riscv.cpp ****                     break;
 995              		.loc 1 140 21
 140:src/Riscv.cpp ****                     break;
 996              		.loc 1 140 47 is_stmt 0
 997 045c 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 997      E7800000 
 998              	.LVL63:
 141:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 999              		.loc 1 141 21 is_stmt 1
 1000 0464 6FF0DFFA 		j	.L41
 1001              	.L55:
 142:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1002              		.loc 1 142 17
 143:src/Riscv.cpp ****                     break;
 1003              		.loc 1 143 21
 143:src/Riscv.cpp ****                     break;
GAS LISTING /tmp/cc3jTngJ.s 			page 30


 1004              		.loc 1 143 43 is_stmt 0
 1005 0468 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1005      E7800000 
 1006              	.LVL64:
 144:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1007              		.loc 1 144 21 is_stmt 1
 1008 0470 6FF01FFA 		j	.L41
 1009              	.L46:
 145:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1010              		.loc 1 145 17
 146:src/Riscv.cpp ****                     break;
 1011              		.loc 1 146 21
 146:src/Riscv.cpp ****                     break;
 1012              		.loc 1 146 44 is_stmt 0
 1013 0474 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1013      E7800000 
 1014              	.LVL65:
 147:src/Riscv.cpp ****                 case PCB::THREAD_DEL_PCB:
 1015              		.loc 1 147 21 is_stmt 1
 1016 047c 6FF05FF9 		j	.L41
 1017              	.L51:
 148:src/Riscv.cpp ****                      PCB::threadDelPCBHandler();
 1018              		.loc 1 148 17
 149:src/Riscv.cpp ****                      break;
 1019              		.loc 1 149 22
 149:src/Riscv.cpp ****                      break;
 1020              		.loc 1 149 46 is_stmt 0
 1021 0480 97000000 		call	_ZN3PCB19threadDelPCBHandlerEv@plt
 1021      E7800000 
 1022              	.LVL66:
 150:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 1023              		.loc 1 150 22 is_stmt 1
 1024 0488 6FF09FF8 		j	.L41
 1025              	.L50:
 151:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1026              		.loc 1 151 17
 152:src/Riscv.cpp ****                     break;
 1027              		.loc 1 152 21
 152:src/Riscv.cpp ****                     break;
 1028              		.loc 1 152 47 is_stmt 0
 1029 048c 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1029      E7800000 
 1030              	.LVL67:
 153:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1031              		.loc 1 153 21 is_stmt 1
 1032 0494 6FF0DFF7 		j	.L41
 1033              	.L48:
 154:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1034              		.loc 1 154 17
 155:src/Riscv.cpp ****                     break;
 1035              		.loc 1 155 21
 155:src/Riscv.cpp ****                     break;
 1036              		.loc 1 155 47 is_stmt 0
 1037 0498 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1037      E7800000 
 1038              	.LVL68:
 156:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
GAS LISTING /tmp/cc3jTngJ.s 			page 31


 1039              		.loc 1 156 21 is_stmt 1
 1040 04a0 6FF01FF7 		j	.L41
 1041              	.L47:
 157:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 1042              		.loc 1 157 17
 158:src/Riscv.cpp ****                     break;
 1043              		.loc 1 158 21
 158:src/Riscv.cpp ****                     break;
 1044              		.loc 1 158 49 is_stmt 0
 1045 04a4 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1045      E7800000 
 1046              	.LVL69:
 159:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1047              		.loc 1 159 21 is_stmt 1
 1048 04ac 6FF05FF6 		j	.L41
 1049              	.L49:
 160:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1050              		.loc 1 160 17
 161:src/Riscv.cpp ****                     break;
 1051              		.loc 1 161 21
 161:src/Riscv.cpp ****                     break;
 1052              		.loc 1 161 48 is_stmt 0
 1053 04b0 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1053      E7800000 
 1054              	.LVL70:
 162:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1055              		.loc 1 162 21 is_stmt 1
 1056 04b8 6FF09FF5 		j	.L41
 1057              	.L45:
 163:src/Riscv.cpp ****                     KConsole::getcHandler();
 1058              		.loc 1 163 17
 164:src/Riscv.cpp ****                     break;
 1059              		.loc 1 164 21
 164:src/Riscv.cpp ****                     break;
 1060              		.loc 1 164 42 is_stmt 0
 1061 04bc 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 1061      E7800000 
 1062              	.LVL71:
 165:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1063              		.loc 1 165 21 is_stmt 1
 1064 04c4 6FF0DFF4 		j	.L41
 1065              	.L44:
 166:src/Riscv.cpp ****                     KConsole::putcHandler();
 1066              		.loc 1 166 17
 167:src/Riscv.cpp ****                     break;
 1067              		.loc 1 167 21
 167:src/Riscv.cpp ****                     break;
 1068              		.loc 1 167 42 is_stmt 0
 1069 04c8 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1069      E7800000 
 1070              	.LVL72:
 168:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 1071              		.loc 1 168 21 is_stmt 1
 1072 04d0 6FF01FF4 		j	.L41
 1073              	.L42:
 169:src/Riscv.cpp ****                     KConsole::getCharHandler();
 1074              		.loc 1 169 17
GAS LISTING /tmp/cc3jTngJ.s 			page 32


 170:src/Riscv.cpp ****                     break;
 1075              		.loc 1 170 21
 170:src/Riscv.cpp ****                     break;
 1076              		.loc 1 170 45 is_stmt 0
 1077 04d4 97000000 		call	_ZN8KConsole14getCharHandlerEv@plt
 1077      E7800000 
 1078              	.LVL73:
 171:src/Riscv.cpp ****             }
 1079              		.loc 1 171 21 is_stmt 1
 1080 04dc 6FF05FF3 		j	.L41
 1081              	.LBE75:
 1082              	.LBE79:
 1083              	.LBE81:
 1084              		.cfi_endproc
 1085              	.LFE32:
 1087              		.globl	_ZN5Riscv16kernelMainCalledE
 1088              		.globl	_ZN5Riscv12finishSystemE
 1089              		.globl	_ZN5Riscv9totalTimeE
 1090              		.bss
 1091              		.align	3
 1092              		.set	.LANCHOR0,. + 0
 1095              	_ZN5Riscv12finishSystemE:
 1096 0000 00       		.zero	1
 1099              	_ZN5Riscv16kernelMainCalledE:
 1100 0001 00       		.zero	1
 1101 0002 00000000 		.zero	6
 1101      0000
 1104              	_ZN5Riscv9totalTimeE:
 1105 0008 00000000 		.zero	8
 1105      00000000 
 1106              		.text
 1107              	.Letext0:
 1108              		.file 4 "src/../h/../lib/hw.h"
 1109              		.file 5 "src/../h/MemoryAllocator.hpp"
 1110              		.file 6 "src/../h/SleepPCBList.hpp"
 1111              		.file 7 "src/../h/KSemaphore.hpp"
 1112              		.file 8 "src/../h/KConsole.hpp"
 1113              		.file 9 "src/../h/Scheduler.hpp"
 1114              		.file 10 "src/../h/../test/userMain.hpp"
 1115              		.file 11 "src/../h/buddyTests.hpp"
 1116              		.file 12 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/cc3jTngJ.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/cc3jTngJ.s:9      .text:0000000000000000 _ZN5Riscv10initSystemEv
     /tmp/cc3jTngJ.s:13     .text:0000000000000000 .L0 
     /tmp/cc3jTngJ.s:14     .text:0000000000000000 .L0 
     /tmp/cc3jTngJ.s:15     .text:0000000000000004 .L0 
     /tmp/cc3jTngJ.s:18     .text:000000000000000c .L0 
     /tmp/cc3jTngJ.s:19     .text:000000000000000c .L0 
     /tmp/cc3jTngJ.s:21     .text:0000000000000010 .L0 
     /tmp/cc3jTngJ.s:23     .text:0000000000000010 .L0 
     /tmp/cc3jTngJ.s:24     .text:0000000000000010 .L0 
     /tmp/cc3jTngJ.s:30     .text:0000000000000018 .L0 
  src/../h/Riscv.hpp:142    .text:0000000000000018 .L0 
     /tmp/cc3jTngJ.s:40     .text:000000000000001c .L0 
     /tmp/cc3jTngJ.s:41     .text:000000000000001c .L0 
     /tmp/cc3jTngJ.s:44     .text:0000000000000024 .L0 
     /tmp/cc3jTngJ.s:45     .text:0000000000000024 .L0 
     /tmp/cc3jTngJ.s:48     .text:000000000000002c .L0 
     /tmp/cc3jTngJ.s:49     .text:0000000000000030 .L0 
     /tmp/cc3jTngJ.s:51     .text:0000000000000034 .L0 
     /tmp/cc3jTngJ.s:52     .text:0000000000000034 .L0 
     /tmp/cc3jTngJ.s:54     .text:0000000000000038 .L0 
     /tmp/cc3jTngJ.s:56     .text:000000000000003c .L0 
     /tmp/cc3jTngJ.s:62     .text:000000000000003c _ZN5Riscv16enableInterruptsEv
     /tmp/cc3jTngJ.s:65     .text:000000000000003c .L0 
     /tmp/cc3jTngJ.s:66     .text:000000000000003c .L0 
     /tmp/cc3jTngJ.s:67     .text:0000000000000040 .L0 
     /tmp/cc3jTngJ.s:69     .text:0000000000000044 .L0 
     /tmp/cc3jTngJ.s:71     .text:0000000000000048 .L0 
     /tmp/cc3jTngJ.s:76     .text:0000000000000048 .L0 
     /tmp/cc3jTngJ.s:77     .text:0000000000000048 .L0 
     /tmp/cc3jTngJ.s:78     .text:0000000000000048 .L0 
     /tmp/cc3jTngJ.s:88     .text:0000000000000050 .L0 
     /tmp/cc3jTngJ.s:89     .text:0000000000000054 .L0 
     /tmp/cc3jTngJ.s:90     .text:0000000000000054 .L0 
     /tmp/cc3jTngJ.s:92     .text:0000000000000058 .L0 
     /tmp/cc3jTngJ.s:94     .text:000000000000005c .L0 
     /tmp/cc3jTngJ.s:100    .text:000000000000005c _ZN5Riscv17disableInterruptsEv
     /tmp/cc3jTngJ.s:103    .text:000000000000005c .L0 
     /tmp/cc3jTngJ.s:104    .text:000000000000005c .L0 
     /tmp/cc3jTngJ.s:105    .text:0000000000000060 .L0 
     /tmp/cc3jTngJ.s:107    .text:0000000000000064 .L0 
     /tmp/cc3jTngJ.s:109    .text:0000000000000068 .L0 
     /tmp/cc3jTngJ.s:114    .text:0000000000000068 .L0 
     /tmp/cc3jTngJ.s:115    .text:0000000000000068 .L0 
     /tmp/cc3jTngJ.s:116    .text:0000000000000068 .L0 
     /tmp/cc3jTngJ.s:126    .text:0000000000000070 .L0 
     /tmp/cc3jTngJ.s:127    .text:0000000000000074 .L0 
     /tmp/cc3jTngJ.s:128    .text:0000000000000074 .L0 
     /tmp/cc3jTngJ.s:130    .text:0000000000000078 .L0 
     /tmp/cc3jTngJ.s:132    .text:000000000000007c .L0 
     /tmp/cc3jTngJ.s:138    .text:000000000000007c _ZN5Riscv9endSystemEv
     /tmp/cc3jTngJ.s:141    .text:000000000000007c .L0 
     /tmp/cc3jTngJ.s:142    .text:000000000000007c .L0 
     /tmp/cc3jTngJ.s:143    .text:0000000000000080 .L0 
     /tmp/cc3jTngJ.s:146    .text:0000000000000088 .L0 
     /tmp/cc3jTngJ.s:147    .text:0000000000000088 .L0 
GAS LISTING /tmp/cc3jTngJ.s 			page 34


     /tmp/cc3jTngJ.s:149    .text:000000000000008c .L0 
     /tmp/cc3jTngJ.s:151    .text:000000000000008c .L0 
     /tmp/cc3jTngJ.s:152    .text:000000000000008c .L0 
     /tmp/cc3jTngJ.s:155    .text:0000000000000094 .L0 
     /tmp/cc3jTngJ.s:156    .text:0000000000000094 .L0 
     /tmp/cc3jTngJ.s:161    .text:00000000000000a0 .L0 
     /tmp/cc3jTngJ.s:162    .text:00000000000000a0 .L0 
     /tmp/cc3jTngJ.s:163    .text:00000000000000a0 .L0 
     /tmp/cc3jTngJ.s:164    .text:00000000000000a0 .L0 
     /tmp/cc3jTngJ.s:167    .text:00000000000000a8 .L0 
     /tmp/cc3jTngJ.s:169    .text:00000000000000ac .L0 
     /tmp/cc3jTngJ.s:170    .text:00000000000000ac .L0 
     /tmp/cc3jTngJ.s:176    .text:00000000000000c0 .L0 
     /tmp/cc3jTngJ.s:177    .text:00000000000000c0 .L0 
     /tmp/cc3jTngJ.s:180    .text:00000000000000cc .L0 
     /tmp/cc3jTngJ.s:181    .text:00000000000000cc .L0 
     /tmp/cc3jTngJ.s:185    .text:00000000000000d4 .L0 
     /tmp/cc3jTngJ.s:186    .text:00000000000000d4 .L0 
     /tmp/cc3jTngJ.s:187    .text:00000000000000d4 .L0 
     /tmp/cc3jTngJ.s:192    .text:00000000000000e8 .L0 
     /tmp/cc3jTngJ.s:194    .text:00000000000000ec .L0 
     /tmp/cc3jTngJ.s:195    .text:00000000000000ec .L0 
     /tmp/cc3jTngJ.s:198    .text:00000000000000f4 .L0 
     /tmp/cc3jTngJ.s:201    .text:00000000000000f8 .L0 
     /tmp/cc3jTngJ.s:202    .text:00000000000000f8 .L0 
     /tmp/cc3jTngJ.s:205    .text:0000000000000100 .L0 
     /tmp/cc3jTngJ.s:206    .text:0000000000000104 .L0 
     /tmp/cc3jTngJ.s:208    .text:0000000000000108 .L0 
     /tmp/cc3jTngJ.s:209    .text:0000000000000108 .L0 
     /tmp/cc3jTngJ.s:211    .text:000000000000010c .L0 
     /tmp/cc3jTngJ.s:213    .text:0000000000000110 .L0 
     /tmp/cc3jTngJ.s:219    .text:0000000000000110 _ZN5Riscv10popSppSpieEv
     /tmp/cc3jTngJ.s:222    .text:0000000000000110 .L0 
     /tmp/cc3jTngJ.s:223    .text:0000000000000110 .L0 
     /tmp/cc3jTngJ.s:224    .text:0000000000000114 .L0 
     /tmp/cc3jTngJ.s:226    .text:0000000000000118 .L0 
     /tmp/cc3jTngJ.s:228    .text:000000000000011c .L0 
     /tmp/cc3jTngJ.s:230    .text:000000000000011c .L0 
       src/Riscv.cpp:56     .text:000000000000011c .L0 
     /tmp/cc3jTngJ.s:236    .text:0000000000000120 .L0 
       src/Riscv.cpp:57     .text:0000000000000120 .L0 
     /tmp/cc3jTngJ.s:242    .text:0000000000000124 .L0 
     /tmp/cc3jTngJ.s:243    .text:0000000000000128 .L0 
     /tmp/cc3jTngJ.s:244    .text:0000000000000128 .L0 
     /tmp/cc3jTngJ.s:246    .text:000000000000012c .L0 
     /tmp/cc3jTngJ.s:248    .text:0000000000000130 .L0 
     /tmp/cc3jTngJ.s:254    .text:0000000000000130 _ZN5Riscv10kernelMainEv
     /tmp/cc3jTngJ.s:257    .text:0000000000000130 .L0 
     /tmp/cc3jTngJ.s:258    .text:0000000000000130 .L0 
     /tmp/cc3jTngJ.s:259    .text:0000000000000130 .L0 
     /tmp/cc3jTngJ.s:264    .text:0000000000000140 .L0 
     /tmp/cc3jTngJ.s:265    .text:0000000000000144 .L0 
     /tmp/cc3jTngJ.s:268    .text:000000000000014c .L0 
     /tmp/cc3jTngJ.s:269    .text:000000000000014c .L0 
     /tmp/cc3jTngJ.s:271    .text:0000000000000150 .L0 
     /tmp/cc3jTngJ.s:273    .text:0000000000000150 .L0 
     /tmp/cc3jTngJ.s:274    .text:0000000000000150 .L0 
GAS LISTING /tmp/cc3jTngJ.s 			page 35


     /tmp/cc3jTngJ.s:277    .text:000000000000015c .L0 
     /tmp/cc3jTngJ.s:278    .text:000000000000015c .L0 
     /tmp/cc3jTngJ.s:281    .text:0000000000000164 .L0 
     /tmp/cc3jTngJ.s:282    .text:0000000000000164 .L0 
     /tmp/cc3jTngJ.s:285    .text:000000000000016c .L0 
     /tmp/cc3jTngJ.s:286    .text:000000000000016c .L0 
     /tmp/cc3jTngJ.s:289    .text:0000000000000174 .L0 
     /tmp/cc3jTngJ.s:290    .text:0000000000000178 .L0 
     /tmp/cc3jTngJ.s:292    .text:000000000000017c .L0 
     /tmp/cc3jTngJ.s:293    .text:000000000000017c .L0 
     /tmp/cc3jTngJ.s:295    .text:0000000000000180 .L0 
     /tmp/cc3jTngJ.s:297    .text:0000000000000184 .L0 
     /tmp/cc3jTngJ.s:303    .text:0000000000000184 _ZN5Riscv15userMainWrapperEPv
     /tmp/cc3jTngJ.s:306    .text:0000000000000184 .L0 
     /tmp/cc3jTngJ.s:307    .text:0000000000000184 .L0 
     /tmp/cc3jTngJ.s:308    .text:0000000000000188 .L0 
     /tmp/cc3jTngJ.s:311    .text:0000000000000190 .L0 
     /tmp/cc3jTngJ.s:312    .text:0000000000000190 .L0 
     /tmp/cc3jTngJ.s:314    .text:0000000000000194 .L0 
     /tmp/cc3jTngJ.s:316    .text:0000000000000194 .L0 
     /tmp/cc3jTngJ.s:317    .text:0000000000000194 .L0 
     /tmp/cc3jTngJ.s:320    .text:000000000000019c .L0 
     /tmp/cc3jTngJ.s:321    .text:00000000000001a0 .L0 
     /tmp/cc3jTngJ.s:323    .text:00000000000001a4 .L0 
     /tmp/cc3jTngJ.s:324    .text:00000000000001a4 .L0 
     /tmp/cc3jTngJ.s:326    .text:00000000000001a8 .L0 
     /tmp/cc3jTngJ.s:328    .text:00000000000001ac .L0 
     /tmp/cc3jTngJ.s:334    .text:00000000000001ac _ZN5Riscv22disableTimerInterruptsEv
     /tmp/cc3jTngJ.s:337    .text:00000000000001ac .L0 
     /tmp/cc3jTngJ.s:338    .text:00000000000001ac .L0 
     /tmp/cc3jTngJ.s:339    .text:00000000000001b0 .L0 
     /tmp/cc3jTngJ.s:341    .text:00000000000001b4 .L0 
     /tmp/cc3jTngJ.s:343    .text:00000000000001b8 .L0 
     /tmp/cc3jTngJ.s:346    .text:00000000000001b8 .L0 
     /tmp/cc3jTngJ.s:347    .text:00000000000001b8 .L0 
     /tmp/cc3jTngJ.s:348    .text:00000000000001b8 .L0 
     /tmp/cc3jTngJ.s:355    .text:00000000000001c0 .L0 
     /tmp/cc3jTngJ.s:356    .text:00000000000001c4 .L0 
     /tmp/cc3jTngJ.s:357    .text:00000000000001c4 .L0 
     /tmp/cc3jTngJ.s:359    .text:00000000000001c8 .L0 
     /tmp/cc3jTngJ.s:361    .text:00000000000001cc .L0 
     /tmp/cc3jTngJ.s:367    .text:00000000000001cc _ZN5Riscv13w_a0_sscratchEv
     /tmp/cc3jTngJ.s:370    .text:00000000000001cc .L0 
     /tmp/cc3jTngJ.s:371    .text:00000000000001cc .L0 
     /tmp/cc3jTngJ.s:372    .text:00000000000001d0 .L0 
     /tmp/cc3jTngJ.s:374    .text:00000000000001d4 .L0 
     /tmp/cc3jTngJ.s:376    .text:00000000000001d8 .L0 
     /tmp/cc3jTngJ.s:378    .text:00000000000001d8 .L0 
     /tmp/cc3jTngJ.s:379    .text:00000000000001d8 .L0 
       src/Riscv.cpp:215    .text:00000000000001d8 .L0 
     /tmp/cc3jTngJ.s:386    .text:00000000000001dc .L0 
     /tmp/cc3jTngJ.s:388    .text:00000000000001dc .L0 
       src/Riscv.cpp:216    .text:00000000000001ec .L0 
     /tmp/cc3jTngJ.s:397    .text:00000000000001f0 .L0 
       src/Riscv.cpp:217    .text:00000000000001f0 .L0 
     /tmp/cc3jTngJ.s:402    .text:00000000000001f4 .L0 
       src/Riscv.cpp:218    .text:00000000000001f4 .L0 
GAS LISTING /tmp/cc3jTngJ.s 			page 36


     /tmp/cc3jTngJ.s:408    .text:00000000000001f8 .L0 
     /tmp/cc3jTngJ.s:409    .text:00000000000001fc .L0 
     /tmp/cc3jTngJ.s:410    .text:00000000000001fc .L0 
     /tmp/cc3jTngJ.s:412    .text:0000000000000200 .L0 
     /tmp/cc3jTngJ.s:414    .text:0000000000000204 .L0 
     /tmp/cc3jTngJ.s:420    .text:0000000000000204 _ZN5Riscv14changePrivModeEv
     /tmp/cc3jTngJ.s:423    .text:0000000000000204 .L0 
     /tmp/cc3jTngJ.s:424    .text:0000000000000204 .L0 
     /tmp/cc3jTngJ.s:425    .text:0000000000000208 .L0 
     /tmp/cc3jTngJ.s:427    .text:000000000000020c .L0 
     /tmp/cc3jTngJ.s:429    .text:0000000000000210 .L0 
     /tmp/cc3jTngJ.s:431    .text:0000000000000210 .L0 
     /tmp/cc3jTngJ.s:432    .text:0000000000000210 .L0 
     /tmp/cc3jTngJ.s:436    .text:0000000000000220 .L0 
     /tmp/cc3jTngJ.s:441    .text:0000000000000224 .L0 
     /tmp/cc3jTngJ.s:442    .text:0000000000000224 .L0 
     /tmp/cc3jTngJ.s:443    .text:0000000000000224 .L0 
     /tmp/cc3jTngJ.s:454    .text:000000000000022c .L0 
     /tmp/cc3jTngJ.s:455    .text:0000000000000230 .L0 
     /tmp/cc3jTngJ.s:456    .text:0000000000000230 .L0 
     /tmp/cc3jTngJ.s:457    .text:0000000000000230 .L0 
     /tmp/cc3jTngJ.s:459    .text:0000000000000234 .L0 
     /tmp/cc3jTngJ.s:462    .text:0000000000000238 .L0 
     /tmp/cc3jTngJ.s:467    .text:0000000000000238 .L0 
     /tmp/cc3jTngJ.s:468    .text:0000000000000238 .L0 
     /tmp/cc3jTngJ.s:469    .text:0000000000000238 .L0 
     /tmp/cc3jTngJ.s:479    .text:0000000000000240 .L0 
     /tmp/cc3jTngJ.s:480    .text:0000000000000244 .L0 
     /tmp/cc3jTngJ.s:486    .text:0000000000000244 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/cc3jTngJ.s:489    .text:0000000000000244 .L0 
     /tmp/cc3jTngJ.s:490    .text:0000000000000244 .L0 
     /tmp/cc3jTngJ.s:491    .text:0000000000000248 .L0 
     /tmp/cc3jTngJ.s:495    .text:0000000000000254 .L0 
     /tmp/cc3jTngJ.s:496    .text:0000000000000254 .L0 
     /tmp/cc3jTngJ.s:497    .text:0000000000000254 .L0 
     /tmp/cc3jTngJ.s:499    .text:0000000000000258 .L0 
     /tmp/cc3jTngJ.s:501    .text:0000000000000258 .L0 
       src/Riscv.cpp:62     .text:0000000000000258 .L0 
     /tmp/cc3jTngJ.s:510    .text:0000000000000268 .L0 
     /tmp/cc3jTngJ.s:511    .text:0000000000000268 .L0 
       src/Riscv.cpp:63     .text:0000000000000274 .L0 
     /tmp/cc3jTngJ.s:523    .text:000000000000027c .L0 
     /tmp/cc3jTngJ.s:524    .text:000000000000027c .L0 
     /tmp/cc3jTngJ.s:525    .text:000000000000027c .L0 
  src/../h/Riscv.hpp:117    .text:000000000000027c .L0 
     /tmp/cc3jTngJ.s:533    .text:0000000000000284 .L0 
     /tmp/cc3jTngJ.s:534    .text:0000000000000284 .L0 
     /tmp/cc3jTngJ.s:540    .text:0000000000000288 .L0 
     /tmp/cc3jTngJ.s:550    .text:00000000000002a8 .L0 
     /tmp/cc3jTngJ.s:551    .text:00000000000002a8 .L0 
     /tmp/cc3jTngJ.s:552    .text:00000000000002a8 .L0 
     /tmp/cc3jTngJ.s:553    .text:00000000000002a8 .L0 
     /tmp/cc3jTngJ.s:556    .text:00000000000002b0 .L0 
     /tmp/cc3jTngJ.s:561    .text:00000000000002b4 .L0 
     /tmp/cc3jTngJ.s:565    .text:00000000000002bc .L0 
     /tmp/cc3jTngJ.s:566    .text:00000000000002bc .L0 
     /tmp/cc3jTngJ.s:567    .text:00000000000002bc .L0 
GAS LISTING /tmp/cc3jTngJ.s 			page 37


     /tmp/cc3jTngJ.s:568    .text:00000000000002bc .L0 
     /tmp/cc3jTngJ.s:571    .text:00000000000002c4 .L0 
     /tmp/cc3jTngJ.s:576    .text:00000000000002c8 .L0 
     /tmp/cc3jTngJ.s:586    .text:00000000000002e8 .L0 
     /tmp/cc3jTngJ.s:587    .text:00000000000002e8 .L0 
     /tmp/cc3jTngJ.s:588    .text:00000000000002e8 .L0 
     /tmp/cc3jTngJ.s:589    .text:00000000000002e8 .L0 
     /tmp/cc3jTngJ.s:592    .text:00000000000002f0 .L0 
     /tmp/cc3jTngJ.s:593    .text:00000000000002f0 .L0 
     /tmp/cc3jTngJ.s:598    .text:0000000000000300 .L0 
     /tmp/cc3jTngJ.s:602    .text:0000000000000304 .L0 
     /tmp/cc3jTngJ.s:604    .text:0000000000000304 .L0 
     /tmp/cc3jTngJ.s:607    .text:0000000000000304 .L0 
     /tmp/cc3jTngJ.s:608    .text:0000000000000304 .L0 
     /tmp/cc3jTngJ.s:609    .text:0000000000000304 .L0 
  src/../h/Riscv.hpp:127    .text:0000000000000304 .L0 
     /tmp/cc3jTngJ.s:618    .text:000000000000030c .L0 
     /tmp/cc3jTngJ.s:619    .text:000000000000030c .L0 
     /tmp/cc3jTngJ.s:623    .text:0000000000000310 .L0 
     /tmp/cc3jTngJ.s:627    .text:0000000000000314 .L0 
     /tmp/cc3jTngJ.s:628    .text:0000000000000314 .L0 
     /tmp/cc3jTngJ.s:629    .text:0000000000000314 .L0 
  src/../h/Riscv.hpp:200    .text:0000000000000314 .L0 
     /tmp/cc3jTngJ.s:637    .text:000000000000031c .L0 
     /tmp/cc3jTngJ.s:638    .text:000000000000031c .L0 
     /tmp/cc3jTngJ.s:642    .text:0000000000000320 .L0 
     /tmp/cc3jTngJ.s:647    .text:0000000000000324 .L0 
     /tmp/cc3jTngJ.s:648    .text:0000000000000324 .L0 
     /tmp/cc3jTngJ.s:649    .text:0000000000000324 .L0 
     /tmp/cc3jTngJ.s:659    .text:000000000000032c .L0 
     /tmp/cc3jTngJ.s:660    .text:000000000000032c .L0 
     /tmp/cc3jTngJ.s:665    .text:0000000000000340 .L0 
     /tmp/cc3jTngJ.s:666    .text:0000000000000340 .L0 
     /tmp/cc3jTngJ.s:671    .text:0000000000000354 .L0 
     /tmp/cc3jTngJ.s:672    .text:0000000000000354 .L0 
     /tmp/cc3jTngJ.s:675    .text:000000000000035c .L0 
     /tmp/cc3jTngJ.s:676    .text:000000000000035c .L0 
     /tmp/cc3jTngJ.s:683    .text:0000000000000368 .L0 
     /tmp/cc3jTngJ.s:684    .text:0000000000000368 .L0 
     /tmp/cc3jTngJ.s:689    .text:000000000000036c .L0 
     /tmp/cc3jTngJ.s:691    .text:0000000000000370 .L0 
     /tmp/cc3jTngJ.s:694    .text:0000000000000374 .L0 
     /tmp/cc3jTngJ.s:695    .text:0000000000000374 .L0 
     /tmp/cc3jTngJ.s:700    .text:0000000000000378 .L0 
  src/../h/Riscv.hpp:205    .text:0000000000000378 .L0 
     /tmp/cc3jTngJ.s:710    .text:000000000000037c .L0 
     /tmp/cc3jTngJ.s:711    .text:000000000000037c .L0 
     /tmp/cc3jTngJ.s:716    .text:0000000000000380 .L0 
  src/../h/Riscv.hpp:132    .text:0000000000000380 .L0 
     /tmp/cc3jTngJ.s:726    .text:0000000000000384 .L0 
     /tmp/cc3jTngJ.s:727    .text:0000000000000384 .L0 
     /tmp/cc3jTngJ.s:734    .text:000000000000038c .L0 
     /tmp/cc3jTngJ.s:735    .text:000000000000038c .L0 
     /tmp/cc3jTngJ.s:736    .text:0000000000000390 .L0 
     /tmp/cc3jTngJ.s:737    .text:0000000000000390 .L0 
     /tmp/cc3jTngJ.s:739    .text:0000000000000394 .L0 
     /tmp/cc3jTngJ.s:740    .text:0000000000000394 .L0 
GAS LISTING /tmp/cc3jTngJ.s 			page 38


     /tmp/cc3jTngJ.s:742    .text:0000000000000398 .L0 
     /tmp/cc3jTngJ.s:744    .text:000000000000039c .L0 
     /tmp/cc3jTngJ.s:747    .text:00000000000003a0 .L0 
     /tmp/cc3jTngJ.s:752    .text:00000000000003a0 .L0 
     /tmp/cc3jTngJ.s:753    .text:00000000000003a0 .L0 
     /tmp/cc3jTngJ.s:755    .text:00000000000003a4 .L0 
     /tmp/cc3jTngJ.s:756    .text:00000000000003a4 .L0 
     /tmp/cc3jTngJ.s:763    .text:00000000000003b0 .L0 
     /tmp/cc3jTngJ.s:764    .text:00000000000003b0 .L0 
     /tmp/cc3jTngJ.s:765    .text:00000000000003b0 .L0 
     /tmp/cc3jTngJ.s:766    .text:00000000000003b0 .L0 
     /tmp/cc3jTngJ.s:769    .text:00000000000003b8 .L0 
     /tmp/cc3jTngJ.s:773    .text:00000000000003bc .L0 
     /tmp/cc3jTngJ.s:774    .text:00000000000003bc .L0 
     /tmp/cc3jTngJ.s:776    .text:00000000000003bc .L0 
     /tmp/cc3jTngJ.s:777    .text:00000000000003bc .L0 
     /tmp/cc3jTngJ.s:778    .text:00000000000003bc .L0 
       src/Riscv.cpp:117    .text:00000000000003bc .L0 
     /tmp/cc3jTngJ.s:788    .text:00000000000003c0 .L0 
     /tmp/cc3jTngJ.s:789    .text:00000000000003c0 .L0 
     /tmp/cc3jTngJ.s:790    .text:00000000000003c0 .L0 
  src/../h/Riscv.hpp:127    .text:00000000000003c0 .L0 
     /tmp/cc3jTngJ.s:798    .text:00000000000003c8 .L0 
     /tmp/cc3jTngJ.s:799    .text:00000000000003c8 .L0 
     /tmp/cc3jTngJ.s:803    .text:00000000000003cc .L0 
     /tmp/cc3jTngJ.s:805    .text:00000000000003d0 .L0 
     /tmp/cc3jTngJ.s:809    .text:00000000000003d4 .L0 
     /tmp/cc3jTngJ.s:810    .text:00000000000003d4 .L0 
     /tmp/cc3jTngJ.s:811    .text:00000000000003d4 .L0 
  src/../h/Riscv.hpp:200    .text:00000000000003d4 .L0 
     /tmp/cc3jTngJ.s:819    .text:00000000000003dc .L0 
     /tmp/cc3jTngJ.s:820    .text:00000000000003dc .L0 
     /tmp/cc3jTngJ.s:824    .text:00000000000003e0 .L0 
     /tmp/cc3jTngJ.s:826    .text:00000000000003e4 .L0 
     /tmp/cc3jTngJ.s:910    .text:0000000000000408 .L0 
     /tmp/cc3jTngJ.s:911    .text:0000000000000408 .L0 
     /tmp/cc3jTngJ.s:912    .text:0000000000000408 .L0 
     /tmp/cc3jTngJ.s:916    .text:0000000000000410 .L0 
     /tmp/cc3jTngJ.s:917    .text:0000000000000410 .L0 
     /tmp/cc3jTngJ.s:918    .text:0000000000000410 .L0 
     /tmp/cc3jTngJ.s:923    .text:0000000000000414 .L0 
  src/../h/Riscv.hpp:205    .text:0000000000000414 .L0 
     /tmp/cc3jTngJ.s:933    .text:0000000000000418 .L0 
     /tmp/cc3jTngJ.s:934    .text:0000000000000418 .L0 
     /tmp/cc3jTngJ.s:939    .text:000000000000041c .L0 
  src/../h/Riscv.hpp:132    .text:000000000000041c .L0 
     /tmp/cc3jTngJ.s:949    .text:0000000000000420 .L0 
     /tmp/cc3jTngJ.s:950    .text:0000000000000420 .L0 
     /tmp/cc3jTngJ.s:956    .text:0000000000000428 .L0 
     /tmp/cc3jTngJ.s:957    .text:0000000000000428 .L0 
     /tmp/cc3jTngJ.s:963    .text:000000000000042c .L0 
     /tmp/cc3jTngJ.s:964    .text:000000000000042c .L0 
     /tmp/cc3jTngJ.s:965    .text:000000000000042c .L0 
     /tmp/cc3jTngJ.s:968    .text:0000000000000434 .L0 
     /tmp/cc3jTngJ.s:971    .text:0000000000000438 .L0 
     /tmp/cc3jTngJ.s:972    .text:0000000000000438 .L0 
     /tmp/cc3jTngJ.s:973    .text:0000000000000438 .L0 
GAS LISTING /tmp/cc3jTngJ.s 			page 39


     /tmp/cc3jTngJ.s:976    .text:0000000000000440 .L0 
     /tmp/cc3jTngJ.s:979    .text:0000000000000444 .L0 
     /tmp/cc3jTngJ.s:980    .text:0000000000000444 .L0 
     /tmp/cc3jTngJ.s:981    .text:0000000000000444 .L0 
     /tmp/cc3jTngJ.s:984    .text:000000000000044c .L0 
     /tmp/cc3jTngJ.s:987    .text:0000000000000450 .L0 
     /tmp/cc3jTngJ.s:988    .text:0000000000000450 .L0 
     /tmp/cc3jTngJ.s:989    .text:0000000000000450 .L0 
     /tmp/cc3jTngJ.s:992    .text:0000000000000458 .L0 
     /tmp/cc3jTngJ.s:995    .text:000000000000045c .L0 
     /tmp/cc3jTngJ.s:996    .text:000000000000045c .L0 
     /tmp/cc3jTngJ.s:997    .text:000000000000045c .L0 
     /tmp/cc3jTngJ.s:1000   .text:0000000000000464 .L0 
     /tmp/cc3jTngJ.s:1003   .text:0000000000000468 .L0 
     /tmp/cc3jTngJ.s:1004   .text:0000000000000468 .L0 
     /tmp/cc3jTngJ.s:1005   .text:0000000000000468 .L0 
     /tmp/cc3jTngJ.s:1008   .text:0000000000000470 .L0 
     /tmp/cc3jTngJ.s:1011   .text:0000000000000474 .L0 
     /tmp/cc3jTngJ.s:1012   .text:0000000000000474 .L0 
     /tmp/cc3jTngJ.s:1013   .text:0000000000000474 .L0 
     /tmp/cc3jTngJ.s:1016   .text:000000000000047c .L0 
     /tmp/cc3jTngJ.s:1019   .text:0000000000000480 .L0 
     /tmp/cc3jTngJ.s:1020   .text:0000000000000480 .L0 
     /tmp/cc3jTngJ.s:1021   .text:0000000000000480 .L0 
     /tmp/cc3jTngJ.s:1024   .text:0000000000000488 .L0 
     /tmp/cc3jTngJ.s:1027   .text:000000000000048c .L0 
     /tmp/cc3jTngJ.s:1028   .text:000000000000048c .L0 
     /tmp/cc3jTngJ.s:1029   .text:000000000000048c .L0 
     /tmp/cc3jTngJ.s:1032   .text:0000000000000494 .L0 
     /tmp/cc3jTngJ.s:1035   .text:0000000000000498 .L0 
     /tmp/cc3jTngJ.s:1036   .text:0000000000000498 .L0 
     /tmp/cc3jTngJ.s:1037   .text:0000000000000498 .L0 
     /tmp/cc3jTngJ.s:1040   .text:00000000000004a0 .L0 
     /tmp/cc3jTngJ.s:1043   .text:00000000000004a4 .L0 
     /tmp/cc3jTngJ.s:1044   .text:00000000000004a4 .L0 
     /tmp/cc3jTngJ.s:1045   .text:00000000000004a4 .L0 
     /tmp/cc3jTngJ.s:1048   .text:00000000000004ac .L0 
     /tmp/cc3jTngJ.s:1051   .text:00000000000004b0 .L0 
     /tmp/cc3jTngJ.s:1052   .text:00000000000004b0 .L0 
     /tmp/cc3jTngJ.s:1053   .text:00000000000004b0 .L0 
     /tmp/cc3jTngJ.s:1056   .text:00000000000004b8 .L0 
     /tmp/cc3jTngJ.s:1059   .text:00000000000004bc .L0 
     /tmp/cc3jTngJ.s:1060   .text:00000000000004bc .L0 
     /tmp/cc3jTngJ.s:1061   .text:00000000000004bc .L0 
     /tmp/cc3jTngJ.s:1064   .text:00000000000004c4 .L0 
     /tmp/cc3jTngJ.s:1067   .text:00000000000004c8 .L0 
     /tmp/cc3jTngJ.s:1068   .text:00000000000004c8 .L0 
     /tmp/cc3jTngJ.s:1069   .text:00000000000004c8 .L0 
     /tmp/cc3jTngJ.s:1072   .text:00000000000004d0 .L0 
     /tmp/cc3jTngJ.s:1075   .text:00000000000004d4 .L0 
     /tmp/cc3jTngJ.s:1076   .text:00000000000004d4 .L0 
     /tmp/cc3jTngJ.s:1077   .text:00000000000004d4 .L0 
     /tmp/cc3jTngJ.s:1080   .text:00000000000004dc .L0 
     /tmp/cc3jTngJ.s:1084   .text:00000000000004e0 .L0 
     /tmp/cc3jTngJ.s:1099   .bss:0000000000000001 _ZN5Riscv16kernelMainCalledE
     /tmp/cc3jTngJ.s:1095   .bss:0000000000000000 _ZN5Riscv12finishSystemE
     /tmp/cc3jTngJ.s:1104   .bss:0000000000000008 _ZN5Riscv9totalTimeE
GAS LISTING /tmp/cc3jTngJ.s 			page 40


     /tmp/cc3jTngJ.s:1092   .bss:0000000000000000 .LANCHOR0
     /tmp/cc3jTngJ.s:1117   .text:00000000000004e0 .L0 
     /tmp/cc3jTngJ.s:24     .text:0000000000000010 .L0 
     /tmp/cc3jTngJ.s:157    .text:0000000000000098 .L0 
     /tmp/cc3jTngJ.s:170    .text:00000000000000ac .L0 
     /tmp/cc3jTngJ.s:177    .text:00000000000000c0 .L0 
     /tmp/cc3jTngJ.s:187    .text:00000000000000d4 .L0 
     /tmp/cc3jTngJ.s:259    .text:0000000000000130 .L0 
     /tmp/cc3jTngJ.s:275    .text:0000000000000154 .L0 
     /tmp/cc3jTngJ.s:388    .text:00000000000001dc .L0 
     /tmp/cc3jTngJ.s:432    .text:0000000000000210 .L0 
     /tmp/cc3jTngJ.s:507    .text:000000000000025c .L0 
     /tmp/cc3jTngJ.s:511    .text:0000000000000268 .L0 
     /tmp/cc3jTngJ.s:660    .text:000000000000032c .L0 
     /tmp/cc3jTngJ.s:666    .text:0000000000000340 .L0 
     /tmp/cc3jTngJ.s:676    .text:000000000000035c .L0 
     /tmp/cc3jTngJ.s:838    .rodata:0000000000000000 .L43
     /tmp/cc3jTngJ.s:830    .text:00000000000003f0 .L0 
     /tmp/cc3jTngJ.s:160    .text:00000000000000a0 .L8
     /tmp/cc3jTngJ.s:199    .text:00000000000000f8 .L9
     /tmp/cc3jTngJ.s:183    .text:00000000000000d4 .L10
     /tmp/cc3jTngJ.s:262    .text:0000000000000140 .L20
     /tmp/cc3jTngJ.s:461    .text:0000000000000238 .L28
     /tmp/cc3jTngJ.s:450    .text:000000000000022c .L27
     /tmp/cc3jTngJ.s:573    .text:00000000000002c8 .L32
     /tmp/cc3jTngJ.s:771    .text:00000000000003bc .L33
     /tmp/cc3jTngJ.s:760    .text:00000000000003b0 .L34
     /tmp/cc3jTngJ.s:558    .text:00000000000002b4 .L60
     /tmp/cc3jTngJ.s:730    .text:000000000000038c .L31
     /tmp/cc3jTngJ.s:600    .text:0000000000000304 .L38
     /tmp/cc3jTngJ.s:746    .text:00000000000003a0 .L61
     /tmp/cc3jTngJ.s:692    .text:0000000000000374 .L40
     /tmp/cc3jTngJ.s:915    .text:0000000000000410 .L41
     /tmp/cc3jTngJ.s:908    .text:0000000000000408 .L58
     /tmp/cc3jTngJ.s:958    .text:000000000000042c .L57
     /tmp/cc3jTngJ.s:977    .text:0000000000000444 .L56
     /tmp/cc3jTngJ.s:1001   .text:0000000000000468 .L55
     /tmp/cc3jTngJ.s:993    .text:000000000000045c .L54
     /tmp/cc3jTngJ.s:969    .text:0000000000000438 .L53
     /tmp/cc3jTngJ.s:985    .text:0000000000000450 .L52
     /tmp/cc3jTngJ.s:1017   .text:0000000000000480 .L51
     /tmp/cc3jTngJ.s:1025   .text:000000000000048c .L50
     /tmp/cc3jTngJ.s:1049   .text:00000000000004b0 .L49
     /tmp/cc3jTngJ.s:1033   .text:0000000000000498 .L48
     /tmp/cc3jTngJ.s:1041   .text:00000000000004a4 .L47
     /tmp/cc3jTngJ.s:1009   .text:0000000000000474 .L46
     /tmp/cc3jTngJ.s:1057   .text:00000000000004bc .L45
     /tmp/cc3jTngJ.s:1065   .text:00000000000004c8 .L44
     /tmp/cc3jTngJ.s:1073   .text:00000000000004d4 .L42
     /tmp/cc3jTngJ.s:3549   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc3jTngJ.s:5243   .debug_str:00000000000011f3 .LASF326
     /tmp/cc3jTngJ.s:4819   .debug_str:00000000000003d4 .LASF327
     /tmp/cc3jTngJ.s:4901   .debug_str:000000000000069a .LASF328
     /tmp/cc3jTngJ.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc3jTngJ.s:1107   .text:00000000000004e0 .Letext0
     /tmp/cc3jTngJ.s:4717   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc3jTngJ.s:4937   .debug_str:00000000000007ef .LASF0
GAS LISTING /tmp/cc3jTngJ.s 			page 41


     /tmp/cc3jTngJ.s:4979   .debug_str:000000000000095a .LASF1
     /tmp/cc3jTngJ.s:5139   .debug_str:0000000000000ec8 .LASF2
     /tmp/cc3jTngJ.s:5155   .debug_str:0000000000000f56 .LASF4
     /tmp/cc3jTngJ.s:4957   .debug_str:0000000000000897 .LASF3
     /tmp/cc3jTngJ.s:4745   .debug_str:0000000000000110 .LASF5
     /tmp/cc3jTngJ.s:5083   .debug_str:0000000000000d40 .LASF6
     /tmp/cc3jTngJ.s:4969   .debug_str:0000000000000913 .LASF7
     /tmp/cc3jTngJ.s:4899   .debug_str:000000000000068a .LASF8
     /tmp/cc3jTngJ.s:4909   .debug_str:00000000000006f0 .LASF9
     /tmp/cc3jTngJ.s:4805   .debug_str:0000000000000371 .LASF10
     /tmp/cc3jTngJ.s:4883   .debug_str:0000000000000632 .LASF11
     /tmp/cc3jTngJ.s:4821   .debug_str:00000000000003e2 .LASF12
     /tmp/cc3jTngJ.s:4803   .debug_str:0000000000000361 .LASF13
     /tmp/cc3jTngJ.s:5211   .debug_str:000000000000112e .LASF14
     /tmp/cc3jTngJ.s:4863   .debug_str:000000000000054b .LASF15
     /tmp/cc3jTngJ.s:5197   .debug_str:000000000000108c .LASF16
     /tmp/cc3jTngJ.s:5307   .debug_str:00000000000014c1 .LASF106
     /tmp/cc3jTngJ.s:5117   .debug_str:0000000000000e48 .LASF20
     /tmp/cc3jTngJ.s:4985   .debug_str:000000000000098e .LASF17
     /tmp/cc3jTngJ.s:4871   .debug_str:00000000000005ae .LASF18
     /tmp/cc3jTngJ.s:5329   .debug_str:0000000000001577 .LASF19
     /tmp/cc3jTngJ.s:5293   .debug_str:000000000000142f .LASF21
     /tmp/cc3jTngJ.s:4877   .debug_str:00000000000005ee .LASF22
     /tmp/cc3jTngJ.s:5241   .debug_str:00000000000011e6 .LASF23
     /tmp/cc3jTngJ.s:4835   .debug_str:000000000000046f .LASF24
     /tmp/cc3jTngJ.s:4931   .debug_str:00000000000007c6 .LASF41
     /tmp/cc3jTngJ.s:5201   .debug_str:00000000000010b1 .LASF43
     /tmp/cc3jTngJ.s:5301   .debug_str:0000000000001488 .LASF61
     /tmp/cc3jTngJ.s:5339   .debug_str:00000000000015c8 .LASF25
     /tmp/cc3jTngJ.s:5177   .debug_str:0000000000000ff5 .LASF27
     /tmp/cc3jTngJ.s:5035   .debug_str:0000000000000b73 .LASF26
     /tmp/cc3jTngJ.s:5011   .debug_str:0000000000000a6f .LASF28
     /tmp/cc3jTngJ.s:4859   .debug_str:000000000000052e .LASF29
     /tmp/cc3jTngJ.s:4733   .debug_str:0000000000000080 .LASF30
     /tmp/cc3jTngJ.s:5015   .debug_str:0000000000000aa6 .LASF45
     /tmp/cc3jTngJ.s:5303   .debug_str:0000000000001499 .LASF47
     /tmp/cc3jTngJ.s:4799   .debug_str:000000000000033d .LASF31
     /tmp/cc3jTngJ.s:4991   .debug_str:00000000000009cb .LASF32
     /tmp/cc3jTngJ.s:4853   .debug_str:00000000000004dd .LASF33
     /tmp/cc3jTngJ.s:4811   .debug_str:000000000000038e .LASF34
     /tmp/cc3jTngJ.s:4949   .debug_str:0000000000000855 .LASF35
     /tmp/cc3jTngJ.s:4829   .debug_str:0000000000000439 .LASF36
     /tmp/cc3jTngJ.s:5167   .debug_str:0000000000000f94 .LASF37
     /tmp/cc3jTngJ.s:4869   .debug_str:0000000000000593 .LASF38
     /tmp/cc3jTngJ.s:4943   .debug_str:000000000000082e .LASF39
     /tmp/cc3jTngJ.s:5321   .debug_str:000000000000152f .LASF40
     /tmp/cc3jTngJ.s:5283   .debug_str:00000000000013f7 .LASF42
     /tmp/cc3jTngJ.s:5267   .debug_str:0000000000001377 .LASF44
     /tmp/cc3jTngJ.s:5135   .debug_str:0000000000000eb4 .LASF46
     /tmp/cc3jTngJ.s:5061   .debug_str:0000000000000c5f .LASF48
     /tmp/cc3jTngJ.s:5103   .debug_str:0000000000000dd6 .LASF49
     /tmp/cc3jTngJ.s:5111   .debug_str:0000000000000e16 .LASF50
     /tmp/cc3jTngJ.s:5051   .debug_str:0000000000000bf4 .LASF51
     /tmp/cc3jTngJ.s:4971   .debug_str:0000000000000926 .LASF52
     /tmp/cc3jTngJ.s:5323   .debug_str:0000000000001549 .LASF53
     /tmp/cc3jTngJ.s:5249   .debug_str:00000000000012cc .LASF54
     /tmp/cc3jTngJ.s:5043   .debug_str:0000000000000bae .LASF55
GAS LISTING /tmp/cc3jTngJ.s 			page 42


     /tmp/cc3jTngJ.s:5059   .debug_str:0000000000000c4b .LASF56
     /tmp/cc3jTngJ.s:5029   .debug_str:0000000000000b37 .LASF57
     /tmp/cc3jTngJ.s:5115   .debug_str:0000000000000e34 .LASF58
     /tmp/cc3jTngJ.s:5379   .debug_str:000000000000173e .LASF59
     /tmp/cc3jTngJ.s:4947   .debug_str:0000000000000841 .LASF60
     /tmp/cc3jTngJ.s:5349   .debug_str:000000000000162c .LASF62
     /tmp/cc3jTngJ.s:5207   .debug_str:0000000000001105 .LASF63
     /tmp/cc3jTngJ.s:5161   .debug_str:0000000000000f72 .LASF64
     /tmp/cc3jTngJ.s:5163   .debug_str:0000000000000f85 .LASF65
     /tmp/cc3jTngJ.s:4857   .debug_str:000000000000051b .LASF66
     /tmp/cc3jTngJ.s:4851   .debug_str:00000000000004d7 .LASF67
     /tmp/cc3jTngJ.s:4753   .debug_str:0000000000000150 .LASF68
     /tmp/cc3jTngJ.s:4945   .debug_str:000000000000083b .LASF69
     /tmp/cc3jTngJ.s:4839   .debug_str:000000000000048e .LASF70
     /tmp/cc3jTngJ.s:4791   .debug_str:00000000000002e9 .LASF71
     /tmp/cc3jTngJ.s:5169   .debug_str:0000000000000fa2 .LASF72
     /tmp/cc3jTngJ.s:4747   .debug_str:0000000000000117 .LASF73
     /tmp/cc3jTngJ.s:5143   .debug_str:0000000000000edd .LASF74
     /tmp/cc3jTngJ.s:5137   .debug_str:0000000000000ebd .LASF75
     /tmp/cc3jTngJ.s:5365   .debug_str:00000000000016b9 .LASF76
     /tmp/cc3jTngJ.s:5141   .debug_str:0000000000000ed6 .LASF77
     /tmp/cc3jTngJ.s:4801   .debug_str:000000000000034e .LASF78
     /tmp/cc3jTngJ.s:5193   .debug_str:0000000000001077 .LASF79
     /tmp/cc3jTngJ.s:5149   .debug_str:0000000000000f14 .LASF80
     /tmp/cc3jTngJ.s:5311   .debug_str:00000000000014cf .LASF81
     /tmp/cc3jTngJ.s:5335   .debug_str:0000000000001595 .LASF82
     /tmp/cc3jTngJ.s:5305   .debug_str:00000000000014b7 .LASF83
     /tmp/cc3jTngJ.s:5017   .debug_str:0000000000000ab6 .LASF84
     /tmp/cc3jTngJ.s:5125   .debug_str:0000000000000e77 .LASF85
     /tmp/cc3jTngJ.s:4921   .debug_str:0000000000000788 .LASF86
     /tmp/cc3jTngJ.s:4929   .debug_str:00000000000007c0 .LASF87
     /tmp/cc3jTngJ.s:4831   .debug_str:0000000000000458 .LASF88
     /tmp/cc3jTngJ.s:4925   .debug_str:00000000000007a0 .LASF89
     /tmp/cc3jTngJ.s:4933   .debug_str:00000000000007d1 .LASF90
     /tmp/cc3jTngJ.s:5275   .debug_str:00000000000013b1 .LASF91
     /tmp/cc3jTngJ.s:4907   .debug_str:00000000000006d4 .LASF92
     /tmp/cc3jTngJ.s:5089   .debug_str:0000000000000d66 .LASF93
     /tmp/cc3jTngJ.s:4965   .debug_str:00000000000008eb .LASF94
     /tmp/cc3jTngJ.s:5127   .debug_str:0000000000000e7d .LASF95
     /tmp/cc3jTngJ.s:4739   .debug_str:00000000000000cc .LASF96
     /tmp/cc3jTngJ.s:4779   .debug_str:000000000000027c .LASF97
     /tmp/cc3jTngJ.s:5273   .debug_str:00000000000013a5 .LASF98
     /tmp/cc3jTngJ.s:4781   .debug_str:000000000000028b .LASF99
     /tmp/cc3jTngJ.s:5033   .debug_str:0000000000000b61 .LASF100
     /tmp/cc3jTngJ.s:4911   .debug_str:00000000000006fe .LASF101
     /tmp/cc3jTngJ.s:4955   .debug_str:0000000000000884 .LASF102
     /tmp/cc3jTngJ.s:4797   .debug_str:0000000000000329 .LASF103
     /tmp/cc3jTngJ.s:5235   .debug_str:00000000000011c2 .LASF104
     /tmp/cc3jTngJ.s:5005   .debug_str:0000000000000a49 .LASF105
     /tmp/cc3jTngJ.s:5077   .debug_str:0000000000000d02 .LASF107
     /tmp/cc3jTngJ.s:5183   .debug_str:0000000000001021 .LASF110
     /tmp/cc3jTngJ.s:4977   .debug_str:0000000000000955 .LASF108
     /tmp/cc3jTngJ.s:4807   .debug_str:0000000000000380 .LASF109
     /tmp/cc3jTngJ.s:4893   .debug_str:000000000000066a .LASF111
     /tmp/cc3jTngJ.s:4981   .debug_str:000000000000096d .LASF112
     /tmp/cc3jTngJ.s:4983   .debug_str:000000000000097b .LASF113
     /tmp/cc3jTngJ.s:4889   .debug_str:0000000000000655 .LASF114
GAS LISTING /tmp/cc3jTngJ.s 			page 43


     /tmp/cc3jTngJ.s:5383   .debug_str:0000000000001764 .LASF115
     /tmp/cc3jTngJ.s:5021   .debug_str:0000000000000aeb .LASF116
     /tmp/cc3jTngJ.s:4749   .debug_str:0000000000000122 .LASF118
     /tmp/cc3jTngJ.s:5217   .debug_str:000000000000115c .LASF117
     /tmp/cc3jTngJ.s:5023   .debug_str:0000000000000af5 .LASF119
     /tmp/cc3jTngJ.s:5299   .debug_str:000000000000147d .LASF120
     /tmp/cc3jTngJ.s:5253   .debug_str:00000000000012ea .LASF121
     /tmp/cc3jTngJ.s:5213   .debug_str:000000000000113a .LASF122
     /tmp/cc3jTngJ.s:4741   .debug_str:00000000000000d4 .LASF123
     /tmp/cc3jTngJ.s:5315   .debug_str:00000000000014de .LASF124
     /tmp/cc3jTngJ.s:4737   .debug_str:000000000000009e .LASF125
     /tmp/cc3jTngJ.s:5225   .debug_str:000000000000118b .LASF126
     /tmp/cc3jTngJ.s:4919   .debug_str:0000000000000759 .LASF127
     /tmp/cc3jTngJ.s:4725   .debug_str:0000000000000031 .LASF128
     /tmp/cc3jTngJ.s:5063   .debug_str:0000000000000c74 .LASF129
     /tmp/cc3jTngJ.s:4865   .debug_str:0000000000000561 .LASF130
     /tmp/cc3jTngJ.s:5319   .debug_str:0000000000001507 .LASF131
     /tmp/cc3jTngJ.s:5199   .debug_str:00000000000010a2 .LASF132
     /tmp/cc3jTngJ.s:4855   .debug_str:00000000000004f4 .LASF133
     /tmp/cc3jTngJ.s:4847   .debug_str:00000000000004bf .LASF134
     /tmp/cc3jTngJ.s:5297   .debug_str:000000000000144e .LASF135
     /tmp/cc3jTngJ.s:4885   .debug_str:0000000000000641 .LASF136
     /tmp/cc3jTngJ.s:5013   .debug_str:0000000000000a87 .LASF137
     /tmp/cc3jTngJ.s:4759   .debug_str:00000000000001a9 .LASF138
     /tmp/cc3jTngJ.s:5065   .debug_str:0000000000000c9e .LASF139
     /tmp/cc3jTngJ.s:5233   .debug_str:00000000000011bc .LASF140
     /tmp/cc3jTngJ.s:4795   .debug_str:0000000000000323 .LASF141
     /tmp/cc3jTngJ.s:5181   .debug_str:0000000000001019 .LASF142
     /tmp/cc3jTngJ.s:4813   .debug_str:00000000000003b2 .LASF143
     /tmp/cc3jTngJ.s:4783   .debug_str:000000000000029e .LASF144
     /tmp/cc3jTngJ.s:5087   .debug_str:0000000000000d5e .LASF145
     /tmp/cc3jTngJ.s:4975   .debug_str:000000000000094c .LASF146
     /tmp/cc3jTngJ.s:5157   .debug_str:0000000000000f5d .LASF147
     /tmp/cc3jTngJ.s:4923   .debug_str:000000000000079a .LASF148
     /tmp/cc3jTngJ.s:5261   .debug_str:0000000000001355 .LASF149
     /tmp/cc3jTngJ.s:5039   .debug_str:0000000000000b8d .LASF329
     /tmp/cc3jTngJ.s:5067   .debug_str:0000000000000cbc .LASF150
     /tmp/cc3jTngJ.s:5313   .debug_str:00000000000014d9 .LASF151
     /tmp/cc3jTngJ.s:5361   .debug_str:0000000000001684 .LASF152
     /tmp/cc3jTngJ.s:5353   .debug_str:0000000000001647 .LASF153
     /tmp/cc3jTngJ.s:5247   .debug_str:00000000000012bc .LASF154
     /tmp/cc3jTngJ.s:4843   .debug_str:00000000000004b1 .LASF155
     /tmp/cc3jTngJ.s:4761   .debug_str:00000000000001af .LASF156
     /tmp/cc3jTngJ.s:5239   .debug_str:00000000000011de .LASF157
     /tmp/cc3jTngJ.s:4841   .debug_str:00000000000004a0 .LASF158
     /tmp/cc3jTngJ.s:5009   .debug_str:0000000000000a62 .LASF163
     /tmp/cc3jTngJ.s:4993   .debug_str:00000000000009e9 .LASF165
     /tmp/cc3jTngJ.s:5369   .debug_str:00000000000016e6 .LASF159
     /tmp/cc3jTngJ.s:4887   .debug_str:0000000000000649 .LASF160
     /tmp/cc3jTngJ.s:4939   .debug_str:00000000000007fc .LASF161
     /tmp/cc3jTngJ.s:4951   .debug_str:0000000000000867 .LASF162
     /tmp/cc3jTngJ.s:5173   .debug_str:0000000000000fce .LASF164
     /tmp/cc3jTngJ.s:4837   .debug_str:000000000000047b .LASF166
     /tmp/cc3jTngJ.s:5107   .debug_str:0000000000000e00 .LASF167
     /tmp/cc3jTngJ.s:5205   .debug_str:00000000000010e9 .LASF168
     /tmp/cc3jTngJ.s:5037   .debug_str:0000000000000b7e .LASF169
     /tmp/cc3jTngJ.s:4727   .debug_str:0000000000000042 .LASF170
GAS LISTING /tmp/cc3jTngJ.s 			page 44


     /tmp/cc3jTngJ.s:5333   .debug_str:0000000000001586 .LASF171
     /tmp/cc3jTngJ.s:5079   .debug_str:0000000000000d12 .LASF172
     /tmp/cc3jTngJ.s:5195   .debug_str:000000000000107e .LASF173
     /tmp/cc3jTngJ.s:5101   .debug_str:0000000000000dca .LASF174
     /tmp/cc3jTngJ.s:4721   .debug_str:000000000000000f .LASF175
     /tmp/cc3jTngJ.s:5057   .debug_str:0000000000000c3b .LASF176
     /tmp/cc3jTngJ.s:5131   .debug_str:0000000000000e8e .LASF177
     /tmp/cc3jTngJ.s:5001   .debug_str:0000000000000a2e .LASF178
     /tmp/cc3jTngJ.s:5341   .debug_str:00000000000015d7 .LASF179
     /tmp/cc3jTngJ.s:4959   .debug_str:00000000000008a9 .LASF180
     /tmp/cc3jTngJ.s:5187   .debug_str:0000000000001044 .LASF181
     /tmp/cc3jTngJ.s:5359   .debug_str:000000000000166e .LASF182
     /tmp/cc3jTngJ.s:5219   .debug_str:0000000000001165 .LASF183
     /tmp/cc3jTngJ.s:5189   .debug_str:000000000000104f .LASF184
     /tmp/cc3jTngJ.s:5165   .debug_str:0000000000000f8c .LASF185
     /tmp/cc3jTngJ.s:5081   .debug_str:0000000000000d2c .LASF186
     /tmp/cc3jTngJ.s:5049   .debug_str:0000000000000bd5 .LASF187
     /tmp/cc3jTngJ.s:4827   .debug_str:0000000000000427 .LASF188
     /tmp/cc3jTngJ.s:5337   .debug_str:00000000000015ab .LASF189
     /tmp/cc3jTngJ.s:5385   .debug_str:000000000000176e .LASF190
     /tmp/cc3jTngJ.s:5053   .debug_str:0000000000000bfb .LASF191
     /tmp/cc3jTngJ.s:5147   .debug_str:0000000000000f01 .LASF192
     /tmp/cc3jTngJ.s:5175   .debug_str:0000000000000fd7 .LASF193
     /tmp/cc3jTngJ.s:5289   .debug_str:0000000000001411 .LASF194
     /tmp/cc3jTngJ.s:5381   .debug_str:0000000000001746 .LASF195
     /tmp/cc3jTngJ.s:5367   .debug_str:00000000000016d1 .LASF196
     /tmp/cc3jTngJ.s:5203   .debug_str:00000000000010c9 .LASF197
     /tmp/cc3jTngJ.s:5075   .debug_str:0000000000000cee .LASF198
     /tmp/cc3jTngJ.s:5055   .debug_str:0000000000000c1c .LASF199
     /tmp/cc3jTngJ.s:5153   .debug_str:0000000000000f4d .LASF200
     /tmp/cc3jTngJ.s:5113   .debug_str:0000000000000e29 .LASF201
     /tmp/cc3jTngJ.s:4903   .debug_str:00000000000006b8 .LASF202
     /tmp/cc3jTngJ.s:5251   .debug_str:00000000000012e0 .LASF203
     /tmp/cc3jTngJ.s:4891   .debug_str:000000000000065e .LASF204
     /tmp/cc3jTngJ.s:5351   .debug_str:0000000000001639 .LASF205
     /tmp/cc3jTngJ.s:4771   .debug_str:000000000000021e .LASF206
     /tmp/cc3jTngJ.s:4773   .debug_str:0000000000000246 .LASF207
     /tmp/cc3jTngJ.s:4793   .debug_str:00000000000002f7 .LASF208
     /tmp/cc3jTngJ.s:5373   .debug_str:0000000000001702 .LASF209
     /tmp/cc3jTngJ.s:4789   .debug_str:00000000000002d8 .LASF210
     /tmp/cc3jTngJ.s:4731   .debug_str:000000000000007b .LASF211
     /tmp/cc3jTngJ.s:5285   .debug_str:0000000000001400 .LASF212
     /tmp/cc3jTngJ.s:4999   .debug_str:0000000000000a26 .LASF213
     /tmp/cc3jTngJ.s:4849   .debug_str:00000000000004d1 .LASF214
     /tmp/cc3jTngJ.s:5265   .debug_str:000000000000136f .LASF215
     /tmp/cc3jTngJ.s:4777   .debug_str:000000000000026b .LASF216
     /tmp/cc3jTngJ.s:5227   .debug_str:00000000000011a0 .LASF217
     /tmp/cc3jTngJ.s:5327   .debug_str:000000000000156a .LASF218
     /tmp/cc3jTngJ.s:5073   .debug_str:0000000000000cde .LASF219
     /tmp/cc3jTngJ.s:4723   .debug_str:000000000000001f .LASF220
     /tmp/cc3jTngJ.s:4879   .debug_str:00000000000005fa .LASF221
     /tmp/cc3jTngJ.s:4785   .debug_str:00000000000002a7 .LASF222
     /tmp/cc3jTngJ.s:4755   .debug_str:0000000000000162 .LASF223
     /tmp/cc3jTngJ.s:5121   .debug_str:0000000000000e67 .LASF224
     /tmp/cc3jTngJ.s:4905   .debug_str:00000000000006c0 .LASF225
     /tmp/cc3jTngJ.s:4769   .debug_str:0000000000000212 .LASF226
     /tmp/cc3jTngJ.s:5119   .debug_str:0000000000000e53 .LASF227
GAS LISTING /tmp/cc3jTngJ.s 			page 45


     /tmp/cc3jTngJ.s:4845   .debug_str:00000000000004ba .LASF228
     /tmp/cc3jTngJ.s:5185   .debug_str:000000000000102d .LASF229
     /tmp/cc3jTngJ.s:5215   .debug_str:0000000000001155 .LASF230
     /tmp/cc3jTngJ.s:5133   .debug_str:0000000000000e9b .LASF231
     /tmp/cc3jTngJ.s:5231   .debug_str:00000000000011b0 .LASF232
     /tmp/cc3jTngJ.s:5145   .debug_str:0000000000000ef5 .LASF233
     /tmp/cc3jTngJ.s:5007   .debug_str:0000000000000a4e .LASF234
     /tmp/cc3jTngJ.s:4927   .debug_str:00000000000007ab .LASF235
     /tmp/cc3jTngJ.s:4809   .debug_str:0000000000000385 .LASF236
     /tmp/cc3jTngJ.s:4817   .debug_str:00000000000003ca .LASF237
     /tmp/cc3jTngJ.s:5041   .debug_str:0000000000000ba5 .LASF238
     /tmp/cc3jTngJ.s:5085   .debug_str:0000000000000d53 .LASF239
     /tmp/cc3jTngJ.s:4719   .debug_str:0000000000000000 .LASF240
     /tmp/cc3jTngJ.s:4917   .debug_str:0000000000000737 .LASF241
     /tmp/cc3jTngJ.s:5263   .debug_str:0000000000001360 .LASF242
     /tmp/cc3jTngJ.s:5209   .debug_str:000000000000110c .LASF243
     /tmp/cc3jTngJ.s:5259   .debug_str:0000000000001344 .LASF244
     /tmp/cc3jTngJ.s:4825   .debug_str:0000000000000403 .LASF245
     /tmp/cc3jTngJ.s:5223   .debug_str:000000000000117b .LASF246
     /tmp/cc3jTngJ.s:5105   .debug_str:0000000000000ddd .LASF247
     /tmp/cc3jTngJ.s:4935   .debug_str:00000000000007e9 .LASF248
     /tmp/cc3jTngJ.s:5377   .debug_str:0000000000001726 .LASF249
     /tmp/cc3jTngJ.s:4735   .debug_str:0000000000000096 .LASF250
     /tmp/cc3jTngJ.s:4997   .debug_str:0000000000000a0c .LASF251
     /tmp/cc3jTngJ.s:4953   .debug_str:0000000000000874 .LASF252
     /tmp/cc3jTngJ.s:5345   .debug_str:00000000000015ef .LASF253
     /tmp/cc3jTngJ.s:5317   .debug_str:00000000000014f4 .LASF254
     /tmp/cc3jTngJ.s:5151   .debug_str:0000000000000f27 .LASF255
     /tmp/cc3jTngJ.s:5357   .debug_str:0000000000001661 .LASF256
     /tmp/cc3jTngJ.s:4757   .debug_str:0000000000000185 .LASF257
     /tmp/cc3jTngJ.s:5045   .debug_str:0000000000000bb6 .LASF258
     /tmp/cc3jTngJ.s:4775   .debug_str:000000000000025b .LASF259
     /tmp/cc3jTngJ.s:5257   .debug_str:0000000000001322 .LASF260
     /tmp/cc3jTngJ.s:5159   .debug_str:0000000000000f65 .LASF261
     /tmp/cc3jTngJ.s:4729   .debug_str:000000000000005c .LASF262
     /tmp/cc3jTngJ.s:5277   .debug_str:00000000000013c0 .LASF263
     /tmp/cc3jTngJ.s:4873   .debug_str:00000000000005b7 .LASF264
     /tmp/cc3jTngJ.s:5069   .debug_str:0000000000000cc1 .LASF265
     /tmp/cc3jTngJ.s:5221   .debug_str:0000000000001170 .LASF266
     /tmp/cc3jTngJ.s:5099   .debug_str:0000000000000dc0 .LASF267
     /tmp/cc3jTngJ.s:5291   .debug_str:0000000000001424 .LASF268
     /tmp/cc3jTngJ.s:5229   .debug_str:00000000000011a5 .LASF269
     /tmp/cc3jTngJ.s:5287   .debug_str:0000000000001405 .LASF270
     /tmp/cc3jTngJ.s:4751   .debug_str:0000000000000143 .LASF271
     /tmp/cc3jTngJ.s:5025   .debug_str:0000000000000b16 .LASF272
     /tmp/cc3jTngJ.s:5097   .debug_str:0000000000000db4 .LASF273
     /tmp/cc3jTngJ.s:5191   .debug_str:0000000000001065 .LASF274
     /tmp/cc3jTngJ.s:4867   .debug_str:0000000000000571 .LASF275
     /tmp/cc3jTngJ.s:5281   .debug_str:00000000000013e5 .LASF276
     /tmp/cc3jTngJ.s:4941   .debug_str:000000000000080c .LASF277
     /tmp/cc3jTngJ.s:5279   .debug_str:00000000000013d3 .LASF278
     /tmp/cc3jTngJ.s:5031   .debug_str:0000000000000b3f .LASF279
     /tmp/cc3jTngJ.s:4973   .debug_str:0000000000000939 .LASF280
     /tmp/cc3jTngJ.s:4787   .debug_str:00000000000002b5 .LASF281
     /tmp/cc3jTngJ.s:4861   .debug_str:0000000000000538 .LASF282
     /tmp/cc3jTngJ.s:4875   .debug_str:00000000000005cb .LASF283
     /tmp/cc3jTngJ.s:4763   .debug_str:00000000000001c2 .LASF284
GAS LISTING /tmp/cc3jTngJ.s 			page 46


     /tmp/cc3jTngJ.s:5371   .debug_str:00000000000016f3 .LASF285
     /tmp/cc3jTngJ.s:5019   .debug_str:0000000000000acc .LASF286
     /tmp/cc3jTngJ.s:5325   .debug_str:0000000000001551 .LASF287
     /tmp/cc3jTngJ.s:4961   .debug_str:00000000000008b6 .LASF288
     /tmp/cc3jTngJ.s:4987   .debug_str:0000000000000997 .LASF289
     /tmp/cc3jTngJ.s:5363   .debug_str:0000000000001690 .LASF290
     /tmp/cc3jTngJ.s:4881   .debug_str:0000000000000621 .LASF291
     /tmp/cc3jTngJ.s:5237   .debug_str:00000000000011cc .LASF292
     /tmp/cc3jTngJ.s:4895   .debug_str:0000000000000673 .LASF293
     /tmp/cc3jTngJ.s:5343   .debug_str:00000000000015e2 .LASF294
     /tmp/cc3jTngJ.s:4915   .debug_str:0000000000000726 .LASF295
     /tmp/cc3jTngJ.s:4963   .debug_str:00000000000008df .LASF296
     /tmp/cc3jTngJ.s:4989   .debug_str:00000000000009af .LASF297
     /tmp/cc3jTngJ.s:5003   .debug_str:0000000000000a3d .LASF298
     /tmp/cc3jTngJ.s:4767   .debug_str:00000000000001f6 .LASF299
     /tmp/cc3jTngJ.s:4897   .debug_str:0000000000000680 .LASF300
     /tmp/cc3jTngJ.s:5095   .debug_str:0000000000000d9c .LASF330
     /tmp/cc3jTngJ.s:5355   .debug_str:000000000000164d .LASF331
     /tmp/cc3jTngJ.s:5269   .debug_str:000000000000138c .LASF301
     /tmp/cc3jTngJ.s:5071   .debug_str:0000000000000ccb .LASF302
     /tmp/cc3jTngJ.s:5309   .debug_str:00000000000014c7 .LASF303
     /tmp/cc3jTngJ.s:5093   .debug_str:0000000000000d84 .LASF304
     /tmp/cc3jTngJ.s:4967   .debug_str:000000000000090d .LASF305
     /tmp/cc3jTngJ.s:5047   .debug_str:0000000000000bbf .LASF306
     /tmp/cc3jTngJ.s:5171   .debug_str:0000000000000fbd .LASF307
     /tmp/cc3jTngJ.s:4823   .debug_str:00000000000003f2 .LASF308
     /tmp/cc3jTngJ.s:5255   .debug_str:000000000000130d .LASF309
     /tmp/cc3jTngJ.s:4765   .debug_str:00000000000001dd .LASF310
     /tmp/cc3jTngJ.s:5375   .debug_str:0000000000001709 .LASF332
     /tmp/cc3jTngJ.s:421    .text:0000000000000204 .LFB37
     /tmp/cc3jTngJ.s:481    .text:0000000000000244 .LFE37
     /tmp/cc3jTngJ.s:439    .text:0000000000000224 .LBB44
     /tmp/cc3jTngJ.s:452    .text:000000000000022c .LBE44
     /tmp/cc3jTngJ.s:4572   .debug_loc:0000000000000000 .LLST3
     /tmp/cc3jTngJ.s:465    .text:0000000000000238 .LBB46
     /tmp/cc3jTngJ.s:477    .text:0000000000000240 .LBE46
     /tmp/cc3jTngJ.s:4581   .debug_loc:0000000000000026 .LLST4
     /tmp/cc3jTngJ.s:368    .text:00000000000001cc .LFB36
     /tmp/cc3jTngJ.s:415    .text:0000000000000204 .LFE36
     /tmp/cc3jTngJ.s:5271   .debug_str:000000000000139e .LASF311
     /tmp/cc3jTngJ.s:335    .text:00000000000001ac .LFB35
     /tmp/cc3jTngJ.s:362    .text:00000000000001cc .LFE35
     /tmp/cc3jTngJ.s:304    .text:0000000000000184 .LFB34
     /tmp/cc3jTngJ.s:329    .text:00000000000001ac .LFE34
     /tmp/cc3jTngJ.s:318    .text:000000000000019c .LVL20
     /tmp/cc3jTngJ.s:255    .text:0000000000000130 .LFB33
     /tmp/cc3jTngJ.s:298    .text:0000000000000184 .LFE33
     /tmp/cc3jTngJ.s:279    .text:0000000000000164 .LVL17
     /tmp/cc3jTngJ.s:283    .text:000000000000016c .LVL18
     /tmp/cc3jTngJ.s:287    .text:0000000000000174 .LVL19
     /tmp/cc3jTngJ.s:487    .text:0000000000000244 .LFB32
     /tmp/cc3jTngJ.s:1085   .text:00000000000004e0 .LFE32
     /tmp/cc3jTngJ.s:4743   .debug_str:0000000000000109 .LASF312
     /tmp/cc3jTngJ.s:4590   .debug_loc:000000000000004c .LLST5
     /tmp/cc3jTngJ.s:4703   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc3jTngJ.s:5245   .debug_str:00000000000012b7 .LASF313
     /tmp/cc3jTngJ.s:5179   .debug_str:0000000000001011 .LASF314
GAS LISTING /tmp/cc3jTngJ.s 			page 47


     /tmp/cc3jTngJ.s:605    .text:0000000000000304 .LBB53
     /tmp/cc3jTngJ.s:621    .text:0000000000000310 .LBE53
     /tmp/cc3jTngJ.s:625    .text:0000000000000314 .LBB55
     /tmp/cc3jTngJ.s:640    .text:0000000000000320 .LBE55
     /tmp/cc3jTngJ.s:645    .text:0000000000000324 .LBB57
     /tmp/cc3jTngJ.s:657    .text:000000000000032c .LBE57
     /tmp/cc3jTngJ.s:4617   .debug_loc:00000000000000ce .LLST6
     /tmp/cc3jTngJ.s:679    .text:0000000000000368 .LBB59
     /tmp/cc3jTngJ.s:687    .text:000000000000036c .LBE59
     /tmp/cc3jTngJ.s:4625   .debug_loc:00000000000000f2 .LLST7
     /tmp/cc3jTngJ.s:697    .text:0000000000000378 .LBB61
     /tmp/cc3jTngJ.s:708    .text:000000000000037c .LBE61
     /tmp/cc3jTngJ.s:4632   .debug_loc:0000000000000115 .LLST8
     /tmp/cc3jTngJ.s:713    .text:0000000000000380 .LBB63
     /tmp/cc3jTngJ.s:724    .text:0000000000000384 .LBE63
     /tmp/cc3jTngJ.s:4639   .debug_loc:0000000000000138 .LLST9
     /tmp/cc3jTngJ.s:673    .text:000000000000035c .LVL39
     /tmp/cc3jTngJ.s:728    .text:000000000000038c .LVL46
     /tmp/cc3jTngJ.s:757    .text:00000000000003ac .LVL47
     /tmp/cc3jTngJ.s:5129   .debug_str:0000000000000e84 .LASF315
     /tmp/cc3jTngJ.s:4646   .debug_loc:000000000000015b .LLST10
     /tmp/cc3jTngJ.s:786    .text:00000000000003c0 .LBB67
     /tmp/cc3jTngJ.s:801    .text:00000000000003cc .LBE67
     /tmp/cc3jTngJ.s:807    .text:00000000000003d4 .LBB69
     /tmp/cc3jTngJ.s:822    .text:00000000000003e0 .LBE69
     /tmp/cc3jTngJ.s:920    .text:0000000000000414 .LBB71
     /tmp/cc3jTngJ.s:931    .text:0000000000000418 .LBE71
     /tmp/cc3jTngJ.s:4653   .debug_loc:000000000000017e .LLST11
     /tmp/cc3jTngJ.s:936    .text:000000000000041c .LBB73
     /tmp/cc3jTngJ.s:947    .text:0000000000000420 .LBE73
     /tmp/cc3jTngJ.s:4660   .debug_loc:00000000000001a1 .LLST12
     /tmp/cc3jTngJ.s:913    .text:0000000000000410 .LVL53
     /tmp/cc3jTngJ.s:951    .text:0000000000000428 .LVL58
     /tmp/cc3jTngJ.s:966    .text:0000000000000434 .LVL59
     /tmp/cc3jTngJ.s:974    .text:0000000000000440 .LVL60
     /tmp/cc3jTngJ.s:982    .text:000000000000044c .LVL61
     /tmp/cc3jTngJ.s:990    .text:0000000000000458 .LVL62
     /tmp/cc3jTngJ.s:998    .text:0000000000000464 .LVL63
     /tmp/cc3jTngJ.s:1006   .text:0000000000000470 .LVL64
     /tmp/cc3jTngJ.s:1014   .text:000000000000047c .LVL65
     /tmp/cc3jTngJ.s:1022   .text:0000000000000488 .LVL66
     /tmp/cc3jTngJ.s:1030   .text:0000000000000494 .LVL67
     /tmp/cc3jTngJ.s:1038   .text:00000000000004a0 .LVL68
     /tmp/cc3jTngJ.s:1046   .text:00000000000004ac .LVL69
     /tmp/cc3jTngJ.s:1054   .text:00000000000004b8 .LVL70
     /tmp/cc3jTngJ.s:1062   .text:00000000000004c4 .LVL71
     /tmp/cc3jTngJ.s:1070   .text:00000000000004d0 .LVL72
     /tmp/cc3jTngJ.s:1078   .text:00000000000004dc .LVL73
     /tmp/cc3jTngJ.s:521    .text:000000000000027c .LBB48
     /tmp/cc3jTngJ.s:537    .text:0000000000000288 .LBE48
     /tmp/cc3jTngJ.s:554    .text:00000000000002b0 .LVL28
     /tmp/cc3jTngJ.s:569    .text:00000000000002c4 .LVL30
     /tmp/cc3jTngJ.s:590    .text:00000000000002f0 .LVL32
     /tmp/cc3jTngJ.s:594    .text:00000000000002f8 .LVL33
     /tmp/cc3jTngJ.s:596    .text:0000000000000300 .LVL34
     /tmp/cc3jTngJ.s:767    .text:00000000000003b8 .LVL49
     /tmp/cc3jTngJ.s:220    .text:0000000000000110 .LFB31
GAS LISTING /tmp/cc3jTngJ.s 			page 48


     /tmp/cc3jTngJ.s:249    .text:0000000000000130 .LFE31
     /tmp/cc3jTngJ.s:101    .text:000000000000005c .LFB30
     /tmp/cc3jTngJ.s:133    .text:000000000000007c .LFE30
     /tmp/cc3jTngJ.s:112    .text:0000000000000068 .LBB42
     /tmp/cc3jTngJ.s:124    .text:0000000000000070 .LBE42
     /tmp/cc3jTngJ.s:4667   .debug_loc:00000000000001c4 .LLST1
     /tmp/cc3jTngJ.s:63     .text:000000000000003c .LFB29
     /tmp/cc3jTngJ.s:95     .text:000000000000005c .LFE29
     /tmp/cc3jTngJ.s:74     .text:0000000000000048 .LBB40
     /tmp/cc3jTngJ.s:86     .text:0000000000000050 .LBE40
     /tmp/cc3jTngJ.s:4675   .debug_loc:00000000000001e8 .LLST0
     /tmp/cc3jTngJ.s:139    .text:000000000000007c .LFB28
     /tmp/cc3jTngJ.s:214    .text:0000000000000110 .LFE28
     /tmp/cc3jTngJ.s:4683   .debug_loc:000000000000020c .LLST2
     /tmp/cc3jTngJ.s:153    .text:0000000000000094 .LVL8
     /tmp/cc3jTngJ.s:165    .text:00000000000000a8 .LVL10
     /tmp/cc3jTngJ.s:174    .text:00000000000000c0 .LVL12
     /tmp/cc3jTngJ.s:182    .text:00000000000000d4 .LVL13
     /tmp/cc3jTngJ.s:190    .text:00000000000000e8 .LVL14
     /tmp/cc3jTngJ.s:196    .text:00000000000000f4 .LVL15
     /tmp/cc3jTngJ.s:203    .text:0000000000000100 .LVL16
     /tmp/cc3jTngJ.s:10     .text:0000000000000000 .LFB27
     /tmp/cc3jTngJ.s:57     .text:000000000000003c .LFE27
     /tmp/cc3jTngJ.s:26     .text:0000000000000018 .LBB38
     /tmp/cc3jTngJ.s:38     .text:000000000000001c .LBE38
     /tmp/cc3jTngJ.s:42     .text:0000000000000024 .LVL2
     /tmp/cc3jTngJ.s:46     .text:000000000000002c .LVL3
     /tmp/cc3jTngJ.s:4833   .debug_str:000000000000046a .LASF333
     /tmp/cc3jTngJ.s:5123   .debug_str:0000000000000e72 .LASF316
     /tmp/cc3jTngJ.s:5331   .debug_str:0000000000001580 .LASF317
     /tmp/cc3jTngJ.s:5109   .debug_str:0000000000000e09 .LASF318
     /tmp/cc3jTngJ.s:5091   .debug_str:0000000000000d7b .LASF320
     /tmp/cc3jTngJ.s:5347   .debug_str:0000000000001612 .LASF319
     /tmp/cc3jTngJ.s:4913   .debug_str:0000000000000711 .LASF321
     /tmp/cc3jTngJ.s:4995   .debug_str:0000000000000a01 .LASF322
     /tmp/cc3jTngJ.s:4815   .debug_str:00000000000003bc .LASF323
     /tmp/cc3jTngJ.s:5027   .debug_str:0000000000000b22 .LASF324
     /tmp/cc3jTngJ.s:5295   .debug_str:000000000000143e .LASF325
     /tmp/cc3jTngJ.s:438    .text:0000000000000224 .LVL23
     /tmp/cc3jTngJ.s:448    .text:000000000000022c .LVL24
     /tmp/cc3jTngJ.s:464    .text:0000000000000238 .LVL25
     /tmp/cc3jTngJ.s:474    .text:0000000000000240 .LVL26
     /tmp/cc3jTngJ.s:535    .text:0000000000000288 .LVL27
     /tmp/cc3jTngJ.s:557    .text:00000000000002b4 .LVL29
     /tmp/cc3jTngJ.s:572    .text:00000000000002c8 .LVL31
     /tmp/cc3jTngJ.s:599    .text:0000000000000304 .LVL35
     /tmp/cc3jTngJ.s:614    .text:0000000000000308 .LVL36
     /tmp/cc3jTngJ.s:759    .text:00000000000003b0 .LVL48
     /tmp/cc3jTngJ.s:770    .text:00000000000003bc .LVL50
     /tmp/cc3jTngJ.s:783    .text:00000000000003c0 .LVL51
     /tmp/cc3jTngJ.s:644    .text:0000000000000324 .LVL37
     /tmp/cc3jTngJ.s:654    .text:000000000000032c .LVL38
     /tmp/cc3jTngJ.s:678    .text:0000000000000368 .LVL40
     /tmp/cc3jTngJ.s:685    .text:000000000000036c .LVL41
     /tmp/cc3jTngJ.s:696    .text:0000000000000378 .LVL42
     /tmp/cc3jTngJ.s:705    .text:000000000000037c .LVL43
     /tmp/cc3jTngJ.s:712    .text:0000000000000380 .LVL44
GAS LISTING /tmp/cc3jTngJ.s 			page 49


     /tmp/cc3jTngJ.s:721    .text:0000000000000384 .LVL45
     /tmp/cc3jTngJ.s:829    .text:00000000000003f0 .LVL52
     /tmp/cc3jTngJ.s:919    .text:0000000000000414 .LVL54
     /tmp/cc3jTngJ.s:928    .text:0000000000000418 .LVL55
     /tmp/cc3jTngJ.s:935    .text:000000000000041c .LVL56
     /tmp/cc3jTngJ.s:944    .text:0000000000000420 .LVL57
     /tmp/cc3jTngJ.s:111    .text:0000000000000068 .LVL6
     /tmp/cc3jTngJ.s:121    .text:0000000000000070 .LVL7
     /tmp/cc3jTngJ.s:73     .text:0000000000000048 .LVL4
     /tmp/cc3jTngJ.s:83     .text:0000000000000050 .LVL5
     /tmp/cc3jTngJ.s:172    .text:00000000000000b8 .LVL11
     /tmp/cc3jTngJ.s:1118   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc3jTngJ.s:603    .text:0000000000000304 .LBB52
     /tmp/cc3jTngJ.s:731    .text:000000000000038c .LBE52
     /tmp/cc3jTngJ.s:750    .text:00000000000003a0 .LBB65
     /tmp/cc3jTngJ.s:761    .text:00000000000003b0 .LBE65
     /tmp/cc3jTngJ.s:775    .text:00000000000003bc .LBB66
     /tmp/cc3jTngJ.s:953    .text:0000000000000428 .LBE66
     /tmp/cc3jTngJ.s:961    .text:000000000000042c .LBB75
     /tmp/cc3jTngJ.s:1081   .text:00000000000004e0 .LBE75

UNDEFINED SYMBOLS
_ZN5Riscv14supervisorTrapEv
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_ZN9Scheduler3getEv
_ZN3PCB10consolePCBE
_ZN9Scheduler3putEP3PCB
_ZN8KConsole11pendingGetcE
_ZN3PCB10isFinishedEv
_Z15thread_dispatchv
_Z20buddyOnlyAllocsTest2v
_Z8userMainv
_ZN3PCB7runningE
_ZN3PCB10savedRegA4E
_ZN3PCB17threadExitHandlerEv
_ZN8KConsole24getCharactersFromConsoleEv
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN3PCB19threadDelPCBHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_ZN8KConsole14getCharHandlerEv
GAS LISTING /tmp/cc3jTngJ.s 			page 50


