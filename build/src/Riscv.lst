GAS LISTING /tmp/ccBw2xDq.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv20initMemoryAllocationEv
   9              	_ZN5Riscv20initMemoryAllocationEv:
  10              	.LFB27:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 4/27/22.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/syscall_cpp.hpp"
   9:src/Riscv.cpp **** #include "../h/SleepPCBList.hpp"
  10:src/Riscv.cpp **** #include "../h/KConsole.hpp"
  11:src/Riscv.cpp **** #include "../h/Scheduler.hpp"
  12:src/Riscv.cpp **** #include "../h/buddyTests.hpp"
  13:src/Riscv.cpp **** #include "../h/slabTests.hpp"
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** uint64 Riscv::totalTime = 0;
  16:src/Riscv.cpp **** bool Riscv::finishSystem = false;
  17:src/Riscv.cpp **** bool Riscv::kernelMainCalled = false;
  18:src/Riscv.cpp **** kmem_cache_t * Riscv::pcbCache = nullptr;
  19:src/Riscv.cpp **** kmem_cache_t * Riscv::semaphoreCache = nullptr;
  20:src/Riscv.cpp **** 
  21:src/Riscv.cpp **** void Riscv::initMemoryAllocation()
  22:src/Riscv.cpp **** {
  12              		.loc 1 22 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  23:src/Riscv.cpp ****     size_t totalNumOfBytes = (size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1;
  22              		.loc 1 23 5
  23              		.loc 1 23 52 is_stmt 0
  24 0010 97070000 		la	a5,HEAP_START_ADDR
  24      83B70700 
  25 0018 03B50700 		ld	a0,0(a5)
  26 001c 97070000 		la	a5,HEAP_END_ADDR
  26      83B70700 
  27 0024 83B70700 		ld	a5,0(a5)
  28 0028 B387A740 		sub	a5,a5,a0
  29              		.loc 1 23 12
  30 002c 93871700 		addi	a5,a5,1
  31              	.LVL0:
  24:src/Riscv.cpp ****     size_t bytesForKernel = totalNumOfBytes / 10; //TODO change this if needed
  32              		.loc 1 24 5 is_stmt 1
GAS LISTING /tmp/ccBw2xDq.s 			page 2


  33              		.loc 1 24 12 is_stmt 0
  34 0030 1307A000 		li	a4,10
  35 0034 B3D7E702 		divu	a5,a5,a4
  36              	.LVL1:
  25:src/Riscv.cpp ****     size_t numOfBlocks = (bytesForKernel + BLOCK_NUM_OF_BYTES - 1) / BLOCK_NUM_OF_BYTES;
  37              		.loc 1 25 5 is_stmt 1
  38              		.loc 1 25 63 is_stmt 0
  39 0038 37170000 		li	a4,4096
  40 003c 1307F7FF 		addi	a4,a4,-1
  41 0040 B387E700 		add	a5,a5,a4
  42              	.LVL2:
  26:src/Riscv.cpp **** 
  27:src/Riscv.cpp ****     void* newStartAddr = (void*)((size_t)HEAP_START_ADDR + numOfBlocks*BLOCK_NUM_OF_BYTES);
  43              		.loc 1 27 5 is_stmt 1
  44              		.loc 1 27 71 is_stmt 0
  45 0044 37F7FFFF 		li	a4,-4096
  46 0048 B3F7E700 		and	a5,a5,a4
  47              	.LVL3:
  28:src/Riscv.cpp ****     MemoryAllocator::initMemory(newStartAddr);
  48              		.loc 1 28 5 is_stmt 1
  49              		.loc 1 28 32 is_stmt 0
  50 004c 3305F500 		add	a0,a0,a5
  51              	.LVL4:
  52 0050 97000000 		call	_ZN15MemoryAllocator10initMemoryEPv@plt
  52      E7800000 
  53              	.LVL5:
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp ****     //kmem_init((void*)HEAP_START_ADDR, numOfBlocks);
  31:src/Riscv.cpp ****     //pcbCache = kmem_cache_create("Cache of PCBs", sizeof(PCB), nullptr, nullptr);
  32:src/Riscv.cpp ****     //semaphoreCache = kmem_cache_create("Cache of KSemaphore", sizeof(KSemaphore), nullptr, nullpt
  33:src/Riscv.cpp **** }
  54              		.loc 1 33 1
  55 0058 83308100 		ld	ra,8(sp)
  56              		.cfi_restore 1
  57 005c 03340100 		ld	s0,0(sp)
  58              		.cfi_restore 8
  59              		.cfi_def_cfa 2, 16
  60 0060 13010101 		addi	sp,sp,16
  61              		.cfi_def_cfa_offset 0
  62 0064 67800000 		jr	ra
  63              		.cfi_endproc
  64              	.LFE27:
  66              		.section	.rodata.str1.8,"aMS",@progbits,1
  67              		.align	3
  68              	.LC0:
  69 0000 43616368 		.string	"Cache of PCBs"
  69      65206F66 
  69      20504342 
  69      7300
  70 000e 0000     		.align	3
  71              	.LC1:
  72 0010 43616368 		.string	"Cache of KSemaphore"
  72      65206F66 
  72      204B5365 
  72      6D617068 
  72      6F726500 
  73              		.text
GAS LISTING /tmp/ccBw2xDq.s 			page 3


  74              		.align	2
  75              		.globl	_ZN5Riscv10initSystemEv
  77              	_ZN5Riscv10initSystemEv:
  78              	.LFB28:
  34:src/Riscv.cpp **** 
  35:src/Riscv.cpp **** void Riscv::initSystem()
  36:src/Riscv.cpp **** {
  79              		.loc 1 36 1 is_stmt 1
  80              		.cfi_startproc
  81 0068 130101FE 		addi	sp,sp,-32
  82              		.cfi_def_cfa_offset 32
  83 006c 233C1100 		sd	ra,24(sp)
  84 0070 23388100 		sd	s0,16(sp)
  85 0074 23349100 		sd	s1,8(sp)
  86 0078 23302101 		sd	s2,0(sp)
  87              		.cfi_offset 1, -8
  88              		.cfi_offset 8, -16
  89              		.cfi_offset 9, -24
  90              		.cfi_offset 18, -32
  91 007c 13040102 		addi	s0,sp,32
  92              		.cfi_def_cfa 8, 0
  37:src/Riscv.cpp ****     w_stvec((uint64)&Riscv::supervisorTrap);
  93              		.loc 1 37 5
  94              		.loc 1 37 12 is_stmt 0
  95 0080 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  95      83B70700 
  96              	.LVL6:
  97              	.LBB38:
  98              	.LBB39:
  99              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 4/27/22.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_0_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_0_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../test/userMain.hpp"
  10:src/../h/Riscv.hpp **** #include "slabAllocator.hpp"
  11:src/../h/Riscv.hpp **** 
  12:src/../h/Riscv.hpp **** class Riscv
  13:src/../h/Riscv.hpp **** {
  14:src/../h/Riscv.hpp **** public:
  15:src/../h/Riscv.hpp ****     static void kernelMain();
  16:src/../h/Riscv.hpp **** private:
  17:src/../h/Riscv.hpp ****     static bool kernelMainCalled;
  18:src/../h/Riscv.hpp ****     static void changePrivMode();
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp ****     static void initSystem();
  21:src/../h/Riscv.hpp ****     static void endSystem();
  22:src/../h/Riscv.hpp ****     static void initMemoryAllocation();
  23:src/../h/Riscv.hpp **** 
  24:src/../h/Riscv.hpp ****     static void userMainWrapper(void* p);
  25:src/../h/Riscv.hpp **** 
  26:src/../h/Riscv.hpp ****     static void enableInterrupts();
  27:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccBw2xDq.s 			page 4


  28:src/../h/Riscv.hpp ****     static void disableTimerInterrupts();
  29:src/../h/Riscv.hpp **** 
  30:src/../h/Riscv.hpp ****     static void disableInterrupts();
  31:src/../h/Riscv.hpp **** 
  32:src/../h/Riscv.hpp ****     static void pushRegisters();
  33:src/../h/Riscv.hpp ****     static void popRegisters();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static uint64 r_scause();
  36:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  37:src/../h/Riscv.hpp **** 
  38:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  39:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  42:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  43:src/../h/Riscv.hpp **** 
  44:src/../h/Riscv.hpp ****     static uint64 r_stval();
  45:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     static bool finishSystem;
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     enum BitMaskSip
  50:src/../h/Riscv.hpp ****     {
  51:src/../h/Riscv.hpp ****         SIP_SSIP = (1 << 1),
  52:src/../h/Riscv.hpp ****         SIP_STIP = (1 << 5),
  53:src/../h/Riscv.hpp ****         SIP_SEIP = (1 << 9),
  54:src/../h/Riscv.hpp ****     };
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  57:src/../h/Riscv.hpp **** 
  58:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp ****     static uint64 r_sip();
  61:src/../h/Riscv.hpp **** 
  62:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  63:src/../h/Riscv.hpp **** 
  64:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  65:src/../h/Riscv.hpp ****     {
  66:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  67:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  68:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  69:src/../h/Riscv.hpp ****     };
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  74:src/../h/Riscv.hpp **** 
  75:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp ****     static void mc_sie(uint64 mask);
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  80:src/../h/Riscv.hpp **** 
  81:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  82:src/../h/Riscv.hpp **** 
  83:src/../h/Riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  84:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccBw2xDq.s 			page 5


  85:src/../h/Riscv.hpp ****     static uint64 r_sie();
  86:src/../h/Riscv.hpp ****     static void w_sie(uint64 sie);
  87:src/../h/Riscv.hpp ****     static void popSppSpie();
  88:src/../h/Riscv.hpp **** 
  89:src/../h/Riscv.hpp ****     static void supervisorTrap();
  90:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  91:src/../h/Riscv.hpp **** 
  92:src/../h/Riscv.hpp ****     static const uint64 bntOne = 1UL << 63;;
  93:src/../h/Riscv.hpp ****     static const uint64 bntZero = 0UL;
  94:src/../h/Riscv.hpp ****     static const uint64 timerInterrupt = bntOne + 1UL;
  95:src/../h/Riscv.hpp ****     static const uint64 hwInterrupt = bntOne + 9UL;
  96:src/../h/Riscv.hpp ****     static const uint64 operationInterrupt = bntZero + 2UL;
  97:src/../h/Riscv.hpp ****     static const uint64 addrReadInterrupt = bntZero + 5UL;
  98:src/../h/Riscv.hpp ****     static const uint64 addrWriteInterrupt = bntZero + 7UL;
  99:src/../h/Riscv.hpp ****     static const uint64 ecallUserInterrupt = bntZero + 8UL;
 100:src/../h/Riscv.hpp ****     static const uint64 ecallSystemInterupt = bntZero + 9UL;
 101:src/../h/Riscv.hpp **** 
 102:src/../h/Riscv.hpp ****     static uint64 totalTime;
 103:src/../h/Riscv.hpp **** 
 104:src/../h/Riscv.hpp ****     static kmem_cache_t * pcbCache;
 105:src/../h/Riscv.hpp ****     static kmem_cache_t* semaphoreCache;
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp ****     friend class PCB;
 108:src/../h/Riscv.hpp ****     friend class Scheduler;
 109:src/../h/Riscv.hpp ****     friend class SleepPCBList;
 110:src/../h/Riscv.hpp ****     friend class KSemaphore;
 111:src/../h/Riscv.hpp ****     friend class KConsole;
 112:src/../h/Riscv.hpp ****     friend class MemoryAllocator;
 113:src/../h/Riscv.hpp **** };
 114:src/../h/Riscv.hpp **** 
 115:src/../h/Riscv.hpp **** inline void Riscv::mc_sie(uint64 mask)
 116:src/../h/Riscv.hpp **** {
 117:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sie, %0" : :"r"(mask));
 118:src/../h/Riscv.hpp **** }
 119:src/../h/Riscv.hpp **** 
 120:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
 121:src/../h/Riscv.hpp ****     uint64 volatile scause;
 122:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 123:src/../h/Riscv.hpp ****     return scause;
 124:src/../h/Riscv.hpp **** }
 125:src/../h/Riscv.hpp **** 
 126:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
 127:src/../h/Riscv.hpp ****     __asm__ volatile("csrw scause, %0" : :"r"(scause));
 128:src/../h/Riscv.hpp **** }
 129:src/../h/Riscv.hpp **** 
 130:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
 131:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 132:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 133:src/../h/Riscv.hpp ****     return sepc;
 134:src/../h/Riscv.hpp **** }
 135:src/../h/Riscv.hpp **** 
 136:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
 137:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sepc, %0" : :"r"(sepc));
 138:src/../h/Riscv.hpp **** }
 139:src/../h/Riscv.hpp **** 
 140:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 141:src/../h/Riscv.hpp ****     uint64 volatile stvec;
GAS LISTING /tmp/ccBw2xDq.s 			page 6


 142:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stvec" : "=r"(stvec));
 143:src/../h/Riscv.hpp ****     return stvec;
 144:src/../h/Riscv.hpp **** }
 145:src/../h/Riscv.hpp **** 
 146:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 147:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stvec, %0" : :"r"(stvec));
 100              		.loc 2 147 5 is_stmt 1
 101              		.loc 2 147 53 is_stmt 0
 102              	#APP
 103              	# 147 "src/../h/Riscv.hpp" 1
 148              	}
 104              		csrw stvec, a5
 105              	# 0 "" 2
 106              	.LVL7:
 107              	#NO_APP
 108              	.LBE39:
 109              	.LBE38:
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp ****     size_t totalNumOfBytes = (size_t)HEAP_END_ADDR - (size_t)HEAP_START_ADDR + 1;
 110              		.loc 1 39 5 is_stmt 1
 111              		.loc 1 39 52 is_stmt 0
 112 008c 97040000 		la	s1,HEAP_START_ADDR
 112      83B40400 
 113 0094 03B50400 		ld	a0,0(s1)
 114 0098 97070000 		la	a5,HEAP_END_ADDR
 114      83B70700 
 115 00a0 83B70700 		ld	a5,0(a5)
 116 00a4 B387A740 		sub	a5,a5,a0
 117              		.loc 1 39 12
 118 00a8 93871700 		addi	a5,a5,1
 119              	.LVL8:
  40:src/Riscv.cpp ****     size_t bytesForKernel = totalNumOfBytes / 10; //TODO change this if needed
 120              		.loc 1 40 5 is_stmt 1
 121              		.loc 1 40 12 is_stmt 0
 122 00ac 1307A000 		li	a4,10
 123 00b0 B3D7E702 		divu	a5,a5,a4
 124              	.LVL9:
  41:src/Riscv.cpp ****     size_t numOfBlocks = (bytesForKernel + BLOCK_NUM_OF_BYTES - 1) / BLOCK_NUM_OF_BYTES;
 125              		.loc 1 41 5 is_stmt 1
 126              		.loc 1 41 63 is_stmt 0
 127 00b4 37170000 		li	a4,4096
 128 00b8 1307F7FF 		addi	a4,a4,-1
 129 00bc B387E700 		add	a5,a5,a4
 130              	.LVL10:
 131              		.loc 1 41 12
 132 00c0 13D9C700 		srli	s2,a5,12
 133              	.LVL11:
  42:src/Riscv.cpp ****     void* newStartAddr = (void*)((size_t)HEAP_START_ADDR + numOfBlocks*BLOCK_NUM_OF_BYTES);
 134              		.loc 1 42 5 is_stmt 1
 135              		.loc 1 42 71 is_stmt 0
 136 00c4 37F7FFFF 		li	a4,-4096
 137 00c8 B3F7E700 		and	a5,a5,a4
 138              	.LVL12:
  43:src/Riscv.cpp ****     MemoryAllocator::initMemory(newStartAddr);
 139              		.loc 1 43 5 is_stmt 1
 140              		.loc 1 43 32 is_stmt 0
 141 00cc 3305F500 		add	a0,a0,a5
GAS LISTING /tmp/ccBw2xDq.s 			page 7


 142              	.LVL13:
 143 00d0 97000000 		call	_ZN15MemoryAllocator10initMemoryEPv@plt
 143      E7800000 
 144              	.LVL14:
  44:src/Riscv.cpp **** 
  45:src/Riscv.cpp ****     kmem_init((void*)HEAP_START_ADDR, numOfBlocks);
 145              		.loc 1 45 5 is_stmt 1
 146              		.loc 1 45 14 is_stmt 0
 147 00d8 9B050900 		sext.w	a1,s2
 148 00dc 03B50400 		ld	a0,0(s1)
 149 00e0 97000000 		call	_Z9kmem_initPvi@plt
 149      E7800000 
 150              	.LVL15:
  46:src/Riscv.cpp ****     pcbCache = kmem_cache_create("Cache of PCBs", sizeof(PCB), nullptr, nullptr);
 151              		.loc 1 46 5 is_stmt 1
 152              		.loc 1 46 33 is_stmt 0
 153 00e8 93060000 		li	a3,0
 154 00ec 13060000 		li	a2,0
 155 00f0 93050006 		li	a1,96
 156 00f4 17050000 		lla	a0,.LC0
 156      13050500 
 157 00fc 97000000 		call	_Z17kmem_cache_createPKcmPFvPvES3_@plt
 157      E7800000 
 158              	.LVL16:
 159              		.loc 1 46 14
 160 0104 97040000 		lla	s1,.LANCHOR0
 160      93840400 
 161 010c 23B0A400 		sd	a0,0(s1)
  47:src/Riscv.cpp ****     semaphoreCache = kmem_cache_create("Cache of KSemaphore", sizeof(KSemaphore), nullptr, nullptr)
 162              		.loc 1 47 5 is_stmt 1
 163              		.loc 1 47 39 is_stmt 0
 164 0110 93060000 		li	a3,0
 165 0114 13060000 		li	a2,0
 166 0118 93058001 		li	a1,24
 167 011c 17050000 		lla	a0,.LC1
 167      13050500 
 168 0124 97000000 		call	_Z17kmem_cache_createPKcmPFvPvES3_@plt
 168      E7800000 
 169              	.LVL17:
 170              		.loc 1 47 20
 171 012c 23B4A400 		sd	a0,8(s1)
  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp ****     //initMemoryAllocation();
  50:src/Riscv.cpp ****     PCB::initialize();
 172              		.loc 1 50 5 is_stmt 1
 173              		.loc 1 50 20 is_stmt 0
 174 0130 97000000 		call	_ZN3PCB10initializeEv@plt
 174      E7800000 
 175              	.LVL18:
  51:src/Riscv.cpp ****     KConsole::initialize();
 176              		.loc 1 51 5 is_stmt 1
 177              		.loc 1 51 25 is_stmt 0
 178 0138 97000000 		call	_ZN8KConsole10initializeEv@plt
 178      E7800000 
 179              	.LVL19:
  52:src/Riscv.cpp **** 
  53:src/Riscv.cpp **** }
GAS LISTING /tmp/ccBw2xDq.s 			page 8


 180              		.loc 1 53 1
 181 0140 83308101 		ld	ra,24(sp)
 182              		.cfi_restore 1
 183 0144 03340101 		ld	s0,16(sp)
 184              		.cfi_restore 8
 185              		.cfi_def_cfa 2, 32
 186 0148 83348100 		ld	s1,8(sp)
 187              		.cfi_restore 9
 188 014c 03390100 		ld	s2,0(sp)
 189              		.cfi_restore 18
 190              	.LVL20:
 191 0150 13010102 		addi	sp,sp,32
 192              		.cfi_def_cfa_offset 0
 193 0154 67800000 		jr	ra
 194              		.cfi_endproc
 195              	.LFE28:
 197              		.align	2
 198              		.globl	_ZN5Riscv16enableInterruptsEv
 200              	_ZN5Riscv16enableInterruptsEv:
 201              	.LFB30:
  54:src/Riscv.cpp **** 
  55:src/Riscv.cpp **** void Riscv::endSystem()
  56:src/Riscv.cpp **** {
  57:src/Riscv.cpp ****     disableInterrupts();
  58:src/Riscv.cpp ****     finishSystem = true;
  59:src/Riscv.cpp ****     PCB* pcb = 0;
  60:src/Riscv.cpp ****     while(true)
  61:src/Riscv.cpp ****     {
  62:src/Riscv.cpp ****         pcb = Scheduler::get();
  63:src/Riscv.cpp ****         if(pcb == 0) break;
  64:src/Riscv.cpp ****     }
  65:src/Riscv.cpp ****     Scheduler::put(PCB::consolePCB);
  66:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
  67:src/Riscv.cpp ****     enableInterrupts();
  68:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
  69:src/Riscv.cpp ****     {
  70:src/Riscv.cpp ****         thread_dispatch();
  71:src/Riscv.cpp ****     }
  72:src/Riscv.cpp ****     disableInterrupts();
  73:src/Riscv.cpp **** }
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp **** void Riscv::enableInterrupts() {
 202              		.loc 1 75 32 is_stmt 1
 203              		.cfi_startproc
 204 0158 130101FF 		addi	sp,sp,-16
 205              		.cfi_def_cfa_offset 16
 206 015c 23348100 		sd	s0,8(sp)
 207              		.cfi_offset 8, -8
 208 0160 13040101 		addi	s0,sp,16
 209              		.cfi_def_cfa 8, 0
  76:src/Riscv.cpp ****     ms_sstatus(Riscv::SSTATUS_SIE);
 210              		.loc 1 76 5
 211              	.LVL21:
 212              	.LBB40:
 213              	.LBB41:
 149:src/../h/Riscv.hpp **** 
 150:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
GAS LISTING /tmp/ccBw2xDq.s 			page 9


 151:src/../h/Riscv.hpp ****     uint64 volatile stval;
 152:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, stval" : "=r"(stval));
 153:src/../h/Riscv.hpp ****     return stval;
 154:src/../h/Riscv.hpp **** }
 155:src/../h/Riscv.hpp **** 
 156:src/../h/Riscv.hpp **** inline void Riscv::w_sie(uint64 sie)
 157:src/../h/Riscv.hpp **** {
 158:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sie, %0" : :"r"(sie));
 159:src/../h/Riscv.hpp **** }
 160:src/../h/Riscv.hpp **** 
 161:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 162:src/../h/Riscv.hpp ****     __asm__ volatile("csrw stval, %0" : :"r"(stval));
 163:src/../h/Riscv.hpp **** }
 164:src/../h/Riscv.hpp **** 
 165:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 166:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sip, %0" : :"r"(mask));
 167:src/../h/Riscv.hpp **** }
 168:src/../h/Riscv.hpp **** 
 169:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 170:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %0" : :"r"(mask));
 171:src/../h/Riscv.hpp **** }
 172:src/../h/Riscv.hpp **** 
 173:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sie()
 174:src/../h/Riscv.hpp **** {
 175:src/../h/Riscv.hpp ****     uint64 volatile sie;
 176:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sie));
 177:src/../h/Riscv.hpp ****     return sie;
 178:src/../h/Riscv.hpp **** }
 179:src/../h/Riscv.hpp **** 
 180:src/../h/Riscv.hpp **** inline void Riscv::ms_sie(uint64 mask)
 181:src/../h/Riscv.hpp **** {
 182:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sie, %0" : :"r"(mask));
 183:src/../h/Riscv.hpp **** }
 184:src/../h/Riscv.hpp **** 
 185:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 186:src/../h/Riscv.hpp ****     uint64 volatile sip;
 187:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sip" : "=r"(sip));
 188:src/../h/Riscv.hpp ****     return sip;
 189:src/../h/Riscv.hpp **** }
 190:src/../h/Riscv.hpp **** 
 191:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 192:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sip, %0" : :"r"(sip));
 193:src/../h/Riscv.hpp **** }
 194:src/../h/Riscv.hpp **** 
 195:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 196:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus, %0" : :"r"(mask));
 214              		.loc 2 196 5
 215              		.loc 2 196 54 is_stmt 0
 216 0164 93072000 		li	a5,2
 217              	#APP
 218              	# 196 "src/../h/Riscv.hpp" 1
 197              	}
 219              		csrs sstatus, a5
 220              	# 0 "" 2
 221              	.LVL22:
 222              	#NO_APP
 223              	.LBE41:
GAS LISTING /tmp/ccBw2xDq.s 			page 10


 224              	.LBE40:
  77:src/Riscv.cpp **** }
 225              		.loc 1 77 1
 226 016c 03348100 		ld	s0,8(sp)
 227              		.cfi_restore 8
 228              		.cfi_def_cfa 2, 16
 229 0170 13010101 		addi	sp,sp,16
 230              		.cfi_def_cfa_offset 0
 231 0174 67800000 		jr	ra
 232              		.cfi_endproc
 233              	.LFE30:
 235              		.align	2
 236              		.globl	_ZN5Riscv17disableInterruptsEv
 238              	_ZN5Riscv17disableInterruptsEv:
 239              	.LFB31:
  78:src/Riscv.cpp **** 
  79:src/Riscv.cpp **** void Riscv::disableInterrupts()
  80:src/Riscv.cpp **** {
 240              		.loc 1 80 1 is_stmt 1
 241              		.cfi_startproc
 242 0178 130101FF 		addi	sp,sp,-16
 243              		.cfi_def_cfa_offset 16
 244 017c 23348100 		sd	s0,8(sp)
 245              		.cfi_offset 8, -8
 246 0180 13040101 		addi	s0,sp,16
 247              		.cfi_def_cfa 8, 0
  81:src/Riscv.cpp ****     mc_sstatus(Riscv::SSTATUS_SIE);
 248              		.loc 1 81 5
 249              	.LVL23:
 250              	.LBB42:
 251              	.LBB43:
 198:src/../h/Riscv.hpp **** 
 199:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 200:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus, %0" : :"r"(mask));
 252              		.loc 2 200 5
 253              		.loc 2 200 54 is_stmt 0
 254 0184 93072000 		li	a5,2
 255              	#APP
 256              	# 200 "src/../h/Riscv.hpp" 1
 201              	}
 257              		csrc sstatus, a5
 258              	# 0 "" 2
 259              	.LVL24:
 260              	#NO_APP
 261              	.LBE43:
 262              	.LBE42:
  82:src/Riscv.cpp **** }
 263              		.loc 1 82 1
 264 018c 03348100 		ld	s0,8(sp)
 265              		.cfi_restore 8
 266              		.cfi_def_cfa 2, 16
 267 0190 13010101 		addi	sp,sp,16
 268              		.cfi_def_cfa_offset 0
 269 0194 67800000 		jr	ra
 270              		.cfi_endproc
 271              	.LFE31:
 273              		.align	2
GAS LISTING /tmp/ccBw2xDq.s 			page 11


 274              		.globl	_ZN5Riscv9endSystemEv
 276              	_ZN5Riscv9endSystemEv:
 277              	.LFB29:
  56:src/Riscv.cpp ****     disableInterrupts();
 278              		.loc 1 56 1 is_stmt 1
 279              		.cfi_startproc
 280 0198 130101FF 		addi	sp,sp,-16
 281              		.cfi_def_cfa_offset 16
 282 019c 23341100 		sd	ra,8(sp)
 283 01a0 23308100 		sd	s0,0(sp)
 284              		.cfi_offset 1, -8
 285              		.cfi_offset 8, -16
 286 01a4 13040101 		addi	s0,sp,16
 287              		.cfi_def_cfa 8, 0
  57:src/Riscv.cpp ****     finishSystem = true;
 288              		.loc 1 57 5
  57:src/Riscv.cpp ****     finishSystem = true;
 289              		.loc 1 57 22 is_stmt 0
 290 01a8 97000000 		call	_ZN5Riscv17disableInterruptsEv
 290      E7800000 
 291              	.LVL25:
  58:src/Riscv.cpp ****     PCB* pcb = 0;
 292              		.loc 1 58 5 is_stmt 1
  58:src/Riscv.cpp ****     PCB* pcb = 0;
 293              		.loc 1 58 18 is_stmt 0
 294 01b0 93071000 		li	a5,1
 295 01b4 17070000 		sb	a5,.LANCHOR0+16,a4
 295      2300F700 
  59:src/Riscv.cpp ****     while(true)
 296              		.loc 1 59 5 is_stmt 1
 297              	.LVL26:
 298              	.L10:
  60:src/Riscv.cpp ****     {
 299              		.loc 1 60 5
  62:src/Riscv.cpp ****         if(pcb == 0) break;
 300              		.loc 1 62 9
  62:src/Riscv.cpp ****         if(pcb == 0) break;
 301              		.loc 1 62 29 is_stmt 0
 302 01bc 97000000 		call	_ZN9Scheduler3getEv@plt
 302      E7800000 
 303              	.LVL27:
  63:src/Riscv.cpp ****     }
 304              		.loc 1 63 9 is_stmt 1
 305 01c4 E31C05FE 		bnez	a0,.L10
  65:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 306              		.loc 1 65 5
  65:src/Riscv.cpp ****     KConsole::pendingGetc = 0;
 307              		.loc 1 65 19 is_stmt 0
 308 01c8 97070000 		la	a5,_ZN3PCB10consolePCBE
 308      83B70700 
 309 01d0 03B50700 		ld	a0,0(a5)
 310              	.LVL28:
 311 01d4 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 311      E7800000 
 312              	.LVL29:
  66:src/Riscv.cpp ****     enableInterrupts();
 313              		.loc 1 66 5 is_stmt 1
GAS LISTING /tmp/ccBw2xDq.s 			page 12


  66:src/Riscv.cpp ****     enableInterrupts();
 314              		.loc 1 66 27 is_stmt 0
 315 01dc 97070000 		la	a5,_ZN8KConsole11pendingGetcE
 315      83B70700 
 316 01e4 23B00700 		sd	zero,0(a5)
  67:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 317              		.loc 1 67 5 is_stmt 1
  67:src/Riscv.cpp ****     while(!PCB::consolePCB->isFinished())
 318              		.loc 1 67 21 is_stmt 0
 319 01e8 97000000 		call	_ZN5Riscv16enableInterruptsEv
 319      E7800000 
 320              	.LVL30:
 321              	.L12:
  68:src/Riscv.cpp ****     {
 322              		.loc 1 68 5 is_stmt 1
  68:src/Riscv.cpp ****     {
 323              		.loc 1 68 11
  68:src/Riscv.cpp ****     {
 324              		.loc 1 68 39 is_stmt 0
 325 01f0 97070000 		la	a5,_ZN3PCB10consolePCBE
 325      83B70700 
 326 01f8 03B50700 		ld	a0,0(a5)
 327 01fc 97000000 		call	_ZN3PCB10isFinishedEv@plt
 327      E7800000 
 328              	.LVL31:
  68:src/Riscv.cpp ****     {
 329              		.loc 1 68 11
 330 0204 63180500 		bnez	a0,.L11
  70:src/Riscv.cpp ****     }
 331              		.loc 1 70 9 is_stmt 1
  70:src/Riscv.cpp ****     }
 332              		.loc 1 70 24 is_stmt 0
 333 0208 97000000 		call	_Z15thread_dispatchv@plt
 333      E7800000 
 334              	.LVL32:
  68:src/Riscv.cpp ****     {
 335              		.loc 1 68 5
 336 0210 6FF01FFE 		j	.L12
 337              	.L11:
  72:src/Riscv.cpp **** }
 338              		.loc 1 72 5 is_stmt 1
  72:src/Riscv.cpp **** }
 339              		.loc 1 72 22 is_stmt 0
 340 0214 97000000 		call	_ZN5Riscv17disableInterruptsEv
 340      E7800000 
 341              	.LVL33:
  73:src/Riscv.cpp **** 
 342              		.loc 1 73 1
 343 021c 83308100 		ld	ra,8(sp)
 344              		.cfi_restore 1
 345 0220 03340100 		ld	s0,0(sp)
 346              		.cfi_restore 8
 347              		.cfi_def_cfa 2, 16
 348 0224 13010101 		addi	sp,sp,16
 349              		.cfi_def_cfa_offset 0
 350 0228 67800000 		jr	ra
 351              		.cfi_endproc
GAS LISTING /tmp/ccBw2xDq.s 			page 13


 352              	.LFE29:
 354              		.align	2
 355              		.globl	_ZN5Riscv10popSppSpieEv
 357              	_ZN5Riscv10popSppSpieEv:
 358              	.LFB32:
  83:src/Riscv.cpp **** 
  84:src/Riscv.cpp **** void Riscv::popSppSpie()
  85:src/Riscv.cpp **** {
 359              		.loc 1 85 1 is_stmt 1
 360              		.cfi_startproc
 361 022c 130101FF 		addi	sp,sp,-16
 362              		.cfi_def_cfa_offset 16
 363 0230 23348100 		sd	s0,8(sp)
 364              		.cfi_offset 8, -8
 365 0234 13040101 		addi	s0,sp,16
 366              		.cfi_def_cfa 8, 0
  86:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
 367              		.loc 1 86 5
 368              		.loc 1 86 39 is_stmt 0
 369              	#APP
 370              	# 86 "src/Riscv.cpp" 1
  87              	    __asm__ volatile ("sret");
 371              		csrw sepc, ra
 372              	# 0 "" 2
 373              		.loc 1 87 5 is_stmt 1
 374              		.loc 1 87 30 is_stmt 0
 375              	# 87 "src/Riscv.cpp" 1
  88              	}
 376              		sret
 377              	# 0 "" 2
 378              		.loc 1 88 1
 379              	#NO_APP
 380 0240 03348100 		ld	s0,8(sp)
 381              		.cfi_restore 8
 382              		.cfi_def_cfa 2, 16
 383 0244 13010101 		addi	sp,sp,16
 384              		.cfi_def_cfa_offset 0
 385 0248 67800000 		jr	ra
 386              		.cfi_endproc
 387              	.LFE32:
 389              		.align	2
 390              		.globl	_ZN5Riscv10kernelMainEv
 392              	_ZN5Riscv10kernelMainEv:
 393              	.LFB34:
  89:src/Riscv.cpp **** 
  90:src/Riscv.cpp **** void Riscv::handleSupervisorTrap()
  91:src/Riscv.cpp **** {
  92:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
  93:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  94:src/Riscv.cpp **** 
  95:src/Riscv.cpp ****     uint64 scause = Riscv::r_scause();
  96:src/Riscv.cpp **** 
  97:src/Riscv.cpp ****     switch(scause)
  98:src/Riscv.cpp ****     {
  99:src/Riscv.cpp ****         case timerInterrupt:
 100:src/Riscv.cpp ****         {
 101:src/Riscv.cpp ****             //KConsole::trapPrintString("timerInterrupt\n");
GAS LISTING /tmp/ccBw2xDq.s 			page 14


 102:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc();
 103:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 104:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 105:src/Riscv.cpp ****             //static uint64 total = 0;
 106:src/Riscv.cpp ****             totalTime++;
 107:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****             PCB::timeSliceCounter++;
 110:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 111:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 112:src/Riscv.cpp ****             {
 113:src/Riscv.cpp ****                 PCB::timeSliceCounter = 0;
 114:src/Riscv.cpp ****                 PCB::dispatch();
 115:src/Riscv.cpp ****             }
 116:src/Riscv.cpp **** 
 117:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 118:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 119:src/Riscv.cpp ****             changePrivMode();
 120:src/Riscv.cpp ****             break;
 121:src/Riscv.cpp ****         }
 122:src/Riscv.cpp ****         case hwInterrupt:
 123:src/Riscv.cpp ****         {
 124:src/Riscv.cpp ****             KConsole::getCharactersFromConsole();
 125:src/Riscv.cpp ****             plic_complete(plic_claim());
 126:src/Riscv.cpp ****             break;
 127:src/Riscv.cpp ****         }
 128:src/Riscv.cpp ****         case operationInterrupt:
 129:src/Riscv.cpp ****         {
 130:src/Riscv.cpp ****             PCB::threadExitHandler();
 131:src/Riscv.cpp ****             break;
 132:src/Riscv.cpp ****         }
 133:src/Riscv.cpp ****         case addrReadInterrupt:
 134:src/Riscv.cpp ****         {
 135:src/Riscv.cpp ****             PCB::threadExitHandler();
 136:src/Riscv.cpp ****             break;
 137:src/Riscv.cpp ****         }
 138:src/Riscv.cpp ****         case addrWriteInterrupt:
 139:src/Riscv.cpp ****         {
 140:src/Riscv.cpp ****             PCB::threadExitHandler();
 141:src/Riscv.cpp ****             break;
 142:src/Riscv.cpp ****         }
 143:src/Riscv.cpp ****         case ecallSystemInterupt:
 144:src/Riscv.cpp ****         case ecallUserInterrupt:
 145:src/Riscv.cpp ****         {
 146:src/Riscv.cpp ****             uint64 operation;
 147:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 148:src/Riscv.cpp **** 
 149:src/Riscv.cpp ****             uint64 volatile sepc = Riscv::r_sepc() + 4;
 150:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 151:src/Riscv.cpp **** 
 152:src/Riscv.cpp ****             switch(operation)
 153:src/Riscv.cpp ****             {
 154:src/Riscv.cpp ****                 case MemoryAllocator::MEM_ALLOC:
 155:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 156:src/Riscv.cpp ****                     break;
 157:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 158:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
GAS LISTING /tmp/ccBw2xDq.s 			page 15


 159:src/Riscv.cpp ****                     break;
 160:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 161:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 162:src/Riscv.cpp ****                     break;
 163:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 164:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 165:src/Riscv.cpp ****                     break;
 166:src/Riscv.cpp ****                 case PCB::THREAD_START:
 167:src/Riscv.cpp ****                     PCB::threadStartHandler();
 168:src/Riscv.cpp ****                     break;
 169:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 170:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 171:src/Riscv.cpp ****                     break;
 172:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 173:src/Riscv.cpp ****                     PCB::threadExitHandler();
 174:src/Riscv.cpp ****                     break;
 175:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 176:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 177:src/Riscv.cpp ****                     break;
 178:src/Riscv.cpp ****                 case PCB::THREAD_DEL_PCB:
 179:src/Riscv.cpp ****                      PCB::threadDelPCBHandler();
 180:src/Riscv.cpp ****                      break;
 181:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 182:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 183:src/Riscv.cpp ****                     break;
 184:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 185:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 186:src/Riscv.cpp ****                     break;
 187:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 188:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 189:src/Riscv.cpp ****                     break;
 190:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 191:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 192:src/Riscv.cpp ****                     break;
 193:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 194:src/Riscv.cpp ****                     KConsole::getcHandler();
 195:src/Riscv.cpp ****                     break;
 196:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 197:src/Riscv.cpp ****                     KConsole::putcHandler();
 198:src/Riscv.cpp ****                     break;
 199:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 200:src/Riscv.cpp ****                     KConsole::getCharHandler();
 201:src/Riscv.cpp ****                     break;
 202:src/Riscv.cpp ****             }
 203:src/Riscv.cpp **** 
 204:src/Riscv.cpp ****             Riscv::w_sstatus(sstatus);
 205:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 206:src/Riscv.cpp ****             changePrivMode();
 207:src/Riscv.cpp ****             break;
 208:src/Riscv.cpp ****         }
 209:src/Riscv.cpp ****     }
 210:src/Riscv.cpp **** }
 211:src/Riscv.cpp **** 
 212:src/Riscv.cpp **** void Riscv::kernelMain()
 213:src/Riscv.cpp **** {
 394              		.loc 1 213 1 is_stmt 1
 395              		.cfi_startproc
GAS LISTING /tmp/ccBw2xDq.s 			page 16


 214:src/Riscv.cpp ****     if(kernelMainCalled) return;
 396              		.loc 1 214 5
 397 024c 97070000 		lbu	a5,.LANCHOR0+17
 397      83C70700 
 398 0254 63840700 		beqz	a5,.L24
 399 0258 67800000 		ret
 400              	.L24:
 213:src/Riscv.cpp ****     if(kernelMainCalled) return;
 401              		.loc 1 213 1 is_stmt 0
 402 025c 130101FF 		addi	sp,sp,-16
 403              		.cfi_def_cfa_offset 16
 404 0260 23341100 		sd	ra,8(sp)
 405 0264 23308100 		sd	s0,0(sp)
 406              		.cfi_offset 1, -8
 407              		.cfi_offset 8, -16
 408 0268 13040101 		addi	s0,sp,16
 409              		.cfi_def_cfa 8, 0
 215:src/Riscv.cpp ****     kernelMainCalled = true;
 410              		.loc 1 215 5 is_stmt 1
 411              		.loc 1 215 22 is_stmt 0
 412 026c 93071000 		li	a5,1
 413 0270 17070000 		sb	a5,.LANCHOR0+17,a4
 413      2300F700 
 216:src/Riscv.cpp **** 
 217:src/Riscv.cpp ****     initSystem();
 414              		.loc 1 217 5 is_stmt 1
 415              		.loc 1 217 15 is_stmt 0
 416 0278 97000000 		call	_ZN5Riscv10initSystemEv
 416      E7800000 
 417              	.LVL34:
 218:src/Riscv.cpp ****     //slabCacheCreateTest2();
 219:src/Riscv.cpp ****     //slabInitTest();
 220:src/Riscv.cpp ****     //disableTimerInterrupts();
 221:src/Riscv.cpp ****     enableInterrupts();
 418              		.loc 1 221 5 is_stmt 1
 419              		.loc 1 221 21 is_stmt 0
 420 0280 97000000 		call	_ZN5Riscv16enableInterruptsEv
 420      E7800000 
 421              	.LVL35:
 422              	.L19:
 222:src/Riscv.cpp **** 
 223:src/Riscv.cpp ****     while(!PCB::userPCB->isFinished())
 423              		.loc 1 223 5 is_stmt 1
 424              		.loc 1 223 11
 425              		.loc 1 223 36 is_stmt 0
 426 0288 97070000 		la	a5,_ZN3PCB7userPCBE
 426      83B70700 
 427 0290 03B50700 		ld	a0,0(a5)
 428 0294 97000000 		call	_ZN3PCB10isFinishedEv@plt
 428      E7800000 
 429              	.LVL36:
 430              		.loc 1 223 11
 431 029c 63180500 		bnez	a0,.L18
 224:src/Riscv.cpp ****     {
 225:src/Riscv.cpp ****         thread_dispatch();
 432              		.loc 1 225 9 is_stmt 1
 433              		.loc 1 225 24 is_stmt 0
GAS LISTING /tmp/ccBw2xDq.s 			page 17


 434 02a0 97000000 		call	_Z15thread_dispatchv@plt
 434      E7800000 
 435              	.LVL37:
 223:src/Riscv.cpp ****     {
 436              		.loc 1 223 5
 437 02a8 6FF01FFE 		j	.L19
 438              	.L18:
 226:src/Riscv.cpp ****     }
 227:src/Riscv.cpp **** 
 228:src/Riscv.cpp ****     //printString("End...\n");
 229:src/Riscv.cpp ****     endSystem();
 439              		.loc 1 229 5 is_stmt 1
 440              		.loc 1 229 14 is_stmt 0
 441 02ac 97000000 		call	_ZN5Riscv9endSystemEv
 441      E7800000 
 442              	.LVL38:
 230:src/Riscv.cpp **** }
 443              		.loc 1 230 1
 444 02b4 83308100 		ld	ra,8(sp)
 445              		.cfi_restore 1
 446 02b8 03340100 		ld	s0,0(sp)
 447              		.cfi_restore 8
 448              		.cfi_def_cfa 2, 16
 449 02bc 13010101 		addi	sp,sp,16
 450              		.cfi_def_cfa_offset 0
 451 02c0 67800000 		jr	ra
 452              		.cfi_endproc
 453              	.LFE34:
 455              		.align	2
 456              		.globl	_ZN5Riscv15userMainWrapperEPv
 458              	_ZN5Riscv15userMainWrapperEPv:
 459              	.LFB35:
 231:src/Riscv.cpp **** 
 232:src/Riscv.cpp **** void Riscv::userMainWrapper(void* )
 233:src/Riscv.cpp **** {
 460              		.loc 1 233 1 is_stmt 1
 461              		.cfi_startproc
 462 02c4 130101FF 		addi	sp,sp,-16
 463              		.cfi_def_cfa_offset 16
 464 02c8 23341100 		sd	ra,8(sp)
 465 02cc 23308100 		sd	s0,0(sp)
 466              		.cfi_offset 1, -8
 467              		.cfi_offset 8, -16
 468 02d0 13040101 		addi	s0,sp,16
 469              		.cfi_def_cfa 8, 0
 234:src/Riscv.cpp ****     userMain();
 470              		.loc 1 234 5
 471              		.loc 1 234 13 is_stmt 0
 472 02d4 97000000 		call	_Z8userMainv@plt
 472      E7800000 
 473              	.LVL39:
 235:src/Riscv.cpp **** }
 474              		.loc 1 235 1
 475 02dc 83308100 		ld	ra,8(sp)
 476              		.cfi_restore 1
 477 02e0 03340100 		ld	s0,0(sp)
 478              		.cfi_restore 8
GAS LISTING /tmp/ccBw2xDq.s 			page 18


 479              		.cfi_def_cfa 2, 16
 480 02e4 13010101 		addi	sp,sp,16
 481              		.cfi_def_cfa_offset 0
 482 02e8 67800000 		jr	ra
 483              		.cfi_endproc
 484              	.LFE35:
 486              		.align	2
 487              		.globl	_ZN5Riscv22disableTimerInterruptsEv
 489              	_ZN5Riscv22disableTimerInterruptsEv:
 490              	.LFB36:
 236:src/Riscv.cpp **** 
 237:src/Riscv.cpp **** void Riscv::disableTimerInterrupts()
 238:src/Riscv.cpp **** {
 491              		.loc 1 238 1 is_stmt 1
 492              		.cfi_startproc
 493 02ec 130101FF 		addi	sp,sp,-16
 494              		.cfi_def_cfa_offset 16
 495 02f0 23348100 		sd	s0,8(sp)
 496              		.cfi_offset 8, -8
 497 02f4 13040101 		addi	s0,sp,16
 498              		.cfi_def_cfa 8, 0
 239:src/Riscv.cpp ****     uint64 x = 0x2;
 499              		.loc 1 239 5
 500              	.LVL40:
 240:src/Riscv.cpp ****     __asm__ volatile("csrc sie, %0"::"r"(x));
 501              		.loc 1 240 5
 502              		.loc 1 240 45 is_stmt 0
 503 02f8 93072000 		li	a5,2
 504              	#APP
 505              	# 240 "src/Riscv.cpp" 1
 241              	}
 506              		csrc sie, a5
 507              	# 0 "" 2
 508              		.loc 1 241 1
 509              	#NO_APP
 510 0300 03348100 		ld	s0,8(sp)
 511              		.cfi_restore 8
 512              		.cfi_def_cfa 2, 16
 513 0304 13010101 		addi	sp,sp,16
 514              		.cfi_def_cfa_offset 0
 515 0308 67800000 		jr	ra
 516              		.cfi_endproc
 517              	.LFE36:
 519              		.align	2
 520              		.globl	_ZN5Riscv13w_a0_sscratchEv
 522              	_ZN5Riscv13w_a0_sscratchEv:
 523              	.LFB37:
 242:src/Riscv.cpp **** 
 243:src/Riscv.cpp **** void Riscv::w_a0_sscratch()
 244:src/Riscv.cpp **** {
 524              		.loc 1 244 1 is_stmt 1
 525              		.cfi_startproc
 526 030c 130101FF 		addi	sp,sp,-16
 527              		.cfi_def_cfa_offset 16
 528 0310 23348100 		sd	s0,8(sp)
 529              		.cfi_offset 8, -8
 530 0314 13040101 		addi	s0,sp,16
GAS LISTING /tmp/ccBw2xDq.s 			page 19


 531              		.cfi_def_cfa 8, 0
 245:src/Riscv.cpp ****     uint64 a1Temp;
 532              		.loc 1 245 5
 246:src/Riscv.cpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 533              		.loc 1 246 5
 534              		.loc 1 246 47 is_stmt 0
 535              	#APP
 536              	# 246 "src/Riscv.cpp" 1
 247              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 537              		mv a5, a1
 538              	# 0 "" 2
 539              	.LVL41:
 540              		.loc 1 247 5 is_stmt 1
 541              		.loc 1 247 53 is_stmt 0
 542              	#NO_APP
 543 031c 17070000 		la	a4,_ZN3PCB7runningE
 543      03370700 
 544 0324 03370700 		ld	a4,0(a4)
 545 0328 03370701 		ld	a4,16(a4)
 546              		.loc 1 247 63
 547              	#APP
 548              	# 247 "src/Riscv.cpp" 1
 248              	    __asm__ volatile("sd a0, 80(a1)");
 549              		mv a1, a4
 550              	# 0 "" 2
 551              		.loc 1 248 5 is_stmt 1
 552              		.loc 1 248 38 is_stmt 0
 553              	# 248 "src/Riscv.cpp" 1
 249              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 554              		sd a0, 80(a1)
 555              	# 0 "" 2
 556              		.loc 1 249 5 is_stmt 1
 557              		.loc 1 249 46 is_stmt 0
 558              	# 249 "src/Riscv.cpp" 1
 250              	}
 559              		mv a1,a5
 560              	# 0 "" 2
 561              		.loc 1 250 1
 562              	#NO_APP
 563 0338 03348100 		ld	s0,8(sp)
 564              		.cfi_restore 8
 565              		.cfi_def_cfa 2, 16
 566 033c 13010101 		addi	sp,sp,16
 567              		.cfi_def_cfa_offset 0
 568 0340 67800000 		jr	ra
 569              		.cfi_endproc
 570              	.LFE37:
 572              		.align	2
 573              		.globl	_ZN5Riscv14changePrivModeEv
 575              	_ZN5Riscv14changePrivModeEv:
 576              	.LFB38:
 251:src/Riscv.cpp **** 
 252:src/Riscv.cpp **** void Riscv::changePrivMode()
 253:src/Riscv.cpp **** {
 577              		.loc 1 253 1 is_stmt 1
 578              		.cfi_startproc
 579 0344 130101FF 		addi	sp,sp,-16
GAS LISTING /tmp/ccBw2xDq.s 			page 20


 580              		.cfi_def_cfa_offset 16
 581 0348 23348100 		sd	s0,8(sp)
 582              		.cfi_offset 8, -8
 583 034c 13040101 		addi	s0,sp,16
 584              		.cfi_def_cfa 8, 0
 254:src/Riscv.cpp ****     if(PCB::running->systemThread)
 585              		.loc 1 254 5
 586              		.loc 1 254 22 is_stmt 0
 587 0350 97070000 		la	a5,_ZN3PCB7runningE
 587      83B70700 
 588 0358 83B70700 		ld	a5,0(a5)
 589 035c 83C70700 		lbu	a5,0(a5)
 590              		.loc 1 254 5
 591 0360 638C0700 		beqz	a5,.L32
 255:src/Riscv.cpp ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 592              		.loc 1 255 9 is_stmt 1
 593              	.LVL42:
 594              	.LBB44:
 595              	.LBB45:
 196:src/../h/Riscv.hpp **** }
 596              		.loc 2 196 5
 196:src/../h/Riscv.hpp **** }
 597              		.loc 2 196 54 is_stmt 0
 598 0364 93070010 		li	a5,256
 599              	#APP
 600              	# 196 "src/../h/Riscv.hpp" 1
 601              		csrs sstatus, a5
 602              	# 0 "" 2
 603              	.LVL43:
 604              	#NO_APP
 605              	.L31:
 606              	.LBE45:
 607              	.LBE44:
 256:src/Riscv.cpp ****     else
 257:src/Riscv.cpp ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 258:src/Riscv.cpp **** }
 608              		.loc 1 258 1
 609 036c 03348100 		ld	s0,8(sp)
 610              		.cfi_remember_state
 611              		.cfi_restore 8
 612              		.cfi_def_cfa 2, 16
 613 0370 13010101 		addi	sp,sp,16
 614              		.cfi_def_cfa_offset 0
 615 0374 67800000 		jr	ra
 616              	.L32:
 617              		.cfi_restore_state
 257:src/Riscv.cpp **** }
 618              		.loc 1 257 9 is_stmt 1
 619              	.LVL44:
 620              	.LBB46:
 621              	.LBB47:
 200:src/../h/Riscv.hpp **** }
 622              		.loc 2 200 5
 200:src/../h/Riscv.hpp **** }
 623              		.loc 2 200 54 is_stmt 0
 624 0378 93070010 		li	a5,256
 625              	#APP
GAS LISTING /tmp/ccBw2xDq.s 			page 21


 626              	# 200 "src/../h/Riscv.hpp" 1
 627              		csrc sstatus, a5
 628              	# 0 "" 2
 629              	.LVL45:
 630              	#NO_APP
 631              	.LBE47:
 632              	.LBE46:
 633              		.loc 1 258 1
 634 0380 6FF0DFFE 		j	.L31
 635              		.cfi_endproc
 636              	.LFE38:
 638              		.align	2
 639              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 641              	_ZN5Riscv20handleSupervisorTrapEv:
 642              	.LFB33:
  91:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::savedRegA4));
 643              		.loc 1 91 1 is_stmt 1
 644              		.cfi_startproc
 645 0384 130101F9 		addi	sp,sp,-112
 646              		.cfi_def_cfa_offset 112
 647 0388 23341106 		sd	ra,104(sp)
 648 038c 23308106 		sd	s0,96(sp)
 649 0390 233C9104 		sd	s1,88(sp)
 650              		.cfi_offset 1, -8
 651              		.cfi_offset 8, -16
 652              		.cfi_offset 9, -24
 653 0394 13040107 		addi	s0,sp,112
 654              		.cfi_def_cfa 8, 0
  92:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 655              		.loc 1 92 5
  92:src/Riscv.cpp ****     __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
 656              		.loc 1 92 58 is_stmt 0
 657              	#APP
 658              	# 92 "src/Riscv.cpp" 1
 659              		mv a4, a4
 660              	# 0 "" 2
 661              	#NO_APP
 662 039c 97070000 		la	a5,_ZN3PCB10savedRegA4E
 662      83B70700 
 663 03a4 23B0E700 		sd	a4,0(a5)
  93:src/Riscv.cpp **** 
 664              		.loc 1 93 5 is_stmt 1
  93:src/Riscv.cpp **** 
 665              		.loc 1 93 61 is_stmt 0
 666 03a8 97070000 		la	a5,_ZN3PCB7runningE
 666      83B70700 
 667 03b0 83B70700 		ld	a5,0(a5)
  93:src/Riscv.cpp **** 
 668              		.loc 1 93 71
 669              	#APP
 670              	# 93 "src/Riscv.cpp" 1
 671              		csrr a4, sscratch
 672              	# 0 "" 2
 673              	#NO_APP
 674 03b8 23B8E700 		sd	a4,16(a5)
  95:src/Riscv.cpp **** 
 675              		.loc 1 95 5 is_stmt 1
GAS LISTING /tmp/ccBw2xDq.s 			page 22


 676              	.LBB48:
 677              	.LBB49:
 121:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, scause" : "=r"(scause));
 678              		.loc 2 121 5
 122:src/../h/Riscv.hpp ****     return scause;
 679              		.loc 2 122 5
 122:src/../h/Riscv.hpp ****     return scause;
 680              		.loc 2 122 55 is_stmt 0
 681              	#APP
 682              	# 122 "src/../h/Riscv.hpp" 1
 683              		csrr a5, scause
 684              	# 0 "" 2
 685              	#NO_APP
 686 03c0 233CF4FA 		sd	a5,-72(s0)
 123:src/../h/Riscv.hpp **** }
 687              		.loc 2 123 5 is_stmt 1
 123:src/../h/Riscv.hpp **** }
 688              		.loc 2 123 12 is_stmt 0
 689 03c4 833784FB 		ld	a5,-72(s0)
 690              	.LVL46:
 691              	.LBE49:
 692              	.LBE48:
  97:src/Riscv.cpp ****     {
 693              		.loc 1 97 5 is_stmt 1
 694              	.LBB50:
 695 03c8 13079000 		li	a4,9
 696 03cc 636EF702 		bgtu	a5,a4,.L36
 697 03d0 13078000 		li	a4,8
 698 03d4 63F4E712 		bgeu	a5,a4,.L37
 699 03d8 13075000 		li	a4,5
 700 03dc 638AE710 		beq	a5,a4,.L38
 701 03e0 13077000 		li	a4,7
 702 03e4 6398E700 		bne	a5,a4,.L64
 703              	.LBB51:
 138:src/Riscv.cpp ****         {
 704              		.loc 1 138 9
 139:src/Riscv.cpp ****             PCB::threadExitHandler();
 705              		.loc 1 139 9
 140:src/Riscv.cpp ****             break;
 706              		.loc 1 140 13
 140:src/Riscv.cpp ****             break;
 707              		.loc 1 140 35 is_stmt 0
 708 03e8 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 708      E7800000 
 709              	.LVL47:
 141:src/Riscv.cpp ****         }
 710              		.loc 1 141 13 is_stmt 1
 711 03f0 6F00C00D 		j	.L35
 712              	.LVL48:
 713              	.L64:
 714              	.LBE51:
  97:src/Riscv.cpp ****     {
 715              		.loc 1 97 5 is_stmt 0
 716 03f4 13072000 		li	a4,2
 717 03f8 639AE70C 		bne	a5,a4,.L35
 718              	.LBB76:
 128:src/Riscv.cpp ****         {
GAS LISTING /tmp/ccBw2xDq.s 			page 23


 719              		.loc 1 128 9 is_stmt 1
 129:src/Riscv.cpp ****             PCB::threadExitHandler();
 720              		.loc 1 129 9
 130:src/Riscv.cpp ****             break;
 721              		.loc 1 130 13
 130:src/Riscv.cpp ****             break;
 722              		.loc 1 130 35 is_stmt 0
 723 03fc 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 723      E7800000 
 724              	.LVL49:
 131:src/Riscv.cpp ****         }
 725              		.loc 1 131 13 is_stmt 1
 726 0404 6F00800C 		j	.L35
 727              	.LVL50:
 728              	.L36:
 729              	.LBE76:
  97:src/Riscv.cpp ****     {
 730              		.loc 1 97 5 is_stmt 0
 731 0408 1307F0FF 		li	a4,-1
 732 040c 1317F703 		slli	a4,a4,63
 733 0410 13071700 		addi	a4,a4,1
 734 0414 6388E702 		beq	a5,a4,.L42
 735 0418 1307F0FF 		li	a4,-1
 736 041c 1317F703 		slli	a4,a4,63
 737 0420 13079700 		addi	a4,a4,9
 738 0424 6394E70A 		bne	a5,a4,.L35
 739              	.LBB77:
 122:src/Riscv.cpp ****         {
 740              		.loc 1 122 9 is_stmt 1
 123:src/Riscv.cpp ****             KConsole::getCharactersFromConsole();
 741              		.loc 1 123 9
 124:src/Riscv.cpp ****             plic_complete(plic_claim());
 742              		.loc 1 124 13
 124:src/Riscv.cpp ****             plic_complete(plic_claim());
 743              		.loc 1 124 47 is_stmt 0
 744 0428 97000000 		call	_ZN8KConsole24getCharactersFromConsoleEv@plt
 744      E7800000 
 745              	.LVL51:
 125:src/Riscv.cpp ****             break;
 746              		.loc 1 125 13 is_stmt 1
 125:src/Riscv.cpp ****             break;
 747              		.loc 1 125 26 is_stmt 0
 748 0430 97000000 		call	plic_claim@plt
 748      E7800000 
 749              	.LVL52:
 750 0438 97000000 		call	plic_complete@plt
 750      E7800000 
 751              	.LVL53:
 126:src/Riscv.cpp ****         }
 752              		.loc 1 126 13 is_stmt 1
 753 0440 6F00C008 		j	.L35
 754              	.LVL54:
 755              	.L42:
  99:src/Riscv.cpp ****         {
 756              		.loc 1 99 9
 100:src/Riscv.cpp ****             //KConsole::trapPrintString("timerInterrupt\n");
 757              		.loc 1 100 9
GAS LISTING /tmp/ccBw2xDq.s 			page 24


 758              	.LBB52:
 102:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 759              		.loc 1 102 13
 760              	.LBB53:
 761              	.LBB54:
 131:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 762              		.loc 2 131 5
 132:src/../h/Riscv.hpp ****     return sepc;
 763              		.loc 2 132 5
 132:src/../h/Riscv.hpp ****     return sepc;
 764              		.loc 2 132 51 is_stmt 0
 765              	#APP
 766              	# 132 "src/../h/Riscv.hpp" 1
 767              		csrr a5, sepc
 768              	# 0 "" 2
 769              	.LVL55:
 770              	#NO_APP
 771 0448 2334F4FC 		sd	a5,-56(s0)
 133:src/../h/Riscv.hpp **** }
 772              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 773              		.loc 2 133 12 is_stmt 0
 774 044c 833784FC 		ld	a5,-56(s0)
 775              	.LBE54:
 776              	.LBE53:
 102:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 777              		.loc 1 102 50
 778 0450 233CF4F8 		sd	a5,-104(s0)
 103:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 779              		.loc 1 103 13 is_stmt 1
 780              	.LBB55:
 781              	.LBB56:
 202:src/../h/Riscv.hpp **** 
 203:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 204:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 782              		.loc 2 204 5
 205:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 783              		.loc 2 205 5
 784              		.loc 2 205 57 is_stmt 0
 785              	#APP
 786              	# 205 "src/../h/Riscv.hpp" 1
 206              	    return sstatus;
 787              		csrr a5, sstatus
 788              	# 0 "" 2
 789              	#NO_APP
 790 0458 2330F4FC 		sd	a5,-64(s0)
 791              		.loc 2 206 5 is_stmt 1
 792              		.loc 2 206 12 is_stmt 0
 793 045c 833704FC 		ld	a5,-64(s0)
 794              	.LBE56:
 795              	.LBE55:
 103:src/Riscv.cpp ****             mc_sip(Riscv::SIP_SSIP);
 796              		.loc 1 103 56
 797 0460 2330F4FA 		sd	a5,-96(s0)
 104:src/Riscv.cpp ****             //static uint64 total = 0;
 798              		.loc 1 104 13 is_stmt 1
 799              	.LVL56:
GAS LISTING /tmp/ccBw2xDq.s 			page 25


 800              	.LBB57:
 801              	.LBB58:
 170:src/../h/Riscv.hpp **** }
 802              		.loc 2 170 5
 170:src/../h/Riscv.hpp **** }
 803              		.loc 2 170 50 is_stmt 0
 804 0464 93072000 		li	a5,2
 805              	#APP
 806              	# 170 "src/../h/Riscv.hpp" 1
 807              		csrc sip, a5
 808              	# 0 "" 2
 809              	.LVL57:
 810              	#NO_APP
 811              	.LBE58:
 812              	.LBE57:
 106:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 813              		.loc 1 106 13 is_stmt 1
 106:src/Riscv.cpp ****             //KConsole::trapPrintInt(totalTime);
 814              		.loc 1 106 22 is_stmt 0
 815 046c 17070000 		lla	a4,.LANCHOR0
 815      13070700 
 816 0474 83378701 		ld	a5,24(a4)
 817 0478 93871700 		addi	a5,a5,1
 818 047c 233CF700 		sd	a5,24(a4)
 109:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 819              		.loc 1 109 13 is_stmt 1
 109:src/Riscv.cpp ****             SleepPCBList::tryToWakePCBs();
 820              		.loc 1 109 34 is_stmt 0
 821 0480 97040000 		la	s1,_ZN3PCB16timeSliceCounterE
 821      83B40400 
 822 0488 83B70400 		ld	a5,0(s1)
 823 048c 93871700 		addi	a5,a5,1
 824 0490 23B0F400 		sd	a5,0(s1)
 110:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 825              		.loc 1 110 13 is_stmt 1
 110:src/Riscv.cpp ****             if (PCB::timeSliceCounter >= PCB::running->getTimeSlice())
 826              		.loc 1 110 40 is_stmt 0
 827 0494 97000000 		call	_ZN12SleepPCBList13tryToWakePCBsEv@plt
 827      E7800000 
 828              	.LVL58:
 111:src/Riscv.cpp ****             {
 829              		.loc 1 111 13 is_stmt 1
 111:src/Riscv.cpp ****             {
 830              		.loc 1 111 68 is_stmt 0
 831 049c 97070000 		la	a5,_ZN3PCB7runningE
 831      83B70700 
 832 04a4 83B70700 		ld	a5,0(a5)
 833              	.LVL59:
 834              	.LBB59:
 835              	.LBB60:
 836              		.file 3 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 4/27/22.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_0_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_0_PCB_HPP
GAS LISTING /tmp/ccBw2xDq.s 			page 26


   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** 
  10:src/../h/PCB.hpp **** class PCB
  11:src/../h/PCB.hpp **** {
  12:src/../h/PCB.hpp **** private:
  13:src/../h/PCB.hpp ****     static uint64 savedRegA4;
  14:src/../h/PCB.hpp **** 
  15:src/../h/PCB.hpp ****     using Body = void (*)(void*);
  16:src/../h/PCB.hpp **** 
  17:src/../h/PCB.hpp ****     PCB(Body body,  void* args, void* stack_space, uint64 timeSlice);
  18:src/../h/PCB.hpp ****     ~PCB();
  19:src/../h/PCB.hpp **** 
  20:src/../h/PCB.hpp ****     void start();
  21:src/../h/PCB.hpp ****     static void dispatch();
  22:src/../h/PCB.hpp **** 
  23:src/../h/PCB.hpp ****     static PCB* running;
  24:src/../h/PCB.hpp **** 
  25:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  26:src/../h/PCB.hpp ****     uint64 getTimeSlice() { return timeSlice;}
 837              		.loc 3 26 29 is_stmt 1
 838              		.loc 3 26 36 is_stmt 0
 839 04a8 83B78701 		ld	a5,24(a5)
 840              	.LVL60:
 841              	.LBE60:
 842              	.LBE59:
 111:src/Riscv.cpp ****             {
 843              		.loc 1 111 39
 844 04ac 03B70400 		ld	a4,0(s1)
 111:src/Riscv.cpp ****             {
 845              		.loc 1 111 13
 846 04b0 6378F702 		bgeu	a4,a5,.L65
 847              	.L44:
 117:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 848              		.loc 1 117 13 is_stmt 1
 117:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 849              		.loc 1 117 29 is_stmt 0
 850 04b4 833704FA 		ld	a5,-96(s0)
 851              	.LVL61:
 852              	.LBB61:
 853              	.LBB62:
 207:src/../h/Riscv.hpp **** }
 208:src/../h/Riscv.hpp **** 
 209:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 210:src/../h/Riscv.hpp ****     __asm__ volatile("csrw sstatus, %0" : :"r"(sstatus));
 854              		.loc 2 210 5 is_stmt 1
 855              		.loc 2 210 57 is_stmt 0
 856              	#APP
 857              	# 210 "src/../h/Riscv.hpp" 1
 211              	}
 858              		csrw sstatus, a5
 859              	# 0 "" 2
 860              	.LVL62:
 861              	#NO_APP
 862              	.LBE62:
 863              	.LBE61:
 118:src/Riscv.cpp ****             changePrivMode();
GAS LISTING /tmp/ccBw2xDq.s 			page 27


 864              		.loc 1 118 13 is_stmt 1
 118:src/Riscv.cpp ****             changePrivMode();
 865              		.loc 1 118 26 is_stmt 0
 866 04bc 833784F9 		ld	a5,-104(s0)
 867              	.LVL63:
 868              	.LBB63:
 869              	.LBB64:
 137:src/../h/Riscv.hpp **** }
 870              		.loc 2 137 5 is_stmt 1
 137:src/../h/Riscv.hpp **** }
 871              		.loc 2 137 51 is_stmt 0
 872              	#APP
 873              	# 137 "src/../h/Riscv.hpp" 1
 874              		csrw sepc, a5
 875              	# 0 "" 2
 876              	.LVL64:
 877              	#NO_APP
 878              	.LBE64:
 879              	.LBE63:
 119:src/Riscv.cpp ****             break;
 880              		.loc 1 119 13 is_stmt 1
 119:src/Riscv.cpp ****             break;
 881              		.loc 1 119 27 is_stmt 0
 882 04c4 97000000 		call	_ZN5Riscv14changePrivModeEv
 882      E7800000 
 883              	.LVL65:
 120:src/Riscv.cpp ****         }
 884              		.loc 1 120 13 is_stmt 1
 885              	.L35:
 886              	.LBE52:
 887              	.LBE77:
 888              	.LBE50:
 210:src/Riscv.cpp **** 
 889              		.loc 1 210 1 is_stmt 0
 890 04cc 83308106 		ld	ra,104(sp)
 891              		.cfi_remember_state
 892              		.cfi_restore 1
 893 04d0 03340106 		ld	s0,96(sp)
 894              		.cfi_restore 8
 895              		.cfi_def_cfa 2, 112
 896 04d4 83348105 		ld	s1,88(sp)
 897              		.cfi_restore 9
 898 04d8 13010107 		addi	sp,sp,112
 899              		.cfi_def_cfa_offset 0
 900 04dc 67800000 		jr	ra
 901              	.L65:
 902              		.cfi_restore_state
 903              	.LBB80:
 904              	.LBB78:
 905              	.LBB65:
 113:src/Riscv.cpp ****                 PCB::dispatch();
 906              		.loc 1 113 17 is_stmt 1
 113:src/Riscv.cpp ****                 PCB::dispatch();
 907              		.loc 1 113 39 is_stmt 0
 908 04e0 23B00400 		sd	zero,0(s1)
 114:src/Riscv.cpp ****             }
 909              		.loc 1 114 17 is_stmt 1
GAS LISTING /tmp/ccBw2xDq.s 			page 28


 114:src/Riscv.cpp ****             }
 910              		.loc 1 114 30 is_stmt 0
 911 04e4 97000000 		call	_ZN3PCB8dispatchEv@plt
 911      E7800000 
 912              	.LVL66:
 913 04ec 6FF09FFC 		j	.L44
 914              	.LVL67:
 915              	.L38:
 916              	.LBE65:
 133:src/Riscv.cpp ****         {
 917              		.loc 1 133 9 is_stmt 1
 134:src/Riscv.cpp ****             PCB::threadExitHandler();
 918              		.loc 1 134 9
 135:src/Riscv.cpp ****             break;
 919              		.loc 1 135 13
 135:src/Riscv.cpp ****             break;
 920              		.loc 1 135 35 is_stmt 0
 921 04f0 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 921      E7800000 
 922              	.LVL68:
 136:src/Riscv.cpp ****         }
 923              		.loc 1 136 13 is_stmt 1
 924 04f8 6FF05FFD 		j	.L35
 925              	.LVL69:
 926              	.L37:
 143:src/Riscv.cpp ****         case ecallUserInterrupt:
 927              		.loc 1 143 9
 144:src/Riscv.cpp ****         {
 928              		.loc 1 144 9
 145:src/Riscv.cpp ****             uint64 operation;
 929              		.loc 1 145 9
 930              	.LBB66:
 146:src/Riscv.cpp ****             __asm__ volatile("mv %0, a0" :  "=r"(operation));
 931              		.loc 1 146 13
 147:src/Riscv.cpp **** 
 932              		.loc 1 147 13
 147:src/Riscv.cpp **** 
 933              		.loc 1 147 61 is_stmt 0
 934              	#APP
 935              	# 147 "src/Riscv.cpp" 1
 936              		mv a5, a0
 937              	# 0 "" 2
 938              	.LVL70:
 149:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 939              		.loc 1 149 13 is_stmt 1
 940              	#NO_APP
 941              	.LBB67:
 942              	.LBB68:
 131:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sepc" : "=r"(sepc));
 943              		.loc 2 131 5
 132:src/../h/Riscv.hpp ****     return sepc;
 944              		.loc 2 132 5
 132:src/../h/Riscv.hpp ****     return sepc;
 945              		.loc 2 132 51 is_stmt 0
 946              	#APP
 947              	# 132 "src/../h/Riscv.hpp" 1
 948              		csrr a4, sepc
GAS LISTING /tmp/ccBw2xDq.s 			page 29


 949              	# 0 "" 2
 950              	#NO_APP
 951 0504 233CE4FC 		sd	a4,-40(s0)
 133:src/../h/Riscv.hpp **** }
 952              		.loc 2 133 5 is_stmt 1
 133:src/../h/Riscv.hpp **** }
 953              		.loc 2 133 12 is_stmt 0
 954 0508 033784FD 		ld	a4,-40(s0)
 955              	.LBE68:
 956              	.LBE67:
 149:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 957              		.loc 1 149 52
 958 050c 13074700 		addi	a4,a4,4
 149:src/Riscv.cpp ****             uint64 volatile sstatus = Riscv::r_sstatus();
 959              		.loc 1 149 54
 960 0510 2334E4FA 		sd	a4,-88(s0)
 150:src/Riscv.cpp **** 
 961              		.loc 1 150 13 is_stmt 1
 962              	.LBB69:
 963              	.LBB70:
 204:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %0, sstatus" : "=r"(sstatus));
 964              		.loc 2 204 5
 205:src/../h/Riscv.hpp ****     return sstatus;
 965              		.loc 2 205 5
 205:src/../h/Riscv.hpp ****     return sstatus;
 966              		.loc 2 205 57 is_stmt 0
 967              	#APP
 968              	# 205 "src/../h/Riscv.hpp" 1
 969              		csrr a4, sstatus
 970              	# 0 "" 2
 971              	#NO_APP
 972 0518 2338E4FC 		sd	a4,-48(s0)
 206:src/../h/Riscv.hpp **** }
 973              		.loc 2 206 5 is_stmt 1
 206:src/../h/Riscv.hpp **** }
 974              		.loc 2 206 12 is_stmt 0
 975 051c 033704FD 		ld	a4,-48(s0)
 976              	.LBE70:
 977              	.LBE69:
 150:src/Riscv.cpp **** 
 978              		.loc 1 150 56
 979 0520 2338E4FA 		sd	a4,-80(s0)
 152:src/Riscv.cpp ****             {
 980              		.loc 1 152 13 is_stmt 1
 981 0524 13073004 		li	a4,67
 982 0528 6364F702 		bgtu	a5,a4,.L45
 983 052c 93972700 		slli	a5,a5,2
 984              	.LVL71:
 985 0530 17070000 		lla	a4,.L47
 985      13070700 
 986 0538 B387E700 		add	a5,a5,a4
 987 053c 83A70700 		lw	a5,0(a5)
 988 0540 B387E700 		add	a5,a5,a4
 989 0544 67800700 		jr	a5
 990              		.section	.rodata
 991              		.align	2
 992              		.align	2
GAS LISTING /tmp/ccBw2xDq.s 			page 30


 993              	.L47:
 994 0000 00000000 		.word	.L45-.L47
 995 0004 00000000 		.word	.L62-.L47
 996 0008 00000000 		.word	.L61-.L47
 997 000c 00000000 		.word	.L45-.L47
 998 0010 00000000 		.word	.L45-.L47
 999 0014 00000000 		.word	.L45-.L47
 1000 0018 00000000 		.word	.L45-.L47
 1001 001c 00000000 		.word	.L45-.L47
 1002 0020 00000000 		.word	.L45-.L47
 1003 0024 00000000 		.word	.L45-.L47
 1004 0028 00000000 		.word	.L45-.L47
 1005 002c 00000000 		.word	.L45-.L47
 1006 0030 00000000 		.word	.L45-.L47
 1007 0034 00000000 		.word	.L45-.L47
 1008 0038 00000000 		.word	.L45-.L47
 1009 003c 00000000 		.word	.L45-.L47
 1010 0040 00000000 		.word	.L45-.L47
 1011 0044 00000000 		.word	.L60-.L47
 1012 0048 00000000 		.word	.L59-.L47
 1013 004c 00000000 		.word	.L58-.L47
 1014 0050 00000000 		.word	.L57-.L47
 1015 0054 00000000 		.word	.L56-.L47
 1016 0058 00000000 		.word	.L55-.L47
 1017 005c 00000000 		.word	.L45-.L47
 1018 0060 00000000 		.word	.L45-.L47
 1019 0064 00000000 		.word	.L45-.L47
 1020 0068 00000000 		.word	.L45-.L47
 1021 006c 00000000 		.word	.L45-.L47
 1022 0070 00000000 		.word	.L45-.L47
 1023 0074 00000000 		.word	.L45-.L47
 1024 0078 00000000 		.word	.L45-.L47
 1025 007c 00000000 		.word	.L45-.L47
 1026 0080 00000000 		.word	.L45-.L47
 1027 0084 00000000 		.word	.L54-.L47
 1028 0088 00000000 		.word	.L53-.L47
 1029 008c 00000000 		.word	.L52-.L47
 1030 0090 00000000 		.word	.L51-.L47
 1031 0094 00000000 		.word	.L45-.L47
 1032 0098 00000000 		.word	.L45-.L47
 1033 009c 00000000 		.word	.L45-.L47
 1034 00a0 00000000 		.word	.L45-.L47
 1035 00a4 00000000 		.word	.L45-.L47
 1036 00a8 00000000 		.word	.L45-.L47
 1037 00ac 00000000 		.word	.L45-.L47
 1038 00b0 00000000 		.word	.L45-.L47
 1039 00b4 00000000 		.word	.L45-.L47
 1040 00b8 00000000 		.word	.L45-.L47
 1041 00bc 00000000 		.word	.L45-.L47
 1042 00c0 00000000 		.word	.L45-.L47
 1043 00c4 00000000 		.word	.L50-.L47
 1044 00c8 00000000 		.word	.L45-.L47
 1045 00cc 00000000 		.word	.L45-.L47
 1046 00d0 00000000 		.word	.L45-.L47
 1047 00d4 00000000 		.word	.L45-.L47
 1048 00d8 00000000 		.word	.L45-.L47
 1049 00dc 00000000 		.word	.L45-.L47
GAS LISTING /tmp/ccBw2xDq.s 			page 31


 1050 00e0 00000000 		.word	.L45-.L47
 1051 00e4 00000000 		.word	.L45-.L47
 1052 00e8 00000000 		.word	.L45-.L47
 1053 00ec 00000000 		.word	.L45-.L47
 1054 00f0 00000000 		.word	.L45-.L47
 1055 00f4 00000000 		.word	.L45-.L47
 1056 00f8 00000000 		.word	.L45-.L47
 1057 00fc 00000000 		.word	.L45-.L47
 1058 0100 00000000 		.word	.L45-.L47
 1059 0104 00000000 		.word	.L49-.L47
 1060 0108 00000000 		.word	.L48-.L47
 1061 010c 00000000 		.word	.L46-.L47
 1062              		.text
 1063              	.L62:
 154:src/Riscv.cpp ****                     MemoryAllocator::memAllocHandler();
 1064              		.loc 1 154 17
 155:src/Riscv.cpp ****                     break;
 1065              		.loc 1 155 21
 155:src/Riscv.cpp ****                     break;
 1066              		.loc 1 155 53 is_stmt 0
 1067 0548 97000000 		call	_ZN15MemoryAllocator15memAllocHandlerEv@plt
 1067      E7800000 
 1068              	.LVL72:
 156:src/Riscv.cpp ****                 case MemoryAllocator::MEM_FREE:
 1069              		.loc 1 156 21 is_stmt 1
 1070              	.L45:
 204:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1071              		.loc 1 204 13
 204:src/Riscv.cpp ****             Riscv::w_sepc(sepc);
 1072              		.loc 1 204 29 is_stmt 0
 1073 0550 833704FB 		ld	a5,-80(s0)
 1074              	.LVL73:
 1075              	.LBB71:
 1076              	.LBB72:
 210:src/../h/Riscv.hpp **** }
 1077              		.loc 2 210 5 is_stmt 1
 210:src/../h/Riscv.hpp **** }
 1078              		.loc 2 210 57 is_stmt 0
 1079              	#APP
 1080              	# 210 "src/../h/Riscv.hpp" 1
 1081              		csrw sstatus, a5
 1082              	# 0 "" 2
 1083              	.LVL74:
 1084              	#NO_APP
 1085              	.LBE72:
 1086              	.LBE71:
 205:src/Riscv.cpp ****             changePrivMode();
 1087              		.loc 1 205 13 is_stmt 1
 205:src/Riscv.cpp ****             changePrivMode();
 1088              		.loc 1 205 26 is_stmt 0
 1089 0558 833784FA 		ld	a5,-88(s0)
 1090              	.LVL75:
 1091              	.LBB73:
 1092              	.LBB74:
 137:src/../h/Riscv.hpp **** }
 1093              		.loc 2 137 5 is_stmt 1
 137:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccBw2xDq.s 			page 32


 1094              		.loc 2 137 51 is_stmt 0
 1095              	#APP
 1096              	# 137 "src/../h/Riscv.hpp" 1
 1097              		csrw sepc, a5
 1098              	# 0 "" 2
 1099              	.LVL76:
 1100              	#NO_APP
 1101              	.LBE74:
 1102              	.LBE73:
 206:src/Riscv.cpp ****             break;
 1103              		.loc 1 206 13 is_stmt 1
 206:src/Riscv.cpp ****             break;
 1104              		.loc 1 206 27 is_stmt 0
 1105 0560 97000000 		call	_ZN5Riscv14changePrivModeEv
 1105      E7800000 
 1106              	.LVL77:
 207:src/Riscv.cpp ****         }
 1107              		.loc 1 207 13 is_stmt 1
 1108              	.LBE66:
 1109              	.LBE78:
 1110              	.LBE80:
 210:src/Riscv.cpp **** 
 1111              		.loc 1 210 1 is_stmt 0
 1112 0568 6FF05FF6 		j	.L35
 1113              	.L61:
 1114              	.LBB81:
 1115              	.LBB79:
 1116              	.LBB75:
 157:src/Riscv.cpp ****                     MemoryAllocator::memFreeHandler();
 1117              		.loc 1 157 17 is_stmt 1
 158:src/Riscv.cpp ****                     break;
 1118              		.loc 1 158 21
 158:src/Riscv.cpp ****                     break;
 1119              		.loc 1 158 52 is_stmt 0
 1120 056c 97000000 		call	_ZN15MemoryAllocator14memFreeHandlerEv@plt
 1120      E7800000 
 1121              	.LVL78:
 159:src/Riscv.cpp ****                 case PCB::THREAD_MAKE_PCB:
 1122              		.loc 1 159 21 is_stmt 1
 1123 0574 6FF0DFFD 		j	.L45
 1124              	.L57:
 160:src/Riscv.cpp ****                     PCB::threadMakePCBHandler();
 1125              		.loc 1 160 17
 161:src/Riscv.cpp ****                     break;
 1126              		.loc 1 161 21
 161:src/Riscv.cpp ****                     break;
 1127              		.loc 1 161 46 is_stmt 0
 1128 0578 97000000 		call	_ZN3PCB20threadMakePCBHandlerEv@plt
 1128      E7800000 
 1129              	.LVL79:
 162:src/Riscv.cpp ****                 case PCB::THREAD_CREATE:
 1130              		.loc 1 162 21 is_stmt 1
 1131 0580 6FF01FFD 		j	.L45
 1132              	.L60:
 163:src/Riscv.cpp ****                     PCB::threadCreateHandler();
 1133              		.loc 1 163 17
 164:src/Riscv.cpp ****                     break;
GAS LISTING /tmp/ccBw2xDq.s 			page 33


 1134              		.loc 1 164 21
 164:src/Riscv.cpp ****                     break;
 1135              		.loc 1 164 45 is_stmt 0
 1136 0584 97000000 		call	_ZN3PCB19threadCreateHandlerEv@plt
 1136      E7800000 
 1137              	.LVL80:
 165:src/Riscv.cpp ****                 case PCB::THREAD_START:
 1138              		.loc 1 165 21 is_stmt 1
 1139 058c 6FF05FFC 		j	.L45
 1140              	.L56:
 166:src/Riscv.cpp ****                     PCB::threadStartHandler();
 1141              		.loc 1 166 17
 167:src/Riscv.cpp ****                     break;
 1142              		.loc 1 167 21
 167:src/Riscv.cpp ****                     break;
 1143              		.loc 1 167 44 is_stmt 0
 1144 0590 97000000 		call	_ZN3PCB18threadStartHandlerEv@plt
 1144      E7800000 
 1145              	.LVL81:
 168:src/Riscv.cpp ****                 case PCB::THREAD_DISPATCH:
 1146              		.loc 1 168 21 is_stmt 1
 1147 0598 6FF09FFB 		j	.L45
 1148              	.L58:
 169:src/Riscv.cpp ****                     PCB::threadDispatchHandler();
 1149              		.loc 1 169 17
 170:src/Riscv.cpp ****                     break;
 1150              		.loc 1 170 21
 170:src/Riscv.cpp ****                     break;
 1151              		.loc 1 170 47 is_stmt 0
 1152 059c 97000000 		call	_ZN3PCB21threadDispatchHandlerEv@plt
 1152      E7800000 
 1153              	.LVL82:
 171:src/Riscv.cpp ****                 case PCB::THREAD_EXIT:
 1154              		.loc 1 171 21 is_stmt 1
 1155 05a4 6FF0DFFA 		j	.L45
 1156              	.L59:
 172:src/Riscv.cpp ****                     PCB::threadExitHandler();
 1157              		.loc 1 172 17
 173:src/Riscv.cpp ****                     break;
 1158              		.loc 1 173 21
 173:src/Riscv.cpp ****                     break;
 1159              		.loc 1 173 43 is_stmt 0
 1160 05a8 97000000 		call	_ZN3PCB17threadExitHandlerEv@plt
 1160      E7800000 
 1161              	.LVL83:
 174:src/Riscv.cpp ****                 case PCB::TIME_SLEEP:
 1162              		.loc 1 174 21 is_stmt 1
 1163 05b0 6FF01FFA 		j	.L45
 1164              	.L50:
 175:src/Riscv.cpp ****                     PCB::threadSleepHandler();
 1165              		.loc 1 175 17
 176:src/Riscv.cpp ****                     break;
 1166              		.loc 1 176 21
 176:src/Riscv.cpp ****                     break;
 1167              		.loc 1 176 44 is_stmt 0
 1168 05b4 97000000 		call	_ZN3PCB18threadSleepHandlerEv@plt
 1168      E7800000 
GAS LISTING /tmp/ccBw2xDq.s 			page 34


 1169              	.LVL84:
 177:src/Riscv.cpp ****                 case PCB::THREAD_DEL_PCB:
 1170              		.loc 1 177 21 is_stmt 1
 1171 05bc 6FF05FF9 		j	.L45
 1172              	.L55:
 178:src/Riscv.cpp ****                      PCB::threadDelPCBHandler();
 1173              		.loc 1 178 17
 179:src/Riscv.cpp ****                      break;
 1174              		.loc 1 179 22
 179:src/Riscv.cpp ****                      break;
 1175              		.loc 1 179 46 is_stmt 0
 1176 05c0 97000000 		call	_ZN3PCB19threadDelPCBHandlerEv@plt
 1176      E7800000 
 1177              	.LVL85:
 180:src/Riscv.cpp ****                 case KSemaphore::SEM_OPEN:
 1178              		.loc 1 180 22 is_stmt 1
 1179 05c8 6FF09FF8 		j	.L45
 1180              	.L54:
 181:src/Riscv.cpp ****                     KSemaphore::semOpenHandler();
 1181              		.loc 1 181 17
 182:src/Riscv.cpp ****                     break;
 1182              		.loc 1 182 21
 182:src/Riscv.cpp ****                     break;
 1183              		.loc 1 182 47 is_stmt 0
 1184 05cc 97000000 		call	_ZN10KSemaphore14semOpenHandlerEv@plt
 1184      E7800000 
 1185              	.LVL86:
 183:src/Riscv.cpp ****                 case KSemaphore::SEM_WAIT:
 1186              		.loc 1 183 21 is_stmt 1
 1187 05d4 6FF0DFF7 		j	.L45
 1188              	.L52:
 184:src/Riscv.cpp ****                     KSemaphore::semWaitHandler();
 1189              		.loc 1 184 17
 185:src/Riscv.cpp ****                     break;
 1190              		.loc 1 185 21
 185:src/Riscv.cpp ****                     break;
 1191              		.loc 1 185 47 is_stmt 0
 1192 05d8 97000000 		call	_ZN10KSemaphore14semWaitHandlerEv@plt
 1192      E7800000 
 1193              	.LVL87:
 186:src/Riscv.cpp ****                 case KSemaphore::SEM_SIGNAL:
 1194              		.loc 1 186 21 is_stmt 1
 1195 05e0 6FF01FF7 		j	.L45
 1196              	.L51:
 187:src/Riscv.cpp ****                     KSemaphore::semSignalHandler();
 1197              		.loc 1 187 17
 188:src/Riscv.cpp ****                     break;
 1198              		.loc 1 188 21
 188:src/Riscv.cpp ****                     break;
 1199              		.loc 1 188 49 is_stmt 0
 1200 05e4 97000000 		call	_ZN10KSemaphore16semSignalHandlerEv@plt
 1200      E7800000 
 1201              	.LVL88:
 189:src/Riscv.cpp ****                 case KSemaphore::SEM_CLOSE:
 1202              		.loc 1 189 21 is_stmt 1
 1203 05ec 6FF05FF6 		j	.L45
 1204              	.L53:
GAS LISTING /tmp/ccBw2xDq.s 			page 35


 190:src/Riscv.cpp ****                     KSemaphore::semCloseHandler();
 1205              		.loc 1 190 17
 191:src/Riscv.cpp ****                     break;
 1206              		.loc 1 191 21
 191:src/Riscv.cpp ****                     break;
 1207              		.loc 1 191 48 is_stmt 0
 1208 05f0 97000000 		call	_ZN10KSemaphore15semCloseHandlerEv@plt
 1208      E7800000 
 1209              	.LVL89:
 192:src/Riscv.cpp ****                 case KConsole::CONSOLE_GETC:
 1210              		.loc 1 192 21 is_stmt 1
 1211 05f8 6FF09FF5 		j	.L45
 1212              	.L49:
 193:src/Riscv.cpp ****                     KConsole::getcHandler();
 1213              		.loc 1 193 17
 194:src/Riscv.cpp ****                     break;
 1214              		.loc 1 194 21
 194:src/Riscv.cpp ****                     break;
 1215              		.loc 1 194 42 is_stmt 0
 1216 05fc 97000000 		call	_ZN8KConsole11getcHandlerEv@plt
 1216      E7800000 
 1217              	.LVL90:
 195:src/Riscv.cpp ****                 case KConsole::CONSOLE_PUTC:
 1218              		.loc 1 195 21 is_stmt 1
 1219 0604 6FF0DFF4 		j	.L45
 1220              	.L48:
 196:src/Riscv.cpp ****                     KConsole::putcHandler();
 1221              		.loc 1 196 17
 197:src/Riscv.cpp ****                     break;
 1222              		.loc 1 197 21
 197:src/Riscv.cpp ****                     break;
 1223              		.loc 1 197 42 is_stmt 0
 1224 0608 97000000 		call	_ZN8KConsole11putcHandlerEv@plt
 1224      E7800000 
 1225              	.LVL91:
 198:src/Riscv.cpp ****                 case KConsole::CONSOLE_GET_CHAR:
 1226              		.loc 1 198 21 is_stmt 1
 1227 0610 6FF01FF4 		j	.L45
 1228              	.L46:
 199:src/Riscv.cpp ****                     KConsole::getCharHandler();
 1229              		.loc 1 199 17
 200:src/Riscv.cpp ****                     break;
 1230              		.loc 1 200 21
 200:src/Riscv.cpp ****                     break;
 1231              		.loc 1 200 45 is_stmt 0
 1232 0614 97000000 		call	_ZN8KConsole14getCharHandlerEv@plt
 1232      E7800000 
 1233              	.LVL92:
 201:src/Riscv.cpp ****             }
 1234              		.loc 1 201 21 is_stmt 1
 1235 061c 6FF05FF3 		j	.L45
 1236              	.LBE75:
 1237              	.LBE79:
 1238              	.LBE81:
 1239              		.cfi_endproc
 1240              	.LFE33:
 1242              		.globl	_ZN5Riscv14semaphoreCacheE
GAS LISTING /tmp/ccBw2xDq.s 			page 36


 1243              		.globl	_ZN5Riscv8pcbCacheE
 1244              		.globl	_ZN5Riscv16kernelMainCalledE
 1245              		.globl	_ZN5Riscv12finishSystemE
 1246              		.globl	_ZN5Riscv9totalTimeE
 1247              		.bss
 1248              		.align	3
 1249              		.set	.LANCHOR0,. + 0
 1252              	_ZN5Riscv8pcbCacheE:
 1253 0000 00000000 		.zero	8
 1253      00000000 
 1256              	_ZN5Riscv14semaphoreCacheE:
 1257 0008 00000000 		.zero	8
 1257      00000000 
 1260              	_ZN5Riscv12finishSystemE:
 1261 0010 00       		.zero	1
 1264              	_ZN5Riscv16kernelMainCalledE:
 1265 0011 00       		.zero	1
 1266 0012 00000000 		.zero	6
 1266      0000
 1269              	_ZN5Riscv9totalTimeE:
 1270 0018 00000000 		.zero	8
 1270      00000000 
 1271              		.text
 1272              	.Letext0:
 1273              		.file 4 "src/../h/../lib/hw.h"
 1274              		.file 5 "src/../h/slabAllocator.hpp"
 1275              		.file 6 "src/../h/MemoryAllocator.hpp"
 1276              		.file 7 "src/../h/SleepPCBList.hpp"
 1277              		.file 8 "src/../h/KSemaphore.hpp"
 1278              		.file 9 "src/../h/KConsole.hpp"
 1279              		.file 10 "src/../h/Scheduler.hpp"
 1280              		.file 11 "src/../h/../test/userMain.hpp"
 1281              		.file 12 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccBw2xDq.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccBw2xDq.s:9      .text:0000000000000000 _ZN5Riscv20initMemoryAllocationEv
     /tmp/ccBw2xDq.s:13     .text:0000000000000000 .L0 
     /tmp/ccBw2xDq.s:14     .text:0000000000000000 .L0 
     /tmp/ccBw2xDq.s:15     .text:0000000000000004 .L0 
     /tmp/ccBw2xDq.s:18     .text:000000000000000c .L0 
     /tmp/ccBw2xDq.s:19     .text:000000000000000c .L0 
     /tmp/ccBw2xDq.s:21     .text:0000000000000010 .L0 
     /tmp/ccBw2xDq.s:23     .text:0000000000000010 .L0 
     /tmp/ccBw2xDq.s:24     .text:0000000000000010 .L0 
     /tmp/ccBw2xDq.s:30     .text:000000000000002c .L0 
     /tmp/ccBw2xDq.s:33     .text:0000000000000030 .L0 
     /tmp/ccBw2xDq.s:34     .text:0000000000000030 .L0 
     /tmp/ccBw2xDq.s:38     .text:0000000000000038 .L0 
     /tmp/ccBw2xDq.s:39     .text:0000000000000038 .L0 
     /tmp/ccBw2xDq.s:44     .text:0000000000000044 .L0 
     /tmp/ccBw2xDq.s:45     .text:0000000000000044 .L0 
     /tmp/ccBw2xDq.s:49     .text:000000000000004c .L0 
     /tmp/ccBw2xDq.s:50     .text:000000000000004c .L0 
     /tmp/ccBw2xDq.s:55     .text:0000000000000058 .L0 
     /tmp/ccBw2xDq.s:56     .text:000000000000005c .L0 
     /tmp/ccBw2xDq.s:58     .text:0000000000000060 .L0 
     /tmp/ccBw2xDq.s:59     .text:0000000000000060 .L0 
     /tmp/ccBw2xDq.s:61     .text:0000000000000064 .L0 
     /tmp/ccBw2xDq.s:63     .text:0000000000000068 .L0 
     /tmp/ccBw2xDq.s:77     .text:0000000000000068 _ZN5Riscv10initSystemEv
     /tmp/ccBw2xDq.s:80     .text:0000000000000068 .L0 
     /tmp/ccBw2xDq.s:81     .text:0000000000000068 .L0 
     /tmp/ccBw2xDq.s:82     .text:000000000000006c .L0 
     /tmp/ccBw2xDq.s:87     .text:000000000000007c .L0 
     /tmp/ccBw2xDq.s:88     .text:000000000000007c .L0 
     /tmp/ccBw2xDq.s:89     .text:000000000000007c .L0 
     /tmp/ccBw2xDq.s:90     .text:000000000000007c .L0 
     /tmp/ccBw2xDq.s:92     .text:0000000000000080 .L0 
     /tmp/ccBw2xDq.s:94     .text:0000000000000080 .L0 
     /tmp/ccBw2xDq.s:95     .text:0000000000000080 .L0 
     /tmp/ccBw2xDq.s:101    .text:0000000000000088 .L0 
  src/../h/Riscv.hpp:147    .text:0000000000000088 .L0 
     /tmp/ccBw2xDq.s:111    .text:000000000000008c .L0 
     /tmp/ccBw2xDq.s:112    .text:000000000000008c .L0 
     /tmp/ccBw2xDq.s:118    .text:00000000000000a8 .L0 
     /tmp/ccBw2xDq.s:121    .text:00000000000000ac .L0 
     /tmp/ccBw2xDq.s:122    .text:00000000000000ac .L0 
     /tmp/ccBw2xDq.s:126    .text:00000000000000b4 .L0 
     /tmp/ccBw2xDq.s:127    .text:00000000000000b4 .L0 
     /tmp/ccBw2xDq.s:132    .text:00000000000000c0 .L0 
     /tmp/ccBw2xDq.s:135    .text:00000000000000c4 .L0 
     /tmp/ccBw2xDq.s:136    .text:00000000000000c4 .L0 
     /tmp/ccBw2xDq.s:140    .text:00000000000000cc .L0 
     /tmp/ccBw2xDq.s:141    .text:00000000000000cc .L0 
     /tmp/ccBw2xDq.s:146    .text:00000000000000d8 .L0 
     /tmp/ccBw2xDq.s:147    .text:00000000000000d8 .L0 
     /tmp/ccBw2xDq.s:152    .text:00000000000000e8 .L0 
     /tmp/ccBw2xDq.s:153    .text:00000000000000e8 .L0 
     /tmp/ccBw2xDq.s:160    .text:0000000000000104 .L0 
     /tmp/ccBw2xDq.s:163    .text:0000000000000110 .L0 
GAS LISTING /tmp/ccBw2xDq.s 			page 38


     /tmp/ccBw2xDq.s:164    .text:0000000000000110 .L0 
     /tmp/ccBw2xDq.s:171    .text:000000000000012c .L0 
     /tmp/ccBw2xDq.s:173    .text:0000000000000130 .L0 
     /tmp/ccBw2xDq.s:174    .text:0000000000000130 .L0 
     /tmp/ccBw2xDq.s:177    .text:0000000000000138 .L0 
     /tmp/ccBw2xDq.s:178    .text:0000000000000138 .L0 
     /tmp/ccBw2xDq.s:181    .text:0000000000000140 .L0 
     /tmp/ccBw2xDq.s:182    .text:0000000000000144 .L0 
     /tmp/ccBw2xDq.s:184    .text:0000000000000148 .L0 
     /tmp/ccBw2xDq.s:185    .text:0000000000000148 .L0 
     /tmp/ccBw2xDq.s:187    .text:000000000000014c .L0 
     /tmp/ccBw2xDq.s:189    .text:0000000000000150 .L0 
     /tmp/ccBw2xDq.s:192    .text:0000000000000154 .L0 
     /tmp/ccBw2xDq.s:194    .text:0000000000000158 .L0 
     /tmp/ccBw2xDq.s:200    .text:0000000000000158 _ZN5Riscv16enableInterruptsEv
     /tmp/ccBw2xDq.s:203    .text:0000000000000158 .L0 
     /tmp/ccBw2xDq.s:204    .text:0000000000000158 .L0 
     /tmp/ccBw2xDq.s:205    .text:000000000000015c .L0 
     /tmp/ccBw2xDq.s:207    .text:0000000000000160 .L0 
     /tmp/ccBw2xDq.s:209    .text:0000000000000164 .L0 
     /tmp/ccBw2xDq.s:214    .text:0000000000000164 .L0 
     /tmp/ccBw2xDq.s:215    .text:0000000000000164 .L0 
     /tmp/ccBw2xDq.s:216    .text:0000000000000164 .L0 
     /tmp/ccBw2xDq.s:226    .text:000000000000016c .L0 
     /tmp/ccBw2xDq.s:227    .text:0000000000000170 .L0 
     /tmp/ccBw2xDq.s:228    .text:0000000000000170 .L0 
     /tmp/ccBw2xDq.s:230    .text:0000000000000174 .L0 
     /tmp/ccBw2xDq.s:232    .text:0000000000000178 .L0 
     /tmp/ccBw2xDq.s:238    .text:0000000000000178 _ZN5Riscv17disableInterruptsEv
     /tmp/ccBw2xDq.s:241    .text:0000000000000178 .L0 
     /tmp/ccBw2xDq.s:242    .text:0000000000000178 .L0 
     /tmp/ccBw2xDq.s:243    .text:000000000000017c .L0 
     /tmp/ccBw2xDq.s:245    .text:0000000000000180 .L0 
     /tmp/ccBw2xDq.s:247    .text:0000000000000184 .L0 
     /tmp/ccBw2xDq.s:252    .text:0000000000000184 .L0 
     /tmp/ccBw2xDq.s:253    .text:0000000000000184 .L0 
     /tmp/ccBw2xDq.s:254    .text:0000000000000184 .L0 
     /tmp/ccBw2xDq.s:264    .text:000000000000018c .L0 
     /tmp/ccBw2xDq.s:265    .text:0000000000000190 .L0 
     /tmp/ccBw2xDq.s:266    .text:0000000000000190 .L0 
     /tmp/ccBw2xDq.s:268    .text:0000000000000194 .L0 
     /tmp/ccBw2xDq.s:270    .text:0000000000000198 .L0 
     /tmp/ccBw2xDq.s:276    .text:0000000000000198 _ZN5Riscv9endSystemEv
     /tmp/ccBw2xDq.s:279    .text:0000000000000198 .L0 
     /tmp/ccBw2xDq.s:280    .text:0000000000000198 .L0 
     /tmp/ccBw2xDq.s:281    .text:000000000000019c .L0 
     /tmp/ccBw2xDq.s:284    .text:00000000000001a4 .L0 
     /tmp/ccBw2xDq.s:285    .text:00000000000001a4 .L0 
     /tmp/ccBw2xDq.s:287    .text:00000000000001a8 .L0 
     /tmp/ccBw2xDq.s:289    .text:00000000000001a8 .L0 
     /tmp/ccBw2xDq.s:290    .text:00000000000001a8 .L0 
     /tmp/ccBw2xDq.s:293    .text:00000000000001b0 .L0 
     /tmp/ccBw2xDq.s:294    .text:00000000000001b0 .L0 
     /tmp/ccBw2xDq.s:299    .text:00000000000001bc .L0 
     /tmp/ccBw2xDq.s:300    .text:00000000000001bc .L0 
     /tmp/ccBw2xDq.s:301    .text:00000000000001bc .L0 
     /tmp/ccBw2xDq.s:302    .text:00000000000001bc .L0 
GAS LISTING /tmp/ccBw2xDq.s 			page 39


     /tmp/ccBw2xDq.s:305    .text:00000000000001c4 .L0 
     /tmp/ccBw2xDq.s:307    .text:00000000000001c8 .L0 
     /tmp/ccBw2xDq.s:308    .text:00000000000001c8 .L0 
     /tmp/ccBw2xDq.s:314    .text:00000000000001dc .L0 
     /tmp/ccBw2xDq.s:315    .text:00000000000001dc .L0 
     /tmp/ccBw2xDq.s:318    .text:00000000000001e8 .L0 
     /tmp/ccBw2xDq.s:319    .text:00000000000001e8 .L0 
     /tmp/ccBw2xDq.s:323    .text:00000000000001f0 .L0 
     /tmp/ccBw2xDq.s:324    .text:00000000000001f0 .L0 
     /tmp/ccBw2xDq.s:325    .text:00000000000001f0 .L0 
     /tmp/ccBw2xDq.s:330    .text:0000000000000204 .L0 
     /tmp/ccBw2xDq.s:332    .text:0000000000000208 .L0 
     /tmp/ccBw2xDq.s:333    .text:0000000000000208 .L0 
     /tmp/ccBw2xDq.s:336    .text:0000000000000210 .L0 
     /tmp/ccBw2xDq.s:339    .text:0000000000000214 .L0 
     /tmp/ccBw2xDq.s:340    .text:0000000000000214 .L0 
     /tmp/ccBw2xDq.s:343    .text:000000000000021c .L0 
     /tmp/ccBw2xDq.s:344    .text:0000000000000220 .L0 
     /tmp/ccBw2xDq.s:346    .text:0000000000000224 .L0 
     /tmp/ccBw2xDq.s:347    .text:0000000000000224 .L0 
     /tmp/ccBw2xDq.s:349    .text:0000000000000228 .L0 
     /tmp/ccBw2xDq.s:351    .text:000000000000022c .L0 
     /tmp/ccBw2xDq.s:357    .text:000000000000022c _ZN5Riscv10popSppSpieEv
     /tmp/ccBw2xDq.s:360    .text:000000000000022c .L0 
     /tmp/ccBw2xDq.s:361    .text:000000000000022c .L0 
     /tmp/ccBw2xDq.s:362    .text:0000000000000230 .L0 
     /tmp/ccBw2xDq.s:364    .text:0000000000000234 .L0 
     /tmp/ccBw2xDq.s:366    .text:0000000000000238 .L0 
     /tmp/ccBw2xDq.s:368    .text:0000000000000238 .L0 
       src/Riscv.cpp:86     .text:0000000000000238 .L0 
     /tmp/ccBw2xDq.s:374    .text:000000000000023c .L0 
       src/Riscv.cpp:87     .text:000000000000023c .L0 
     /tmp/ccBw2xDq.s:380    .text:0000000000000240 .L0 
     /tmp/ccBw2xDq.s:381    .text:0000000000000244 .L0 
     /tmp/ccBw2xDq.s:382    .text:0000000000000244 .L0 
     /tmp/ccBw2xDq.s:384    .text:0000000000000248 .L0 
     /tmp/ccBw2xDq.s:386    .text:000000000000024c .L0 
     /tmp/ccBw2xDq.s:392    .text:000000000000024c _ZN5Riscv10kernelMainEv
     /tmp/ccBw2xDq.s:395    .text:000000000000024c .L0 
     /tmp/ccBw2xDq.s:396    .text:000000000000024c .L0 
     /tmp/ccBw2xDq.s:397    .text:000000000000024c .L0 
     /tmp/ccBw2xDq.s:402    .text:000000000000025c .L0 
     /tmp/ccBw2xDq.s:403    .text:0000000000000260 .L0 
     /tmp/ccBw2xDq.s:406    .text:0000000000000268 .L0 
     /tmp/ccBw2xDq.s:407    .text:0000000000000268 .L0 
     /tmp/ccBw2xDq.s:409    .text:000000000000026c .L0 
     /tmp/ccBw2xDq.s:411    .text:000000000000026c .L0 
     /tmp/ccBw2xDq.s:412    .text:000000000000026c .L0 
     /tmp/ccBw2xDq.s:415    .text:0000000000000278 .L0 
     /tmp/ccBw2xDq.s:416    .text:0000000000000278 .L0 
     /tmp/ccBw2xDq.s:419    .text:0000000000000280 .L0 
     /tmp/ccBw2xDq.s:420    .text:0000000000000280 .L0 
     /tmp/ccBw2xDq.s:424    .text:0000000000000288 .L0 
     /tmp/ccBw2xDq.s:425    .text:0000000000000288 .L0 
     /tmp/ccBw2xDq.s:426    .text:0000000000000288 .L0 
     /tmp/ccBw2xDq.s:431    .text:000000000000029c .L0 
     /tmp/ccBw2xDq.s:433    .text:00000000000002a0 .L0 
GAS LISTING /tmp/ccBw2xDq.s 			page 40


     /tmp/ccBw2xDq.s:434    .text:00000000000002a0 .L0 
     /tmp/ccBw2xDq.s:437    .text:00000000000002a8 .L0 
     /tmp/ccBw2xDq.s:440    .text:00000000000002ac .L0 
     /tmp/ccBw2xDq.s:441    .text:00000000000002ac .L0 
     /tmp/ccBw2xDq.s:444    .text:00000000000002b4 .L0 
     /tmp/ccBw2xDq.s:445    .text:00000000000002b8 .L0 
     /tmp/ccBw2xDq.s:447    .text:00000000000002bc .L0 
     /tmp/ccBw2xDq.s:448    .text:00000000000002bc .L0 
     /tmp/ccBw2xDq.s:450    .text:00000000000002c0 .L0 
     /tmp/ccBw2xDq.s:452    .text:00000000000002c4 .L0 
     /tmp/ccBw2xDq.s:458    .text:00000000000002c4 _ZN5Riscv15userMainWrapperEPv
     /tmp/ccBw2xDq.s:461    .text:00000000000002c4 .L0 
     /tmp/ccBw2xDq.s:462    .text:00000000000002c4 .L0 
     /tmp/ccBw2xDq.s:463    .text:00000000000002c8 .L0 
     /tmp/ccBw2xDq.s:466    .text:00000000000002d0 .L0 
     /tmp/ccBw2xDq.s:467    .text:00000000000002d0 .L0 
     /tmp/ccBw2xDq.s:469    .text:00000000000002d4 .L0 
     /tmp/ccBw2xDq.s:471    .text:00000000000002d4 .L0 
     /tmp/ccBw2xDq.s:472    .text:00000000000002d4 .L0 
     /tmp/ccBw2xDq.s:475    .text:00000000000002dc .L0 
     /tmp/ccBw2xDq.s:476    .text:00000000000002e0 .L0 
     /tmp/ccBw2xDq.s:478    .text:00000000000002e4 .L0 
     /tmp/ccBw2xDq.s:479    .text:00000000000002e4 .L0 
     /tmp/ccBw2xDq.s:481    .text:00000000000002e8 .L0 
     /tmp/ccBw2xDq.s:483    .text:00000000000002ec .L0 
     /tmp/ccBw2xDq.s:489    .text:00000000000002ec _ZN5Riscv22disableTimerInterruptsEv
     /tmp/ccBw2xDq.s:492    .text:00000000000002ec .L0 
     /tmp/ccBw2xDq.s:493    .text:00000000000002ec .L0 
     /tmp/ccBw2xDq.s:494    .text:00000000000002f0 .L0 
     /tmp/ccBw2xDq.s:496    .text:00000000000002f4 .L0 
     /tmp/ccBw2xDq.s:498    .text:00000000000002f8 .L0 
     /tmp/ccBw2xDq.s:501    .text:00000000000002f8 .L0 
     /tmp/ccBw2xDq.s:502    .text:00000000000002f8 .L0 
     /tmp/ccBw2xDq.s:503    .text:00000000000002f8 .L0 
     /tmp/ccBw2xDq.s:510    .text:0000000000000300 .L0 
     /tmp/ccBw2xDq.s:511    .text:0000000000000304 .L0 
     /tmp/ccBw2xDq.s:512    .text:0000000000000304 .L0 
     /tmp/ccBw2xDq.s:514    .text:0000000000000308 .L0 
     /tmp/ccBw2xDq.s:516    .text:000000000000030c .L0 
     /tmp/ccBw2xDq.s:522    .text:000000000000030c _ZN5Riscv13w_a0_sscratchEv
     /tmp/ccBw2xDq.s:525    .text:000000000000030c .L0 
     /tmp/ccBw2xDq.s:526    .text:000000000000030c .L0 
     /tmp/ccBw2xDq.s:527    .text:0000000000000310 .L0 
     /tmp/ccBw2xDq.s:529    .text:0000000000000314 .L0 
     /tmp/ccBw2xDq.s:531    .text:0000000000000318 .L0 
     /tmp/ccBw2xDq.s:533    .text:0000000000000318 .L0 
     /tmp/ccBw2xDq.s:534    .text:0000000000000318 .L0 
       src/Riscv.cpp:246    .text:0000000000000318 .L0 
     /tmp/ccBw2xDq.s:541    .text:000000000000031c .L0 
     /tmp/ccBw2xDq.s:543    .text:000000000000031c .L0 
       src/Riscv.cpp:247    .text:000000000000032c .L0 
     /tmp/ccBw2xDq.s:552    .text:0000000000000330 .L0 
       src/Riscv.cpp:248    .text:0000000000000330 .L0 
     /tmp/ccBw2xDq.s:557    .text:0000000000000334 .L0 
       src/Riscv.cpp:249    .text:0000000000000334 .L0 
     /tmp/ccBw2xDq.s:563    .text:0000000000000338 .L0 
     /tmp/ccBw2xDq.s:564    .text:000000000000033c .L0 
GAS LISTING /tmp/ccBw2xDq.s 			page 41


     /tmp/ccBw2xDq.s:565    .text:000000000000033c .L0 
     /tmp/ccBw2xDq.s:567    .text:0000000000000340 .L0 
     /tmp/ccBw2xDq.s:569    .text:0000000000000344 .L0 
     /tmp/ccBw2xDq.s:575    .text:0000000000000344 _ZN5Riscv14changePrivModeEv
     /tmp/ccBw2xDq.s:578    .text:0000000000000344 .L0 
     /tmp/ccBw2xDq.s:579    .text:0000000000000344 .L0 
     /tmp/ccBw2xDq.s:580    .text:0000000000000348 .L0 
     /tmp/ccBw2xDq.s:582    .text:000000000000034c .L0 
     /tmp/ccBw2xDq.s:584    .text:0000000000000350 .L0 
     /tmp/ccBw2xDq.s:586    .text:0000000000000350 .L0 
     /tmp/ccBw2xDq.s:587    .text:0000000000000350 .L0 
     /tmp/ccBw2xDq.s:591    .text:0000000000000360 .L0 
     /tmp/ccBw2xDq.s:596    .text:0000000000000364 .L0 
     /tmp/ccBw2xDq.s:597    .text:0000000000000364 .L0 
     /tmp/ccBw2xDq.s:598    .text:0000000000000364 .L0 
     /tmp/ccBw2xDq.s:609    .text:000000000000036c .L0 
     /tmp/ccBw2xDq.s:610    .text:0000000000000370 .L0 
     /tmp/ccBw2xDq.s:611    .text:0000000000000370 .L0 
     /tmp/ccBw2xDq.s:612    .text:0000000000000370 .L0 
     /tmp/ccBw2xDq.s:614    .text:0000000000000374 .L0 
     /tmp/ccBw2xDq.s:617    .text:0000000000000378 .L0 
     /tmp/ccBw2xDq.s:622    .text:0000000000000378 .L0 
     /tmp/ccBw2xDq.s:623    .text:0000000000000378 .L0 
     /tmp/ccBw2xDq.s:624    .text:0000000000000378 .L0 
     /tmp/ccBw2xDq.s:634    .text:0000000000000380 .L0 
     /tmp/ccBw2xDq.s:635    .text:0000000000000384 .L0 
     /tmp/ccBw2xDq.s:641    .text:0000000000000384 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccBw2xDq.s:644    .text:0000000000000384 .L0 
     /tmp/ccBw2xDq.s:645    .text:0000000000000384 .L0 
     /tmp/ccBw2xDq.s:646    .text:0000000000000388 .L0 
     /tmp/ccBw2xDq.s:650    .text:0000000000000394 .L0 
     /tmp/ccBw2xDq.s:651    .text:0000000000000394 .L0 
     /tmp/ccBw2xDq.s:652    .text:0000000000000394 .L0 
     /tmp/ccBw2xDq.s:654    .text:0000000000000398 .L0 
     /tmp/ccBw2xDq.s:656    .text:0000000000000398 .L0 
       src/Riscv.cpp:92     .text:0000000000000398 .L0 
     /tmp/ccBw2xDq.s:665    .text:00000000000003a8 .L0 
     /tmp/ccBw2xDq.s:666    .text:00000000000003a8 .L0 
       src/Riscv.cpp:93     .text:00000000000003b4 .L0 
     /tmp/ccBw2xDq.s:678    .text:00000000000003bc .L0 
     /tmp/ccBw2xDq.s:679    .text:00000000000003bc .L0 
     /tmp/ccBw2xDq.s:680    .text:00000000000003bc .L0 
  src/../h/Riscv.hpp:122    .text:00000000000003bc .L0 
     /tmp/ccBw2xDq.s:688    .text:00000000000003c4 .L0 
     /tmp/ccBw2xDq.s:689    .text:00000000000003c4 .L0 
     /tmp/ccBw2xDq.s:695    .text:00000000000003c8 .L0 
     /tmp/ccBw2xDq.s:705    .text:00000000000003e8 .L0 
     /tmp/ccBw2xDq.s:706    .text:00000000000003e8 .L0 
     /tmp/ccBw2xDq.s:707    .text:00000000000003e8 .L0 
     /tmp/ccBw2xDq.s:708    .text:00000000000003e8 .L0 
     /tmp/ccBw2xDq.s:711    .text:00000000000003f0 .L0 
     /tmp/ccBw2xDq.s:716    .text:00000000000003f4 .L0 
     /tmp/ccBw2xDq.s:720    .text:00000000000003fc .L0 
     /tmp/ccBw2xDq.s:721    .text:00000000000003fc .L0 
     /tmp/ccBw2xDq.s:722    .text:00000000000003fc .L0 
     /tmp/ccBw2xDq.s:723    .text:00000000000003fc .L0 
     /tmp/ccBw2xDq.s:726    .text:0000000000000404 .L0 
GAS LISTING /tmp/ccBw2xDq.s 			page 42


     /tmp/ccBw2xDq.s:731    .text:0000000000000408 .L0 
     /tmp/ccBw2xDq.s:741    .text:0000000000000428 .L0 
     /tmp/ccBw2xDq.s:742    .text:0000000000000428 .L0 
     /tmp/ccBw2xDq.s:743    .text:0000000000000428 .L0 
     /tmp/ccBw2xDq.s:744    .text:0000000000000428 .L0 
     /tmp/ccBw2xDq.s:747    .text:0000000000000430 .L0 
     /tmp/ccBw2xDq.s:748    .text:0000000000000430 .L0 
     /tmp/ccBw2xDq.s:753    .text:0000000000000440 .L0 
     /tmp/ccBw2xDq.s:757    .text:0000000000000444 .L0 
     /tmp/ccBw2xDq.s:759    .text:0000000000000444 .L0 
     /tmp/ccBw2xDq.s:762    .text:0000000000000444 .L0 
     /tmp/ccBw2xDq.s:763    .text:0000000000000444 .L0 
     /tmp/ccBw2xDq.s:764    .text:0000000000000444 .L0 
  src/../h/Riscv.hpp:132    .text:0000000000000444 .L0 
     /tmp/ccBw2xDq.s:773    .text:000000000000044c .L0 
     /tmp/ccBw2xDq.s:774    .text:000000000000044c .L0 
     /tmp/ccBw2xDq.s:778    .text:0000000000000450 .L0 
     /tmp/ccBw2xDq.s:782    .text:0000000000000454 .L0 
     /tmp/ccBw2xDq.s:783    .text:0000000000000454 .L0 
     /tmp/ccBw2xDq.s:784    .text:0000000000000454 .L0 
  src/../h/Riscv.hpp:205    .text:0000000000000454 .L0 
     /tmp/ccBw2xDq.s:792    .text:000000000000045c .L0 
     /tmp/ccBw2xDq.s:793    .text:000000000000045c .L0 
     /tmp/ccBw2xDq.s:797    .text:0000000000000460 .L0 
     /tmp/ccBw2xDq.s:802    .text:0000000000000464 .L0 
     /tmp/ccBw2xDq.s:803    .text:0000000000000464 .L0 
     /tmp/ccBw2xDq.s:804    .text:0000000000000464 .L0 
     /tmp/ccBw2xDq.s:814    .text:000000000000046c .L0 
     /tmp/ccBw2xDq.s:815    .text:000000000000046c .L0 
     /tmp/ccBw2xDq.s:820    .text:0000000000000480 .L0 
     /tmp/ccBw2xDq.s:821    .text:0000000000000480 .L0 
     /tmp/ccBw2xDq.s:826    .text:0000000000000494 .L0 
     /tmp/ccBw2xDq.s:827    .text:0000000000000494 .L0 
     /tmp/ccBw2xDq.s:830    .text:000000000000049c .L0 
     /tmp/ccBw2xDq.s:831    .text:000000000000049c .L0 
     /tmp/ccBw2xDq.s:838    .text:00000000000004a8 .L0 
     /tmp/ccBw2xDq.s:839    .text:00000000000004a8 .L0 
     /tmp/ccBw2xDq.s:844    .text:00000000000004ac .L0 
     /tmp/ccBw2xDq.s:846    .text:00000000000004b0 .L0 
     /tmp/ccBw2xDq.s:849    .text:00000000000004b4 .L0 
     /tmp/ccBw2xDq.s:850    .text:00000000000004b4 .L0 
     /tmp/ccBw2xDq.s:855    .text:00000000000004b8 .L0 
  src/../h/Riscv.hpp:210    .text:00000000000004b8 .L0 
     /tmp/ccBw2xDq.s:865    .text:00000000000004bc .L0 
     /tmp/ccBw2xDq.s:866    .text:00000000000004bc .L0 
     /tmp/ccBw2xDq.s:871    .text:00000000000004c0 .L0 
  src/../h/Riscv.hpp:137    .text:00000000000004c0 .L0 
     /tmp/ccBw2xDq.s:881    .text:00000000000004c4 .L0 
     /tmp/ccBw2xDq.s:882    .text:00000000000004c4 .L0 
     /tmp/ccBw2xDq.s:889    .text:00000000000004cc .L0 
     /tmp/ccBw2xDq.s:890    .text:00000000000004cc .L0 
     /tmp/ccBw2xDq.s:891    .text:00000000000004d0 .L0 
     /tmp/ccBw2xDq.s:892    .text:00000000000004d0 .L0 
     /tmp/ccBw2xDq.s:894    .text:00000000000004d4 .L0 
     /tmp/ccBw2xDq.s:895    .text:00000000000004d4 .L0 
     /tmp/ccBw2xDq.s:897    .text:00000000000004d8 .L0 
     /tmp/ccBw2xDq.s:899    .text:00000000000004dc .L0 
GAS LISTING /tmp/ccBw2xDq.s 			page 43


     /tmp/ccBw2xDq.s:902    .text:00000000000004e0 .L0 
     /tmp/ccBw2xDq.s:907    .text:00000000000004e0 .L0 
     /tmp/ccBw2xDq.s:908    .text:00000000000004e0 .L0 
     /tmp/ccBw2xDq.s:910    .text:00000000000004e4 .L0 
     /tmp/ccBw2xDq.s:911    .text:00000000000004e4 .L0 
     /tmp/ccBw2xDq.s:918    .text:00000000000004f0 .L0 
     /tmp/ccBw2xDq.s:919    .text:00000000000004f0 .L0 
     /tmp/ccBw2xDq.s:920    .text:00000000000004f0 .L0 
     /tmp/ccBw2xDq.s:921    .text:00000000000004f0 .L0 
     /tmp/ccBw2xDq.s:924    .text:00000000000004f8 .L0 
     /tmp/ccBw2xDq.s:928    .text:00000000000004fc .L0 
     /tmp/ccBw2xDq.s:929    .text:00000000000004fc .L0 
     /tmp/ccBw2xDq.s:931    .text:00000000000004fc .L0 
     /tmp/ccBw2xDq.s:932    .text:00000000000004fc .L0 
     /tmp/ccBw2xDq.s:933    .text:00000000000004fc .L0 
       src/Riscv.cpp:147    .text:00000000000004fc .L0 
     /tmp/ccBw2xDq.s:943    .text:0000000000000500 .L0 
     /tmp/ccBw2xDq.s:944    .text:0000000000000500 .L0 
     /tmp/ccBw2xDq.s:945    .text:0000000000000500 .L0 
  src/../h/Riscv.hpp:132    .text:0000000000000500 .L0 
     /tmp/ccBw2xDq.s:953    .text:0000000000000508 .L0 
     /tmp/ccBw2xDq.s:954    .text:0000000000000508 .L0 
     /tmp/ccBw2xDq.s:958    .text:000000000000050c .L0 
     /tmp/ccBw2xDq.s:960    .text:0000000000000510 .L0 
     /tmp/ccBw2xDq.s:964    .text:0000000000000514 .L0 
     /tmp/ccBw2xDq.s:965    .text:0000000000000514 .L0 
     /tmp/ccBw2xDq.s:966    .text:0000000000000514 .L0 
  src/../h/Riscv.hpp:205    .text:0000000000000514 .L0 
     /tmp/ccBw2xDq.s:974    .text:000000000000051c .L0 
     /tmp/ccBw2xDq.s:975    .text:000000000000051c .L0 
     /tmp/ccBw2xDq.s:979    .text:0000000000000520 .L0 
     /tmp/ccBw2xDq.s:981    .text:0000000000000524 .L0 
     /tmp/ccBw2xDq.s:1065   .text:0000000000000548 .L0 
     /tmp/ccBw2xDq.s:1066   .text:0000000000000548 .L0 
     /tmp/ccBw2xDq.s:1067   .text:0000000000000548 .L0 
     /tmp/ccBw2xDq.s:1071   .text:0000000000000550 .L0 
     /tmp/ccBw2xDq.s:1072   .text:0000000000000550 .L0 
     /tmp/ccBw2xDq.s:1073   .text:0000000000000550 .L0 
     /tmp/ccBw2xDq.s:1078   .text:0000000000000554 .L0 
  src/../h/Riscv.hpp:210    .text:0000000000000554 .L0 
     /tmp/ccBw2xDq.s:1088   .text:0000000000000558 .L0 
     /tmp/ccBw2xDq.s:1089   .text:0000000000000558 .L0 
     /tmp/ccBw2xDq.s:1094   .text:000000000000055c .L0 
  src/../h/Riscv.hpp:137    .text:000000000000055c .L0 
     /tmp/ccBw2xDq.s:1104   .text:0000000000000560 .L0 
     /tmp/ccBw2xDq.s:1105   .text:0000000000000560 .L0 
     /tmp/ccBw2xDq.s:1111   .text:0000000000000568 .L0 
     /tmp/ccBw2xDq.s:1112   .text:0000000000000568 .L0 
     /tmp/ccBw2xDq.s:1118   .text:000000000000056c .L0 
     /tmp/ccBw2xDq.s:1119   .text:000000000000056c .L0 
     /tmp/ccBw2xDq.s:1120   .text:000000000000056c .L0 
     /tmp/ccBw2xDq.s:1123   .text:0000000000000574 .L0 
     /tmp/ccBw2xDq.s:1126   .text:0000000000000578 .L0 
     /tmp/ccBw2xDq.s:1127   .text:0000000000000578 .L0 
     /tmp/ccBw2xDq.s:1128   .text:0000000000000578 .L0 
     /tmp/ccBw2xDq.s:1131   .text:0000000000000580 .L0 
     /tmp/ccBw2xDq.s:1134   .text:0000000000000584 .L0 
GAS LISTING /tmp/ccBw2xDq.s 			page 44


     /tmp/ccBw2xDq.s:1135   .text:0000000000000584 .L0 
     /tmp/ccBw2xDq.s:1136   .text:0000000000000584 .L0 
     /tmp/ccBw2xDq.s:1139   .text:000000000000058c .L0 
     /tmp/ccBw2xDq.s:1142   .text:0000000000000590 .L0 
     /tmp/ccBw2xDq.s:1143   .text:0000000000000590 .L0 
     /tmp/ccBw2xDq.s:1144   .text:0000000000000590 .L0 
     /tmp/ccBw2xDq.s:1147   .text:0000000000000598 .L0 
     /tmp/ccBw2xDq.s:1150   .text:000000000000059c .L0 
     /tmp/ccBw2xDq.s:1151   .text:000000000000059c .L0 
     /tmp/ccBw2xDq.s:1152   .text:000000000000059c .L0 
     /tmp/ccBw2xDq.s:1155   .text:00000000000005a4 .L0 
     /tmp/ccBw2xDq.s:1158   .text:00000000000005a8 .L0 
     /tmp/ccBw2xDq.s:1159   .text:00000000000005a8 .L0 
     /tmp/ccBw2xDq.s:1160   .text:00000000000005a8 .L0 
     /tmp/ccBw2xDq.s:1163   .text:00000000000005b0 .L0 
     /tmp/ccBw2xDq.s:1166   .text:00000000000005b4 .L0 
     /tmp/ccBw2xDq.s:1167   .text:00000000000005b4 .L0 
     /tmp/ccBw2xDq.s:1168   .text:00000000000005b4 .L0 
     /tmp/ccBw2xDq.s:1171   .text:00000000000005bc .L0 
     /tmp/ccBw2xDq.s:1174   .text:00000000000005c0 .L0 
     /tmp/ccBw2xDq.s:1175   .text:00000000000005c0 .L0 
     /tmp/ccBw2xDq.s:1176   .text:00000000000005c0 .L0 
     /tmp/ccBw2xDq.s:1179   .text:00000000000005c8 .L0 
     /tmp/ccBw2xDq.s:1182   .text:00000000000005cc .L0 
     /tmp/ccBw2xDq.s:1183   .text:00000000000005cc .L0 
     /tmp/ccBw2xDq.s:1184   .text:00000000000005cc .L0 
     /tmp/ccBw2xDq.s:1187   .text:00000000000005d4 .L0 
     /tmp/ccBw2xDq.s:1190   .text:00000000000005d8 .L0 
     /tmp/ccBw2xDq.s:1191   .text:00000000000005d8 .L0 
     /tmp/ccBw2xDq.s:1192   .text:00000000000005d8 .L0 
     /tmp/ccBw2xDq.s:1195   .text:00000000000005e0 .L0 
     /tmp/ccBw2xDq.s:1198   .text:00000000000005e4 .L0 
     /tmp/ccBw2xDq.s:1199   .text:00000000000005e4 .L0 
     /tmp/ccBw2xDq.s:1200   .text:00000000000005e4 .L0 
     /tmp/ccBw2xDq.s:1203   .text:00000000000005ec .L0 
     /tmp/ccBw2xDq.s:1206   .text:00000000000005f0 .L0 
     /tmp/ccBw2xDq.s:1207   .text:00000000000005f0 .L0 
     /tmp/ccBw2xDq.s:1208   .text:00000000000005f0 .L0 
     /tmp/ccBw2xDq.s:1211   .text:00000000000005f8 .L0 
     /tmp/ccBw2xDq.s:1214   .text:00000000000005fc .L0 
     /tmp/ccBw2xDq.s:1215   .text:00000000000005fc .L0 
     /tmp/ccBw2xDq.s:1216   .text:00000000000005fc .L0 
     /tmp/ccBw2xDq.s:1219   .text:0000000000000604 .L0 
     /tmp/ccBw2xDq.s:1222   .text:0000000000000608 .L0 
     /tmp/ccBw2xDq.s:1223   .text:0000000000000608 .L0 
     /tmp/ccBw2xDq.s:1224   .text:0000000000000608 .L0 
     /tmp/ccBw2xDq.s:1227   .text:0000000000000610 .L0 
     /tmp/ccBw2xDq.s:1230   .text:0000000000000614 .L0 
     /tmp/ccBw2xDq.s:1231   .text:0000000000000614 .L0 
     /tmp/ccBw2xDq.s:1232   .text:0000000000000614 .L0 
     /tmp/ccBw2xDq.s:1235   .text:000000000000061c .L0 
     /tmp/ccBw2xDq.s:1239   .text:0000000000000620 .L0 
     /tmp/ccBw2xDq.s:1256   .bss:0000000000000008 _ZN5Riscv14semaphoreCacheE
     /tmp/ccBw2xDq.s:1252   .bss:0000000000000000 _ZN5Riscv8pcbCacheE
     /tmp/ccBw2xDq.s:1264   .bss:0000000000000011 _ZN5Riscv16kernelMainCalledE
     /tmp/ccBw2xDq.s:1260   .bss:0000000000000010 _ZN5Riscv12finishSystemE
     /tmp/ccBw2xDq.s:1269   .bss:0000000000000018 _ZN5Riscv9totalTimeE
GAS LISTING /tmp/ccBw2xDq.s 			page 45


     /tmp/ccBw2xDq.s:1249   .bss:0000000000000000 .LANCHOR0
     /tmp/ccBw2xDq.s:1282   .text:0000000000000620 .L0 
     /tmp/ccBw2xDq.s:24     .text:0000000000000010 .L0 
     /tmp/ccBw2xDq.s:26     .text:000000000000001c .L0 
     /tmp/ccBw2xDq.s:95     .text:0000000000000080 .L0 
     /tmp/ccBw2xDq.s:112    .text:000000000000008c .L0 
     /tmp/ccBw2xDq.s:114    .text:0000000000000098 .L0 
     /tmp/ccBw2xDq.s:68     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccBw2xDq.s:156    .text:00000000000000f4 .L0 
     /tmp/ccBw2xDq.s:160    .text:0000000000000104 .L0 
     /tmp/ccBw2xDq.s:71     .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccBw2xDq.s:167    .text:000000000000011c .L0 
     /tmp/ccBw2xDq.s:295    .text:00000000000001b4 .L0 
     /tmp/ccBw2xDq.s:308    .text:00000000000001c8 .L0 
     /tmp/ccBw2xDq.s:315    .text:00000000000001dc .L0 
     /tmp/ccBw2xDq.s:325    .text:00000000000001f0 .L0 
     /tmp/ccBw2xDq.s:397    .text:000000000000024c .L0 
     /tmp/ccBw2xDq.s:413    .text:0000000000000270 .L0 
     /tmp/ccBw2xDq.s:426    .text:0000000000000288 .L0 
     /tmp/ccBw2xDq.s:543    .text:000000000000031c .L0 
     /tmp/ccBw2xDq.s:587    .text:0000000000000350 .L0 
     /tmp/ccBw2xDq.s:662    .text:000000000000039c .L0 
     /tmp/ccBw2xDq.s:666    .text:00000000000003a8 .L0 
     /tmp/ccBw2xDq.s:815    .text:000000000000046c .L0 
     /tmp/ccBw2xDq.s:821    .text:0000000000000480 .L0 
     /tmp/ccBw2xDq.s:831    .text:000000000000049c .L0 
     /tmp/ccBw2xDq.s:993    .rodata:0000000000000000 .L47
     /tmp/ccBw2xDq.s:985    .text:0000000000000530 .L0 
     /tmp/ccBw2xDq.s:298    .text:00000000000001bc .L10
     /tmp/ccBw2xDq.s:337    .text:0000000000000214 .L11
     /tmp/ccBw2xDq.s:321    .text:00000000000001f0 .L12
     /tmp/ccBw2xDq.s:400    .text:000000000000025c .L24
     /tmp/ccBw2xDq.s:438    .text:00000000000002ac .L18
     /tmp/ccBw2xDq.s:422    .text:0000000000000288 .L19
     /tmp/ccBw2xDq.s:616    .text:0000000000000378 .L32
     /tmp/ccBw2xDq.s:605    .text:000000000000036c .L31
     /tmp/ccBw2xDq.s:728    .text:0000000000000408 .L36
     /tmp/ccBw2xDq.s:926    .text:00000000000004fc .L37
     /tmp/ccBw2xDq.s:915    .text:00000000000004f0 .L38
     /tmp/ccBw2xDq.s:713    .text:00000000000003f4 .L64
     /tmp/ccBw2xDq.s:885    .text:00000000000004cc .L35
     /tmp/ccBw2xDq.s:755    .text:0000000000000444 .L42
     /tmp/ccBw2xDq.s:901    .text:00000000000004e0 .L65
     /tmp/ccBw2xDq.s:847    .text:00000000000004b4 .L44
     /tmp/ccBw2xDq.s:1070   .text:0000000000000550 .L45
     /tmp/ccBw2xDq.s:1063   .text:0000000000000548 .L62
     /tmp/ccBw2xDq.s:1113   .text:000000000000056c .L61
     /tmp/ccBw2xDq.s:1132   .text:0000000000000584 .L60
     /tmp/ccBw2xDq.s:1156   .text:00000000000005a8 .L59
     /tmp/ccBw2xDq.s:1148   .text:000000000000059c .L58
     /tmp/ccBw2xDq.s:1124   .text:0000000000000578 .L57
     /tmp/ccBw2xDq.s:1140   .text:0000000000000590 .L56
     /tmp/ccBw2xDq.s:1172   .text:00000000000005c0 .L55
     /tmp/ccBw2xDq.s:1180   .text:00000000000005cc .L54
     /tmp/ccBw2xDq.s:1204   .text:00000000000005f0 .L53
     /tmp/ccBw2xDq.s:1188   .text:00000000000005d8 .L52
     /tmp/ccBw2xDq.s:1196   .text:00000000000005e4 .L51
GAS LISTING /tmp/ccBw2xDq.s 			page 46


     /tmp/ccBw2xDq.s:1164   .text:00000000000005b4 .L50
     /tmp/ccBw2xDq.s:1212   .text:00000000000005fc .L49
     /tmp/ccBw2xDq.s:1220   .text:0000000000000608 .L48
     /tmp/ccBw2xDq.s:1228   .text:0000000000000614 .L46
     /tmp/ccBw2xDq.s:3935   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccBw2xDq.s:5774   .debug_str:00000000000011ee .LASF342
     /tmp/ccBw2xDq.s:5362   .debug_str:00000000000003c1 .LASF343
     /tmp/ccBw2xDq.s:5412   .debug_str:0000000000000581 .LASF344
     /tmp/ccBw2xDq.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccBw2xDq.s:1272   .text:0000000000000620 .Letext0
     /tmp/ccBw2xDq.s:5260   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccBw2xDq.s:5488   .debug_str:0000000000000828 .LASF0
     /tmp/ccBw2xDq.s:5532   .debug_str:00000000000009a6 .LASF1
     /tmp/ccBw2xDq.s:5706   .debug_str:0000000000000fb1 .LASF2
     /tmp/ccBw2xDq.s:5722   .debug_str:000000000000103f .LASF4
     /tmp/ccBw2xDq.s:5508   .debug_str:00000000000008d0 .LASF3
     /tmp/ccBw2xDq.s:5288   .debug_str:0000000000000110 .LASF5
     /tmp/ccBw2xDq.s:5644   .debug_str:0000000000000ddd .LASF6
     /tmp/ccBw2xDq.s:5522   .debug_str:000000000000095f .LASF7
     /tmp/ccBw2xDq.s:5450   .debug_str:00000000000006c9 .LASF8
     /tmp/ccBw2xDq.s:5460   .debug_str:000000000000072d .LASF9
     /tmp/ccBw2xDq.s:5348   .debug_str:000000000000035e .LASF10
     /tmp/ccBw2xDq.s:5320   .debug_str:0000000000000254 .LASF11
     /tmp/ccBw2xDq.s:5434   .debug_str:0000000000000671 .LASF12
     /tmp/ccBw2xDq.s:5364   .debug_str:00000000000003cf .LASF13
     /tmp/ccBw2xDq.s:5346   .debug_str:000000000000034e .LASF14
     /tmp/ccBw2xDq.s:5782   .debug_str:00000000000012eb .LASF15
     /tmp/ccBw2xDq.s:5408   .debug_str:000000000000055b .LASF16
     /tmp/ccBw2xDq.s:5764   .debug_str:0000000000001175 .LASF17
     /tmp/ccBw2xDq.s:5430   .debug_str:0000000000000653 .LASF18
     /tmp/ccBw2xDq.s:5428   .debug_str:0000000000000646 .LASF345
     /tmp/ccBw2xDq.s:5884   .debug_str:00000000000015f7 .LASF112
     /tmp/ccBw2xDq.s:5678   .debug_str:0000000000000efb .LASF22
     /tmp/ccBw2xDq.s:5538   .debug_str:00000000000009da .LASF19
     /tmp/ccBw2xDq.s:5418   .debug_str:00000000000005d3 .LASF20
     /tmp/ccBw2xDq.s:5906   .debug_str:00000000000016b5 .LASF21
     /tmp/ccBw2xDq.s:5866   .debug_str:000000000000151e .LASF23
     /tmp/ccBw2xDq.s:5424   .debug_str:0000000000000613 .LASF24
     /tmp/ccBw2xDq.s:5812   .debug_str:00000000000013a3 .LASF25
     /tmp/ccBw2xDq.s:5378   .debug_str:000000000000045c .LASF26
     /tmp/ccBw2xDq.s:5482   .debug_str:00000000000007ff .LASF45
     /tmp/ccBw2xDq.s:5768   .debug_str:000000000000119a .LASF47
     /tmp/ccBw2xDq.s:5878   .debug_str:00000000000015be .LASF65
     /tmp/ccBw2xDq.s:5916   .debug_str:00000000000016ff .LASF27
     /tmp/ccBw2xDq.s:5744   .debug_str:00000000000010de .LASF29
     /tmp/ccBw2xDq.s:5596   .debug_str:0000000000000c10 .LASF28
     /tmp/ccBw2xDq.s:5572   .debug_str:0000000000000b0c .LASF30
     /tmp/ccBw2xDq.s:5404   .debug_str:000000000000053e .LASF31
     /tmp/ccBw2xDq.s:5276   .debug_str:0000000000000080 .LASF32
     /tmp/ccBw2xDq.s:5324   .debug_str:0000000000000276 .LASF33
     /tmp/ccBw2xDq.s:5662   .debug_str:0000000000000e67 .LASF34
     /tmp/ccBw2xDq.s:5576   .debug_str:0000000000000b43 .LASF49
     /tmp/ccBw2xDq.s:5880   .debug_str:00000000000015cf .LASF51
     /tmp/ccBw2xDq.s:5342   .debug_str:000000000000032a .LASF35
     /tmp/ccBw2xDq.s:5546   .debug_str:0000000000000a21 .LASF36
     /tmp/ccBw2xDq.s:5396   .debug_str:00000000000004ca .LASF37
     /tmp/ccBw2xDq.s:5354   .debug_str:000000000000037b .LASF38
GAS LISTING /tmp/ccBw2xDq.s 			page 47


     /tmp/ccBw2xDq.s:5500   .debug_str:000000000000088e .LASF39
     /tmp/ccBw2xDq.s:5372   .debug_str:0000000000000426 .LASF40
     /tmp/ccBw2xDq.s:5734   .debug_str:000000000000107d .LASF41
     /tmp/ccBw2xDq.s:5416   .debug_str:00000000000005b8 .LASF42
     /tmp/ccBw2xDq.s:5494   .debug_str:0000000000000867 .LASF43
     /tmp/ccBw2xDq.s:5896   .debug_str:000000000000165d .LASF44
     /tmp/ccBw2xDq.s:5856   .debug_str:00000000000014e6 .LASF46
     /tmp/ccBw2xDq.s:5838   .debug_str:0000000000001462 .LASF48
     /tmp/ccBw2xDq.s:5702   .debug_str:0000000000000f9d .LASF50
     /tmp/ccBw2xDq.s:5622   .debug_str:0000000000000cfc .LASF52
     /tmp/ccBw2xDq.s:5664   .debug_str:0000000000000e89 .LASF53
     /tmp/ccBw2xDq.s:5672   .debug_str:0000000000000ec9 .LASF54
     /tmp/ccBw2xDq.s:5612   .debug_str:0000000000000c91 .LASF55
     /tmp/ccBw2xDq.s:5524   .debug_str:0000000000000972 .LASF56
     /tmp/ccBw2xDq.s:5898   .debug_str:0000000000001677 .LASF57
     /tmp/ccBw2xDq.s:5820   .debug_str:00000000000013cd .LASF58
     /tmp/ccBw2xDq.s:5604   .debug_str:0000000000000c4b .LASF59
     /tmp/ccBw2xDq.s:5620   .debug_str:0000000000000ce8 .LASF60
     /tmp/ccBw2xDq.s:5590   .debug_str:0000000000000bd4 .LASF61
     /tmp/ccBw2xDq.s:5676   .debug_str:0000000000000ee7 .LASF62
     /tmp/ccBw2xDq.s:5956   .debug_str:0000000000001873 .LASF63
     /tmp/ccBw2xDq.s:5498   .debug_str:000000000000087a .LASF64
     /tmp/ccBw2xDq.s:5924   .debug_str:0000000000001749 .LASF66
     /tmp/ccBw2xDq.s:5776   .debug_str:00000000000012b2 .LASF67
     /tmp/ccBw2xDq.s:5728   .debug_str:000000000000105b .LASF68
     /tmp/ccBw2xDq.s:5730   .debug_str:000000000000106e .LASF69
     /tmp/ccBw2xDq.s:5402   .debug_str:000000000000052b .LASF70
     /tmp/ccBw2xDq.s:5394   .debug_str:00000000000004c4 .LASF71
     /tmp/ccBw2xDq.s:5296   .debug_str:0000000000000150 .LASF72
     /tmp/ccBw2xDq.s:5496   .debug_str:0000000000000874 .LASF73
     /tmp/ccBw2xDq.s:5382   .debug_str:000000000000047b .LASF74
     /tmp/ccBw2xDq.s:5334   .debug_str:00000000000002d6 .LASF75
     /tmp/ccBw2xDq.s:5736   .debug_str:000000000000108b .LASF76
     /tmp/ccBw2xDq.s:5290   .debug_str:0000000000000117 .LASF77
     /tmp/ccBw2xDq.s:5710   .debug_str:0000000000000fc6 .LASF78
     /tmp/ccBw2xDq.s:5704   .debug_str:0000000000000fa6 .LASF79
     /tmp/ccBw2xDq.s:5942   .debug_str:00000000000017ee .LASF80
     /tmp/ccBw2xDq.s:5708   .debug_str:0000000000000fbf .LASF81
     /tmp/ccBw2xDq.s:5344   .debug_str:000000000000033b .LASF82
     /tmp/ccBw2xDq.s:5760   .debug_str:0000000000001160 .LASF83
     /tmp/ccBw2xDq.s:5716   .debug_str:0000000000000ffd .LASF84
     /tmp/ccBw2xDq.s:5886   .debug_str:00000000000015fd .LASF85
     /tmp/ccBw2xDq.s:5912   .debug_str:00000000000016d3 .LASF86
     /tmp/ccBw2xDq.s:5882   .debug_str:00000000000015ed .LASF87
     /tmp/ccBw2xDq.s:5578   .debug_str:0000000000000b53 .LASF88
     /tmp/ccBw2xDq.s:5688   .debug_str:0000000000000f3d .LASF89
     /tmp/ccBw2xDq.s:5472   .debug_str:00000000000007c1 .LASF90
     /tmp/ccBw2xDq.s:5480   .debug_str:00000000000007f9 .LASF91
     /tmp/ccBw2xDq.s:5374   .debug_str:0000000000000445 .LASF92
     /tmp/ccBw2xDq.s:5476   .debug_str:00000000000007d9 .LASF93
     /tmp/ccBw2xDq.s:5484   .debug_str:000000000000080a .LASF94
     /tmp/ccBw2xDq.s:5846   .debug_str:000000000000149c .LASF95
     /tmp/ccBw2xDq.s:5458   .debug_str:0000000000000711 .LASF96
     /tmp/ccBw2xDq.s:5650   .debug_str:0000000000000e03 .LASF97
     /tmp/ccBw2xDq.s:5518   .debug_str:0000000000000937 .LASF98
     /tmp/ccBw2xDq.s:5692   .debug_str:0000000000000f57 .LASF99
     /tmp/ccBw2xDq.s:5282   .debug_str:00000000000000cc .LASF100
GAS LISTING /tmp/ccBw2xDq.s 			page 48


     /tmp/ccBw2xDq.s:5322   .debug_str:0000000000000267 .LASF101
     /tmp/ccBw2xDq.s:5844   .debug_str:0000000000001490 .LASF102
     /tmp/ccBw2xDq.s:5934   .debug_str:000000000000178b .LASF103
     /tmp/ccBw2xDq.s:5594   .debug_str:0000000000000bfe .LASF104
     /tmp/ccBw2xDq.s:5464   .debug_str:000000000000074c .LASF105
     /tmp/ccBw2xDq.s:5506   .debug_str:00000000000008bd .LASF106
     /tmp/ccBw2xDq.s:5340   .debug_str:0000000000000316 .LASF107
     /tmp/ccBw2xDq.s:5806   .debug_str:000000000000137f .LASF108
     /tmp/ccBw2xDq.s:5684   .debug_str:0000000000000f25 .LASF109
     /tmp/ccBw2xDq.s:5698   .debug_str:0000000000000f75 .LASF110
     /tmp/ccBw2xDq.s:5564   .debug_str:0000000000000ada .LASF111
     /tmp/ccBw2xDq.s:5638   .debug_str:0000000000000d9f .LASF113
     /tmp/ccBw2xDq.s:5750   .debug_str:000000000000110a .LASF116
     /tmp/ccBw2xDq.s:5530   .debug_str:00000000000009a1 .LASF114
     /tmp/ccBw2xDq.s:5350   .debug_str:000000000000036d .LASF115
     /tmp/ccBw2xDq.s:5444   .debug_str:00000000000006a9 .LASF117
     /tmp/ccBw2xDq.s:5534   .debug_str:00000000000009b9 .LASF118
     /tmp/ccBw2xDq.s:5536   .debug_str:00000000000009c7 .LASF119
     /tmp/ccBw2xDq.s:5440   .debug_str:0000000000000694 .LASF120
     /tmp/ccBw2xDq.s:5960   .debug_str:0000000000001899 .LASF121
     /tmp/ccBw2xDq.s:5582   .debug_str:0000000000000b88 .LASF122
     /tmp/ccBw2xDq.s:5292   .debug_str:0000000000000122 .LASF124
     /tmp/ccBw2xDq.s:5788   .debug_str:0000000000001319 .LASF123
     /tmp/ccBw2xDq.s:5584   .debug_str:0000000000000b92 .LASF125
     /tmp/ccBw2xDq.s:5876   .debug_str:00000000000015b3 .LASF126
     /tmp/ccBw2xDq.s:5872   .debug_str:0000000000001560 .LASF127
     /tmp/ccBw2xDq.s:5784   .debug_str:00000000000012f7 .LASF128
     /tmp/ccBw2xDq.s:5284   .debug_str:00000000000000d4 .LASF129
     /tmp/ccBw2xDq.s:5890   .debug_str:000000000000160c .LASF130
     /tmp/ccBw2xDq.s:5280   .debug_str:000000000000009e .LASF131
     /tmp/ccBw2xDq.s:5796   .debug_str:0000000000001348 .LASF132
     /tmp/ccBw2xDq.s:5470   .debug_str:0000000000000792 .LASF133
     /tmp/ccBw2xDq.s:5268   .debug_str:0000000000000031 .LASF134
     /tmp/ccBw2xDq.s:5624   .debug_str:0000000000000d11 .LASF135
     /tmp/ccBw2xDq.s:5410   .debug_str:0000000000000571 .LASF136
     /tmp/ccBw2xDq.s:5894   .debug_str:0000000000001635 .LASF137
     /tmp/ccBw2xDq.s:5766   .debug_str:000000000000118b .LASF138
     /tmp/ccBw2xDq.s:5400   .debug_str:0000000000000504 .LASF139
     /tmp/ccBw2xDq.s:5390   .debug_str:00000000000004ac .LASF140
     /tmp/ccBw2xDq.s:5874   .debug_str:0000000000001584 .LASF141
     /tmp/ccBw2xDq.s:5436   .debug_str:0000000000000680 .LASF142
     /tmp/ccBw2xDq.s:5574   .debug_str:0000000000000b24 .LASF143
     /tmp/ccBw2xDq.s:5302   .debug_str:0000000000000192 .LASF144
     /tmp/ccBw2xDq.s:5626   .debug_str:0000000000000d3b .LASF145
     /tmp/ccBw2xDq.s:5804   .debug_str:0000000000001379 .LASF146
     /tmp/ccBw2xDq.s:5338   .debug_str:0000000000000310 .LASF147
     /tmp/ccBw2xDq.s:5748   .debug_str:0000000000001102 .LASF148
     /tmp/ccBw2xDq.s:5356   .debug_str:000000000000039f .LASF149
     /tmp/ccBw2xDq.s:5326   .debug_str:000000000000028b .LASF150
     /tmp/ccBw2xDq.s:5648   .debug_str:0000000000000dfb .LASF151
     /tmp/ccBw2xDq.s:5528   .debug_str:0000000000000998 .LASF152
     /tmp/ccBw2xDq.s:5724   .debug_str:0000000000001046 .LASF153
     /tmp/ccBw2xDq.s:5474   .debug_str:00000000000007d3 .LASF154
     /tmp/ccBw2xDq.s:5832   .debug_str:0000000000001440 .LASF155
     /tmp/ccBw2xDq.s:5600   .debug_str:0000000000000c2a .LASF346
     /tmp/ccBw2xDq.s:5628   .debug_str:0000000000000d59 .LASF156
     /tmp/ccBw2xDq.s:5888   .debug_str:0000000000001607 .LASF157
GAS LISTING /tmp/ccBw2xDq.s 			page 49


     /tmp/ccBw2xDq.s:5936   .debug_str:000000000000179e .LASF158
     /tmp/ccBw2xDq.s:5928   .debug_str:0000000000001764 .LASF159
     /tmp/ccBw2xDq.s:5818   .debug_str:00000000000013bd .LASF160
     /tmp/ccBw2xDq.s:5386   .debug_str:000000000000049e .LASF161
     /tmp/ccBw2xDq.s:5304   .debug_str:0000000000000198 .LASF162
     /tmp/ccBw2xDq.s:5810   .debug_str:000000000000139b .LASF163
     /tmp/ccBw2xDq.s:5384   .debug_str:000000000000048d .LASF164
     /tmp/ccBw2xDq.s:5570   .debug_str:0000000000000aff .LASF169
     /tmp/ccBw2xDq.s:5548   .debug_str:0000000000000a3f .LASF171
     /tmp/ccBw2xDq.s:5946   .debug_str:000000000000181b .LASF165
     /tmp/ccBw2xDq.s:5438   .debug_str:0000000000000688 .LASF166
     /tmp/ccBw2xDq.s:5490   .debug_str:0000000000000835 .LASF167
     /tmp/ccBw2xDq.s:5502   .debug_str:00000000000008a0 .LASF168
     /tmp/ccBw2xDq.s:5740   .debug_str:00000000000010b7 .LASF170
     /tmp/ccBw2xDq.s:5380   .debug_str:0000000000000468 .LASF172
     /tmp/ccBw2xDq.s:5668   .debug_str:0000000000000eb3 .LASF173
     /tmp/ccBw2xDq.s:5772   .debug_str:00000000000011d2 .LASF174
     /tmp/ccBw2xDq.s:5598   .debug_str:0000000000000c1b .LASF175
     /tmp/ccBw2xDq.s:5270   .debug_str:0000000000000042 .LASF176
     /tmp/ccBw2xDq.s:5910   .debug_str:00000000000016c4 .LASF177
     /tmp/ccBw2xDq.s:5640   .debug_str:0000000000000daf .LASF178
     /tmp/ccBw2xDq.s:5762   .debug_str:0000000000001167 .LASF179
     /tmp/ccBw2xDq.s:5298   .debug_str:0000000000000162 .LASF180
     /tmp/ccBw2xDq.s:5264   .debug_str:000000000000000f .LASF181
     /tmp/ccBw2xDq.s:5618   .debug_str:0000000000000cd8 .LASF182
     /tmp/ccBw2xDq.s:5696   .debug_str:0000000000000f68 .LASF183
     /tmp/ccBw2xDq.s:5560   .debug_str:0000000000000abf .LASF184
     /tmp/ccBw2xDq.s:5918   .debug_str:000000000000170e .LASF185
     /tmp/ccBw2xDq.s:5510   .debug_str:00000000000008e2 .LASF186
     /tmp/ccBw2xDq.s:5754   .debug_str:000000000000112d .LASF187
     /tmp/ccBw2xDq.s:5914   .debug_str:00000000000016e9 .LASF188
     /tmp/ccBw2xDq.s:5790   .debug_str:0000000000001322 .LASF189
     /tmp/ccBw2xDq.s:5756   .debug_str:0000000000001138 .LASF190
     /tmp/ccBw2xDq.s:5732   .debug_str:0000000000001075 .LASF191
     /tmp/ccBw2xDq.s:5642   .debug_str:0000000000000dc9 .LASF192
     /tmp/ccBw2xDq.s:5610   .debug_str:0000000000000c72 .LASF193
     /tmp/ccBw2xDq.s:5370   .debug_str:0000000000000414 .LASF194
     /tmp/ccBw2xDq.s:5456   .debug_str:00000000000006f4 .LASF195
     /tmp/ccBw2xDq.s:5962   .debug_str:00000000000018a3 .LASF196
     /tmp/ccBw2xDq.s:5614   .debug_str:0000000000000c98 .LASF197
     /tmp/ccBw2xDq.s:5714   .debug_str:0000000000000fea .LASF198
     /tmp/ccBw2xDq.s:5742   .debug_str:00000000000010c0 .LASF199
     /tmp/ccBw2xDq.s:5862   .debug_str:0000000000001500 .LASF200
     /tmp/ccBw2xDq.s:5958   .debug_str:000000000000187b .LASF201
     /tmp/ccBw2xDq.s:5944   .debug_str:0000000000001806 .LASF202
     /tmp/ccBw2xDq.s:5770   .debug_str:00000000000011b2 .LASF203
     /tmp/ccBw2xDq.s:5636   .debug_str:0000000000000d8b .LASF204
     /tmp/ccBw2xDq.s:5616   .debug_str:0000000000000cb9 .LASF205
     /tmp/ccBw2xDq.s:5720   .debug_str:0000000000001036 .LASF206
     /tmp/ccBw2xDq.s:5674   .debug_str:0000000000000edc .LASF207
     /tmp/ccBw2xDq.s:5454   .debug_str:00000000000006ec .LASF208
     /tmp/ccBw2xDq.s:5822   .debug_str:00000000000013e1 .LASF209
     /tmp/ccBw2xDq.s:5442   .debug_str:000000000000069d .LASF210
     /tmp/ccBw2xDq.s:5926   .debug_str:0000000000001756 .LASF211
     /tmp/ccBw2xDq.s:5314   .debug_str:0000000000000207 .LASF212
     /tmp/ccBw2xDq.s:5316   .debug_str:000000000000022f .LASF213
     /tmp/ccBw2xDq.s:5336   .debug_str:00000000000002e4 .LASF214
GAS LISTING /tmp/ccBw2xDq.s 			page 50


     /tmp/ccBw2xDq.s:5950   .debug_str:0000000000001837 .LASF215
     /tmp/ccBw2xDq.s:5332   .debug_str:00000000000002c5 .LASF216
     /tmp/ccBw2xDq.s:5274   .debug_str:000000000000007b .LASF217
     /tmp/ccBw2xDq.s:5858   .debug_str:00000000000014ef .LASF218
     /tmp/ccBw2xDq.s:5558   .debug_str:0000000000000ab7 .LASF219
     /tmp/ccBw2xDq.s:5392   .debug_str:00000000000004be .LASF220
     /tmp/ccBw2xDq.s:5836   .debug_str:000000000000145a .LASF221
     /tmp/ccBw2xDq.s:5462   .debug_str:000000000000073b .LASF222
     /tmp/ccBw2xDq.s:5798   .debug_str:000000000000135d .LASF223
     /tmp/ccBw2xDq.s:5904   .debug_str:00000000000016a8 .LASF224
     /tmp/ccBw2xDq.s:5634   .debug_str:0000000000000d7b .LASF225
     /tmp/ccBw2xDq.s:5266   .debug_str:000000000000001f .LASF226
     /tmp/ccBw2xDq.s:5426   .debug_str:000000000000061f .LASF227
     /tmp/ccBw2xDq.s:5328   .debug_str:0000000000000294 .LASF228
     /tmp/ccBw2xDq.s:5398   .debug_str:00000000000004e1 .LASF229
     /tmp/ccBw2xDq.s:5682   .debug_str:0000000000000f1a .LASF230
     /tmp/ccBw2xDq.s:5690   .debug_str:0000000000000f43 .LASF231
     /tmp/ccBw2xDq.s:5312   .debug_str:00000000000001fb .LASF232
     /tmp/ccBw2xDq.s:5680   .debug_str:0000000000000f06 .LASF233
     /tmp/ccBw2xDq.s:5388   .debug_str:00000000000004a7 .LASF234
     /tmp/ccBw2xDq.s:5752   .debug_str:0000000000001116 .LASF235
     /tmp/ccBw2xDq.s:5786   .debug_str:0000000000001312 .LASF236
     /tmp/ccBw2xDq.s:5700   .debug_str:0000000000000f84 .LASF237
     /tmp/ccBw2xDq.s:5802   .debug_str:000000000000136d .LASF238
     /tmp/ccBw2xDq.s:5712   .debug_str:0000000000000fde .LASF239
     /tmp/ccBw2xDq.s:5568   .debug_str:0000000000000aeb .LASF240
     /tmp/ccBw2xDq.s:5478   .debug_str:00000000000007e4 .LASF241
     /tmp/ccBw2xDq.s:5352   .debug_str:0000000000000372 .LASF242
     /tmp/ccBw2xDq.s:5360   .debug_str:00000000000003b7 .LASF243
     /tmp/ccBw2xDq.s:5602   .debug_str:0000000000000c42 .LASF244
     /tmp/ccBw2xDq.s:5646   .debug_str:0000000000000df0 .LASF245
     /tmp/ccBw2xDq.s:5262   .debug_str:0000000000000000 .LASF246
     /tmp/ccBw2xDq.s:5468   .debug_str:0000000000000770 .LASF247
     /tmp/ccBw2xDq.s:5834   .debug_str:000000000000144b .LASF248
     /tmp/ccBw2xDq.s:5778   .debug_str:00000000000012b9 .LASF249
     /tmp/ccBw2xDq.s:5830   .debug_str:000000000000142f .LASF250
     /tmp/ccBw2xDq.s:5368   .debug_str:00000000000003f0 .LASF251
     /tmp/ccBw2xDq.s:5794   .debug_str:0000000000001338 .LASF252
     /tmp/ccBw2xDq.s:5666   .debug_str:0000000000000e90 .LASF253
     /tmp/ccBw2xDq.s:5486   .debug_str:0000000000000822 .LASF254
     /tmp/ccBw2xDq.s:5954   .debug_str:000000000000185b .LASF255
     /tmp/ccBw2xDq.s:5278   .debug_str:0000000000000096 .LASF256
     /tmp/ccBw2xDq.s:5556   .debug_str:0000000000000a9d .LASF257
     /tmp/ccBw2xDq.s:5504   .debug_str:00000000000008ad .LASF258
     /tmp/ccBw2xDq.s:5922   .debug_str:0000000000001726 .LASF259
     /tmp/ccBw2xDq.s:5892   .debug_str:0000000000001622 .LASF260
     /tmp/ccBw2xDq.s:5718   .debug_str:0000000000001010 .LASF261
     /tmp/ccBw2xDq.s:5932   .debug_str:000000000000177e .LASF262
     /tmp/ccBw2xDq.s:5300   .debug_str:000000000000016e .LASF263
     /tmp/ccBw2xDq.s:5606   .debug_str:0000000000000c53 .LASF264
     /tmp/ccBw2xDq.s:5318   .debug_str:0000000000000244 .LASF265
     /tmp/ccBw2xDq.s:5828   .debug_str:000000000000140d .LASF266
     /tmp/ccBw2xDq.s:5726   .debug_str:000000000000104e .LASF267
     /tmp/ccBw2xDq.s:5272   .debug_str:000000000000005c .LASF268
     /tmp/ccBw2xDq.s:5514   .debug_str:0000000000000918 .LASF269
     /tmp/ccBw2xDq.s:5554   .debug_str:0000000000000a76 .LASF270
     /tmp/ccBw2xDq.s:5452   .debug_str:00000000000006d9 .LASF271
GAS LISTING /tmp/ccBw2xDq.s 			page 51


     /tmp/ccBw2xDq.s:5420   .debug_str:00000000000005dc .LASF272
     /tmp/ccBw2xDq.s:5630   .debug_str:0000000000000d5e .LASF273
     /tmp/ccBw2xDq.s:5792   .debug_str:000000000000132d .LASF274
     /tmp/ccBw2xDq.s:5660   .debug_str:0000000000000e5d .LASF275
     /tmp/ccBw2xDq.s:5864   .debug_str:0000000000001513 .LASF276
     /tmp/ccBw2xDq.s:5800   .debug_str:0000000000001362 .LASF277
     /tmp/ccBw2xDq.s:5860   .debug_str:00000000000014f4 .LASF278
     /tmp/ccBw2xDq.s:5294   .debug_str:0000000000000143 .LASF279
     /tmp/ccBw2xDq.s:5586   .debug_str:0000000000000bb3 .LASF280
     /tmp/ccBw2xDq.s:5658   .debug_str:0000000000000e51 .LASF281
     /tmp/ccBw2xDq.s:5758   .debug_str:000000000000114e .LASF282
     /tmp/ccBw2xDq.s:5414   .debug_str:0000000000000596 .LASF283
     /tmp/ccBw2xDq.s:5854   .debug_str:00000000000014d4 .LASF284
     /tmp/ccBw2xDq.s:5492   .debug_str:0000000000000845 .LASF285
     /tmp/ccBw2xDq.s:5852   .debug_str:00000000000014c2 .LASF286
     /tmp/ccBw2xDq.s:5592   .debug_str:0000000000000bdc .LASF287
     /tmp/ccBw2xDq.s:5526   .debug_str:0000000000000985 .LASF288
     /tmp/ccBw2xDq.s:5330   .debug_str:00000000000002a2 .LASF289
     /tmp/ccBw2xDq.s:5406   .debug_str:0000000000000548 .LASF290
     /tmp/ccBw2xDq.s:5422   .debug_str:00000000000005f0 .LASF291
     /tmp/ccBw2xDq.s:5306   .debug_str:00000000000001ab .LASF292
     /tmp/ccBw2xDq.s:5948   .debug_str:0000000000001828 .LASF293
     /tmp/ccBw2xDq.s:5580   .debug_str:0000000000000b69 .LASF294
     /tmp/ccBw2xDq.s:5902   .debug_str:000000000000168f .LASF295
     /tmp/ccBw2xDq.s:5512   .debug_str:00000000000008ef .LASF296
     /tmp/ccBw2xDq.s:5540   .debug_str:00000000000009e3 .LASF297
     /tmp/ccBw2xDq.s:5938   .debug_str:00000000000017aa .LASF298
     /tmp/ccBw2xDq.s:5432   .debug_str:0000000000000660 .LASF299
     /tmp/ccBw2xDq.s:5808   .debug_str:0000000000001389 .LASF300
     /tmp/ccBw2xDq.s:5446   .debug_str:00000000000006b2 .LASF301
     /tmp/ccBw2xDq.s:5920   .debug_str:0000000000001719 .LASF302
     /tmp/ccBw2xDq.s:5466   .debug_str:000000000000075f .LASF303
     /tmp/ccBw2xDq.s:5516   .debug_str:000000000000092b .LASF304
     /tmp/ccBw2xDq.s:5542   .debug_str:00000000000009fb .LASF305
     /tmp/ccBw2xDq.s:5562   .debug_str:0000000000000ace .LASF306
     /tmp/ccBw2xDq.s:5310   .debug_str:00000000000001df .LASF307
     /tmp/ccBw2xDq.s:5448   .debug_str:00000000000006bf .LASF308
     /tmp/ccBw2xDq.s:5656   .debug_str:0000000000000e39 .LASF347
     /tmp/ccBw2xDq.s:5930   .debug_str:000000000000176a .LASF348
     /tmp/ccBw2xDq.s:5840   .debug_str:0000000000001477 .LASF309
     /tmp/ccBw2xDq.s:5632   .debug_str:0000000000000d68 .LASF310
     /tmp/ccBw2xDq.s:5814   .debug_str:00000000000013b0 .LASF311
     /tmp/ccBw2xDq.s:5654   .debug_str:0000000000000e21 .LASF312
     /tmp/ccBw2xDq.s:5520   .debug_str:0000000000000959 .LASF313
     /tmp/ccBw2xDq.s:5608   .debug_str:0000000000000c5c .LASF314
     /tmp/ccBw2xDq.s:5738   .debug_str:00000000000010a6 .LASF315
     /tmp/ccBw2xDq.s:5366   .debug_str:00000000000003df .LASF316
     /tmp/ccBw2xDq.s:5826   .debug_str:00000000000013f8 .LASF317
     /tmp/ccBw2xDq.s:5308   .debug_str:00000000000001c6 .LASF318
     /tmp/ccBw2xDq.s:5952   .debug_str:000000000000183e .LASF349
     /tmp/ccBw2xDq.s:5552   .debug_str:0000000000000a62 .LASF319
     /tmp/ccBw2xDq.s:5940   .debug_str:00000000000017d3 .LASF320
     /tmp/ccBw2xDq.s:576    .text:0000000000000344 .LFB38
     /tmp/ccBw2xDq.s:636    .text:0000000000000384 .LFE38
     /tmp/ccBw2xDq.s:594    .text:0000000000000364 .LBB44
     /tmp/ccBw2xDq.s:607    .text:000000000000036c .LBE44
     /tmp/ccBw2xDq.s:5025   .debug_loc:0000000000000000 .LLST11
GAS LISTING /tmp/ccBw2xDq.s 			page 52


     /tmp/ccBw2xDq.s:620    .text:0000000000000378 .LBB46
     /tmp/ccBw2xDq.s:632    .text:0000000000000380 .LBE46
     /tmp/ccBw2xDq.s:5034   .debug_loc:0000000000000026 .LLST12
     /tmp/ccBw2xDq.s:523    .text:000000000000030c .LFB37
     /tmp/ccBw2xDq.s:570    .text:0000000000000344 .LFE37
     /tmp/ccBw2xDq.s:5842   .debug_str:0000000000001489 .LASF321
     /tmp/ccBw2xDq.s:490    .text:00000000000002ec .LFB36
     /tmp/ccBw2xDq.s:517    .text:000000000000030c .LFE36
     /tmp/ccBw2xDq.s:459    .text:00000000000002c4 .LFB35
     /tmp/ccBw2xDq.s:484    .text:00000000000002ec .LFE35
     /tmp/ccBw2xDq.s:473    .text:00000000000002dc .LVL39
     /tmp/ccBw2xDq.s:393    .text:000000000000024c .LFB34
     /tmp/ccBw2xDq.s:453    .text:00000000000002c4 .LFE34
     /tmp/ccBw2xDq.s:417    .text:0000000000000280 .LVL34
     /tmp/ccBw2xDq.s:421    .text:0000000000000288 .LVL35
     /tmp/ccBw2xDq.s:429    .text:000000000000029c .LVL36
     /tmp/ccBw2xDq.s:435    .text:00000000000002a8 .LVL37
     /tmp/ccBw2xDq.s:442    .text:00000000000002b4 .LVL38
     /tmp/ccBw2xDq.s:642    .text:0000000000000384 .LFB33
     /tmp/ccBw2xDq.s:1240   .text:0000000000000620 .LFE33
     /tmp/ccBw2xDq.s:5286   .debug_str:0000000000000109 .LASF322
     /tmp/ccBw2xDq.s:5043   .debug_loc:000000000000004c .LLST13
     /tmp/ccBw2xDq.s:5246   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccBw2xDq.s:5816   .debug_str:00000000000013b8 .LASF323
     /tmp/ccBw2xDq.s:5746   .debug_str:00000000000010fa .LASF324
     /tmp/ccBw2xDq.s:760    .text:0000000000000444 .LBB53
     /tmp/ccBw2xDq.s:776    .text:0000000000000450 .LBE53
     /tmp/ccBw2xDq.s:780    .text:0000000000000454 .LBB55
     /tmp/ccBw2xDq.s:795    .text:0000000000000460 .LBE55
     /tmp/ccBw2xDq.s:800    .text:0000000000000464 .LBB57
     /tmp/ccBw2xDq.s:812    .text:000000000000046c .LBE57
     /tmp/ccBw2xDq.s:5070   .debug_loc:00000000000000ce .LLST14
     /tmp/ccBw2xDq.s:834    .text:00000000000004a8 .LBB59
     /tmp/ccBw2xDq.s:842    .text:00000000000004ac .LBE59
     /tmp/ccBw2xDq.s:5078   .debug_loc:00000000000000f2 .LLST15
     /tmp/ccBw2xDq.s:852    .text:00000000000004b8 .LBB61
     /tmp/ccBw2xDq.s:863    .text:00000000000004bc .LBE61
     /tmp/ccBw2xDq.s:5085   .debug_loc:0000000000000115 .LLST16
     /tmp/ccBw2xDq.s:868    .text:00000000000004c0 .LBB63
     /tmp/ccBw2xDq.s:879    .text:00000000000004c4 .LBE63
     /tmp/ccBw2xDq.s:5092   .debug_loc:0000000000000138 .LLST17
     /tmp/ccBw2xDq.s:828    .text:000000000000049c .LVL58
     /tmp/ccBw2xDq.s:883    .text:00000000000004cc .LVL65
     /tmp/ccBw2xDq.s:912    .text:00000000000004ec .LVL66
     /tmp/ccBw2xDq.s:5694   .debug_str:0000000000000f5e .LASF325
     /tmp/ccBw2xDq.s:5099   .debug_loc:000000000000015b .LLST18
     /tmp/ccBw2xDq.s:941    .text:0000000000000500 .LBB67
     /tmp/ccBw2xDq.s:956    .text:000000000000050c .LBE67
     /tmp/ccBw2xDq.s:962    .text:0000000000000514 .LBB69
     /tmp/ccBw2xDq.s:977    .text:0000000000000520 .LBE69
     /tmp/ccBw2xDq.s:1075   .text:0000000000000554 .LBB71
     /tmp/ccBw2xDq.s:1086   .text:0000000000000558 .LBE71
     /tmp/ccBw2xDq.s:5106   .debug_loc:000000000000017e .LLST19
     /tmp/ccBw2xDq.s:1091   .text:000000000000055c .LBB73
     /tmp/ccBw2xDq.s:1102   .text:0000000000000560 .LBE73
     /tmp/ccBw2xDq.s:5113   .debug_loc:00000000000001a1 .LLST20
     /tmp/ccBw2xDq.s:1068   .text:0000000000000550 .LVL72
GAS LISTING /tmp/ccBw2xDq.s 			page 53


     /tmp/ccBw2xDq.s:1106   .text:0000000000000568 .LVL77
     /tmp/ccBw2xDq.s:1121   .text:0000000000000574 .LVL78
     /tmp/ccBw2xDq.s:1129   .text:0000000000000580 .LVL79
     /tmp/ccBw2xDq.s:1137   .text:000000000000058c .LVL80
     /tmp/ccBw2xDq.s:1145   .text:0000000000000598 .LVL81
     /tmp/ccBw2xDq.s:1153   .text:00000000000005a4 .LVL82
     /tmp/ccBw2xDq.s:1161   .text:00000000000005b0 .LVL83
     /tmp/ccBw2xDq.s:1169   .text:00000000000005bc .LVL84
     /tmp/ccBw2xDq.s:1177   .text:00000000000005c8 .LVL85
     /tmp/ccBw2xDq.s:1185   .text:00000000000005d4 .LVL86
     /tmp/ccBw2xDq.s:1193   .text:00000000000005e0 .LVL87
     /tmp/ccBw2xDq.s:1201   .text:00000000000005ec .LVL88
     /tmp/ccBw2xDq.s:1209   .text:00000000000005f8 .LVL89
     /tmp/ccBw2xDq.s:1217   .text:0000000000000604 .LVL90
     /tmp/ccBw2xDq.s:1225   .text:0000000000000610 .LVL91
     /tmp/ccBw2xDq.s:1233   .text:000000000000061c .LVL92
     /tmp/ccBw2xDq.s:676    .text:00000000000003bc .LBB48
     /tmp/ccBw2xDq.s:692    .text:00000000000003c8 .LBE48
     /tmp/ccBw2xDq.s:709    .text:00000000000003f0 .LVL47
     /tmp/ccBw2xDq.s:724    .text:0000000000000404 .LVL49
     /tmp/ccBw2xDq.s:745    .text:0000000000000430 .LVL51
     /tmp/ccBw2xDq.s:749    .text:0000000000000438 .LVL52
     /tmp/ccBw2xDq.s:751    .text:0000000000000440 .LVL53
     /tmp/ccBw2xDq.s:922    .text:00000000000004f8 .LVL68
     /tmp/ccBw2xDq.s:358    .text:000000000000022c .LFB32
     /tmp/ccBw2xDq.s:387    .text:000000000000024c .LFE32
     /tmp/ccBw2xDq.s:239    .text:0000000000000178 .LFB31
     /tmp/ccBw2xDq.s:271    .text:0000000000000198 .LFE31
     /tmp/ccBw2xDq.s:250    .text:0000000000000184 .LBB42
     /tmp/ccBw2xDq.s:262    .text:000000000000018c .LBE42
     /tmp/ccBw2xDq.s:5120   .debug_loc:00000000000001c4 .LLST9
     /tmp/ccBw2xDq.s:201    .text:0000000000000158 .LFB30
     /tmp/ccBw2xDq.s:233    .text:0000000000000178 .LFE30
     /tmp/ccBw2xDq.s:212    .text:0000000000000164 .LBB40
     /tmp/ccBw2xDq.s:224    .text:000000000000016c .LBE40
     /tmp/ccBw2xDq.s:5128   .debug_loc:00000000000001e8 .LLST8
     /tmp/ccBw2xDq.s:277    .text:0000000000000198 .LFB29
     /tmp/ccBw2xDq.s:352    .text:000000000000022c .LFE29
     /tmp/ccBw2xDq.s:5136   .debug_loc:000000000000020c .LLST10
     /tmp/ccBw2xDq.s:291    .text:00000000000001b0 .LVL25
     /tmp/ccBw2xDq.s:303    .text:00000000000001c4 .LVL27
     /tmp/ccBw2xDq.s:312    .text:00000000000001dc .LVL29
     /tmp/ccBw2xDq.s:320    .text:00000000000001f0 .LVL30
     /tmp/ccBw2xDq.s:328    .text:0000000000000204 .LVL31
     /tmp/ccBw2xDq.s:334    .text:0000000000000210 .LVL32
     /tmp/ccBw2xDq.s:341    .text:000000000000021c .LVL33
     /tmp/ccBw2xDq.s:78     .text:0000000000000068 .LFB28
     /tmp/ccBw2xDq.s:195    .text:0000000000000158 .LFE28
     /tmp/ccBw2xDq.s:5780   .debug_str:00000000000012db .LASF326
     /tmp/ccBw2xDq.s:5143   .debug_loc:000000000000022f .LLST4
     /tmp/ccBw2xDq.s:5686   .debug_str:0000000000000f2e .LASF327
     /tmp/ccBw2xDq.s:5150   .debug_loc:0000000000000252 .LLST5
     /tmp/ccBw2xDq.s:5566   .debug_str:0000000000000adf .LASF328
     /tmp/ccBw2xDq.s:5163   .debug_loc:000000000000028b .LLST6
     /tmp/ccBw2xDq.s:5824   .debug_str:00000000000013eb .LASF329
     /tmp/ccBw2xDq.s:5170   .debug_loc:00000000000002ae .LLST7
     /tmp/ccBw2xDq.s:97     .text:0000000000000088 .LBB38
GAS LISTING /tmp/ccBw2xDq.s 			page 54


     /tmp/ccBw2xDq.s:109    .text:000000000000008c .LBE38
     /tmp/ccBw2xDq.s:144    .text:00000000000000d8 .LVL14
     /tmp/ccBw2xDq.s:150    .text:00000000000000e8 .LVL15
     /tmp/ccBw2xDq.s:158    .text:0000000000000104 .LVL16
     /tmp/ccBw2xDq.s:169    .text:000000000000012c .LVL17
     /tmp/ccBw2xDq.s:175    .text:0000000000000138 .LVL18
     /tmp/ccBw2xDq.s:179    .text:0000000000000140 .LVL19
     /tmp/ccBw2xDq.s:10     .text:0000000000000000 .LFB27
     /tmp/ccBw2xDq.s:64     .text:0000000000000068 .LFE27
     /tmp/ccBw2xDq.s:5186   .debug_loc:00000000000002e9 .LLST0
     /tmp/ccBw2xDq.s:5193   .debug_loc:000000000000030c .LLST1
     /tmp/ccBw2xDq.s:5206   .debug_loc:0000000000000345 .LLST2
     /tmp/ccBw2xDq.s:5217   .debug_loc:000000000000036c .LLST3
     /tmp/ccBw2xDq.s:53     .text:0000000000000058 .LVL5
     /tmp/ccBw2xDq.s:5376   .debug_str:0000000000000457 .LASF350
     /tmp/ccBw2xDq.s:5850   .debug_str:00000000000014bd .LASF330
     /tmp/ccBw2xDq.s:5908   .debug_str:00000000000016be .LASF331
     /tmp/ccBw2xDq.s:5670   .debug_str:0000000000000ebc .LASF332
     /tmp/ccBw2xDq.s:5652   .debug_str:0000000000000e18 .LASF334
     /tmp/ccBw2xDq.s:5588   .debug_str:0000000000000bbf .LASF333
     /tmp/ccBw2xDq.s:5868   .debug_str:000000000000152d .LASF335
     /tmp/ccBw2xDq.s:5550   .debug_str:0000000000000a57 .LASF336
     /tmp/ccBw2xDq.s:5358   .debug_str:00000000000003a9 .LASF337
     /tmp/ccBw2xDq.s:5900   .debug_str:000000000000167f .LASF338
     /tmp/ccBw2xDq.s:5544   .debug_str:0000000000000a17 .LASF339
     /tmp/ccBw2xDq.s:5870   .debug_str:000000000000153d .LASF340
     /tmp/ccBw2xDq.s:5848   .debug_str:00000000000014ab .LASF341
     /tmp/ccBw2xDq.s:593    .text:0000000000000364 .LVL42
     /tmp/ccBw2xDq.s:603    .text:000000000000036c .LVL43
     /tmp/ccBw2xDq.s:619    .text:0000000000000378 .LVL44
     /tmp/ccBw2xDq.s:629    .text:0000000000000380 .LVL45
     /tmp/ccBw2xDq.s:690    .text:00000000000003c8 .LVL46
     /tmp/ccBw2xDq.s:712    .text:00000000000003f4 .LVL48
     /tmp/ccBw2xDq.s:727    .text:0000000000000408 .LVL50
     /tmp/ccBw2xDq.s:754    .text:0000000000000444 .LVL54
     /tmp/ccBw2xDq.s:769    .text:0000000000000448 .LVL55
     /tmp/ccBw2xDq.s:914    .text:00000000000004f0 .LVL67
     /tmp/ccBw2xDq.s:925    .text:00000000000004fc .LVL69
     /tmp/ccBw2xDq.s:938    .text:0000000000000500 .LVL70
     /tmp/ccBw2xDq.s:799    .text:0000000000000464 .LVL56
     /tmp/ccBw2xDq.s:809    .text:000000000000046c .LVL57
     /tmp/ccBw2xDq.s:833    .text:00000000000004a8 .LVL59
     /tmp/ccBw2xDq.s:840    .text:00000000000004ac .LVL60
     /tmp/ccBw2xDq.s:851    .text:00000000000004b8 .LVL61
     /tmp/ccBw2xDq.s:860    .text:00000000000004bc .LVL62
     /tmp/ccBw2xDq.s:867    .text:00000000000004c0 .LVL63
     /tmp/ccBw2xDq.s:876    .text:00000000000004c4 .LVL64
     /tmp/ccBw2xDq.s:984    .text:0000000000000530 .LVL71
     /tmp/ccBw2xDq.s:1074   .text:0000000000000554 .LVL73
     /tmp/ccBw2xDq.s:1083   .text:0000000000000558 .LVL74
     /tmp/ccBw2xDq.s:1090   .text:000000000000055c .LVL75
     /tmp/ccBw2xDq.s:1099   .text:0000000000000560 .LVL76
     /tmp/ccBw2xDq.s:249    .text:0000000000000184 .LVL23
     /tmp/ccBw2xDq.s:259    .text:000000000000018c .LVL24
     /tmp/ccBw2xDq.s:211    .text:0000000000000164 .LVL21
     /tmp/ccBw2xDq.s:221    .text:000000000000016c .LVL22
     /tmp/ccBw2xDq.s:310    .text:00000000000001d4 .LVL28
GAS LISTING /tmp/ccBw2xDq.s 			page 55


     /tmp/ccBw2xDq.s:119    .text:00000000000000ac .LVL8
     /tmp/ccBw2xDq.s:124    .text:00000000000000b4 .LVL9
     /tmp/ccBw2xDq.s:130    .text:00000000000000c0 .LVL10
     /tmp/ccBw2xDq.s:138    .text:00000000000000cc .LVL12
     /tmp/ccBw2xDq.s:133    .text:00000000000000c4 .LVL11
     /tmp/ccBw2xDq.s:190    .text:0000000000000150 .LVL20
     /tmp/ccBw2xDq.s:142    .text:00000000000000d0 .LVL13
     /tmp/ccBw2xDq.s:31     .text:0000000000000030 .LVL0
     /tmp/ccBw2xDq.s:36     .text:0000000000000038 .LVL1
     /tmp/ccBw2xDq.s:42     .text:0000000000000044 .LVL2
     /tmp/ccBw2xDq.s:47     .text:000000000000004c .LVL3
     /tmp/ccBw2xDq.s:51     .text:0000000000000050 .LVL4
     /tmp/ccBw2xDq.s:1283   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccBw2xDq.s:758    .text:0000000000000444 .LBB52
     /tmp/ccBw2xDq.s:886    .text:00000000000004cc .LBE52
     /tmp/ccBw2xDq.s:905    .text:00000000000004e0 .LBB65
     /tmp/ccBw2xDq.s:916    .text:00000000000004f0 .LBE65
     /tmp/ccBw2xDq.s:930    .text:00000000000004fc .LBB66
     /tmp/ccBw2xDq.s:1108   .text:0000000000000568 .LBE66
     /tmp/ccBw2xDq.s:1116   .text:000000000000056c .LBB75
     /tmp/ccBw2xDq.s:1236   .text:0000000000000620 .LBE75

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR
_ZN15MemoryAllocator10initMemoryEPv
_ZN5Riscv14supervisorTrapEv
_Z9kmem_initPvi
_Z17kmem_cache_createPKcmPFvPvES3_
_ZN3PCB10initializeEv
_ZN8KConsole10initializeEv
_ZN9Scheduler3getEv
_ZN3PCB10consolePCBE
_ZN9Scheduler3putEP3PCB
_ZN8KConsole11pendingGetcE
_ZN3PCB10isFinishedEv
_Z15thread_dispatchv
_ZN3PCB7userPCBE
_Z8userMainv
_ZN3PCB7runningE
_ZN3PCB10savedRegA4E
_ZN3PCB17threadExitHandlerEv
_ZN8KConsole24getCharactersFromConsoleEv
plic_claim
plic_complete
_ZN3PCB16timeSliceCounterE
_ZN12SleepPCBList13tryToWakePCBsEv
_ZN3PCB8dispatchEv
_ZN15MemoryAllocator15memAllocHandlerEv
_ZN15MemoryAllocator14memFreeHandlerEv
_ZN3PCB20threadMakePCBHandlerEv
_ZN3PCB19threadCreateHandlerEv
_ZN3PCB18threadStartHandlerEv
_ZN3PCB21threadDispatchHandlerEv
_ZN3PCB18threadSleepHandlerEv
_ZN3PCB19threadDelPCBHandlerEv
_ZN10KSemaphore14semOpenHandlerEv
GAS LISTING /tmp/ccBw2xDq.s 			page 56


_ZN10KSemaphore14semWaitHandlerEv
_ZN10KSemaphore16semSignalHandlerEv
_ZN10KSemaphore15semCloseHandlerEv
_ZN8KConsole11getcHandlerEv
_ZN8KConsole11putcHandlerEv
_ZN8KConsole14getCharHandlerEv
