GAS LISTING /tmp/ccbdlM41.s 			page 1


   1              		.file	"slabAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z6strcpyPKcPc
   9              	_Z6strcpyPKcPc:
  10              	.LFB5:
  11              		.file 1 "src/kernel/slabAllocator.cpp"
   1:src/kernel/slabAllocator.cpp **** #include "../../h/slabAllocator.hpp"
   2:src/kernel/slabAllocator.cpp **** #include "../../h/buddyAllocator.hpp"
   3:src/kernel/slabAllocator.cpp **** #include "../../h/KConsole.hpp"
   4:src/kernel/slabAllocator.cpp **** 
   5:src/kernel/slabAllocator.cpp **** //TODO
   6:src/kernel/slabAllocator.cpp **** //check values of the constants
   7:src/kernel/slabAllocator.cpp **** #define SLAB_ALLOCATED_LOOKUP 1024
   8:src/kernel/slabAllocator.cpp **** #define CACHE_NAME_SIZE 64
   9:src/kernel/slabAllocator.cpp **** #define CACHE_BUFFER_SMALL 5
  10:src/kernel/slabAllocator.cpp **** #define CACHE_BUFFER_BIG 17
  11:src/kernel/slabAllocator.cpp **** #define CACHE_BUFFER_SIZE CACHE_BUFFER_BIG - CACHE_BUFFER_SMALL + 1
  12:src/kernel/slabAllocator.cpp **** #define CACHE_OF_CACHES_SLAB_SIZE 2
  13:src/kernel/slabAllocator.cpp **** #define NO_ERROR 0
  14:src/kernel/slabAllocator.cpp **** #define EXPAND_ERROR 0b1
  15:src/kernel/slabAllocator.cpp **** #define DESTROY_ERROR 0b10
  16:src/kernel/slabAllocator.cpp **** #define FREE_ERROR 0b100
  17:src/kernel/slabAllocator.cpp **** #define MAX_NUM_OF_OBJS SLAB_ALLOCATED_LOOKUP*8
  18:src/kernel/slabAllocator.cpp **** 
  19:src/kernel/slabAllocator.cpp **** //TODO
  20:src/kernel/slabAllocator.cpp **** //do i need to clear the errors
  21:src/kernel/slabAllocator.cpp **** typedef struct slab_s
  22:src/kernel/slabAllocator.cpp **** {
  23:src/kernel/slabAllocator.cpp ****     slab_s* prev;
  24:src/kernel/slabAllocator.cpp ****     slab_s* next;
  25:src/kernel/slabAllocator.cpp ****     kmem_cache_t* owner;
  26:src/kernel/slabAllocator.cpp ****     size_t numOfObjects;
  27:src/kernel/slabAllocator.cpp ****     size_t numOfAllocatedObjects;
  28:src/kernel/slabAllocator.cpp ****     unsigned char allocated[SLAB_ALLOCATED_LOOKUP];
  29:src/kernel/slabAllocator.cpp **** }slab_t;
  30:src/kernel/slabAllocator.cpp **** 
  31:src/kernel/slabAllocator.cpp **** typedef struct kmem_cache_s
  32:src/kernel/slabAllocator.cpp **** {
  33:src/kernel/slabAllocator.cpp ****     char cacheName[CACHE_NAME_SIZE];
  34:src/kernel/slabAllocator.cpp ****     slab_t* slabs_empty;
  35:src/kernel/slabAllocator.cpp ****     slab_t* slabs_full;
  36:src/kernel/slabAllocator.cpp ****     slab_t* slabs_partial;
  37:src/kernel/slabAllocator.cpp ****     size_t slab_size;
  38:src/kernel/slabAllocator.cpp ****     size_t obj_size;
  39:src/kernel/slabAllocator.cpp ****     void (*ctor)(void*);
  40:src/kernel/slabAllocator.cpp ****     void (*dtor)(void*);
  41:src/kernel/slabAllocator.cpp ****     int errors;
  42:src/kernel/slabAllocator.cpp **** }kmem_cache_t;
  43:src/kernel/slabAllocator.cpp **** 
  44:src/kernel/slabAllocator.cpp **** typedef struct slab_allocator_s
  45:src/kernel/slabAllocator.cpp **** {
  46:src/kernel/slabAllocator.cpp ****     buddyAllocator* buddy;
  47:src/kernel/slabAllocator.cpp ****     kmem_cache_t* cachesBuffers[CACHE_BUFFER_SIZE];
GAS LISTING /tmp/ccbdlM41.s 			page 2


  48:src/kernel/slabAllocator.cpp ****     kmem_cache_t cacheOfCaches;
  49:src/kernel/slabAllocator.cpp **** }slab_allocator_t;
  50:src/kernel/slabAllocator.cpp **** 
  51:src/kernel/slabAllocator.cpp **** //singleton slab allocator
  52:src/kernel/slabAllocator.cpp **** static slab_allocator_t* slabAllocator = nullptr;
  53:src/kernel/slabAllocator.cpp **** 
  54:src/kernel/slabAllocator.cpp **** //helping functions
  55:src/kernel/slabAllocator.cpp **** void strcpy(const char* src, char* dst)
  56:src/kernel/slabAllocator.cpp **** {
  12              		.loc 1 56 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21              	.L3:
  57:src/kernel/slabAllocator.cpp ****     while(*src != '\0')
  22              		.loc 1 57 5
  23              		.loc 1 57 16
  24              		.loc 1 57 11 is_stmt 0
  25 000c 83470500 		lbu	a5,0(a0)
  26              		.loc 1 57 16
  27 0010 638A0700 		beqz	a5,.L2
  58:src/kernel/slabAllocator.cpp ****     {
  59:src/kernel/slabAllocator.cpp ****         *dst = *src;
  28              		.loc 1 59 9 is_stmt 1
  29              		.loc 1 59 14 is_stmt 0
  30 0014 2380F500 		sb	a5,0(a1)
  60:src/kernel/slabAllocator.cpp ****         src++; dst++;
  31              		.loc 1 60 9 is_stmt 1
  32              		.loc 1 60 12 is_stmt 0
  33 0018 13051500 		addi	a0,a0,1
  34              	.LVL1:
  35              		.loc 1 60 16 is_stmt 1
  36              		.loc 1 60 19 is_stmt 0
  37 001c 93851500 		addi	a1,a1,1
  38              	.LVL2:
  57:src/kernel/slabAllocator.cpp ****     while(*src != '\0')
  39              		.loc 1 57 5
  40 0020 6FF0DFFE 		j	.L3
  41              	.L2:
  61:src/kernel/slabAllocator.cpp ****     }
  62:src/kernel/slabAllocator.cpp ****     *dst = *src;
  42              		.loc 1 62 5 is_stmt 1
  43              		.loc 1 62 10 is_stmt 0
  44 0024 2380F500 		sb	a5,0(a1)
  63:src/kernel/slabAllocator.cpp **** }
  45              		.loc 1 63 1
  46 0028 03348100 		ld	s0,8(sp)
  47              		.cfi_restore 8
  48              		.cfi_def_cfa 2, 16
  49 002c 13010101 		addi	sp,sp,16
  50              		.cfi_def_cfa_offset 0
  51 0030 67800000 		jr	ra
GAS LISTING /tmp/ccbdlM41.s 			page 3


  52              		.cfi_endproc
  53              	.LFE5:
  55              		.align	2
  56              		.globl	_Z17destroy_slab_listPP6slab_s
  58              	_Z17destroy_slab_listPP6slab_s:
  59              	.LFB6:
  64:src/kernel/slabAllocator.cpp **** 
  65:src/kernel/slabAllocator.cpp **** int destroy_slab_list(slab_t** slab)
  66:src/kernel/slabAllocator.cpp **** {
  60              		.loc 1 66 1 is_stmt 1
  61              		.cfi_startproc
  62              	.LVL3:
  63 0034 130101FD 		addi	sp,sp,-48
  64              		.cfi_def_cfa_offset 48
  65 0038 23341102 		sd	ra,40(sp)
  66 003c 23308102 		sd	s0,32(sp)
  67 0040 233C9100 		sd	s1,24(sp)
  68 0044 23382101 		sd	s2,16(sp)
  69 0048 23343101 		sd	s3,8(sp)
  70 004c 23304101 		sd	s4,0(sp)
  71              		.cfi_offset 1, -8
  72              		.cfi_offset 8, -16
  73              		.cfi_offset 9, -24
  74              		.cfi_offset 18, -32
  75              		.cfi_offset 19, -40
  76              		.cfi_offset 20, -48
  77 0050 13040103 		addi	s0,sp,48
  78              		.cfi_def_cfa 8, 0
  67:src/kernel/slabAllocator.cpp ****     if(*slab == nullptr) return 0;
  79              		.loc 1 67 5
  80              		.loc 1 67 8 is_stmt 0
  81 0054 83370500 		ld	a5,0(a0)
  82              		.loc 1 67 5
  83 0058 63820704 		beqz	a5,.L8
  84 005c 93040500 		mv	s1,a0
  68:src/kernel/slabAllocator.cpp ****     size_t sz = (*slab)->owner->slab_size;
  85              		.loc 1 68 5 is_stmt 1
  86              		.loc 1 68 26 is_stmt 0
  87 0060 83B70701 		ld	a5,16(a5)
  88              		.loc 1 68 12
  89 0064 83B98705 		ld	s3,88(a5)
  90              	.LVL4:
  69:src/kernel/slabAllocator.cpp ****     int totalBlocks = 0;
  91              		.loc 1 69 5 is_stmt 1
  92              		.loc 1 69 9 is_stmt 0
  93 0068 13090000 		li	s2,0
  94              	.LVL5:
  95              	.L7:
  70:src/kernel/slabAllocator.cpp ****     while(*slab != nullptr)
  96              		.loc 1 70 5 is_stmt 1
  97              		.loc 1 70 17
  98              		.loc 1 70 11 is_stmt 0
  99 006c 83B50400 		ld	a1,0(s1)
 100              		.loc 1 70 17
 101 0070 63880502 		beqz	a1,.L6
 102              	.LBB2:
  71:src/kernel/slabAllocator.cpp ****     {
GAS LISTING /tmp/ccbdlM41.s 			page 4


  72:src/kernel/slabAllocator.cpp ****         slab_t* nextSlab = (*slab)->next;
 103              		.loc 1 72 9 is_stmt 1
 104              		.loc 1 72 17 is_stmt 0
 105 0074 03BA8500 		ld	s4,8(a1)
 106              	.LVL6:
  73:src/kernel/slabAllocator.cpp ****         buddy_free(slabAllocator->buddy, *slab, sz);
 107              		.loc 1 73 9 is_stmt 1
 108              		.loc 1 73 19 is_stmt 0
 109 0078 13860900 		mv	a2,s3
 110 007c 97070000 		ld	a5,.LANCHOR0
 110      83B70700 
 111 0084 03B50700 		ld	a0,0(a5)
 112 0088 97000000 		call	_Z10buddy_freeP14buddyAllocatorPvm@plt
 112      E7800000 
 113              	.LVL7:
  74:src/kernel/slabAllocator.cpp ****         *slab = nextSlab;
 114              		.loc 1 74 9 is_stmt 1
 115              		.loc 1 74 15 is_stmt 0
 116 0090 23B04401 		sd	s4,0(s1)
  75:src/kernel/slabAllocator.cpp ****         totalBlocks+=sz;
 117              		.loc 1 75 9 is_stmt 1
 118              		.loc 1 75 20 is_stmt 0
 119 0094 3B892901 		addw	s2,s3,s2
 120              	.LVL8:
 121              	.LBE2:
  70:src/kernel/slabAllocator.cpp ****     {
 122              		.loc 1 70 5
 123 0098 6FF05FFD 		j	.L7
 124              	.LVL9:
 125              	.L8:
  67:src/kernel/slabAllocator.cpp ****     size_t sz = (*slab)->owner->slab_size;
 126              		.loc 1 67 33
 127 009c 13090000 		li	s2,0
 128              	.LVL10:
 129              	.L6:
  76:src/kernel/slabAllocator.cpp ****     }
  77:src/kernel/slabAllocator.cpp ****     return totalBlocks;
  78:src/kernel/slabAllocator.cpp **** }
 130              		.loc 1 78 1
 131 00a0 13050900 		mv	a0,s2
 132 00a4 83308102 		ld	ra,40(sp)
 133              		.cfi_restore 1
 134 00a8 03340102 		ld	s0,32(sp)
 135              		.cfi_restore 8
 136              		.cfi_def_cfa 2, 48
 137 00ac 83348101 		ld	s1,24(sp)
 138              		.cfi_restore 9
 139 00b0 03390101 		ld	s2,16(sp)
 140              		.cfi_restore 18
 141 00b4 83398100 		ld	s3,8(sp)
 142              		.cfi_restore 19
 143 00b8 033A0100 		ld	s4,0(sp)
 144              		.cfi_restore 20
 145 00bc 13010103 		addi	sp,sp,48
 146              		.cfi_def_cfa_offset 0
 147 00c0 67800000 		jr	ra
 148              		.cfi_endproc
GAS LISTING /tmp/ccbdlM41.s 			page 5


 149              	.LFE6:
 151              		.align	2
 152              		.globl	_Z10init_cacheP12kmem_cache_sPKcmmPFvPvES5_
 154              	_Z10init_cacheP12kmem_cache_sPKcmmPFvPvES5_:
 155              	.LFB7:
  79:src/kernel/slabAllocator.cpp **** 
  80:src/kernel/slabAllocator.cpp **** void init_cache(kmem_cache_t* cachep, const char* cache_name, size_t slab_size, size_t obj_size, vo
  81:src/kernel/slabAllocator.cpp **** {
 156              		.loc 1 81 1 is_stmt 1
 157              		.cfi_startproc
 158              	.LVL11:
 159 00c4 130101FC 		addi	sp,sp,-64
 160              		.cfi_def_cfa_offset 64
 161 00c8 233C1102 		sd	ra,56(sp)
 162 00cc 23388102 		sd	s0,48(sp)
 163 00d0 23349102 		sd	s1,40(sp)
 164 00d4 23302103 		sd	s2,32(sp)
 165 00d8 233C3101 		sd	s3,24(sp)
 166 00dc 23384101 		sd	s4,16(sp)
 167 00e0 23345101 		sd	s5,8(sp)
 168              		.cfi_offset 1, -8
 169              		.cfi_offset 8, -16
 170              		.cfi_offset 9, -24
 171              		.cfi_offset 18, -32
 172              		.cfi_offset 19, -40
 173              		.cfi_offset 20, -48
 174              		.cfi_offset 21, -56
 175 00e4 13040104 		addi	s0,sp,64
 176              		.cfi_def_cfa 8, 0
 177 00e8 93040500 		mv	s1,a0
 178 00ec 13850500 		mv	a0,a1
 179              	.LVL12:
 180 00f0 930A0600 		mv	s5,a2
 181 00f4 138A0600 		mv	s4,a3
 182 00f8 93090700 		mv	s3,a4
 183 00fc 13890700 		mv	s2,a5
  82:src/kernel/slabAllocator.cpp ****     strcpy(cache_name, cachep->cacheName);
 184              		.loc 1 82 5
 185              		.loc 1 82 11 is_stmt 0
 186 0100 93850400 		mv	a1,s1
 187              	.LVL13:
 188 0104 97000000 		call	_Z6strcpyPKcPc
 188      E7800000 
 189              	.LVL14:
  83:src/kernel/slabAllocator.cpp ****     cachep->slab_size = slab_size;
 190              		.loc 1 83 5 is_stmt 1
 191              		.loc 1 83 23 is_stmt 0
 192 010c 23BC5405 		sd	s5,88(s1)
  84:src/kernel/slabAllocator.cpp ****     cachep->obj_size = obj_size;
 193              		.loc 1 84 5 is_stmt 1
 194              		.loc 1 84 22 is_stmt 0
 195 0110 23B04407 		sd	s4,96(s1)
  85:src/kernel/slabAllocator.cpp ****     cachep->ctor = ctor;
 196              		.loc 1 85 5 is_stmt 1
 197              		.loc 1 85 18 is_stmt 0
 198 0114 23B43407 		sd	s3,104(s1)
  86:src/kernel/slabAllocator.cpp ****     cachep->dtor = dtor;
GAS LISTING /tmp/ccbdlM41.s 			page 6


 199              		.loc 1 86 5 is_stmt 1
 200              		.loc 1 86 18 is_stmt 0
 201 0118 23B82407 		sd	s2,112(s1)
  87:src/kernel/slabAllocator.cpp **** 
  88:src/kernel/slabAllocator.cpp ****     cachep->slabs_empty = cachep->slabs_partial = cachep->slabs_full = nullptr;
 202              		.loc 1 88 5 is_stmt 1
 203              		.loc 1 88 70 is_stmt 0
 204 011c 23B40404 		sd	zero,72(s1)
 205              		.loc 1 88 49
 206 0120 23B80404 		sd	zero,80(s1)
 207              		.loc 1 88 25
 208 0124 23B00404 		sd	zero,64(s1)
  89:src/kernel/slabAllocator.cpp ****     cachep->errors = NO_ERROR;
 209              		.loc 1 89 5 is_stmt 1
 210              		.loc 1 89 20 is_stmt 0
 211 0128 23AC0406 		sw	zero,120(s1)
  90:src/kernel/slabAllocator.cpp **** }
 212              		.loc 1 90 1
 213 012c 83308103 		ld	ra,56(sp)
 214              		.cfi_restore 1
 215 0130 03340103 		ld	s0,48(sp)
 216              		.cfi_restore 8
 217              		.cfi_def_cfa 2, 64
 218 0134 83348102 		ld	s1,40(sp)
 219              		.cfi_restore 9
 220              	.LVL15:
 221 0138 03390102 		ld	s2,32(sp)
 222              		.cfi_restore 18
 223              	.LVL16:
 224 013c 83398101 		ld	s3,24(sp)
 225              		.cfi_restore 19
 226              	.LVL17:
 227 0140 033A0101 		ld	s4,16(sp)
 228              		.cfi_restore 20
 229              	.LVL18:
 230 0144 833A8100 		ld	s5,8(sp)
 231              		.cfi_restore 21
 232              	.LVL19:
 233 0148 13010104 		addi	sp,sp,64
 234              		.cfi_def_cfa_offset 0
 235 014c 67800000 		jr	ra
 236              		.cfi_endproc
 237              	.LFE7:
 239              		.section	.rodata.str1.8,"aMS",@progbits,1
 240              		.align	3
 241              	.LC0:
 242 0000 43616368 		.string	"Cache of caches"
 242      65206F66 
 242      20636163 
 242      68657300 
 243              		.text
 244              		.align	2
 245              		.globl	_Z19slab_allocator_initP14buddyAllocator
 247              	_Z19slab_allocator_initP14buddyAllocator:
 248              	.LFB8:
  91:src/kernel/slabAllocator.cpp **** 
  92:src/kernel/slabAllocator.cpp **** slab_allocator_t* slab_allocator_init(buddyAllocator *buddy)
GAS LISTING /tmp/ccbdlM41.s 			page 7


  93:src/kernel/slabAllocator.cpp **** {
 249              		.loc 1 93 1 is_stmt 1
 250              		.cfi_startproc
 251              	.LVL20:
 252 0150 130101FE 		addi	sp,sp,-32
 253              		.cfi_def_cfa_offset 32
 254 0154 233C1100 		sd	ra,24(sp)
 255 0158 23388100 		sd	s0,16(sp)
 256 015c 23349100 		sd	s1,8(sp)
 257              		.cfi_offset 1, -8
 258              		.cfi_offset 8, -16
 259              		.cfi_offset 9, -24
 260 0160 13040102 		addi	s0,sp,32
 261              		.cfi_def_cfa 8, 0
  94:src/kernel/slabAllocator.cpp ****     slab_allocator_t* slabAllocatorLocal = (slab_allocator_t*)(buddy + 1);
 262              		.loc 1 94 5
 263              		.loc 1 94 23 is_stmt 0
 264 0164 93040512 		addi	s1,a0,288
 265              	.LVL21:
  95:src/kernel/slabAllocator.cpp **** 
  96:src/kernel/slabAllocator.cpp ****     slabAllocatorLocal->buddy = buddy;
 266              		.loc 1 96 5 is_stmt 1
 267              		.loc 1 96 31 is_stmt 0
 268 0168 2330A512 		sd	a0,288(a0)
  97:src/kernel/slabAllocator.cpp ****     for(size_t i = 0; i < CACHE_BUFFER_SIZE;i++)
 269              		.loc 1 97 5 is_stmt 1
 270              	.LVL22:
 271              	.LBB3:
 272              		.loc 1 97 16 is_stmt 0
 273 016c 93070000 		li	a5,0
 274 0170 6F004001 		j	.L14
 275              	.LVL23:
 276              	.L16:
  98:src/kernel/slabAllocator.cpp ****         slabAllocatorLocal->cachesBuffers[i] = nullptr;
 277              		.loc 1 98 9 is_stmt 1 discriminator 2
 278              		.loc 1 98 46 is_stmt 0 discriminator 2
 279 0174 13973700 		slli	a4,a5,3
 280 0178 3307E500 		add	a4,a0,a4
 281 017c 23340712 		sd	zero,296(a4)
  97:src/kernel/slabAllocator.cpp ****     for(size_t i = 0; i < CACHE_BUFFER_SIZE;i++)
 282              		.loc 1 97 5 is_stmt 1 discriminator 2
 283 0180 93871700 		addi	a5,a5,1
 284              	.LVL24:
 285              	.L14:
  97:src/kernel/slabAllocator.cpp ****     for(size_t i = 0; i < CACHE_BUFFER_SIZE;i++)
 286              		.loc 1 97 25 discriminator 3
 287 0184 1307C000 		li	a4,12
 288 0188 E376F7FE 		bleu	a5,a4,.L16
 289              	.LBE3:
  99:src/kernel/slabAllocator.cpp **** 
 100:src/kernel/slabAllocator.cpp ****     init_cache(&slabAllocatorLocal->cacheOfCaches, "Cache of caches", CACHE_OF_CACHES_SLAB_SIZE, si
 290              		.loc 1 100 5
 291              		.loc 1 100 15 is_stmt 0
 292 018c 93070000 		li	a5,0
 293              	.LVL25:
 294 0190 13070000 		li	a4,0
 295 0194 93060008 		li	a3,128
GAS LISTING /tmp/ccbdlM41.s 			page 8


 296 0198 13062000 		li	a2,2
 297 019c 97050000 		lla	a1,.LC0
 297      93850500 
 298 01a4 13050519 		addi	a0,a0,400
 299              	.LVL26:
 300 01a8 97000000 		call	_Z10init_cacheP12kmem_cache_sPKcmmPFvPvES5_
 300      E7800000 
 301              	.LVL27:
 101:src/kernel/slabAllocator.cpp **** 
 102:src/kernel/slabAllocator.cpp ****     return slabAllocatorLocal;
 302              		.loc 1 102 5 is_stmt 1
 103:src/kernel/slabAllocator.cpp **** }
 303              		.loc 1 103 1 is_stmt 0
 304 01b0 13850400 		mv	a0,s1
 305 01b4 83308101 		ld	ra,24(sp)
 306              		.cfi_restore 1
 307 01b8 03340101 		ld	s0,16(sp)
 308              		.cfi_restore 8
 309              		.cfi_def_cfa 2, 32
 310 01bc 83348100 		ld	s1,8(sp)
 311              		.cfi_restore 9
 312              	.LVL28:
 313 01c0 13010102 		addi	sp,sp,32
 314              		.cfi_def_cfa_offset 0
 315 01c4 67800000 		jr	ra
 316              		.cfi_endproc
 317              	.LFE8:
 319              		.align	2
 320              		.globl	_Z13checkSetIndexP6slab_si
 322              	_Z13checkSetIndexP6slab_si:
 323              	.LFB9:
 104:src/kernel/slabAllocator.cpp **** 
 105:src/kernel/slabAllocator.cpp **** bool checkSetIndex(slab_t* slab, int index)
 106:src/kernel/slabAllocator.cpp **** {
 324              		.loc 1 106 1 is_stmt 1
 325              		.cfi_startproc
 326              	.LVL29:
 327 01c8 130101FF 		addi	sp,sp,-16
 328              		.cfi_def_cfa_offset 16
 329 01cc 23348100 		sd	s0,8(sp)
 330              		.cfi_offset 8, -8
 331 01d0 13040101 		addi	s0,sp,16
 332              		.cfi_def_cfa 8, 0
 107:src/kernel/slabAllocator.cpp ****     return (uint8)slab->allocated[index / 8] & (1 << (index%8));
 333              		.loc 1 107 5
 334              		.loc 1 107 41 is_stmt 0
 335 01d4 9BD7F541 		sraiw	a5,a1,31
 336 01d8 9BD7D701 		srliw	a5,a5,29
 337 01dc BB85B700 		addw	a1,a5,a1
 338              	.LVL30:
 339 01e0 1BD73540 		sraiw	a4,a1,3
 340              		.loc 1 107 44
 341 01e4 3305E500 		add	a0,a0,a4
 342              	.LVL31:
 343              		.loc 1 107 12
 344 01e8 03458502 		lbu	a0,40(a0)
 345              		.loc 1 107 60
GAS LISTING /tmp/ccbdlM41.s 			page 9


 346 01ec 93F57500 		andi	a1,a1,7
 347 01f0 BB85F540 		subw	a1,a1,a5
 348              		.loc 1 107 63
 349 01f4 3B55B540 		sraw	a0,a0,a1
 108:src/kernel/slabAllocator.cpp **** }
 350              		.loc 1 108 1
 351 01f8 13751500 		andi	a0,a0,1
 352 01fc 03348100 		ld	s0,8(sp)
 353              		.cfi_restore 8
 354              		.cfi_def_cfa 2, 16
 355 0200 13010101 		addi	sp,sp,16
 356              		.cfi_def_cfa_offset 0
 357 0204 67800000 		jr	ra
 358              		.cfi_endproc
 359              	.LFE9:
 361              		.align	2
 362              		.globl	_Z17setAllocatedIndexP6slab_si
 364              	_Z17setAllocatedIndexP6slab_si:
 365              	.LFB10:
 109:src/kernel/slabAllocator.cpp **** 
 110:src/kernel/slabAllocator.cpp **** void setAllocatedIndex(slab_t* slab, int index)
 111:src/kernel/slabAllocator.cpp **** {
 366              		.loc 1 111 1 is_stmt 1
 367              		.cfi_startproc
 368              	.LVL32:
 369 0208 130101FF 		addi	sp,sp,-16
 370              		.cfi_def_cfa_offset 16
 371 020c 23348100 		sd	s0,8(sp)
 372              		.cfi_offset 8, -8
 373 0210 13040101 		addi	s0,sp,16
 374              		.cfi_def_cfa 8, 0
 112:src/kernel/slabAllocator.cpp ****     slab->allocated[index / 8]=(uint8)slab->allocated[index/8] | (1 << (index%8));
 375              		.loc 1 112 5
 376              		.loc 1 112 60 is_stmt 0
 377 0214 9BD7F541 		sraiw	a5,a1,31
 378 0218 9BD7D701 		srliw	a5,a5,29
 379 021c BB85B700 		addw	a1,a5,a1
 380              	.LVL33:
 381 0220 1BD73540 		sraiw	a4,a1,3
 382              		.loc 1 112 62
 383 0224 3305E500 		add	a0,a0,a4
 384              	.LVL34:
 385              		.loc 1 112 32
 386 0228 03078502 		lb	a4,40(a0)
 387              		.loc 1 112 78
 388 022c 93F57500 		andi	a1,a1,7
 389 0230 BB85F540 		subw	a1,a1,a5
 390              		.loc 1 112 69
 391 0234 93071000 		li	a5,1
 392 0238 BB95B700 		sllw	a1,a5,a1
 393              		.loc 1 112 64
 394 023c B365B700 		or	a1,a4,a1
 395              		.loc 1 112 31
 396 0240 2304B502 		sb	a1,40(a0)
 113:src/kernel/slabAllocator.cpp **** }
 397              		.loc 1 113 1
 398 0244 03348100 		ld	s0,8(sp)
GAS LISTING /tmp/ccbdlM41.s 			page 10


 399              		.cfi_restore 8
 400              		.cfi_def_cfa 2, 16
 401 0248 13010101 		addi	sp,sp,16
 402              		.cfi_def_cfa_offset 0
 403 024c 67800000 		jr	ra
 404              		.cfi_endproc
 405              	.LFE10:
 407              		.align	2
 408              		.globl	_Z14allocateObjectP6slab_s
 410              	_Z14allocateObjectP6slab_s:
 411              	.LFB11:
 114:src/kernel/slabAllocator.cpp **** 
 115:src/kernel/slabAllocator.cpp **** void* allocateObject(slab_t* slab)
 116:src/kernel/slabAllocator.cpp **** {
 412              		.loc 1 116 1 is_stmt 1
 413              		.cfi_startproc
 414              	.LVL35:
 415 0250 130101FD 		addi	sp,sp,-48
 416              		.cfi_def_cfa_offset 48
 417 0254 23341102 		sd	ra,40(sp)
 418 0258 23308102 		sd	s0,32(sp)
 419 025c 233C9100 		sd	s1,24(sp)
 420 0260 23382101 		sd	s2,16(sp)
 421 0264 23343101 		sd	s3,8(sp)
 422              		.cfi_offset 1, -8
 423              		.cfi_offset 8, -16
 424              		.cfi_offset 9, -24
 425              		.cfi_offset 18, -32
 426              		.cfi_offset 19, -40
 427 0268 13040103 		addi	s0,sp,48
 428              		.cfi_def_cfa 8, 0
 429 026c 13090500 		mv	s2,a0
 117:src/kernel/slabAllocator.cpp ****     if(slab == nullptr)
 430              		.loc 1 117 5
 431 0270 63080508 		beqz	a0,.L26
 432              	.LBB4:
 118:src/kernel/slabAllocator.cpp ****         return nullptr;
 119:src/kernel/slabAllocator.cpp ****     int index = -1;
 120:src/kernel/slabAllocator.cpp ****     void* addr = nullptr;
 121:src/kernel/slabAllocator.cpp ****     for(size_t i = 0;i < slab->numOfObjects;i++)
 433              		.loc 1 121 16 is_stmt 0
 434 0274 93040000 		li	s1,0
 435              	.LVL36:
 436              	.L25:
 437              		.loc 1 121 24 is_stmt 1 discriminator 1
 438              		.loc 1 121 32 is_stmt 0 discriminator 1
 439 0278 83378901 		ld	a5,24(s2)
 440              		.loc 1 121 24 discriminator 1
 441 027c 63FEF402 		bleu	a5,s1,.L27
 122:src/kernel/slabAllocator.cpp ****     {
 123:src/kernel/slabAllocator.cpp ****         if(!checkSetIndex(slab, i))
 442              		.loc 1 123 9 is_stmt 1
 443              		.loc 1 123 26 is_stmt 0
 444 0280 9B890400 		sext.w	s3,s1
 445 0284 93850900 		mv	a1,s3
 446 0288 13050900 		mv	a0,s2
 447 028c 97000000 		call	_Z13checkSetIndexP6slab_si
GAS LISTING /tmp/ccbdlM41.s 			page 11


 447      E7800000 
 448              	.LVL37:
 449              		.loc 1 123 9
 450 0294 63060500 		beqz	a0,.L29
 121:src/kernel/slabAllocator.cpp ****     {
 451              		.loc 1 121 5 is_stmt 1 discriminator 2
 452 0298 93841400 		addi	s1,s1,1
 453              	.LVL38:
 454 029c 6FF0DFFD 		j	.L25
 455              	.L29:
 124:src/kernel/slabAllocator.cpp ****         {
 125:src/kernel/slabAllocator.cpp ****             addr = (void*)((size_t)slab + sizeof(slab_t)+ i*slab->owner->obj_size);
 456              		.loc 1 125 13
 457              		.loc 1 125 67 is_stmt 0
 458 02a0 83370901 		ld	a5,16(s2)
 459              		.loc 1 125 74
 460 02a4 83B70706 		ld	a5,96(a5)
 461              		.loc 1 125 60
 462 02a8 B3849702 		mul	s1,a5,s1
 463              	.LVL39:
 464              		.loc 1 125 57
 465 02ac B3049900 		add	s1,s2,s1
 466 02b0 93848442 		addi	s1,s1,1064
 467              	.LVL40:
 126:src/kernel/slabAllocator.cpp ****             index = i;
 468              		.loc 1 126 13 is_stmt 1
 127:src/kernel/slabAllocator.cpp ****             break;
 469              		.loc 1 127 13
 470 02b4 6F00C000 		j	.L23
 471              	.LVL41:
 472              	.L27:
 473              	.LBE4:
 120:src/kernel/slabAllocator.cpp ****     for(size_t i = 0;i < slab->numOfObjects;i++)
 474              		.loc 1 120 11 is_stmt 0
 475 02b8 93040000 		li	s1,0
 476              	.LVL42:
 119:src/kernel/slabAllocator.cpp ****     void* addr = nullptr;
 477              		.loc 1 119 9
 478 02bc 9309F0FF 		li	s3,-1
 479              	.L23:
 480              	.LVL43:
 128:src/kernel/slabAllocator.cpp ****         }
 129:src/kernel/slabAllocator.cpp ****     }
 130:src/kernel/slabAllocator.cpp ****     if(addr == nullptr)
 481              		.loc 1 130 5 is_stmt 1
 482 02c0 63800402 		beqz	s1,.L21
 131:src/kernel/slabAllocator.cpp ****         return nullptr;
 132:src/kernel/slabAllocator.cpp **** 
 133:src/kernel/slabAllocator.cpp ****     setAllocatedIndex(slab, index);
 483              		.loc 1 133 5
 484              		.loc 1 133 22 is_stmt 0
 485 02c4 93850900 		mv	a1,s3
 486 02c8 13050900 		mv	a0,s2
 487 02cc 97000000 		call	_Z17setAllocatedIndexP6slab_si
 487      E7800000 
 488              	.LVL44:
 134:src/kernel/slabAllocator.cpp ****     slab->numOfAllocatedObjects++;
GAS LISTING /tmp/ccbdlM41.s 			page 12


 489              		.loc 1 134 5 is_stmt 1
 490              		.loc 1 134 11 is_stmt 0
 491 02d4 83370902 		ld	a5,32(s2)
 492              		.loc 1 134 32
 493 02d8 93871700 		addi	a5,a5,1
 494 02dc 2330F902 		sd	a5,32(s2)
 135:src/kernel/slabAllocator.cpp **** 
 136:src/kernel/slabAllocator.cpp ****     return addr;
 495              		.loc 1 136 5 is_stmt 1
 496              	.LVL45:
 497              	.L21:
 137:src/kernel/slabAllocator.cpp **** }
 498              		.loc 1 137 1 is_stmt 0
 499 02e0 13850400 		mv	a0,s1
 500 02e4 83308102 		ld	ra,40(sp)
 501              		.cfi_remember_state
 502              		.cfi_restore 1
 503 02e8 03340102 		ld	s0,32(sp)
 504              		.cfi_restore 8
 505              		.cfi_def_cfa 2, 48
 506 02ec 83348101 		ld	s1,24(sp)
 507              		.cfi_restore 9
 508 02f0 03390101 		ld	s2,16(sp)
 509              		.cfi_restore 18
 510              	.LVL46:
 511 02f4 83398100 		ld	s3,8(sp)
 512              		.cfi_restore 19
 513 02f8 13010103 		addi	sp,sp,48
 514              		.cfi_def_cfa_offset 0
 515 02fc 67800000 		jr	ra
 516              	.LVL47:
 517              	.L26:
 518              		.cfi_restore_state
 118:src/kernel/slabAllocator.cpp ****     int index = -1;
 519              		.loc 1 118 16
 520 0300 93040500 		mv	s1,a0
 521 0304 6FF0DFFD 		j	.L21
 522              		.cfi_endproc
 523              	.LFE11:
 525              		.align	2
 526              		.globl	_Z4fullP6slab_s
 528              	_Z4fullP6slab_s:
 529              	.LFB12:
 138:src/kernel/slabAllocator.cpp **** 
 139:src/kernel/slabAllocator.cpp **** bool full(slab_t* slab)
 140:src/kernel/slabAllocator.cpp **** {
 530              		.loc 1 140 1 is_stmt 1
 531              		.cfi_startproc
 532              	.LVL48:
 533 0308 130101FF 		addi	sp,sp,-16
 534              		.cfi_def_cfa_offset 16
 535 030c 23348100 		sd	s0,8(sp)
 536              		.cfi_offset 8, -8
 537 0310 13040101 		addi	s0,sp,16
 538              		.cfi_def_cfa 8, 0
 141:src/kernel/slabAllocator.cpp ****     return slab->numOfAllocatedObjects == slab->numOfObjects;
 539              		.loc 1 141 5
GAS LISTING /tmp/ccbdlM41.s 			page 13


 540              		.loc 1 141 18 is_stmt 0
 541 0314 83370502 		ld	a5,32(a0)
 542              		.loc 1 141 49
 543 0318 03358501 		ld	a0,24(a0)
 544              	.LVL49:
 545 031c 3305F540 		sub	a0,a0,a5
 142:src/kernel/slabAllocator.cpp **** }
 546              		.loc 1 142 1
 547 0320 13351500 		seqz	a0,a0
 548 0324 03348100 		ld	s0,8(sp)
 549              		.cfi_restore 8
 550              		.cfi_def_cfa 2, 16
 551 0328 13010101 		addi	sp,sp,16
 552              		.cfi_def_cfa_offset 0
 553 032c 67800000 		jr	ra
 554              		.cfi_endproc
 555              	.LFE12:
 557              		.align	2
 558              		.globl	_Z5emptyP6slab_s
 560              	_Z5emptyP6slab_s:
 561              	.LFB13:
 143:src/kernel/slabAllocator.cpp **** 
 144:src/kernel/slabAllocator.cpp **** bool empty(slab_t* slab)
 145:src/kernel/slabAllocator.cpp **** {
 562              		.loc 1 145 1 is_stmt 1
 563              		.cfi_startproc
 564              	.LVL50:
 565 0330 130101FF 		addi	sp,sp,-16
 566              		.cfi_def_cfa_offset 16
 567 0334 23348100 		sd	s0,8(sp)
 568              		.cfi_offset 8, -8
 569 0338 13040101 		addi	s0,sp,16
 570              		.cfi_def_cfa 8, 0
 146:src/kernel/slabAllocator.cpp ****     return slab->numOfAllocatedObjects == 0;
 571              		.loc 1 146 5
 572              		.loc 1 146 18 is_stmt 0
 573 033c 03350502 		ld	a0,32(a0)
 574              	.LVL51:
 147:src/kernel/slabAllocator.cpp **** }
 575              		.loc 1 147 1
 576 0340 13351500 		seqz	a0,a0
 577 0344 03348100 		ld	s0,8(sp)
 578              		.cfi_restore 8
 579              		.cfi_def_cfa 2, 16
 580 0348 13010101 		addi	sp,sp,16
 581              		.cfi_def_cfa_offset 0
 582 034c 67800000 		jr	ra
 583              		.cfi_endproc
 584              	.LFE13:
 586              		.align	2
 587              		.globl	_Z18insertIntoSlabListP6slab_sPS0_
 589              	_Z18insertIntoSlabListP6slab_sPS0_:
 590              	.LFB14:
 148:src/kernel/slabAllocator.cpp **** 
 149:src/kernel/slabAllocator.cpp **** void insertIntoSlabList(slab_t* slab, slab_t** slab_head)
 150:src/kernel/slabAllocator.cpp **** {
 591              		.loc 1 150 1 is_stmt 1
GAS LISTING /tmp/ccbdlM41.s 			page 14


 592              		.cfi_startproc
 593              	.LVL52:
 594 0350 130101FF 		addi	sp,sp,-16
 595              		.cfi_def_cfa_offset 16
 596 0354 23348100 		sd	s0,8(sp)
 597              		.cfi_offset 8, -8
 598 0358 13040101 		addi	s0,sp,16
 599              		.cfi_def_cfa 8, 0
 151:src/kernel/slabAllocator.cpp ****     if(slab == nullptr)
 600              		.loc 1 151 5
 601 035c 630E0500 		beqz	a0,.L34
 152:src/kernel/slabAllocator.cpp ****         return;
 153:src/kernel/slabAllocator.cpp ****     slab->prev = nullptr;
 602              		.loc 1 153 5
 603              		.loc 1 153 16 is_stmt 0
 604 0360 23300500 		sd	zero,0(a0)
 154:src/kernel/slabAllocator.cpp ****     slab->next = *slab_head;
 605              		.loc 1 154 5 is_stmt 1
 606              		.loc 1 154 18 is_stmt 0
 607 0364 83B70500 		ld	a5,0(a1)
 608              		.loc 1 154 16
 609 0368 2334F500 		sd	a5,8(a0)
 155:src/kernel/slabAllocator.cpp ****     if(*slab_head != nullptr)
 610              		.loc 1 155 5 is_stmt 1
 611 036c 63840700 		beqz	a5,.L36
 156:src/kernel/slabAllocator.cpp ****         (*slab_head)->prev = slab;
 612              		.loc 1 156 9
 613              		.loc 1 156 28 is_stmt 0
 614 0370 23B0A700 		sd	a0,0(a5)
 615              	.L36:
 157:src/kernel/slabAllocator.cpp ****     *slab_head = slab;
 616              		.loc 1 157 5 is_stmt 1
 617              		.loc 1 157 16 is_stmt 0
 618 0374 23B0A500 		sd	a0,0(a1)
 619              	.L34:
 158:src/kernel/slabAllocator.cpp **** }
 620              		.loc 1 158 1
 621 0378 03348100 		ld	s0,8(sp)
 622              		.cfi_restore 8
 623              		.cfi_def_cfa 2, 16
 624 037c 13010101 		addi	sp,sp,16
 625              		.cfi_def_cfa_offset 0
 626 0380 67800000 		jr	ra
 627              		.cfi_endproc
 628              	.LFE14:
 630              		.align	2
 631              		.globl	_Z18removeFromSlabListP6slab_sPS0_
 633              	_Z18removeFromSlabListP6slab_sPS0_:
 634              	.LFB15:
 159:src/kernel/slabAllocator.cpp **** 
 160:src/kernel/slabAllocator.cpp **** void removeFromSlabList(slab_t* slab, slab_t** slab_head)
 161:src/kernel/slabAllocator.cpp **** {
 635              		.loc 1 161 1 is_stmt 1
 636              		.cfi_startproc
 637              	.LVL53:
 638 0384 130101FF 		addi	sp,sp,-16
 639              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccbdlM41.s 			page 15


 640 0388 23348100 		sd	s0,8(sp)
 641              		.cfi_offset 8, -8
 642 038c 13040101 		addi	s0,sp,16
 643              		.cfi_def_cfa 8, 0
 162:src/kernel/slabAllocator.cpp ****     if(slab->prev == nullptr) //same as slab == *slab_head
 644              		.loc 1 162 5
 645              		.loc 1 162 14 is_stmt 0
 646 0390 83370500 		ld	a5,0(a0)
 647              		.loc 1 162 5
 648 0394 63860702 		beqz	a5,.L44
 163:src/kernel/slabAllocator.cpp ****     {
 164:src/kernel/slabAllocator.cpp ****         if(slab->next) slab->next->prev = nullptr;
 165:src/kernel/slabAllocator.cpp ****         (*slab_head) = slab->next;
 166:src/kernel/slabAllocator.cpp ****         slab->next = slab->prev = nullptr;
 167:src/kernel/slabAllocator.cpp ****     }
 168:src/kernel/slabAllocator.cpp ****     else
 169:src/kernel/slabAllocator.cpp ****     {
 170:src/kernel/slabAllocator.cpp ****         slab->prev->next = slab->next;
 649              		.loc 1 170 9 is_stmt 1
 650              		.loc 1 170 34 is_stmt 0
 651 0398 03378500 		ld	a4,8(a0)
 652              		.loc 1 170 26
 653 039c 23B4E700 		sd	a4,8(a5)
 171:src/kernel/slabAllocator.cpp ****         if(slab->next) slab->next->prev = slab->prev;
 654              		.loc 1 171 9 is_stmt 1
 655 03a0 63060700 		beqz	a4,.L42
 656              		.loc 1 171 24 discriminator 1
 657              		.loc 1 171 49 is_stmt 0 discriminator 1
 658 03a4 83370500 		ld	a5,0(a0)
 659              		.loc 1 171 41 discriminator 1
 660 03a8 2330F700 		sd	a5,0(a4)
 661              	.L42:
 172:src/kernel/slabAllocator.cpp ****         slab->next = slab->prev = nullptr;
 662              		.loc 1 172 9 is_stmt 1
 663              		.loc 1 172 33 is_stmt 0
 664 03ac 23300500 		sd	zero,0(a0)
 665              		.loc 1 172 20
 666 03b0 23340500 		sd	zero,8(a0)
 667              	.L38:
 173:src/kernel/slabAllocator.cpp ****     }
 174:src/kernel/slabAllocator.cpp **** }
 668              		.loc 1 174 1
 669 03b4 03348100 		ld	s0,8(sp)
 670              		.cfi_remember_state
 671              		.cfi_restore 8
 672              		.cfi_def_cfa 2, 16
 673 03b8 13010101 		addi	sp,sp,16
 674              		.cfi_def_cfa_offset 0
 675 03bc 67800000 		jr	ra
 676              	.L44:
 677              		.cfi_restore_state
 164:src/kernel/slabAllocator.cpp ****         (*slab_head) = slab->next;
 678              		.loc 1 164 9 is_stmt 1
 164:src/kernel/slabAllocator.cpp ****         (*slab_head) = slab->next;
 679              		.loc 1 164 18 is_stmt 0
 680 03c0 83378500 		ld	a5,8(a0)
 164:src/kernel/slabAllocator.cpp ****         (*slab_head) = slab->next;
GAS LISTING /tmp/ccbdlM41.s 			page 16


 681              		.loc 1 164 9
 682 03c4 63840700 		beqz	a5,.L40
 164:src/kernel/slabAllocator.cpp ****         (*slab_head) = slab->next;
 683              		.loc 1 164 24 is_stmt 1 discriminator 1
 164:src/kernel/slabAllocator.cpp ****         (*slab_head) = slab->next;
 684              		.loc 1 164 41 is_stmt 0 discriminator 1
 685 03c8 23B00700 		sd	zero,0(a5)
 686              	.L40:
 165:src/kernel/slabAllocator.cpp ****         slab->next = slab->prev = nullptr;
 687              		.loc 1 165 9 is_stmt 1
 165:src/kernel/slabAllocator.cpp ****         slab->next = slab->prev = nullptr;
 688              		.loc 1 165 30 is_stmt 0
 689 03cc 83378500 		ld	a5,8(a0)
 165:src/kernel/slabAllocator.cpp ****         slab->next = slab->prev = nullptr;
 690              		.loc 1 165 22
 691 03d0 23B0F500 		sd	a5,0(a1)
 166:src/kernel/slabAllocator.cpp ****     }
 692              		.loc 1 166 9 is_stmt 1
 166:src/kernel/slabAllocator.cpp ****     }
 693              		.loc 1 166 33 is_stmt 0
 694 03d4 23300500 		sd	zero,0(a0)
 166:src/kernel/slabAllocator.cpp ****     }
 695              		.loc 1 166 20
 696 03d8 23340500 		sd	zero,8(a0)
 697 03dc 6FF09FFD 		j	.L38
 698              		.cfi_endproc
 699              	.LFE15:
 701              		.align	2
 702              		.globl	_Z16putPartialToFullP12kmem_cache_s
 704              	_Z16putPartialToFullP12kmem_cache_s:
 705              	.LFB16:
 175:src/kernel/slabAllocator.cpp **** 
 176:src/kernel/slabAllocator.cpp **** void putPartialToFull(kmem_cache_t* cachep)
 177:src/kernel/slabAllocator.cpp **** {
 706              		.loc 1 177 1 is_stmt 1
 707              		.cfi_startproc
 708              	.LVL54:
 709 03e0 130101FE 		addi	sp,sp,-32
 710              		.cfi_def_cfa_offset 32
 711 03e4 233C1100 		sd	ra,24(sp)
 712 03e8 23388100 		sd	s0,16(sp)
 713 03ec 23349100 		sd	s1,8(sp)
 714 03f0 23302101 		sd	s2,0(sp)
 715              		.cfi_offset 1, -8
 716              		.cfi_offset 8, -16
 717              		.cfi_offset 9, -24
 718              		.cfi_offset 18, -32
 719 03f4 13040102 		addi	s0,sp,32
 720              		.cfi_def_cfa 8, 0
 721 03f8 93040500 		mv	s1,a0
 178:src/kernel/slabAllocator.cpp ****     slab_t* slab = cachep->slabs_partial;
 722              		.loc 1 178 5
 723              		.loc 1 178 13 is_stmt 0
 724 03fc 03390505 		ld	s2,80(a0)
 725              	.LVL55:
 179:src/kernel/slabAllocator.cpp ****     removeFromSlabList(slab, &cachep->slabs_partial);
 726              		.loc 1 179 5 is_stmt 1
GAS LISTING /tmp/ccbdlM41.s 			page 17


 727              		.loc 1 179 23 is_stmt 0
 728 0400 93050505 		addi	a1,a0,80
 729 0404 13050900 		mv	a0,s2
 730              	.LVL56:
 731 0408 97000000 		call	_Z18removeFromSlabListP6slab_sPS0_
 731      E7800000 
 732              	.LVL57:
 180:src/kernel/slabAllocator.cpp ****     insertIntoSlabList(slab, &cachep->slabs_full);
 733              		.loc 1 180 5 is_stmt 1
 734              		.loc 1 180 23 is_stmt 0
 735 0410 93858404 		addi	a1,s1,72
 736 0414 13050900 		mv	a0,s2
 737 0418 97000000 		call	_Z18insertIntoSlabListP6slab_sPS0_
 737      E7800000 
 738              	.LVL58:
 181:src/kernel/slabAllocator.cpp **** }
 739              		.loc 1 181 1
 740 0420 83308101 		ld	ra,24(sp)
 741              		.cfi_restore 1
 742 0424 03340101 		ld	s0,16(sp)
 743              		.cfi_restore 8
 744              		.cfi_def_cfa 2, 32
 745 0428 83348100 		ld	s1,8(sp)
 746              		.cfi_restore 9
 747              	.LVL59:
 748 042c 03390100 		ld	s2,0(sp)
 749              		.cfi_restore 18
 750              	.LVL60:
 751 0430 13010102 		addi	sp,sp,32
 752              		.cfi_def_cfa_offset 0
 753 0434 67800000 		jr	ra
 754              		.cfi_endproc
 755              	.LFE16:
 757              		.align	2
 758              		.globl	_Z17putEmptyToPartialP12kmem_cache_s
 760              	_Z17putEmptyToPartialP12kmem_cache_s:
 761              	.LFB17:
 182:src/kernel/slabAllocator.cpp **** 
 183:src/kernel/slabAllocator.cpp **** void putEmptyToPartial(kmem_cache_t* cachep)
 184:src/kernel/slabAllocator.cpp **** {
 762              		.loc 1 184 1 is_stmt 1
 763              		.cfi_startproc
 764              	.LVL61:
 765 0438 130101FE 		addi	sp,sp,-32
 766              		.cfi_def_cfa_offset 32
 767 043c 233C1100 		sd	ra,24(sp)
 768 0440 23388100 		sd	s0,16(sp)
 769 0444 23349100 		sd	s1,8(sp)
 770 0448 23302101 		sd	s2,0(sp)
 771              		.cfi_offset 1, -8
 772              		.cfi_offset 8, -16
 773              		.cfi_offset 9, -24
 774              		.cfi_offset 18, -32
 775 044c 13040102 		addi	s0,sp,32
 776              		.cfi_def_cfa 8, 0
 777 0450 93040500 		mv	s1,a0
 185:src/kernel/slabAllocator.cpp ****     slab_t* slab = cachep->slabs_empty;
GAS LISTING /tmp/ccbdlM41.s 			page 18


 778              		.loc 1 185 5
 779              		.loc 1 185 13 is_stmt 0
 780 0454 03390504 		ld	s2,64(a0)
 781              	.LVL62:
 186:src/kernel/slabAllocator.cpp ****     removeFromSlabList(slab, &cachep->slabs_empty);
 782              		.loc 1 186 5 is_stmt 1
 783              		.loc 1 186 23 is_stmt 0
 784 0458 93050504 		addi	a1,a0,64
 785 045c 13050900 		mv	a0,s2
 786              	.LVL63:
 787 0460 97000000 		call	_Z18removeFromSlabListP6slab_sPS0_
 787      E7800000 
 788              	.LVL64:
 187:src/kernel/slabAllocator.cpp ****     insertIntoSlabList(slab, &cachep->slabs_partial);
 789              		.loc 1 187 5 is_stmt 1
 790              		.loc 1 187 23 is_stmt 0
 791 0468 93850405 		addi	a1,s1,80
 792 046c 13050900 		mv	a0,s2
 793 0470 97000000 		call	_Z18insertIntoSlabListP6slab_sPS0_
 793      E7800000 
 794              	.LVL65:
 188:src/kernel/slabAllocator.cpp **** }
 795              		.loc 1 188 1
 796 0478 83308101 		ld	ra,24(sp)
 797              		.cfi_restore 1
 798 047c 03340101 		ld	s0,16(sp)
 799              		.cfi_restore 8
 800              		.cfi_def_cfa 2, 32
 801 0480 83348100 		ld	s1,8(sp)
 802              		.cfi_restore 9
 803              	.LVL66:
 804 0484 03390100 		ld	s2,0(sp)
 805              		.cfi_restore 18
 806              	.LVL67:
 807 0488 13010102 		addi	sp,sp,32
 808              		.cfi_def_cfa_offset 0
 809 048c 67800000 		jr	ra
 810              		.cfi_endproc
 811              	.LFE17:
 813              		.align	2
 814              		.globl	_Z14removeFullSlabP12kmem_cache_sP6slab_s
 816              	_Z14removeFullSlabP12kmem_cache_sP6slab_s:
 817              	.LFB18:
 189:src/kernel/slabAllocator.cpp **** 
 190:src/kernel/slabAllocator.cpp **** void removeFullSlab(kmem_cache_t* cachep, slab_t* slab)
 191:src/kernel/slabAllocator.cpp **** {
 818              		.loc 1 191 1 is_stmt 1
 819              		.cfi_startproc
 820              	.LVL68:
 821 0490 130101FE 		addi	sp,sp,-32
 822              		.cfi_def_cfa_offset 32
 823 0494 233C1100 		sd	ra,24(sp)
 824 0498 23388100 		sd	s0,16(sp)
 825 049c 23349100 		sd	s1,8(sp)
 826 04a0 23302101 		sd	s2,0(sp)
 827              		.cfi_offset 1, -8
 828              		.cfi_offset 8, -16
GAS LISTING /tmp/ccbdlM41.s 			page 19


 829              		.cfi_offset 9, -24
 830              		.cfi_offset 18, -32
 831 04a4 13040102 		addi	s0,sp,32
 832              		.cfi_def_cfa 8, 0
 833 04a8 13090500 		mv	s2,a0
 834 04ac 93840500 		mv	s1,a1
 192:src/kernel/slabAllocator.cpp ****     removeFromSlabList(slab, &cachep->slabs_full);
 835              		.loc 1 192 5
 836              		.loc 1 192 23 is_stmt 0
 837 04b0 93058504 		addi	a1,a0,72
 838              	.LVL69:
 839 04b4 13850400 		mv	a0,s1
 840              	.LVL70:
 841 04b8 97000000 		call	_Z18removeFromSlabListP6slab_sPS0_
 841      E7800000 
 842              	.LVL71:
 193:src/kernel/slabAllocator.cpp ****     insertIntoSlabList(slab, &cachep->slabs_partial);
 843              		.loc 1 193 5 is_stmt 1
 844              		.loc 1 193 23 is_stmt 0
 845 04c0 93050905 		addi	a1,s2,80
 846 04c4 13850400 		mv	a0,s1
 847 04c8 97000000 		call	_Z18insertIntoSlabListP6slab_sPS0_
 847      E7800000 
 848              	.LVL72:
 194:src/kernel/slabAllocator.cpp **** }
 849              		.loc 1 194 1
 850 04d0 83308101 		ld	ra,24(sp)
 851              		.cfi_restore 1
 852 04d4 03340101 		ld	s0,16(sp)
 853              		.cfi_restore 8
 854              		.cfi_def_cfa 2, 32
 855 04d8 83348100 		ld	s1,8(sp)
 856              		.cfi_restore 9
 857              	.LVL73:
 858 04dc 03390100 		ld	s2,0(sp)
 859              		.cfi_restore 18
 860              	.LVL74:
 861 04e0 13010102 		addi	sp,sp,32
 862              		.cfi_def_cfa_offset 0
 863 04e4 67800000 		jr	ra
 864              		.cfi_endproc
 865              	.LFE18:
 867              		.align	2
 868              		.globl	_Z17removePartialSlabP12kmem_cache_sP6slab_s
 870              	_Z17removePartialSlabP12kmem_cache_sP6slab_s:
 871              	.LFB19:
 195:src/kernel/slabAllocator.cpp **** 
 196:src/kernel/slabAllocator.cpp **** void removePartialSlab(kmem_cache_t * cachep, slab_t* slab)
 197:src/kernel/slabAllocator.cpp **** {
 872              		.loc 1 197 1 is_stmt 1
 873              		.cfi_startproc
 874              	.LVL75:
 875 04e8 130101FE 		addi	sp,sp,-32
 876              		.cfi_def_cfa_offset 32
 877 04ec 233C1100 		sd	ra,24(sp)
 878 04f0 23388100 		sd	s0,16(sp)
 879 04f4 23349100 		sd	s1,8(sp)
GAS LISTING /tmp/ccbdlM41.s 			page 20


 880 04f8 23302101 		sd	s2,0(sp)
 881              		.cfi_offset 1, -8
 882              		.cfi_offset 8, -16
 883              		.cfi_offset 9, -24
 884              		.cfi_offset 18, -32
 885 04fc 13040102 		addi	s0,sp,32
 886              		.cfi_def_cfa 8, 0
 887 0500 13090500 		mv	s2,a0
 888 0504 93840500 		mv	s1,a1
 198:src/kernel/slabAllocator.cpp ****     removeFromSlabList(slab, &cachep->slabs_partial);
 889              		.loc 1 198 5
 890              		.loc 1 198 23 is_stmt 0
 891 0508 93050505 		addi	a1,a0,80
 892              	.LVL76:
 893 050c 13850400 		mv	a0,s1
 894              	.LVL77:
 895 0510 97000000 		call	_Z18removeFromSlabListP6slab_sPS0_
 895      E7800000 
 896              	.LVL78:
 199:src/kernel/slabAllocator.cpp ****     insertIntoSlabList(slab, &cachep->slabs_empty);
 897              		.loc 1 199 5 is_stmt 1
 898              		.loc 1 199 23 is_stmt 0
 899 0518 93050904 		addi	a1,s2,64
 900 051c 13850400 		mv	a0,s1
 901 0520 97000000 		call	_Z18insertIntoSlabListP6slab_sPS0_
 901      E7800000 
 902              	.LVL79:
 200:src/kernel/slabAllocator.cpp **** }
 903              		.loc 1 200 1
 904 0528 83308101 		ld	ra,24(sp)
 905              		.cfi_restore 1
 906 052c 03340101 		ld	s0,16(sp)
 907              		.cfi_restore 8
 908              		.cfi_def_cfa 2, 32
 909 0530 83348100 		ld	s1,8(sp)
 910              		.cfi_restore 9
 911              	.LVL80:
 912 0534 03390100 		ld	s2,0(sp)
 913              		.cfi_restore 18
 914              	.LVL81:
 915 0538 13010102 		addi	sp,sp,32
 916              		.cfi_def_cfa_offset 0
 917 053c 67800000 		jr	ra
 918              		.cfi_endproc
 919              	.LFE19:
 921              		.align	2
 922              		.globl	_Z12allocateSlabP12kmem_cache_s
 924              	_Z12allocateSlabP12kmem_cache_s:
 925              	.LFB20:
 201:src/kernel/slabAllocator.cpp **** 
 202:src/kernel/slabAllocator.cpp **** void allocateSlab(kmem_cache_t* cachep)
 203:src/kernel/slabAllocator.cpp **** {
 926              		.loc 1 203 1 is_stmt 1
 927              		.cfi_startproc
 928              	.LVL82:
 929 0540 130101FD 		addi	sp,sp,-48
 930              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/ccbdlM41.s 			page 21


 931 0544 23341102 		sd	ra,40(sp)
 932 0548 23308102 		sd	s0,32(sp)
 933 054c 233C9100 		sd	s1,24(sp)
 934 0550 23382101 		sd	s2,16(sp)
 935 0554 23343101 		sd	s3,8(sp)
 936              		.cfi_offset 1, -8
 937              		.cfi_offset 8, -16
 938              		.cfi_offset 9, -24
 939              		.cfi_offset 18, -32
 940              		.cfi_offset 19, -40
 941 0558 13040103 		addi	s0,sp,48
 942              		.cfi_def_cfa 8, 0
 943 055c 93090500 		mv	s3,a0
 204:src/kernel/slabAllocator.cpp ****     slab_t* newSlab = (slab_t*)buddy_alloc(slabAllocator->buddy,cachep->slab_size);
 944              		.loc 1 204 5
 945              		.loc 1 204 43 is_stmt 0
 946 0560 83358505 		ld	a1,88(a0)
 947 0564 97070000 		ld	a5,.LANCHOR0
 947      83B70700 
 948 056c 03B50700 		ld	a0,0(a5)
 949              	.LVL83:
 950 0570 97000000 		call	_Z11buddy_allocP14buddyAllocatorm@plt
 950      E7800000 
 951              	.LVL84:
 205:src/kernel/slabAllocator.cpp ****     if(newSlab == nullptr)
 952              		.loc 1 205 5 is_stmt 1
 953 0578 630C0508 		beqz	a0,.L53
 954 057c 93040500 		mv	s1,a0
 206:src/kernel/slabAllocator.cpp ****         return;
 207:src/kernel/slabAllocator.cpp ****     newSlab->next = cachep->slabs_empty;
 955              		.loc 1 207 5
 956              		.loc 1 207 29 is_stmt 0
 957 0580 83B70904 		ld	a5,64(s3)
 958              		.loc 1 207 19
 959 0584 2334F500 		sd	a5,8(a0)
 208:src/kernel/slabAllocator.cpp ****     if(cachep->slabs_empty != nullptr)
 960              		.loc 1 208 5 is_stmt 1
 961 0588 63840700 		beqz	a5,.L55
 209:src/kernel/slabAllocator.cpp ****         cachep->slabs_empty->prev = newSlab;
 962              		.loc 1 209 9
 963              		.loc 1 209 35 is_stmt 0
 964 058c 23B0A700 		sd	a0,0(a5)
 965              	.LVL85:
 966              	.L55:
 210:src/kernel/slabAllocator.cpp ****     cachep->slabs_empty = newSlab;
 967              		.loc 1 210 5 is_stmt 1
 968              		.loc 1 210 25 is_stmt 0
 969 0590 23B09904 		sd	s1,64(s3)
 211:src/kernel/slabAllocator.cpp ****     newSlab->prev = nullptr;
 970              		.loc 1 211 5 is_stmt 1
 971              		.loc 1 211 19 is_stmt 0
 972 0594 23B00400 		sd	zero,0(s1)
 212:src/kernel/slabAllocator.cpp **** 
 213:src/kernel/slabAllocator.cpp ****     newSlab->numOfAllocatedObjects = 0;
 973              		.loc 1 213 5 is_stmt 1
 974              		.loc 1 213 36 is_stmt 0
 975 0598 23B00402 		sd	zero,32(s1)
GAS LISTING /tmp/ccbdlM41.s 			page 22


 214:src/kernel/slabAllocator.cpp ****     newSlab->owner = cachep;
 976              		.loc 1 214 5 is_stmt 1
 977              		.loc 1 214 20 is_stmt 0
 978 059c 23B83401 		sd	s3,16(s1)
 215:src/kernel/slabAllocator.cpp ****     size_t sizeInBytes = cachep->slab_size*BLOCK_SIZE;
 979              		.loc 1 215 5 is_stmt 1
 980              		.loc 1 215 34 is_stmt 0
 981 05a0 83B68905 		ld	a3,88(s3)
 982              		.loc 1 215 12
 983 05a4 9396C600 		slli	a3,a3,12
 984              	.LVL86:
 216:src/kernel/slabAllocator.cpp ****     newSlab->numOfObjects = (sizeInBytes - sizeof(slab_t)) / cachep->obj_size; // TODO can this par
 985              		.loc 1 216 5 is_stmt 1
 986              		.loc 1 216 42 is_stmt 0
 987 05a8 938686BD 		addi	a3,a3,-1064
 988              	.LVL87:
 989              		.loc 1 216 70
 990 05ac 83B70906 		ld	a5,96(s3)
 991              		.loc 1 216 60
 992 05b0 B3D6F602 		divu	a3,a3,a5
 993              	.LVL88:
 994              		.loc 1 216 27
 995 05b4 23BCD400 		sd	a3,24(s1)
 996              	.LVL89:
 217:src/kernel/slabAllocator.cpp ****     for(size_t i = 0; i < (newSlab->numOfObjects + 7) / 8;i++)
 997              		.loc 1 217 5 is_stmt 1
 998              	.LBB5:
 999              		.loc 1 217 16 is_stmt 0
 1000 05b8 13070000 		li	a4,0
 1001              	.LVL90:
 1002              	.L57:
 1003              		.loc 1 217 25 is_stmt 1 discriminator 3
 1004              		.loc 1 217 50 is_stmt 0 discriminator 3
 1005 05bc 93877600 		addi	a5,a3,7
 1006              		.loc 1 217 55 discriminator 3
 1007 05c0 93D73700 		srli	a5,a5,3
 1008              		.loc 1 217 25 discriminator 3
 1009 05c4 637AF700 		bleu	a5,a4,.L56
 218:src/kernel/slabAllocator.cpp ****         newSlab->allocated[i] = 0;
 1010              		.loc 1 218 9 is_stmt 1 discriminator 2
 1011              		.loc 1 218 31 is_stmt 0 discriminator 2
 1012 05c8 B387E400 		add	a5,s1,a4
 1013 05cc 23840702 		sb	zero,40(a5)
 217:src/kernel/slabAllocator.cpp ****     for(size_t i = 0; i < (newSlab->numOfObjects + 7) / 8;i++)
 1014              		.loc 1 217 5 is_stmt 1 discriminator 2
 1015 05d0 13071700 		addi	a4,a4,1
 1016              	.LVL91:
 1017 05d4 6FF09FFE 		j	.L57
 1018              	.L56:
 1019              	.LBE5:
 219:src/kernel/slabAllocator.cpp **** 
 220:src/kernel/slabAllocator.cpp ****     if(cachep->ctor != nullptr)
 1020              		.loc 1 220 5
 1021              	.LBB6:
 1022              		.loc 1 220 16 is_stmt 0
 1023 05d8 83B78906 		ld	a5,104(s3)
 1024              		.loc 1 220 5
GAS LISTING /tmp/ccbdlM41.s 			page 23


 1025 05dc 638A0702 		beqz	a5,.L53
 1026              	.LBB7:
 221:src/kernel/slabAllocator.cpp ****     {
 222:src/kernel/slabAllocator.cpp ****         for(size_t i = 0;i < newSlab->numOfObjects;i++)
 1027              		.loc 1 222 20
 1028 05e0 13090000 		li	s2,0
 1029              	.LVL92:
 1030              	.L58:
 1031              		.loc 1 222 28 is_stmt 1 discriminator 3
 1032              		.loc 1 222 39 is_stmt 0 discriminator 3
 1033 05e4 83B78401 		ld	a5,24(s1)
 1034              		.loc 1 222 28 discriminator 3
 1035 05e8 6374F902 		bleu	a5,s2,.L53
 223:src/kernel/slabAllocator.cpp ****             cachep->ctor((void*)((size_t)newSlab + sizeof(slab_t) + i*newSlab->owner->obj_size));
 1036              		.loc 1 223 13 is_stmt 1 discriminator 2
 1037              		.loc 1 223 21 is_stmt 0 discriminator 2
 1038 05ec 83B78906 		ld	a5,104(s3)
 1039              		.loc 1 223 80 discriminator 2
 1040 05f0 03B70401 		ld	a4,16(s1)
 1041              		.loc 1 223 87 discriminator 2
 1042 05f4 03350706 		ld	a0,96(a4)
 1043              		.loc 1 223 70 discriminator 2
 1044 05f8 33052503 		mul	a0,a0,s2
 1045              		.loc 1 223 67 discriminator 2
 1046 05fc 3385A400 		add	a0,s1,a0
 1047              		.loc 1 223 25 discriminator 2
 1048 0600 13058542 		addi	a0,a0,1064
 1049 0604 E7800700 		jalr	a5
 1050              	.LVL93:
 222:src/kernel/slabAllocator.cpp ****             cachep->ctor((void*)((size_t)newSlab + sizeof(slab_t) + i*newSlab->owner->obj_size));
 1051              		.loc 1 222 9 is_stmt 1 discriminator 2
 1052 0608 13091900 		addi	s2,s2,1
 1053              	.LVL94:
 1054 060c 6FF09FFD 		j	.L58
 1055              	.LVL95:
 1056              	.L53:
 1057              	.LBE7:
 1058              	.LBE6:
 224:src/kernel/slabAllocator.cpp ****     }
 225:src/kernel/slabAllocator.cpp **** }
 1059              		.loc 1 225 1 is_stmt 0
 1060 0610 83308102 		ld	ra,40(sp)
 1061              		.cfi_restore 1
 1062 0614 03340102 		ld	s0,32(sp)
 1063              		.cfi_restore 8
 1064              		.cfi_def_cfa 2, 48
 1065 0618 83348101 		ld	s1,24(sp)
 1066              		.cfi_restore 9
 1067 061c 03390101 		ld	s2,16(sp)
 1068              		.cfi_restore 18
 1069 0620 83398100 		ld	s3,8(sp)
 1070              		.cfi_restore 19
 1071              	.LVL96:
 1072 0624 13010103 		addi	sp,sp,48
 1073              		.cfi_def_cfa_offset 0
 1074 0628 67800000 		jr	ra
 1075              		.cfi_endproc
GAS LISTING /tmp/ccbdlM41.s 			page 24


 1076              	.LFE20:
 1078              		.align	2
 1079              		.globl	_Z18getOptimalSlabSizem
 1081              	_Z18getOptimalSlabSizem:
 1082              	.LFB21:
 226:src/kernel/slabAllocator.cpp **** 
 227:src/kernel/slabAllocator.cpp **** size_t getOptimalSlabSize(size_t obj_size)
 228:src/kernel/slabAllocator.cpp **** {
 1083              		.loc 1 228 1 is_stmt 1
 1084              		.cfi_startproc
 1085              	.LVL97:
 1086 062c 130101FF 		addi	sp,sp,-16
 1087              		.cfi_def_cfa_offset 16
 1088 0630 23348100 		sd	s0,8(sp)
 1089              		.cfi_offset 8, -8
 1090 0634 13040101 		addi	s0,sp,16
 1091              		.cfi_def_cfa 8, 0
 229:src/kernel/slabAllocator.cpp ****     size_t bestSize = BLOCK_SIZE;
 1092              		.loc 1 229 5
 1093              	.LVL98:
 1094              		.loc 1 229 12 is_stmt 0
 1095 0638 B7170000 		li	a5,4096
 1096              	.LVL99:
 1097              	.L62:
 230:src/kernel/slabAllocator.cpp ****     while(bestSize < obj_size + sizeof(slab_t))
 1098              		.loc 1 230 5 is_stmt 1
 1099              		.loc 1 230 20
 1100              		.loc 1 230 31 is_stmt 0
 1101 063c 13078542 		addi	a4,a0,1064
 1102              		.loc 1 230 20
 1103 0640 63F6E700 		bleu	a4,a5,.L61
 231:src/kernel/slabAllocator.cpp ****         bestSize<<=1;
 1104              		.loc 1 231 9 is_stmt 1
 1105              		.loc 1 231 17 is_stmt 0
 1106 0644 93971700 		slli	a5,a5,1
 1107              	.LVL100:
 230:src/kernel/slabAllocator.cpp ****     while(bestSize < obj_size + sizeof(slab_t))
 1108              		.loc 1 230 5
 1109 0648 6FF05FFF 		j	.L62
 1110              	.L61:
 232:src/kernel/slabAllocator.cpp ****     size_t optimalWaste = (bestSize - sizeof(slab_t)) % obj_size;
 1111              		.loc 1 232 5 is_stmt 1
 1112              		.loc 1 232 37 is_stmt 0
 1113 064c 138887BD 		addi	a6,a5,-1064
 1114              		.loc 1 232 12
 1115 0650 3378A802 		remu	a6,a6,a0
 1116              	.LVL101:
 233:src/kernel/slabAllocator.cpp **** 
 234:src/kernel/slabAllocator.cpp ****     //return bestSize / BLOCK_SIZE;
 235:src/kernel/slabAllocator.cpp **** 
 236:src/kernel/slabAllocator.cpp ****     static size_t lowerConst = 1;
 1117              		.loc 1 236 5 is_stmt 1
 237:src/kernel/slabAllocator.cpp ****     static size_t highConst = 4;
 1118              		.loc 1 237 5
 238:src/kernel/slabAllocator.cpp ****     for(size_t i = lowerConst;i<=highConst;i++)
 1119              		.loc 1 238 5
 1120              	.LBB8:
GAS LISTING /tmp/ccbdlM41.s 			page 25


 1121              		.loc 1 238 16 is_stmt 0
 1122 0654 93061000 		li	a3,1
 1123 0658 6F008000 		j	.L65
 1124              	.LVL102:
 1125              	.L64:
 1126              		.loc 1 238 5 is_stmt 1 discriminator 2
 1127 065c 93861600 		addi	a3,a3,1
 1128              	.LVL103:
 1129              	.L65:
 1130              		.loc 1 238 32 discriminator 1
 1131 0660 13074000 		li	a4,4
 1132 0664 6366D702 		bgtu	a3,a4,.L63
 1133              	.LBB9:
 239:src/kernel/slabAllocator.cpp ****     {
 240:src/kernel/slabAllocator.cpp ****         size_t newSize = bestSize << i;
 1134              		.loc 1 240 9
 1135              		.loc 1 240 16 is_stmt 0
 1136 0668 3396D700 		sll	a2,a5,a3
 1137              	.LVL104:
 241:src/kernel/slabAllocator.cpp ****         size_t newWaste = (newSize - sizeof(slab_t)) % obj_size;
 1138              		.loc 1 241 9 is_stmt 1
 1139              		.loc 1 241 36 is_stmt 0
 1140 066c 130786BD 		addi	a4,a2,-1064
 1141              		.loc 1 241 16
 1142 0670 B375A702 		remu	a1,a4,a0
 1143              	.LVL105:
 242:src/kernel/slabAllocator.cpp ****         size_t numOfObjs = (newSize - sizeof(slab_t)) / obj_size;
 1144              		.loc 1 242 9 is_stmt 1
 1145              		.loc 1 242 16 is_stmt 0
 1146 0674 3357A702 		divu	a4,a4,a0
 1147              	.LVL106:
 243:src/kernel/slabAllocator.cpp ****         if(newWaste < optimalWaste && numOfObjs <= MAX_NUM_OF_OBJS)
 1148              		.loc 1 243 9 is_stmt 1
 1149 0678 E3F205FF 		bleu	a6,a1,.L64
 1150              		.loc 1 243 36 is_stmt 0 discriminator 1
 1151 067c B7280000 		li	a7,8192
 1152 0680 E3EEE8FC 		bgtu	a4,a7,.L64
 244:src/kernel/slabAllocator.cpp ****         {
 245:src/kernel/slabAllocator.cpp ****             optimalWaste = newWaste;
 1153              		.loc 1 245 26
 1154 0684 13880500 		mv	a6,a1
 1155              	.LVL107:
 246:src/kernel/slabAllocator.cpp ****             bestSize = newSize;
 1156              		.loc 1 246 22
 1157 0688 93070600 		mv	a5,a2
 1158              	.LVL108:
 1159 068c 6FF01FFD 		j	.L64
 1160              	.LVL109:
 1161              	.L63:
 1162              	.LBE9:
 1163              	.LBE8:
 247:src/kernel/slabAllocator.cpp ****         }
 248:src/kernel/slabAllocator.cpp ****     }
 249:src/kernel/slabAllocator.cpp **** 
 250:src/kernel/slabAllocator.cpp ****     return bestSize / BLOCK_SIZE;
 1164              		.loc 1 250 5 is_stmt 1
 251:src/kernel/slabAllocator.cpp **** }
GAS LISTING /tmp/ccbdlM41.s 			page 26


 1165              		.loc 1 251 1 is_stmt 0
 1166 0690 13D5C700 		srli	a0,a5,12
 1167              	.LVL110:
 1168 0694 03348100 		ld	s0,8(sp)
 1169              		.cfi_restore 8
 1170              		.cfi_def_cfa 2, 16
 1171 0698 13010101 		addi	sp,sp,16
 1172              		.cfi_def_cfa_offset 0
 1173 069c 67800000 		jr	ra
 1174              		.cfi_endproc
 1175              	.LFE21:
 1177              		.align	2
 1178              		.globl	_Z8findSlabP12kmem_cache_sPKv
 1180              	_Z8findSlabP12kmem_cache_sPKv:
 1181              	.LFB22:
 252:src/kernel/slabAllocator.cpp **** 
 253:src/kernel/slabAllocator.cpp **** //finds the slab where objp is
 254:src/kernel/slabAllocator.cpp **** slab_t* findSlab(kmem_cache_t* cachep, const void* objp)
 255:src/kernel/slabAllocator.cpp **** {
 1182              		.loc 1 255 1 is_stmt 1
 1183              		.cfi_startproc
 1184              	.LVL111:
 1185 06a0 130101FF 		addi	sp,sp,-16
 1186              		.cfi_def_cfa_offset 16
 1187 06a4 23348100 		sd	s0,8(sp)
 1188              		.cfi_offset 8, -8
 1189 06a8 13040101 		addi	s0,sp,16
 1190              		.cfi_def_cfa 8, 0
 1191 06ac 93060500 		mv	a3,a0
 256:src/kernel/slabAllocator.cpp ****     if(cachep == nullptr || objp == nullptr)
 1192              		.loc 1 256 5
 1193 06b0 630C0502 		beqz	a0,.L68
 1194              		.loc 1 256 26 is_stmt 0 discriminator 1
 1195 06b4 638A0506 		beqz	a1,.L76
 257:src/kernel/slabAllocator.cpp ****         return nullptr;
 258:src/kernel/slabAllocator.cpp ****     slab_t* slab = cachep->slabs_full;
 1196              		.loc 1 258 5 is_stmt 1
 1197              		.loc 1 258 13 is_stmt 0
 1198 06b8 03358504 		ld	a0,72(a0)
 1199              	.LVL112:
 1200 06bc 6F008000 		j	.L72
 1201              	.LVL113:
 1202              	.L71:
 1203              	.LBB10:
 259:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 260:src/kernel/slabAllocator.cpp ****     {
 261:src/kernel/slabAllocator.cpp ****         size_t endAddr = (size_t)slab + sizeof(slab_t) + slab->numOfObjects*slab->owner->obj_size;
 262:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 263:src/kernel/slabAllocator.cpp ****             return slab;
 264:src/kernel/slabAllocator.cpp ****         slab = slab->next;
 1204              		.loc 1 264 9 is_stmt 1
 1205              		.loc 1 264 14 is_stmt 0
 1206 06c0 03358500 		ld	a0,8(a0)
 1207              	.LVL114:
 1208              	.L72:
 1209              	.LBE10:
 259:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
GAS LISTING /tmp/ccbdlM41.s 			page 27


 1210              		.loc 1 259 5 is_stmt 1
 259:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 1211              		.loc 1 259 16
 1212 06c4 63080502 		beqz	a0,.L70
 1213              	.LBB11:
 261:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1214              		.loc 1 261 9
 261:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1215              		.loc 1 261 64 is_stmt 0
 1216 06c8 83378501 		ld	a5,24(a0)
 261:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1217              		.loc 1 261 83
 1218 06cc 03370501 		ld	a4,16(a0)
 261:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1219              		.loc 1 261 90
 1220 06d0 03370706 		ld	a4,96(a4)
 261:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1221              		.loc 1 261 76
 1222 06d4 B387E702 		mul	a5,a5,a4
 261:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1223              		.loc 1 261 56
 1224 06d8 B387A700 		add	a5,a5,a0
 261:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1225              		.loc 1 261 16
 1226 06dc 93878742 		addi	a5,a5,1064
 1227              	.LVL115:
 262:src/kernel/slabAllocator.cpp ****             return slab;
 1228              		.loc 1 262 9 is_stmt 1
 1229 06e0 E370B5FE 		bgeu	a0,a1,.L71
 262:src/kernel/slabAllocator.cpp ****             return slab;
 1230              		.loc 1 262 40 is_stmt 0 discriminator 1
 1231 06e4 E3FEF5FC 		bgeu	a1,a5,.L71
 1232              	.LVL116:
 1233              	.L68:
 1234              	.LBE11:
 265:src/kernel/slabAllocator.cpp ****     }
 266:src/kernel/slabAllocator.cpp **** 
 267:src/kernel/slabAllocator.cpp ****     slab = cachep->slabs_partial;
 268:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 269:src/kernel/slabAllocator.cpp ****     {
 270:src/kernel/slabAllocator.cpp ****         size_t endAddr = (size_t)slab + sizeof(slab_t) + slab->numOfObjects*slab->owner->obj_size;
 271:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 272:src/kernel/slabAllocator.cpp ****             return slab;
 273:src/kernel/slabAllocator.cpp ****         slab = slab->next;
 274:src/kernel/slabAllocator.cpp ****     }
 275:src/kernel/slabAllocator.cpp **** 
 276:src/kernel/slabAllocator.cpp ****     return nullptr;
 277:src/kernel/slabAllocator.cpp **** }
 1235              		.loc 1 277 1
 1236 06e8 03348100 		ld	s0,8(sp)
 1237              		.cfi_remember_state
 1238              		.cfi_restore 8
 1239              		.cfi_def_cfa 2, 16
 1240 06ec 13010101 		addi	sp,sp,16
 1241              		.cfi_def_cfa_offset 0
 1242 06f0 67800000 		jr	ra
 1243              	.LVL117:
GAS LISTING /tmp/ccbdlM41.s 			page 28


 1244              	.L70:
 1245              		.cfi_restore_state
 267:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 1246              		.loc 1 267 5 is_stmt 1
 267:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 1247              		.loc 1 267 10 is_stmt 0
 1248 06f4 03B50605 		ld	a0,80(a3)
 1249              	.LVL118:
 1250 06f8 6F008000 		j	.L74
 1251              	.LVL119:
 1252              	.L73:
 1253              	.LBB12:
 273:src/kernel/slabAllocator.cpp ****     }
 1254              		.loc 1 273 9 is_stmt 1
 273:src/kernel/slabAllocator.cpp ****     }
 1255              		.loc 1 273 14 is_stmt 0
 1256 06fc 03358500 		ld	a0,8(a0)
 1257              	.LVL120:
 1258              	.L74:
 1259              	.LBE12:
 268:src/kernel/slabAllocator.cpp ****     {
 1260              		.loc 1 268 5 is_stmt 1
 268:src/kernel/slabAllocator.cpp ****     {
 1261              		.loc 1 268 16
 1262 0700 E30405FE 		beqz	a0,.L68
 1263              	.LBB13:
 270:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1264              		.loc 1 270 9
 270:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1265              		.loc 1 270 64 is_stmt 0
 1266 0704 83378501 		ld	a5,24(a0)
 270:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1267              		.loc 1 270 83
 1268 0708 03370501 		ld	a4,16(a0)
 270:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1269              		.loc 1 270 90
 1270 070c 03370706 		ld	a4,96(a4)
 270:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1271              		.loc 1 270 76
 1272 0710 B387E702 		mul	a5,a5,a4
 270:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1273              		.loc 1 270 56
 1274 0714 B387A700 		add	a5,a5,a0
 270:src/kernel/slabAllocator.cpp ****         if((size_t)objp > (size_t)slab && (size_t)objp < endAddr)
 1275              		.loc 1 270 16
 1276 0718 93878742 		addi	a5,a5,1064
 1277              	.LVL121:
 271:src/kernel/slabAllocator.cpp ****             return slab;
 1278              		.loc 1 271 9 is_stmt 1
 1279 071c E370B5FE 		bgeu	a0,a1,.L73
 271:src/kernel/slabAllocator.cpp ****             return slab;
 1280              		.loc 1 271 40 is_stmt 0 discriminator 1
 1281 0720 E3FEF5FC 		bgeu	a1,a5,.L73
 1282 0724 6FF05FFC 		j	.L68
 1283              	.LVL122:
 1284              	.L76:
 1285              	.LBE13:
GAS LISTING /tmp/ccbdlM41.s 			page 29


 257:src/kernel/slabAllocator.cpp ****     slab_t* slab = cachep->slabs_full;
 1286              		.loc 1 257 16
 1287 0728 13850500 		mv	a0,a1
 1288              	.LVL123:
 1289 072c 6FF0DFFB 		j	.L68
 1290              		.cfi_endproc
 1291              	.LFE22:
 1293              		.align	2
 1294              		.globl	_Z19resetAllocatedIndexP6slab_si
 1296              	_Z19resetAllocatedIndexP6slab_si:
 1297              	.LFB23:
 278:src/kernel/slabAllocator.cpp **** 
 279:src/kernel/slabAllocator.cpp **** void resetAllocatedIndex(slab_t* slab, int index)
 280:src/kernel/slabAllocator.cpp **** {
 1298              		.loc 1 280 1 is_stmt 1
 1299              		.cfi_startproc
 1300              	.LVL124:
 1301 0730 130101FF 		addi	sp,sp,-16
 1302              		.cfi_def_cfa_offset 16
 1303 0734 23348100 		sd	s0,8(sp)
 1304              		.cfi_offset 8, -8
 1305 0738 13040101 		addi	s0,sp,16
 1306              		.cfi_def_cfa 8, 0
 281:src/kernel/slabAllocator.cpp ****     slab->allocated[index / 8]=(uint8)slab->allocated[index/8] & ~(1 << (index%8));
 1307              		.loc 1 281 5
 1308              		.loc 1 281 60 is_stmt 0
 1309 073c 9BD7F541 		sraiw	a5,a1,31
 1310 0740 9BD7D701 		srliw	a5,a5,29
 1311 0744 BB85B700 		addw	a1,a5,a1
 1312              	.LVL125:
 1313 0748 1BD73540 		sraiw	a4,a1,3
 1314              		.loc 1 281 62
 1315 074c 3305E500 		add	a0,a0,a4
 1316              	.LVL126:
 1317              		.loc 1 281 32
 1318 0750 03078502 		lb	a4,40(a0)
 1319              		.loc 1 281 79
 1320 0754 93F57500 		andi	a1,a1,7
 1321 0758 BB85F540 		subw	a1,a1,a5
 1322              		.loc 1 281 70
 1323 075c 93071000 		li	a5,1
 1324 0760 BB95B700 		sllw	a1,a5,a1
 1325              		.loc 1 281 64
 1326 0764 93C5F5FF 		not	a1,a1
 1327 0768 B375B700 		and	a1,a4,a1
 1328              		.loc 1 281 31
 1329 076c 2304B502 		sb	a1,40(a0)
 282:src/kernel/slabAllocator.cpp **** }
 1330              		.loc 1 282 1
 1331 0770 03348100 		ld	s0,8(sp)
 1332              		.cfi_restore 8
 1333              		.cfi_def_cfa 2, 16
 1334 0774 13010101 		addi	sp,sp,16
 1335              		.cfi_def_cfa_offset 0
 1336 0778 67800000 		jr	ra
 1337              		.cfi_endproc
 1338              	.LFE23:
GAS LISTING /tmp/ccbdlM41.s 			page 30


 1340              		.section	.rodata.str1.8
 1341              		.align	3
 1342              	.LC1:
 1343 0010 4F6E6520 		.string	"One slab info---------\n"
 1343      736C6162 
 1343      20696E66 
 1343      6F2D2D2D 
 1343      2D2D2D2D 
 1344              		.align	3
 1345              	.LC2:
 1346 0028 536C6162 		.string	"Slab address "
 1346      20616464 
 1346      72657373 
 1346      2000
 1347 0036 0000     		.align	3
 1348              	.LC3:
 1349 0038 4E756D62 		.string	"Number of allocated objects "
 1349      6572206F 
 1349      6620616C 
 1349      6C6F6361 
 1349      74656420 
 1350 0055 000000   		.align	3
 1351              	.LC4:
 1352 0058 4E756D62 		.string	"Number of objects "
 1352      6572206F 
 1352      66206F62 
 1352      6A656374 
 1352      732000
 1353              		.text
 1354              		.align	2
 1355              		.globl	_Z13printSlabInfoP6slab_s
 1357              	_Z13printSlabInfoP6slab_s:
 1358              	.LFB24:
 283:src/kernel/slabAllocator.cpp **** 
 284:src/kernel/slabAllocator.cpp **** void printSlabInfo(slab_t* slab)
 285:src/kernel/slabAllocator.cpp **** {
 1359              		.loc 1 285 1 is_stmt 1
 1360              		.cfi_startproc
 1361              	.LVL127:
 1362 077c 130101FE 		addi	sp,sp,-32
 1363              		.cfi_def_cfa_offset 32
 1364 0780 233C1100 		sd	ra,24(sp)
 1365 0784 23388100 		sd	s0,16(sp)
 1366 0788 23349100 		sd	s1,8(sp)
 1367              		.cfi_offset 1, -8
 1368              		.cfi_offset 8, -16
 1369              		.cfi_offset 9, -24
 1370 078c 13040102 		addi	s0,sp,32
 1371              		.cfi_def_cfa 8, 0
 1372 0790 93040500 		mv	s1,a0
 286:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("One slab info---------\n");
 1373              		.loc 1 286 5
 1374              		.loc 1 286 30 is_stmt 0
 1375 0794 17050000 		lla	a0,.LC1
 1375      13050500 
 1376              	.LVL128:
 1377 079c 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
GAS LISTING /tmp/ccbdlM41.s 			page 31


 1377      E7800000 
 1378              	.LVL129:
 287:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Slab address ",(size_t)slab,16);
 1379              		.loc 1 287 5 is_stmt 1
 1380              		.loc 1 287 33 is_stmt 0
 1381 07a4 13060001 		li	a2,16
 1382 07a8 93850400 		mv	a1,s1
 1383 07ac 17050000 		lla	a0,.LC2
 1383      13050500 
 1384 07b4 97000000 		call	_ZN8KConsole18trapPrintStringIntEPKcmi@plt
 1384      E7800000 
 1385              	.LVL130:
 288:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Number of allocated objects ",slab->numOfAllocatedObjects);
 1386              		.loc 1 288 5 is_stmt 1
 1387              		.loc 1 288 33 is_stmt 0
 1388 07bc 1306A000 		li	a2,10
 1389 07c0 83B50402 		ld	a1,32(s1)
 1390 07c4 17050000 		lla	a0,.LC3
 1390      13050500 
 1391 07cc 97000000 		call	_ZN8KConsole18trapPrintStringIntEPKcmi@plt
 1391      E7800000 
 1392              	.LVL131:
 289:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Number of objects ", slab->numOfObjects);
 1393              		.loc 1 289 5 is_stmt 1
 1394              		.loc 1 289 33 is_stmt 0
 1395 07d4 1306A000 		li	a2,10
 1396 07d8 83B58401 		ld	a1,24(s1)
 1397 07dc 17050000 		lla	a0,.LC4
 1397      13050500 
 1398 07e4 97000000 		call	_ZN8KConsole18trapPrintStringIntEPKcmi@plt
 1398      E7800000 
 1399              	.LVL132:
 290:src/kernel/slabAllocator.cpp ****     /*for(size_t i = 0;i < (slab->numOfObjects + 7) / 8;i++)
 291:src/kernel/slabAllocator.cpp ****     {
 292:src/kernel/slabAllocator.cpp ****         KConsole::trapPrintInt(i);
 293:src/kernel/slabAllocator.cpp ****         KConsole::trapPrintString(" : ");
 294:src/kernel/slabAllocator.cpp ****         KConsole::trapPrintInt((size_t)slab->allocated[i], 16);
 295:src/kernel/slabAllocator.cpp ****         KConsole::trapPrintString("\n");
 296:src/kernel/slabAllocator.cpp ****     }*/
 297:src/kernel/slabAllocator.cpp **** }
 1400              		.loc 1 297 1
 1401 07ec 83308101 		ld	ra,24(sp)
 1402              		.cfi_restore 1
 1403 07f0 03340101 		ld	s0,16(sp)
 1404              		.cfi_restore 8
 1405              		.cfi_def_cfa 2, 32
 1406 07f4 83348100 		ld	s1,8(sp)
 1407              		.cfi_restore 9
 1408              	.LVL133:
 1409 07f8 13010102 		addi	sp,sp,32
 1410              		.cfi_def_cfa_offset 0
 1411 07fc 67800000 		jr	ra
 1412              		.cfi_endproc
 1413              	.LFE24:
 1415              		.align	2
 1416              		.globl	_Z16free_slab_objectP6slab_sPKv
 1418              	_Z16free_slab_objectP6slab_sPKv:
GAS LISTING /tmp/ccbdlM41.s 			page 32


 1419              	.LFB25:
 298:src/kernel/slabAllocator.cpp **** 
 299:src/kernel/slabAllocator.cpp **** void free_slab_object(slab_t* slab, const void* objp)
 300:src/kernel/slabAllocator.cpp **** {
 1420              		.loc 1 300 1 is_stmt 1
 1421              		.cfi_startproc
 1422              	.LVL134:
 301:src/kernel/slabAllocator.cpp ****     if(slab == nullptr || objp == nullptr)
 1423              		.loc 1 301 5
 1424 0800 630A0512 		beqz	a0,.L89
 300:src/kernel/slabAllocator.cpp ****     if(slab == nullptr || objp == nullptr)
 1425              		.loc 1 300 1 is_stmt 0 discriminator 1
 1426 0804 130101FD 		addi	sp,sp,-48
 1427              		.cfi_def_cfa_offset 48
 1428 0808 23341102 		sd	ra,40(sp)
 1429 080c 23308102 		sd	s0,32(sp)
 1430 0810 233C9100 		sd	s1,24(sp)
 1431 0814 23382101 		sd	s2,16(sp)
 1432 0818 23343101 		sd	s3,8(sp)
 1433 081c 23304101 		sd	s4,0(sp)
 1434              		.cfi_offset 1, -8
 1435              		.cfi_offset 8, -16
 1436              		.cfi_offset 9, -24
 1437              		.cfi_offset 18, -32
 1438              		.cfi_offset 19, -40
 1439              		.cfi_offset 20, -48
 1440 0820 13040103 		addi	s0,sp,48
 1441              		.cfi_def_cfa 8, 0
 1442 0824 93040500 		mv	s1,a0
 1443 0828 93890500 		mv	s3,a1
 1444              		.loc 1 301 24 discriminator 1
 1445 082c 63840508 		beqz	a1,.L82
 302:src/kernel/slabAllocator.cpp ****         return;
 303:src/kernel/slabAllocator.cpp ****     int indexOfObject = ((size_t)objp - sizeof(slab_t) - (size_t)slab) / slab->owner->obj_size;
 1446              		.loc 1 303 5 is_stmt 1
 1447              		.loc 1 303 56 is_stmt 0
 1448 0830 3389A540 		sub	s2,a1,a0
 1449 0834 130989BD 		addi	s2,s2,-1064
 1450              		.loc 1 303 80
 1451 0838 033A0501 		ld	s4,16(a0)
 1452              		.loc 1 303 87
 1453 083c 83370A06 		ld	a5,96(s4)
 1454              		.loc 1 303 72
 1455 0840 3359F902 		divu	s2,s2,a5
 1456              		.loc 1 303 9
 1457 0844 1B090900 		sext.w	s2,s2
 1458              	.LVL135:
 304:src/kernel/slabAllocator.cpp ****     if((size_t)objp != (size_t)slab + sizeof(slab_t) + indexOfObject*slab->owner->obj_size) //addre
 1459              		.loc 1 304 5 is_stmt 1
 1460              		.loc 1 304 69 is_stmt 0
 1461 0848 B3872703 		mul	a5,a5,s2
 1462              		.loc 1 304 54
 1463 084c B307F500 		add	a5,a0,a5
 1464 0850 93878742 		addi	a5,a5,1064
 1465              		.loc 1 304 5
 1466 0854 6390F506 		bne	a1,a5,.L82
 305:src/kernel/slabAllocator.cpp ****         return;
GAS LISTING /tmp/ccbdlM41.s 			page 33


 306:src/kernel/slabAllocator.cpp **** 
 307:src/kernel/slabAllocator.cpp ****     if(!checkSetIndex(slab, indexOfObject))
 1467              		.loc 1 307 5 is_stmt 1
 1468              		.loc 1 307 22 is_stmt 0
 1469 0858 93050900 		mv	a1,s2
 1470              	.LVL136:
 1471 085c 97000000 		call	_Z13checkSetIndexP6slab_si
 1471      E7800000 
 1472              	.LVL137:
 1473              		.loc 1 307 5
 1474 0864 63080504 		beqz	a0,.L82
 308:src/kernel/slabAllocator.cpp ****         return;
 309:src/kernel/slabAllocator.cpp **** 
 310:src/kernel/slabAllocator.cpp ****     kmem_cache_t* cachep = slab->owner;
 1475              		.loc 1 310 5 is_stmt 1
 1476              	.LVL138:
 311:src/kernel/slabAllocator.cpp ****     if(cachep->dtor != nullptr)
 1477              		.loc 1 311 5
 1478              		.loc 1 311 16 is_stmt 0
 1479 0868 83370A07 		ld	a5,112(s4)
 1480              		.loc 1 311 5
 1481 086c 63860700 		beqz	a5,.L84
 312:src/kernel/slabAllocator.cpp ****         cachep->dtor((void*)objp);
 1482              		.loc 1 312 9 is_stmt 1
 1483              		.loc 1 312 21 is_stmt 0
 1484 0870 13850900 		mv	a0,s3
 1485 0874 E7800700 		jalr	a5
 1486              	.LVL139:
 1487              	.L84:
 313:src/kernel/slabAllocator.cpp ****     if(cachep->ctor != nullptr)
 1488              		.loc 1 313 5 is_stmt 1
 1489              		.loc 1 313 16 is_stmt 0
 1490 0878 83378A06 		ld	a5,104(s4)
 1491              		.loc 1 313 5
 1492 087c 63860700 		beqz	a5,.L85
 314:src/kernel/slabAllocator.cpp ****         cachep->ctor((void*)objp);
 1493              		.loc 1 314 9 is_stmt 1
 1494              		.loc 1 314 21 is_stmt 0
 1495 0880 13850900 		mv	a0,s3
 1496 0884 E7800700 		jalr	a5
 1497              	.LVL140:
 1498              	.L85:
 315:src/kernel/slabAllocator.cpp **** 
 316:src/kernel/slabAllocator.cpp ****     resetAllocatedIndex(slab, indexOfObject);
 1499              		.loc 1 316 5 is_stmt 1
 1500              		.loc 1 316 24 is_stmt 0
 1501 0888 93050900 		mv	a1,s2
 1502 088c 13850400 		mv	a0,s1
 1503 0890 97000000 		call	_Z19resetAllocatedIndexP6slab_si
 1503      E7800000 
 1504              	.LVL141:
 317:src/kernel/slabAllocator.cpp ****     if(slab->numOfObjects == slab->numOfAllocatedObjects)
 1505              		.loc 1 317 5 is_stmt 1
 1506              		.loc 1 317 14 is_stmt 0
 1507 0898 03B78401 		ld	a4,24(s1)
 1508              		.loc 1 317 36
 1509 089c 83B70402 		ld	a5,32(s1)
GAS LISTING /tmp/ccbdlM41.s 			page 34


 1510              		.loc 1 317 5
 1511 08a0 630AF702 		beq	a4,a5,.L92
 318:src/kernel/slabAllocator.cpp ****     {
 319:src/kernel/slabAllocator.cpp ****         removeFullSlab(slab->owner, slab);
 320:src/kernel/slabAllocator.cpp ****         slab->numOfAllocatedObjects--;
 321:src/kernel/slabAllocator.cpp ****         if(empty(slab))
 322:src/kernel/slabAllocator.cpp ****             removePartialSlab(slab->owner, slab);
 323:src/kernel/slabAllocator.cpp ****     }
 324:src/kernel/slabAllocator.cpp ****     else if(slab->numOfAllocatedObjects == 1)
 1512              		.loc 1 324 10 is_stmt 1
 1513 08a4 13071000 		li	a4,1
 1514 08a8 6386E706 		beq	a5,a4,.L93
 325:src/kernel/slabAllocator.cpp ****     {
 326:src/kernel/slabAllocator.cpp ****         removePartialSlab(slab->owner, slab);
 327:src/kernel/slabAllocator.cpp ****         slab->numOfAllocatedObjects--;
 328:src/kernel/slabAllocator.cpp ****     }
 329:src/kernel/slabAllocator.cpp ****     else
 330:src/kernel/slabAllocator.cpp ****         slab->numOfAllocatedObjects--;
 1515              		.loc 1 330 9
 1516              		.loc 1 330 36 is_stmt 0
 1517 08ac 9387F7FF 		addi	a5,a5,-1
 1518 08b0 23B0F402 		sd	a5,32(s1)
 1519              	.LVL142:
 1520              	.L82:
 331:src/kernel/slabAllocator.cpp **** }
 1521              		.loc 1 331 1
 1522 08b4 83308102 		ld	ra,40(sp)
 1523              		.cfi_remember_state
 1524              		.cfi_restore 1
 1525 08b8 03340102 		ld	s0,32(sp)
 1526              		.cfi_restore 8
 1527              		.cfi_def_cfa 2, 48
 1528 08bc 83348101 		ld	s1,24(sp)
 1529              		.cfi_restore 9
 1530              	.LVL143:
 1531 08c0 03390101 		ld	s2,16(sp)
 1532              		.cfi_restore 18
 1533 08c4 83398100 		ld	s3,8(sp)
 1534              		.cfi_restore 19
 1535              	.LVL144:
 1536 08c8 033A0100 		ld	s4,0(sp)
 1537              		.cfi_restore 20
 1538 08cc 13010103 		addi	sp,sp,48
 1539              		.cfi_def_cfa_offset 0
 1540 08d0 67800000 		jr	ra
 1541              	.LVL145:
 1542              	.L92:
 1543              		.cfi_restore_state
 319:src/kernel/slabAllocator.cpp ****         slab->numOfAllocatedObjects--;
 1544              		.loc 1 319 9 is_stmt 1
 319:src/kernel/slabAllocator.cpp ****         slab->numOfAllocatedObjects--;
 1545              		.loc 1 319 23 is_stmt 0
 1546 08d4 93850400 		mv	a1,s1
 1547 08d8 03B50401 		ld	a0,16(s1)
 1548 08dc 97000000 		call	_Z14removeFullSlabP12kmem_cache_sP6slab_s
 1548      E7800000 
 1549              	.LVL146:
GAS LISTING /tmp/ccbdlM41.s 			page 35


 320:src/kernel/slabAllocator.cpp ****         if(empty(slab))
 1550              		.loc 1 320 9 is_stmt 1
 320:src/kernel/slabAllocator.cpp ****         if(empty(slab))
 1551              		.loc 1 320 15 is_stmt 0
 1552 08e4 83B70402 		ld	a5,32(s1)
 320:src/kernel/slabAllocator.cpp ****         if(empty(slab))
 1553              		.loc 1 320 36
 1554 08e8 9387F7FF 		addi	a5,a5,-1
 1555 08ec 23B0F402 		sd	a5,32(s1)
 321:src/kernel/slabAllocator.cpp ****             removePartialSlab(slab->owner, slab);
 1556              		.loc 1 321 9 is_stmt 1
 321:src/kernel/slabAllocator.cpp ****             removePartialSlab(slab->owner, slab);
 1557              		.loc 1 321 17 is_stmt 0
 1558 08f0 13850400 		mv	a0,s1
 1559 08f4 97000000 		call	_Z5emptyP6slab_s
 1559      E7800000 
 1560              	.LVL147:
 321:src/kernel/slabAllocator.cpp ****             removePartialSlab(slab->owner, slab);
 1561              		.loc 1 321 9
 1562 08fc E30C05FA 		beqz	a0,.L82
 322:src/kernel/slabAllocator.cpp ****     }
 1563              		.loc 1 322 13 is_stmt 1
 322:src/kernel/slabAllocator.cpp ****     }
 1564              		.loc 1 322 30 is_stmt 0
 1565 0900 93850400 		mv	a1,s1
 1566 0904 03B50401 		ld	a0,16(s1)
 1567 0908 97000000 		call	_Z17removePartialSlabP12kmem_cache_sP6slab_s
 1567      E7800000 
 1568              	.LVL148:
 1569 0910 6FF05FFA 		j	.L82
 1570              	.L93:
 326:src/kernel/slabAllocator.cpp ****         slab->numOfAllocatedObjects--;
 1571              		.loc 1 326 9 is_stmt 1
 326:src/kernel/slabAllocator.cpp ****         slab->numOfAllocatedObjects--;
 1572              		.loc 1 326 26 is_stmt 0
 1573 0914 93850400 		mv	a1,s1
 1574 0918 03B50401 		ld	a0,16(s1)
 1575 091c 97000000 		call	_Z17removePartialSlabP12kmem_cache_sP6slab_s
 1575      E7800000 
 1576              	.LVL149:
 327:src/kernel/slabAllocator.cpp ****     }
 1577              		.loc 1 327 9 is_stmt 1
 327:src/kernel/slabAllocator.cpp ****     }
 1578              		.loc 1 327 15 is_stmt 0
 1579 0924 83B70402 		ld	a5,32(s1)
 327:src/kernel/slabAllocator.cpp ****     }
 1580              		.loc 1 327 36
 1581 0928 9387F7FF 		addi	a5,a5,-1
 1582 092c 23B0F402 		sd	a5,32(s1)
 1583 0930 6FF05FF8 		j	.L82
 1584              	.LVL150:
 1585              	.L89:
 1586              		.cfi_def_cfa_register 2
 1587              		.cfi_restore 1
 1588              		.cfi_restore 8
 1589              		.cfi_restore 9
 1590              		.cfi_restore 18
GAS LISTING /tmp/ccbdlM41.s 			page 36


 1591              		.cfi_restore 19
 1592              		.cfi_restore 20
 1593 0934 67800000 		ret
 1594              		.cfi_endproc
 1595              	.LFE25:
 1597              		.align	2
 1598              		.globl	_Z9kmem_initPvi
 1600              	_Z9kmem_initPvi:
 1601              	.LFB27:
 332:src/kernel/slabAllocator.cpp **** 
 333:src/kernel/slabAllocator.cpp **** void printSlabAllocatorInfo()
 334:src/kernel/slabAllocator.cpp **** {
 335:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("\n\n\n\n\n\n\n\n\n");
 336:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Slab allocator info-------------------------------------------------
 337:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Slab allocator buddy address ", (size_t)slabAllocator->buddy,16);
 338:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Slab allocator address ", (size_t)slabAllocator, 16);
 339:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Cache of caches info\n");
 340:src/kernel/slabAllocator.cpp ****     kmem_cache_info(&slabAllocator->cacheOfCaches);
 341:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Caches for buffers\n");
 342:src/kernel/slabAllocator.cpp ****     for(size_t i = 0;i < CACHE_BUFFER_SIZE;i++)
 343:src/kernel/slabAllocator.cpp ****     {
 344:src/kernel/slabAllocator.cpp ****         if(slabAllocator->cachesBuffers[i] != nullptr)
 345:src/kernel/slabAllocator.cpp ****         {
 346:src/kernel/slabAllocator.cpp ****             kmem_cache_info(slabAllocator->cachesBuffers[i]);
 347:src/kernel/slabAllocator.cpp ****         }
 348:src/kernel/slabAllocator.cpp ****     }
 349:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("\n\n\n\n\n\n\n\n\n");
 350:src/kernel/slabAllocator.cpp **** }
 351:src/kernel/slabAllocator.cpp **** 
 352:src/kernel/slabAllocator.cpp **** //slab allocator public interface------------------------------------------------------------------
 353:src/kernel/slabAllocator.cpp **** void kmem_init(void *space, int block_num)
 354:src/kernel/slabAllocator.cpp **** {
 1602              		.loc 1 354 1 is_stmt 1
 1603              		.cfi_startproc
 1604              	.LVL151:
 1605 0938 130101FF 		addi	sp,sp,-16
 1606              		.cfi_def_cfa_offset 16
 1607 093c 23341100 		sd	ra,8(sp)
 1608 0940 23308100 		sd	s0,0(sp)
 1609              		.cfi_offset 1, -8
 1610              		.cfi_offset 8, -16
 1611 0944 13040101 		addi	s0,sp,16
 1612              		.cfi_def_cfa 8, 0
 355:src/kernel/slabAllocator.cpp ****     buddyAllocator* buddy = buddy_init(space, block_num);
 1613              		.loc 1 355 5
 1614              		.loc 1 355 39 is_stmt 0
 1615 0948 97000000 		call	_Z10buddy_initPvm@plt
 1615      E7800000 
 1616              	.LVL152:
 356:src/kernel/slabAllocator.cpp ****     slabAllocator = slab_allocator_init(buddy);
 1617              		.loc 1 356 5 is_stmt 1
 1618              		.loc 1 356 40 is_stmt 0
 1619 0950 97000000 		call	_Z19slab_allocator_initP14buddyAllocator
 1619      E7800000 
 1620              	.LVL153:
 1621              		.loc 1 356 19
 1622 0958 97070000 		sd	a0,.LANCHOR0,a5
GAS LISTING /tmp/ccbdlM41.s 			page 37


 1622      23B0A700 
 357:src/kernel/slabAllocator.cpp **** }
 1623              		.loc 1 357 1
 1624 0960 83308100 		ld	ra,8(sp)
 1625              		.cfi_restore 1
 1626 0964 03340100 		ld	s0,0(sp)
 1627              		.cfi_restore 8
 1628              		.cfi_def_cfa 2, 16
 1629 0968 13010101 		addi	sp,sp,16
 1630              		.cfi_def_cfa_offset 0
 1631 096c 67800000 		jr	ra
 1632              		.cfi_endproc
 1633              	.LFE27:
 1635              		.align	2
 1636              		.globl	_Z16kmem_cache_allocP12kmem_cache_s
 1638              	_Z16kmem_cache_allocP12kmem_cache_s:
 1639              	.LFB29:
 358:src/kernel/slabAllocator.cpp **** 
 359:src/kernel/slabAllocator.cpp **** kmem_cache_t *kmem_cache_create(const char *name, size_t size,
 360:src/kernel/slabAllocator.cpp ****                                 void (*ctor)(void *),
 361:src/kernel/slabAllocator.cpp ****                                 void (*dtor)(void *))
 362:src/kernel/slabAllocator.cpp **** {
 363:src/kernel/slabAllocator.cpp ****     kmem_cache_t* newCache = (kmem_cache_t*)kmem_cache_alloc(&slabAllocator->cacheOfCaches);
 364:src/kernel/slabAllocator.cpp ****     if(newCache == nullptr)
 365:src/kernel/slabAllocator.cpp ****         return nullptr;
 366:src/kernel/slabAllocator.cpp ****     init_cache(newCache, name, getOptimalSlabSize(size), size, ctor,dtor);
 367:src/kernel/slabAllocator.cpp ****     return newCache;
 368:src/kernel/slabAllocator.cpp **** }
 369:src/kernel/slabAllocator.cpp **** 
 370:src/kernel/slabAllocator.cpp **** void *kmem_cache_alloc(kmem_cache_t *cachep)
 371:src/kernel/slabAllocator.cpp **** {
 1640              		.loc 1 371 1 is_stmt 1
 1641              		.cfi_startproc
 1642              	.LVL154:
 1643 0970 130101FE 		addi	sp,sp,-32
 1644              		.cfi_def_cfa_offset 32
 1645 0974 233C1100 		sd	ra,24(sp)
 1646 0978 23388100 		sd	s0,16(sp)
 1647 097c 23349100 		sd	s1,8(sp)
 1648 0980 23302101 		sd	s2,0(sp)
 1649              		.cfi_offset 1, -8
 1650              		.cfi_offset 8, -16
 1651              		.cfi_offset 9, -24
 1652              		.cfi_offset 18, -32
 1653 0984 13040102 		addi	s0,sp,32
 1654              		.cfi_def_cfa 8, 0
 1655 0988 93040500 		mv	s1,a0
 372:src/kernel/slabAllocator.cpp ****     if(cachep == nullptr)
 1656              		.loc 1 372 5
 1657 098c 630A0510 		beqz	a0,.L104
 373:src/kernel/slabAllocator.cpp ****         return nullptr;
 374:src/kernel/slabAllocator.cpp **** 
 375:src/kernel/slabAllocator.cpp ****     if(cachep->slabs_partial != nullptr)
 1658              		.loc 1 375 5
 1659              	.LBB14:
 1660              		.loc 1 375 16 is_stmt 0
 1661 0990 03350505 		ld	a0,80(a0)
GAS LISTING /tmp/ccbdlM41.s 			page 38


 1662              	.LVL155:
 1663              		.loc 1 375 5
 1664 0994 631A0504 		bnez	a0,.L106
 1665              	.LBE14:
 376:src/kernel/slabAllocator.cpp ****     {
 377:src/kernel/slabAllocator.cpp ****         void* allocatedAddr = allocateObject(cachep->slabs_partial);
 378:src/kernel/slabAllocator.cpp ****         if(full(cachep->slabs_partial))
 379:src/kernel/slabAllocator.cpp ****             putPartialToFull(cachep);
 380:src/kernel/slabAllocator.cpp ****         return allocatedAddr;
 381:src/kernel/slabAllocator.cpp ****     }
 382:src/kernel/slabAllocator.cpp ****     else if(cachep->slabs_empty != nullptr)
 1666              		.loc 1 382 10 is_stmt 1
 1667              	.LBB21:
 1668              	.LBB15:
 1669              		.loc 1 382 21 is_stmt 0
 1670 0998 03B50404 		ld	a0,64(s1)
 1671              		.loc 1 382 10
 1672 099c 630A0508 		beqz	a0,.L100
 1673              	.LBB16:
 383:src/kernel/slabAllocator.cpp ****     {
 384:src/kernel/slabAllocator.cpp ****         void* allocatedAddr = allocateObject(cachep->slabs_empty);
 1674              		.loc 1 384 9 is_stmt 1
 1675              		.loc 1 384 45 is_stmt 0
 1676 09a0 97000000 		call	_Z14allocateObjectP6slab_s
 1676      E7800000 
 1677              	.LVL156:
 1678 09a8 13090500 		mv	s2,a0
 1679              	.LVL157:
 385:src/kernel/slabAllocator.cpp ****         if(!empty(cachep->slabs_empty))
 1680              		.loc 1 385 9 is_stmt 1
 1681              		.loc 1 385 18 is_stmt 0
 1682 09ac 03B50404 		ld	a0,64(s1)
 1683              	.LVL158:
 1684 09b0 97000000 		call	_Z5emptyP6slab_s
 1684      E7800000 
 1685              	.LVL159:
 1686              		.loc 1 385 9
 1687 09b8 63160504 		bnez	a0,.L96
 386:src/kernel/slabAllocator.cpp ****         {
 387:src/kernel/slabAllocator.cpp ****             putEmptyToPartial(cachep);
 1688              		.loc 1 387 13 is_stmt 1
 1689              		.loc 1 387 30 is_stmt 0
 1690 09bc 13850400 		mv	a0,s1
 1691 09c0 97000000 		call	_Z17putEmptyToPartialP12kmem_cache_s
 1691      E7800000 
 1692              	.LVL160:
 388:src/kernel/slabAllocator.cpp ****             if(full(cachep->slabs_partial))
 1693              		.loc 1 388 13 is_stmt 1
 1694              		.loc 1 388 20 is_stmt 0
 1695 09c8 03B50405 		ld	a0,80(s1)
 1696 09cc 97000000 		call	_Z4fullP6slab_s
 1696      E7800000 
 1697              	.LVL161:
 1698              		.loc 1 388 13
 1699 09d4 63080502 		beqz	a0,.L96
 389:src/kernel/slabAllocator.cpp ****                 putPartialToFull(cachep);
 1700              		.loc 1 389 17 is_stmt 1
GAS LISTING /tmp/ccbdlM41.s 			page 39


 1701              		.loc 1 389 33 is_stmt 0
 1702 09d8 13850400 		mv	a0,s1
 1703 09dc 97000000 		call	_Z16putPartialToFullP12kmem_cache_s
 1703      E7800000 
 1704              	.LVL162:
 390:src/kernel/slabAllocator.cpp ****         }
 391:src/kernel/slabAllocator.cpp ****         return allocatedAddr;
 1705              		.loc 1 391 9 is_stmt 1
 1706              		.loc 1 391 16 is_stmt 0
 1707 09e4 6F000002 		j	.L96
 1708              	.LVL163:
 1709              	.L106:
 1710              	.LBE16:
 1711              	.LBE15:
 1712              	.LBB18:
 377:src/kernel/slabAllocator.cpp ****         if(full(cachep->slabs_partial))
 1713              		.loc 1 377 9 is_stmt 1
 377:src/kernel/slabAllocator.cpp ****         if(full(cachep->slabs_partial))
 1714              		.loc 1 377 45 is_stmt 0
 1715 09e8 97000000 		call	_Z14allocateObjectP6slab_s
 1715      E7800000 
 1716              	.LVL164:
 1717 09f0 13090500 		mv	s2,a0
 1718              	.LVL165:
 378:src/kernel/slabAllocator.cpp ****             putPartialToFull(cachep);
 1719              		.loc 1 378 9 is_stmt 1
 378:src/kernel/slabAllocator.cpp ****             putPartialToFull(cachep);
 1720              		.loc 1 378 16 is_stmt 0
 1721 09f4 03B50405 		ld	a0,80(s1)
 1722              	.LVL166:
 1723 09f8 97000000 		call	_Z4fullP6slab_s
 1723      E7800000 
 1724              	.LVL167:
 378:src/kernel/slabAllocator.cpp ****             putPartialToFull(cachep);
 1725              		.loc 1 378 9
 1726 0a00 63100502 		bnez	a0,.L107
 1727              	.LVL168:
 1728              	.L96:
 1729              	.LBE18:
 1730              	.LBE21:
 392:src/kernel/slabAllocator.cpp ****     }
 393:src/kernel/slabAllocator.cpp ****     else
 394:src/kernel/slabAllocator.cpp ****     {
 395:src/kernel/slabAllocator.cpp ****         allocateSlab(cachep);
 396:src/kernel/slabAllocator.cpp ****         if(cachep->slabs_empty == nullptr)
 397:src/kernel/slabAllocator.cpp ****         {
 398:src/kernel/slabAllocator.cpp ****             cachep->errors|=EXPAND_ERROR;
 399:src/kernel/slabAllocator.cpp ****             return nullptr;
 400:src/kernel/slabAllocator.cpp ****         }
 401:src/kernel/slabAllocator.cpp ****         void* allocatedAddr = allocateObject(cachep->slabs_empty);
 402:src/kernel/slabAllocator.cpp ****         if(!empty(cachep->slabs_empty))
 403:src/kernel/slabAllocator.cpp ****         {
 404:src/kernel/slabAllocator.cpp ****             putEmptyToPartial(cachep);
 405:src/kernel/slabAllocator.cpp ****             if(full(cachep->slabs_partial))
 406:src/kernel/slabAllocator.cpp ****                 putPartialToFull(cachep);
 407:src/kernel/slabAllocator.cpp ****         }
 408:src/kernel/slabAllocator.cpp ****         return allocatedAddr;
GAS LISTING /tmp/ccbdlM41.s 			page 40


 409:src/kernel/slabAllocator.cpp ****     }
 410:src/kernel/slabAllocator.cpp ****     return nullptr;
 411:src/kernel/slabAllocator.cpp **** }
 1731              		.loc 1 411 1
 1732 0a04 13050900 		mv	a0,s2
 1733 0a08 83308101 		ld	ra,24(sp)
 1734              		.cfi_remember_state
 1735              		.cfi_restore 1
 1736 0a0c 03340101 		ld	s0,16(sp)
 1737              		.cfi_restore 8
 1738              		.cfi_def_cfa 2, 32
 1739 0a10 83348100 		ld	s1,8(sp)
 1740              		.cfi_restore 9
 1741              	.LVL169:
 1742 0a14 03390100 		ld	s2,0(sp)
 1743              		.cfi_restore 18
 1744 0a18 13010102 		addi	sp,sp,32
 1745              		.cfi_def_cfa_offset 0
 1746 0a1c 67800000 		jr	ra
 1747              	.LVL170:
 1748              	.L107:
 1749              		.cfi_restore_state
 1750              	.LBB22:
 1751              	.LBB19:
 379:src/kernel/slabAllocator.cpp ****         return allocatedAddr;
 1752              		.loc 1 379 13 is_stmt 1
 379:src/kernel/slabAllocator.cpp ****         return allocatedAddr;
 1753              		.loc 1 379 29 is_stmt 0
 1754 0a20 13850400 		mv	a0,s1
 1755 0a24 97000000 		call	_Z16putPartialToFullP12kmem_cache_s
 1755      E7800000 
 1756              	.LVL171:
 380:src/kernel/slabAllocator.cpp ****     }
 1757              		.loc 1 380 9 is_stmt 1
 380:src/kernel/slabAllocator.cpp ****     }
 1758              		.loc 1 380 16 is_stmt 0
 1759 0a2c 6FF09FFD 		j	.L96
 1760              	.LVL172:
 1761              	.L100:
 1762              	.LBE19:
 1763              	.LBB20:
 1764              	.LBB17:
 395:src/kernel/slabAllocator.cpp ****         if(cachep->slabs_empty == nullptr)
 1765              		.loc 1 395 9 is_stmt 1
 395:src/kernel/slabAllocator.cpp ****         if(cachep->slabs_empty == nullptr)
 1766              		.loc 1 395 21 is_stmt 0
 1767 0a30 13850400 		mv	a0,s1
 1768 0a34 97000000 		call	_Z12allocateSlabP12kmem_cache_s
 1768      E7800000 
 1769              	.LVL173:
 396:src/kernel/slabAllocator.cpp ****         {
 1770              		.loc 1 396 9 is_stmt 1
 396:src/kernel/slabAllocator.cpp ****         {
 1771              		.loc 1 396 20 is_stmt 0
 1772 0a3c 03B90404 		ld	s2,64(s1)
 396:src/kernel/slabAllocator.cpp ****         {
 1773              		.loc 1 396 9
GAS LISTING /tmp/ccbdlM41.s 			page 41


 1774 0a40 63080904 		beqz	s2,.L108
 401:src/kernel/slabAllocator.cpp ****         if(!empty(cachep->slabs_empty))
 1775              		.loc 1 401 9 is_stmt 1
 401:src/kernel/slabAllocator.cpp ****         if(!empty(cachep->slabs_empty))
 1776              		.loc 1 401 45 is_stmt 0
 1777 0a44 13050900 		mv	a0,s2
 1778 0a48 97000000 		call	_Z14allocateObjectP6slab_s
 1778      E7800000 
 1779              	.LVL174:
 1780 0a50 13090500 		mv	s2,a0
 1781              	.LVL175:
 402:src/kernel/slabAllocator.cpp ****         {
 1782              		.loc 1 402 9 is_stmt 1
 402:src/kernel/slabAllocator.cpp ****         {
 1783              		.loc 1 402 18 is_stmt 0
 1784 0a54 03B50404 		ld	a0,64(s1)
 1785              	.LVL176:
 1786 0a58 97000000 		call	_Z5emptyP6slab_s
 1786      E7800000 
 1787              	.LVL177:
 402:src/kernel/slabAllocator.cpp ****         {
 1788              		.loc 1 402 9
 1789 0a60 E31205FA 		bnez	a0,.L96
 404:src/kernel/slabAllocator.cpp ****             if(full(cachep->slabs_partial))
 1790              		.loc 1 404 13 is_stmt 1
 404:src/kernel/slabAllocator.cpp ****             if(full(cachep->slabs_partial))
 1791              		.loc 1 404 30 is_stmt 0
 1792 0a64 13850400 		mv	a0,s1
 1793 0a68 97000000 		call	_Z17putEmptyToPartialP12kmem_cache_s
 1793      E7800000 
 1794              	.LVL178:
 405:src/kernel/slabAllocator.cpp ****                 putPartialToFull(cachep);
 1795              		.loc 1 405 13 is_stmt 1
 405:src/kernel/slabAllocator.cpp ****                 putPartialToFull(cachep);
 1796              		.loc 1 405 20 is_stmt 0
 1797 0a70 03B50405 		ld	a0,80(s1)
 1798 0a74 97000000 		call	_Z4fullP6slab_s
 1798      E7800000 
 1799              	.LVL179:
 405:src/kernel/slabAllocator.cpp ****                 putPartialToFull(cachep);
 1800              		.loc 1 405 13
 1801 0a7c E30405F8 		beqz	a0,.L96
 406:src/kernel/slabAllocator.cpp ****         }
 1802              		.loc 1 406 17 is_stmt 1
 406:src/kernel/slabAllocator.cpp ****         }
 1803              		.loc 1 406 33 is_stmt 0
 1804 0a80 13850400 		mv	a0,s1
 1805 0a84 97000000 		call	_Z16putPartialToFullP12kmem_cache_s
 1805      E7800000 
 1806              	.LVL180:
 408:src/kernel/slabAllocator.cpp ****     }
 1807              		.loc 1 408 9 is_stmt 1
 408:src/kernel/slabAllocator.cpp ****     }
 1808              		.loc 1 408 16 is_stmt 0
 1809 0a8c 6FF09FF7 		j	.L96
 1810              	.LVL181:
 1811              	.L108:
GAS LISTING /tmp/ccbdlM41.s 			page 42


 398:src/kernel/slabAllocator.cpp ****             return nullptr;
 1812              		.loc 1 398 13 is_stmt 1
 398:src/kernel/slabAllocator.cpp ****             return nullptr;
 1813              		.loc 1 398 27 is_stmt 0
 1814 0a90 83A78407 		lw	a5,120(s1)
 1815 0a94 93E71700 		ori	a5,a5,1
 1816 0a98 23ACF406 		sw	a5,120(s1)
 399:src/kernel/slabAllocator.cpp ****         }
 1817              		.loc 1 399 13 is_stmt 1
 399:src/kernel/slabAllocator.cpp ****         }
 1818              		.loc 1 399 20 is_stmt 0
 1819 0a9c 6FF09FF6 		j	.L96
 1820              	.L104:
 1821              	.LBE17:
 1822              	.LBE20:
 1823              	.LBE22:
 373:src/kernel/slabAllocator.cpp **** 
 1824              		.loc 1 373 16
 1825 0aa0 13090500 		mv	s2,a0
 1826 0aa4 6FF01FF6 		j	.L96
 1827              		.cfi_endproc
 1828              	.LFE29:
 1830              		.align	2
 1831              		.globl	_Z17kmem_cache_createPKcmPFvPvES3_
 1833              	_Z17kmem_cache_createPKcmPFvPvES3_:
 1834              	.LFB28:
 362:src/kernel/slabAllocator.cpp ****     kmem_cache_t* newCache = (kmem_cache_t*)kmem_cache_alloc(&slabAllocator->cacheOfCaches);
 1835              		.loc 1 362 1 is_stmt 1
 1836              		.cfi_startproc
 1837              	.LVL182:
 1838 0aa8 130101FC 		addi	sp,sp,-64
 1839              		.cfi_def_cfa_offset 64
 1840 0aac 233C1102 		sd	ra,56(sp)
 1841 0ab0 23388102 		sd	s0,48(sp)
 1842 0ab4 23349102 		sd	s1,40(sp)
 1843 0ab8 23302103 		sd	s2,32(sp)
 1844 0abc 233C3101 		sd	s3,24(sp)
 1845 0ac0 23384101 		sd	s4,16(sp)
 1846 0ac4 23345101 		sd	s5,8(sp)
 1847              		.cfi_offset 1, -8
 1848              		.cfi_offset 8, -16
 1849              		.cfi_offset 9, -24
 1850              		.cfi_offset 18, -32
 1851              		.cfi_offset 19, -40
 1852              		.cfi_offset 20, -48
 1853              		.cfi_offset 21, -56
 1854 0ac8 13040104 		addi	s0,sp,64
 1855              		.cfi_def_cfa 8, 0
 1856 0acc 93090500 		mv	s3,a0
 1857 0ad0 13890500 		mv	s2,a1
 1858 0ad4 130A0600 		mv	s4,a2
 1859 0ad8 938A0600 		mv	s5,a3
 363:src/kernel/slabAllocator.cpp ****     if(newCache == nullptr)
 1860              		.loc 1 363 5
 363:src/kernel/slabAllocator.cpp ****     if(newCache == nullptr)
 1861              		.loc 1 363 61 is_stmt 0
 1862 0adc 17050000 		ld	a0,.LANCHOR0
GAS LISTING /tmp/ccbdlM41.s 			page 43


 1862      03350500 
 1863              	.LVL183:
 1864 0ae4 13050507 		addi	a0,a0,112
 1865 0ae8 97000000 		call	_Z16kmem_cache_allocP12kmem_cache_s
 1865      E7800000 
 1866              	.LVL184:
 1867 0af0 93040500 		mv	s1,a0
 1868              	.LVL185:
 364:src/kernel/slabAllocator.cpp ****         return nullptr;
 1869              		.loc 1 364 5 is_stmt 1
 1870 0af4 63080502 		beqz	a0,.L109
 366:src/kernel/slabAllocator.cpp ****     return newCache;
 1871              		.loc 1 366 5
 366:src/kernel/slabAllocator.cpp ****     return newCache;
 1872              		.loc 1 366 15 is_stmt 0
 1873 0af8 13050900 		mv	a0,s2
 1874 0afc 97000000 		call	_Z18getOptimalSlabSizem
 1874      E7800000 
 1875              	.LVL186:
 1876 0b04 13060500 		mv	a2,a0
 1877 0b08 93870A00 		mv	a5,s5
 1878 0b0c 13070A00 		mv	a4,s4
 1879 0b10 93060900 		mv	a3,s2
 1880 0b14 93850900 		mv	a1,s3
 1881 0b18 13850400 		mv	a0,s1
 1882 0b1c 97000000 		call	_Z10init_cacheP12kmem_cache_sPKcmmPFvPvES5_
 1882      E7800000 
 1883              	.LVL187:
 367:src/kernel/slabAllocator.cpp **** }
 1884              		.loc 1 367 5 is_stmt 1
 1885              	.L109:
 368:src/kernel/slabAllocator.cpp **** 
 1886              		.loc 1 368 1 is_stmt 0
 1887 0b24 13850400 		mv	a0,s1
 1888 0b28 83308103 		ld	ra,56(sp)
 1889              		.cfi_restore 1
 1890 0b2c 03340103 		ld	s0,48(sp)
 1891              		.cfi_restore 8
 1892              		.cfi_def_cfa 2, 64
 1893 0b30 83348102 		ld	s1,40(sp)
 1894              		.cfi_restore 9
 1895              	.LVL188:
 1896 0b34 03390102 		ld	s2,32(sp)
 1897              		.cfi_restore 18
 1898              	.LVL189:
 1899 0b38 83398101 		ld	s3,24(sp)
 1900              		.cfi_restore 19
 1901              	.LVL190:
 1902 0b3c 033A0101 		ld	s4,16(sp)
 1903              		.cfi_restore 20
 1904              	.LVL191:
 1905 0b40 833A8100 		ld	s5,8(sp)
 1906              		.cfi_restore 21
 1907              	.LVL192:
 1908 0b44 13010104 		addi	sp,sp,64
 1909              		.cfi_def_cfa_offset 0
 1910 0b48 67800000 		jr	ra
GAS LISTING /tmp/ccbdlM41.s 			page 44


 1911              		.cfi_endproc
 1912              	.LFE28:
 1914              		.align	2
 1915              		.globl	_Z15kmem_cache_freeP12kmem_cache_sPv
 1917              	_Z15kmem_cache_freeP12kmem_cache_sPv:
 1918              	.LFB30:
 412:src/kernel/slabAllocator.cpp **** 
 413:src/kernel/slabAllocator.cpp **** void kmem_cache_free(kmem_cache_t *cachep, void *objp)
 414:src/kernel/slabAllocator.cpp **** {
 1919              		.loc 1 414 1 is_stmt 1
 1920              		.cfi_startproc
 1921              	.LVL193:
 415:src/kernel/slabAllocator.cpp ****     if(cachep == nullptr || objp == nullptr)
 1922              		.loc 1 415 5
 1923 0b4c 63060504 		beqz	a0,.L115
 414:src/kernel/slabAllocator.cpp ****     if(cachep == nullptr || objp == nullptr)
 1924              		.loc 1 414 1 is_stmt 0 discriminator 1
 1925 0b50 130101FE 		addi	sp,sp,-32
 1926              		.cfi_def_cfa_offset 32
 1927 0b54 233C1100 		sd	ra,24(sp)
 1928 0b58 23388100 		sd	s0,16(sp)
 1929 0b5c 23349100 		sd	s1,8(sp)
 1930              		.cfi_offset 1, -8
 1931              		.cfi_offset 8, -16
 1932              		.cfi_offset 9, -24
 1933 0b60 13040102 		addi	s0,sp,32
 1934              		.cfi_def_cfa 8, 0
 1935 0b64 93840500 		mv	s1,a1
 1936              		.loc 1 415 26 discriminator 1
 1937 0b68 638E0500 		beqz	a1,.L112
 416:src/kernel/slabAllocator.cpp ****         return;
 417:src/kernel/slabAllocator.cpp ****     slab_t* slab = findSlab(cachep, objp);
 1938              		.loc 1 417 5 is_stmt 1
 1939              		.loc 1 417 28 is_stmt 0
 1940 0b6c 97000000 		call	_Z8findSlabP12kmem_cache_sPKv
 1940      E7800000 
 1941              	.LVL194:
 418:src/kernel/slabAllocator.cpp ****     if(slab == nullptr) return;
 1942              		.loc 1 418 5 is_stmt 1
 1943 0b74 63080500 		beqz	a0,.L112
 419:src/kernel/slabAllocator.cpp **** 
 420:src/kernel/slabAllocator.cpp ****     free_slab_object(slab, objp);
 1944              		.loc 1 420 5
 1945              		.loc 1 420 21 is_stmt 0
 1946 0b78 93850400 		mv	a1,s1
 1947 0b7c 97000000 		call	_Z16free_slab_objectP6slab_sPKv
 1947      E7800000 
 1948              	.LVL195:
 1949              	.L112:
 421:src/kernel/slabAllocator.cpp **** }
 1950              		.loc 1 421 1
 1951 0b84 83308101 		ld	ra,24(sp)
 1952              		.cfi_restore 1
 1953 0b88 03340101 		ld	s0,16(sp)
 1954              		.cfi_restore 8
 1955              		.cfi_def_cfa 2, 32
 1956 0b8c 83348100 		ld	s1,8(sp)
GAS LISTING /tmp/ccbdlM41.s 			page 45


 1957              		.cfi_restore 9
 1958              	.LVL196:
 1959 0b90 13010102 		addi	sp,sp,32
 1960              		.cfi_def_cfa_offset 0
 1961 0b94 67800000 		jr	ra
 1962              	.LVL197:
 1963              	.L115:
 1964 0b98 67800000 		ret
 1965              		.cfi_endproc
 1966              	.LFE30:
 1968              		.section	.rodata.str1.8
 1969 006b 00000000 		.align	3
 1969      00
 1970              	.LC5:
 1971 0070 0A0A0A0A 		.string	"\n\n\n\n\n\n\n\n"
 1971      0A0A0A0A 
 1971      00
 1972 0079 00000000 		.align	3
 1972      000000
 1973              	.LC6:
 1974 0080 4B6D656D 		.string	"Kmem Cache Info-------------------------------------\n"
 1974      20436163 
 1974      68652049 
 1974      6E666F2D 
 1974      2D2D2D2D 
 1975 00b6 0000     		.align	3
 1976              	.LC7:
 1977 00b8 43616368 		.string	"Cache Name "
 1977      65204E61 
 1977      6D652000 
 1978 00c4 00000000 		.align	3
 1979              	.LC8:
 1980 00c8 0A00     		.string	"\n"
 1981 00ca 00000000 		.align	3
 1981      0000
 1982              	.LC9:
 1983 00d0 43616368 		.string	"Cache slab size in blocks "
 1983      6520736C 
 1983      61622073 
 1983      697A6520 
 1983      696E2062 
 1984 00eb 00000000 		.align	3
 1984      00
 1985              	.LC10:
 1986 00f0 43616368 		.string	"Cache obj size in bytes "
 1986      65206F62 
 1986      6A207369 
 1986      7A652069 
 1986      6E206279 
 1987 0109 00000000 		.align	3
 1987      000000
 1988              	.LC11:
 1989 0110 536C6162 		.string	"Slabs info-------------------\n"
 1989      7320696E 
 1989      666F2D2D 
 1989      2D2D2D2D 
 1989      2D2D2D2D 
GAS LISTING /tmp/ccbdlM41.s 			page 46


 1990 012f 00       		.align	3
 1991              	.LC12:
 1992 0130 46756C6C 		.string	"Full slabs\n"
 1992      20736C61 
 1992      62730A00 
 1993 013c 00000000 		.align	3
 1994              	.LC13:
 1995 0140 50617274 		.string	"Partial slabs\n"
 1995      69616C20 
 1995      736C6162 
 1995      730A00
 1996 014f 00       		.align	3
 1997              	.LC14:
 1998 0150 456D7074 		.string	"Empty slabs\n"
 1998      7920736C 
 1998      6162730A 
 1998      00
 1999              		.text
 2000              		.align	2
 2001              		.globl	_Z15kmem_cache_infoP12kmem_cache_s
 2003              	_Z15kmem_cache_infoP12kmem_cache_s:
 2004              	.LFB31:
 422:src/kernel/slabAllocator.cpp **** 
 423:src/kernel/slabAllocator.cpp **** //TODO what needs to be printed
 424:src/kernel/slabAllocator.cpp **** void kmem_cache_info(kmem_cache_t *cachep)
 425:src/kernel/slabAllocator.cpp **** {
 2005              		.loc 1 425 1 is_stmt 1
 2006              		.cfi_startproc
 2007              	.LVL198:
 426:src/kernel/slabAllocator.cpp ****     if(cachep == nullptr)
 2008              		.loc 1 426 5
 2009 0b9c 630C0514 		beqz	a0,.L127
 425:src/kernel/slabAllocator.cpp ****     if(cachep == nullptr)
 2010              		.loc 1 425 1 is_stmt 0
 2011 0ba0 130101FE 		addi	sp,sp,-32
 2012              		.cfi_def_cfa_offset 32
 2013 0ba4 233C1100 		sd	ra,24(sp)
 2014 0ba8 23388100 		sd	s0,16(sp)
 2015 0bac 23349100 		sd	s1,8(sp)
 2016 0bb0 23302101 		sd	s2,0(sp)
 2017              		.cfi_offset 1, -8
 2018              		.cfi_offset 8, -16
 2019              		.cfi_offset 9, -24
 2020              		.cfi_offset 18, -32
 2021 0bb4 13040102 		addi	s0,sp,32
 2022              		.cfi_def_cfa 8, 0
 2023 0bb8 13090500 		mv	s2,a0
 427:src/kernel/slabAllocator.cpp ****         return;
 428:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("\n\n\n\n\n\n\n\n");
 2024              		.loc 1 428 5 is_stmt 1
 2025              		.loc 1 428 30 is_stmt 0
 2026 0bbc 17050000 		lla	a0,.LC5
 2026      13050500 
 2027              	.LVL199:
 2028 0bc4 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2028      E7800000 
 2029              	.LVL200:
GAS LISTING /tmp/ccbdlM41.s 			page 47


 429:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Kmem Cache Info-------------------------------------\n");
 2030              		.loc 1 429 5 is_stmt 1
 2031              		.loc 1 429 30 is_stmt 0
 2032 0bcc 17050000 		lla	a0,.LC6
 2032      13050500 
 2033 0bd4 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2033      E7800000 
 2034              	.LVL201:
 430:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Cache Name ");
 2035              		.loc 1 430 5 is_stmt 1
 2036              		.loc 1 430 30 is_stmt 0
 2037 0bdc 17050000 		lla	a0,.LC7
 2037      13050500 
 2038 0be4 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2038      E7800000 
 2039              	.LVL202:
 431:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString(cachep->cacheName); KConsole::trapPrintString("\n");
 2040              		.loc 1 431 5 is_stmt 1
 2041              		.loc 1 431 30 is_stmt 0
 2042 0bec 13050900 		mv	a0,s2
 2043 0bf0 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2043      E7800000 
 2044              	.LVL203:
 2045              		.loc 1 431 51 is_stmt 1
 2046              		.loc 1 431 76 is_stmt 0
 2047 0bf8 17050000 		lla	a0,.LC8
 2047      13050500 
 2048 0c00 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2048      E7800000 
 2049              	.LVL204:
 432:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Cache slab size in blocks ", cachep->slab_size);
 2050              		.loc 1 432 5 is_stmt 1
 2051              		.loc 1 432 33 is_stmt 0
 2052 0c08 1306A000 		li	a2,10
 2053 0c0c 83358905 		ld	a1,88(s2)
 2054 0c10 17050000 		lla	a0,.LC9
 2054      13050500 
 2055 0c18 97000000 		call	_ZN8KConsole18trapPrintStringIntEPKcmi@plt
 2055      E7800000 
 2056              	.LVL205:
 433:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Cache obj size in bytes ", cachep->obj_size);
 2057              		.loc 1 433 5 is_stmt 1
 2058              		.loc 1 433 33 is_stmt 0
 2059 0c20 1306A000 		li	a2,10
 2060 0c24 83350906 		ld	a1,96(s2)
 2061 0c28 17050000 		lla	a0,.LC10
 2061      13050500 
 2062 0c30 97000000 		call	_ZN8KConsole18trapPrintStringIntEPKcmi@plt
 2062      E7800000 
 2063              	.LVL206:
 434:src/kernel/slabAllocator.cpp ****     
 435:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Slabs info-------------------\n");
 2064              		.loc 1 435 5 is_stmt 1
 2065              		.loc 1 435 30 is_stmt 0
 2066 0c38 17050000 		lla	a0,.LC11
 2066      13050500 
 2067 0c40 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
GAS LISTING /tmp/ccbdlM41.s 			page 48


 2067      E7800000 
 2068              	.LVL207:
 436:src/kernel/slabAllocator.cpp **** 
 437:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Full slabs\n");
 2069              		.loc 1 437 5 is_stmt 1
 2070              		.loc 1 437 30 is_stmt 0
 2071 0c48 17050000 		lla	a0,.LC12
 2071      13050500 
 2072 0c50 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2072      E7800000 
 2073              	.LVL208:
 438:src/kernel/slabAllocator.cpp ****     slab_t* slab = cachep->slabs_full;
 2074              		.loc 1 438 5 is_stmt 1
 2075              		.loc 1 438 13 is_stmt 0
 2076 0c58 83348904 		ld	s1,72(s2)
 2077              	.LVL209:
 2078              	.L121:
 439:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 2079              		.loc 1 439 5 is_stmt 1
 2080              		.loc 1 439 16
 2081 0c5c 638C0400 		beqz	s1,.L120
 440:src/kernel/slabAllocator.cpp ****     {
 441:src/kernel/slabAllocator.cpp ****         printSlabInfo(slab);
 2082              		.loc 1 441 9
 2083              		.loc 1 441 22 is_stmt 0
 2084 0c60 13850400 		mv	a0,s1
 2085 0c64 97000000 		call	_Z13printSlabInfoP6slab_s
 2085      E7800000 
 2086              	.LVL210:
 442:src/kernel/slabAllocator.cpp ****         slab = slab->next;
 2087              		.loc 1 442 9 is_stmt 1
 2088              		.loc 1 442 14 is_stmt 0
 2089 0c6c 83B48400 		ld	s1,8(s1)
 2090              	.LVL211:
 439:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 2091              		.loc 1 439 5
 2092 0c70 6FF0DFFE 		j	.L121
 2093              	.L120:
 443:src/kernel/slabAllocator.cpp ****     }
 444:src/kernel/slabAllocator.cpp **** 
 445:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Partial slabs\n");
 2094              		.loc 1 445 5 is_stmt 1
 2095              		.loc 1 445 30 is_stmt 0
 2096 0c74 17050000 		lla	a0,.LC13
 2096      13050500 
 2097 0c7c 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2097      E7800000 
 2098              	.LVL212:
 446:src/kernel/slabAllocator.cpp ****     slab = cachep->slabs_partial;
 2099              		.loc 1 446 5 is_stmt 1
 2100              		.loc 1 446 10 is_stmt 0
 2101 0c84 83340905 		ld	s1,80(s2)
 2102              	.LVL213:
 2103              	.L123:
 447:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 2104              		.loc 1 447 5 is_stmt 1
 2105              		.loc 1 447 16
GAS LISTING /tmp/ccbdlM41.s 			page 49


 2106 0c88 638C0400 		beqz	s1,.L122
 448:src/kernel/slabAllocator.cpp ****     {
 449:src/kernel/slabAllocator.cpp ****         printSlabInfo(slab);
 2107              		.loc 1 449 9
 2108              		.loc 1 449 22 is_stmt 0
 2109 0c8c 13850400 		mv	a0,s1
 2110 0c90 97000000 		call	_Z13printSlabInfoP6slab_s
 2110      E7800000 
 2111              	.LVL214:
 450:src/kernel/slabAllocator.cpp ****         slab = slab->next;
 2112              		.loc 1 450 9 is_stmt 1
 2113              		.loc 1 450 14 is_stmt 0
 2114 0c98 83B48400 		ld	s1,8(s1)
 2115              	.LVL215:
 447:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 2116              		.loc 1 447 5
 2117 0c9c 6FF0DFFE 		j	.L123
 2118              	.L122:
 451:src/kernel/slabAllocator.cpp ****     }
 452:src/kernel/slabAllocator.cpp **** 
 453:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Empty slabs\n");
 2119              		.loc 1 453 5 is_stmt 1
 2120              		.loc 1 453 30 is_stmt 0
 2121 0ca0 17050000 		lla	a0,.LC14
 2121      13050500 
 2122 0ca8 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2122      E7800000 
 2123              	.LVL216:
 454:src/kernel/slabAllocator.cpp ****     slab = cachep->slabs_empty;
 2124              		.loc 1 454 5 is_stmt 1
 2125              		.loc 1 454 10 is_stmt 0
 2126 0cb0 83340904 		ld	s1,64(s2)
 2127              	.LVL217:
 2128              	.L125:
 455:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 2129              		.loc 1 455 5 is_stmt 1
 2130              		.loc 1 455 16
 2131 0cb4 638C0400 		beqz	s1,.L124
 456:src/kernel/slabAllocator.cpp ****     {
 457:src/kernel/slabAllocator.cpp ****         printSlabInfo(slab);
 2132              		.loc 1 457 9
 2133              		.loc 1 457 22 is_stmt 0
 2134 0cb8 13850400 		mv	a0,s1
 2135 0cbc 97000000 		call	_Z13printSlabInfoP6slab_s
 2135      E7800000 
 2136              	.LVL218:
 458:src/kernel/slabAllocator.cpp ****         slab = slab->next;
 2137              		.loc 1 458 9 is_stmt 1
 2138              		.loc 1 458 14 is_stmt 0
 2139 0cc4 83B48400 		ld	s1,8(s1)
 2140              	.LVL219:
 455:src/kernel/slabAllocator.cpp ****     while(slab != nullptr)
 2141              		.loc 1 455 5
 2142 0cc8 6FF0DFFE 		j	.L125
 2143              	.L124:
 459:src/kernel/slabAllocator.cpp ****     }
 460:src/kernel/slabAllocator.cpp **** 
GAS LISTING /tmp/ccbdlM41.s 			page 50


 461:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("\n\n\n\n\n\n\n\n");
 2144              		.loc 1 461 5 is_stmt 1
 2145              		.loc 1 461 30 is_stmt 0
 2146 0ccc 17050000 		lla	a0,.LC5
 2146      13050500 
 2147 0cd4 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2147      E7800000 
 2148              	.LVL220:
 462:src/kernel/slabAllocator.cpp **** }
 2149              		.loc 1 462 1
 2150 0cdc 83308101 		ld	ra,24(sp)
 2151              		.cfi_restore 1
 2152 0ce0 03340101 		ld	s0,16(sp)
 2153              		.cfi_restore 8
 2154              		.cfi_def_cfa 2, 32
 2155 0ce4 83348100 		ld	s1,8(sp)
 2156              		.cfi_restore 9
 2157              	.LVL221:
 2158 0ce8 03390100 		ld	s2,0(sp)
 2159              		.cfi_restore 18
 2160              	.LVL222:
 2161 0cec 13010102 		addi	sp,sp,32
 2162              		.cfi_def_cfa_offset 0
 2163 0cf0 67800000 		jr	ra
 2164              	.LVL223:
 2165              	.L127:
 2166 0cf4 67800000 		ret
 2167              		.cfi_endproc
 2168              	.LFE31:
 2170              		.section	.rodata.str1.8
 2171 015d 000000   		.align	3
 2172              	.LC15:
 2173 0160 0A0A0A0A 		.string	"\n\n\n\n\n\n\n\n\n"
 2173      0A0A0A0A 
 2173      0A00
 2174 016a 00000000 		.align	3
 2174      0000
 2175              	.LC16:
 2176 0170 536C6162 		.string	"Slab allocator info----------------------------------------------------------\n"
 2176      20616C6C 
 2176      6F636174 
 2176      6F722069 
 2176      6E666F2D 
 2177 01bf 00       		.align	3
 2178              	.LC17:
 2179 01c0 536C6162 		.string	"Slab allocator buddy address "
 2179      20616C6C 
 2179      6F636174 
 2179      6F722062 
 2179      75646479 
 2180 01de 0000     		.align	3
 2181              	.LC18:
 2182 01e0 536C6162 		.string	"Slab allocator address "
 2182      20616C6C 
 2182      6F636174 
 2182      6F722061 
 2182      64647265 
GAS LISTING /tmp/ccbdlM41.s 			page 51


 2183              		.align	3
 2184              	.LC19:
 2185 01f8 43616368 		.string	"Cache of caches info\n"
 2185      65206F66 
 2185      20636163 
 2185      68657320 
 2185      696E666F 
 2186 020e 0000     		.align	3
 2187              	.LC20:
 2188 0210 43616368 		.string	"Caches for buffers\n"
 2188      65732066 
 2188      6F722062 
 2188      75666665 
 2188      72730A00 
 2189              		.text
 2190              		.align	2
 2191              		.globl	_Z22printSlabAllocatorInfov
 2193              	_Z22printSlabAllocatorInfov:
 2194              	.LFB26:
 334:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("\n\n\n\n\n\n\n\n\n");
 2195              		.loc 1 334 1 is_stmt 1
 2196              		.cfi_startproc
 2197 0cf8 130101FE 		addi	sp,sp,-32
 2198              		.cfi_def_cfa_offset 32
 2199 0cfc 233C1100 		sd	ra,24(sp)
 2200 0d00 23388100 		sd	s0,16(sp)
 2201 0d04 23349100 		sd	s1,8(sp)
 2202              		.cfi_offset 1, -8
 2203              		.cfi_offset 8, -16
 2204              		.cfi_offset 9, -24
 2205 0d08 13040102 		addi	s0,sp,32
 2206              		.cfi_def_cfa 8, 0
 335:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Slab allocator info-------------------------------------------------
 2207              		.loc 1 335 5
 335:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Slab allocator info-------------------------------------------------
 2208              		.loc 1 335 30 is_stmt 0
 2209 0d0c 17050000 		lla	a0,.LC15
 2209      13050500 
 2210 0d14 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2210      E7800000 
 2211              	.LVL224:
 336:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Slab allocator buddy address ", (size_t)slabAllocator->buddy,16);
 2212              		.loc 1 336 5 is_stmt 1
 336:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Slab allocator buddy address ", (size_t)slabAllocator->buddy,16);
 2213              		.loc 1 336 30 is_stmt 0
 2214 0d1c 17050000 		lla	a0,.LC16
 2214      13050500 
 2215 0d24 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2215      E7800000 
 2216              	.LVL225:
 337:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Slab allocator address ", (size_t)slabAllocator, 16);
 2217              		.loc 1 337 5 is_stmt 1
 337:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Slab allocator address ", (size_t)slabAllocator, 16);
 2218              		.loc 1 337 90 is_stmt 0
 2219 0d2c 97040000 		lla	s1,.LANCHOR0
 2219      93840400 
 2220 0d34 83B70400 		ld	a5,0(s1)
GAS LISTING /tmp/ccbdlM41.s 			page 52


 337:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintStringInt("Slab allocator address ", (size_t)slabAllocator, 16);
 2221              		.loc 1 337 33
 2222 0d38 13060001 		li	a2,16
 2223 0d3c 83B50700 		ld	a1,0(a5)
 2224 0d40 17050000 		lla	a0,.LC17
 2224      13050500 
 2225 0d48 97000000 		call	_ZN8KConsole18trapPrintStringIntEPKcmi@plt
 2225      E7800000 
 2226              	.LVL226:
 338:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Cache of caches info\n");
 2227              		.loc 1 338 5 is_stmt 1
 338:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Cache of caches info\n");
 2228              		.loc 1 338 33 is_stmt 0
 2229 0d50 13060001 		li	a2,16
 2230 0d54 83B50400 		ld	a1,0(s1)
 2231 0d58 17050000 		lla	a0,.LC18
 2231      13050500 
 2232 0d60 97000000 		call	_ZN8KConsole18trapPrintStringIntEPKcmi@plt
 2232      E7800000 
 2233              	.LVL227:
 339:src/kernel/slabAllocator.cpp ****     kmem_cache_info(&slabAllocator->cacheOfCaches);
 2234              		.loc 1 339 5 is_stmt 1
 339:src/kernel/slabAllocator.cpp ****     kmem_cache_info(&slabAllocator->cacheOfCaches);
 2235              		.loc 1 339 30 is_stmt 0
 2236 0d68 17050000 		lla	a0,.LC19
 2236      13050500 
 2237 0d70 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2237      E7800000 
 2238              	.LVL228:
 340:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Caches for buffers\n");
 2239              		.loc 1 340 5 is_stmt 1
 340:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Caches for buffers\n");
 2240              		.loc 1 340 37 is_stmt 0
 2241 0d78 03B50400 		ld	a0,0(s1)
 340:src/kernel/slabAllocator.cpp ****     KConsole::trapPrintString("Caches for buffers\n");
 2242              		.loc 1 340 20
 2243 0d7c 13050507 		addi	a0,a0,112
 2244 0d80 97000000 		call	_Z15kmem_cache_infoP12kmem_cache_s
 2244      E7800000 
 2245              	.LVL229:
 341:src/kernel/slabAllocator.cpp ****     for(size_t i = 0;i < CACHE_BUFFER_SIZE;i++)
 2246              		.loc 1 341 5 is_stmt 1
 341:src/kernel/slabAllocator.cpp ****     for(size_t i = 0;i < CACHE_BUFFER_SIZE;i++)
 2247              		.loc 1 341 30 is_stmt 0
 2248 0d88 17050000 		lla	a0,.LC20
 2248      13050500 
 2249 0d90 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2249      E7800000 
 2250              	.LVL230:
 342:src/kernel/slabAllocator.cpp ****     {
 2251              		.loc 1 342 5 is_stmt 1
 2252              	.LBB23:
 342:src/kernel/slabAllocator.cpp ****     {
 2253              		.loc 1 342 16 is_stmt 0
 2254 0d98 93040000 		li	s1,0
 2255 0d9c 6F000001 		j	.L133
 2256              	.LVL231:
GAS LISTING /tmp/ccbdlM41.s 			page 53


 2257              	.L135:
 346:src/kernel/slabAllocator.cpp ****         }
 2258              		.loc 1 346 13 is_stmt 1
 346:src/kernel/slabAllocator.cpp ****         }
 2259              		.loc 1 346 28 is_stmt 0
 2260 0da0 97000000 		call	_Z15kmem_cache_infoP12kmem_cache_s
 2260      E7800000 
 2261              	.LVL232:
 2262              	.L132:
 342:src/kernel/slabAllocator.cpp ****     {
 2263              		.loc 1 342 5 is_stmt 1 discriminator 2
 2264 0da8 93841400 		addi	s1,s1,1
 2265              	.LVL233:
 2266              	.L133:
 342:src/kernel/slabAllocator.cpp ****     {
 2267              		.loc 1 342 24 discriminator 1
 2268 0dac 9307C000 		li	a5,12
 2269 0db0 63E09702 		bgtu	s1,a5,.L131
 344:src/kernel/slabAllocator.cpp ****         {
 2270              		.loc 1 344 9
 344:src/kernel/slabAllocator.cpp ****         {
 2271              		.loc 1 344 42 is_stmt 0
 2272 0db4 93973400 		slli	a5,s1,3
 2273 0db8 17070000 		ld	a4,.LANCHOR0
 2273      03370700 
 2274 0dc0 B307F700 		add	a5,a4,a5
 2275 0dc4 03B58700 		ld	a0,8(a5)
 344:src/kernel/slabAllocator.cpp ****         {
 2276              		.loc 1 344 9
 2277 0dc8 E31C05FC 		bnez	a0,.L135
 2278 0dcc 6FF0DFFD 		j	.L132
 2279              	.L131:
 2280              	.LBE23:
 349:src/kernel/slabAllocator.cpp **** }
 2281              		.loc 1 349 5 is_stmt 1
 349:src/kernel/slabAllocator.cpp **** }
 2282              		.loc 1 349 30 is_stmt 0
 2283 0dd0 17050000 		lla	a0,.LC15
 2283      13050500 
 2284 0dd8 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2284      E7800000 
 2285              	.LVL234:
 350:src/kernel/slabAllocator.cpp **** 
 2286              		.loc 1 350 1
 2287 0de0 83308101 		ld	ra,24(sp)
 2288              		.cfi_restore 1
 2289 0de4 03340101 		ld	s0,16(sp)
 2290              		.cfi_restore 8
 2291              		.cfi_def_cfa 2, 32
 2292 0de8 83348100 		ld	s1,8(sp)
 2293              		.cfi_restore 9
 2294              	.LVL235:
 2295 0dec 13010102 		addi	sp,sp,32
 2296              		.cfi_def_cfa_offset 0
 2297 0df0 67800000 		jr	ra
 2298              		.cfi_endproc
 2299              	.LFE26:
GAS LISTING /tmp/ccbdlM41.s 			page 54


 2301              		.section	.rodata.str1.8
 2302 0224 00000000 		.align	3
 2303              	.LC21:
 2304 0228 43616368 		.string	"Cache for small buffers"
 2304      6520666F 
 2304      7220736D 
 2304      616C6C20 
 2304      62756666 
 2305              		.text
 2306              		.align	2
 2307              		.globl	_Z7kmallocm
 2309              	_Z7kmallocm:
 2310              	.LFB32:
 463:src/kernel/slabAllocator.cpp **** 
 464:src/kernel/slabAllocator.cpp **** void *kmalloc(size_t size)
 465:src/kernel/slabAllocator.cpp **** {
 2311              		.loc 1 465 1 is_stmt 1
 2312              		.cfi_startproc
 2313              	.LVL236:
 2314 0df4 130101FD 		addi	sp,sp,-48
 2315              		.cfi_def_cfa_offset 48
 2316 0df8 23341102 		sd	ra,40(sp)
 2317 0dfc 23308102 		sd	s0,32(sp)
 2318 0e00 233C9100 		sd	s1,24(sp)
 2319 0e04 23382101 		sd	s2,16(sp)
 2320 0e08 23343101 		sd	s3,8(sp)
 2321              		.cfi_offset 1, -8
 2322              		.cfi_offset 8, -16
 2323              		.cfi_offset 9, -24
 2324              		.cfi_offset 18, -32
 2325              		.cfi_offset 19, -40
 2326 0e0c 13040103 		addi	s0,sp,48
 2327              		.cfi_def_cfa 8, 0
 466:src/kernel/slabAllocator.cpp ****     size_t level = getDeg2Ceil(size);
 2328              		.loc 1 466 5
 2329              		.loc 1 466 31 is_stmt 0
 2330 0e10 97000000 		call	_Z11getDeg2Ceilm@plt
 2330      E7800000 
 2331              	.LVL237:
 467:src/kernel/slabAllocator.cpp ****     if(level < CACHE_BUFFER_SMALL)
 2332              		.loc 1 467 5 is_stmt 1
 2333 0e18 93074000 		li	a5,4
 2334 0e1c 63FAA700 		bleu	a0,a5,.L140
 468:src/kernel/slabAllocator.cpp ****         level = CACHE_BUFFER_SMALL;
 469:src/kernel/slabAllocator.cpp ****     if(level > CACHE_BUFFER_BIG)
 2335              		.loc 1 469 5
 2336 0e20 93071001 		li	a5,17
 2337 0e24 63F8A700 		bleu	a0,a5,.L137
 470:src/kernel/slabAllocator.cpp ****         return nullptr;
 2338              		.loc 1 470 16 is_stmt 0
 2339 0e28 13090000 		li	s2,0
 2340 0e2c 6F00C004 		j	.L136
 2341              	.L140:
 468:src/kernel/slabAllocator.cpp ****         level = CACHE_BUFFER_SMALL;
 2342              		.loc 1 468 15
 2343 0e30 13055000 		li	a0,5
 2344              	.LVL238:
GAS LISTING /tmp/ccbdlM41.s 			page 55


 2345              	.L137:
 471:src/kernel/slabAllocator.cpp ****     size = (1 << level);
 2346              		.loc 1 471 5 is_stmt 1
 2347              		.loc 1 471 15 is_stmt 0
 2348 0e34 93061000 		li	a3,1
 2349 0e38 BB99A600 		sllw	s3,a3,a0
 2350              	.LVL239:
 472:src/kernel/slabAllocator.cpp ****     size_t index = level - CACHE_BUFFER_SMALL;
 2351              		.loc 1 472 5 is_stmt 1
 2352              		.loc 1 472 12 is_stmt 0
 2353 0e3c 9304B5FF 		addi	s1,a0,-5
 2354              	.LVL240:
 473:src/kernel/slabAllocator.cpp ****     if(slabAllocator->cachesBuffers[index] == nullptr)
 2355              		.loc 1 473 5 is_stmt 1
 2356              		.loc 1 473 42 is_stmt 0
 2357 0e40 17090000 		ld	s2,.LANCHOR0
 2357      03390900 
 2358 0e48 93973400 		slli	a5,s1,3
 2359 0e4c B307F900 		add	a5,s2,a5
 2360 0e50 83B78700 		ld	a5,8(a5)
 2361              		.loc 1 473 5
 2362 0e54 63820704 		beqz	a5,.L143
 2363              	.L139:
 474:src/kernel/slabAllocator.cpp ****     {
 475:src/kernel/slabAllocator.cpp ****         slabAllocator->cachesBuffers[index] = (kmem_cache_t*)kmem_cache_alloc(&slabAllocator->cache
 476:src/kernel/slabAllocator.cpp ****         if(slabAllocator->cachesBuffers[index] == nullptr)
 477:src/kernel/slabAllocator.cpp ****             return nullptr;
 478:src/kernel/slabAllocator.cpp ****         init_cache(slabAllocator->cachesBuffers[index], "Cache for small buffers", getOptimalSlabSi
 479:src/kernel/slabAllocator.cpp ****     }
 480:src/kernel/slabAllocator.cpp **** 
 481:src/kernel/slabAllocator.cpp ****     return kmem_cache_alloc(slabAllocator->cachesBuffers[index]);
 2364              		.loc 1 481 5 is_stmt 1
 2365              		.loc 1 481 28 is_stmt 0
 2366 0e58 13953400 		slli	a0,s1,3
 2367 0e5c 97040000 		ld	s1,.LANCHOR0
 2367      83B40400 
 2368              	.LVL241:
 2369 0e64 3385A400 		add	a0,s1,a0
 2370 0e68 03358500 		ld	a0,8(a0)
 2371 0e6c 97000000 		call	_Z16kmem_cache_allocP12kmem_cache_s
 2371      E7800000 
 2372              	.LVL242:
 2373 0e74 13090500 		mv	s2,a0
 2374              	.LVL243:
 2375              	.L136:
 482:src/kernel/slabAllocator.cpp **** }
 2376              		.loc 1 482 1
 2377 0e78 13050900 		mv	a0,s2
 2378 0e7c 83308102 		ld	ra,40(sp)
 2379              		.cfi_remember_state
 2380              		.cfi_restore 1
 2381 0e80 03340102 		ld	s0,32(sp)
 2382              		.cfi_restore 8
 2383              		.cfi_def_cfa 2, 48
 2384 0e84 83348101 		ld	s1,24(sp)
 2385              		.cfi_restore 9
 2386 0e88 03390101 		ld	s2,16(sp)
GAS LISTING /tmp/ccbdlM41.s 			page 56


 2387              		.cfi_restore 18
 2388 0e8c 83398100 		ld	s3,8(sp)
 2389              		.cfi_restore 19
 2390 0e90 13010103 		addi	sp,sp,48
 2391              		.cfi_def_cfa_offset 0
 2392 0e94 67800000 		jr	ra
 2393              	.LVL244:
 2394              	.L143:
 2395              		.cfi_restore_state
 475:src/kernel/slabAllocator.cpp ****         if(slabAllocator->cachesBuffers[index] == nullptr)
 2396              		.loc 1 475 9 is_stmt 1
 475:src/kernel/slabAllocator.cpp ****         if(slabAllocator->cachesBuffers[index] == nullptr)
 2397              		.loc 1 475 78 is_stmt 0
 2398 0e98 13050907 		addi	a0,s2,112
 2399 0e9c 97000000 		call	_Z16kmem_cache_allocP12kmem_cache_s
 2399      E7800000 
 2400              	.LVL245:
 475:src/kernel/slabAllocator.cpp ****         if(slabAllocator->cachesBuffers[index] == nullptr)
 2401              		.loc 1 475 45
 2402 0ea4 13973400 		slli	a4,s1,3
 2403 0ea8 3309E900 		add	s2,s2,a4
 2404 0eac 2334A900 		sd	a0,8(s2)
 476:src/kernel/slabAllocator.cpp ****             return nullptr;
 2405              		.loc 1 476 9 is_stmt 1
 476:src/kernel/slabAllocator.cpp ****             return nullptr;
 2406              		.loc 1 476 46 is_stmt 0
 2407 0eb0 97070000 		ld	a5,.LANCHOR0
 2407      83B70700 
 2408 0eb8 B387E700 		add	a5,a5,a4
 2409 0ebc 03B98700 		ld	s2,8(a5)
 476:src/kernel/slabAllocator.cpp ****             return nullptr;
 2410              		.loc 1 476 9
 2411 0ec0 E30C09FA 		beqz	s2,.L136
 478:src/kernel/slabAllocator.cpp ****     }
 2412              		.loc 1 478 9 is_stmt 1
 478:src/kernel/slabAllocator.cpp ****     }
 2413              		.loc 1 478 19 is_stmt 0
 2414 0ec4 13850900 		mv	a0,s3
 2415 0ec8 97000000 		call	_Z18getOptimalSlabSizem
 2415      E7800000 
 2416              	.LVL246:
 2417 0ed0 13060500 		mv	a2,a0
 2418 0ed4 93070000 		li	a5,0
 2419 0ed8 13070000 		li	a4,0
 2420 0edc 93860900 		mv	a3,s3
 2421 0ee0 97050000 		lla	a1,.LC21
 2421      93850500 
 2422 0ee8 13050900 		mv	a0,s2
 2423 0eec 97000000 		call	_Z10init_cacheP12kmem_cache_sPKcmmPFvPvES5_
 2423      E7800000 
 2424              	.LVL247:
 2425 0ef4 6FF05FF6 		j	.L139
 2426              		.cfi_endproc
 2427              	.LFE32:
 2429              		.align	2
 2430              		.globl	_Z5kfreePKv
 2432              	_Z5kfreePKv:
GAS LISTING /tmp/ccbdlM41.s 			page 57


 2433              	.LFB33:
 483:src/kernel/slabAllocator.cpp **** 
 484:src/kernel/slabAllocator.cpp **** void kfree(const void *objp)
 485:src/kernel/slabAllocator.cpp **** {
 2434              		.loc 1 485 1 is_stmt 1
 2435              		.cfi_startproc
 2436              	.LVL248:
 486:src/kernel/slabAllocator.cpp ****     if(objp == nullptr)
 2437              		.loc 1 486 5
 2438 0ef8 63020508 		beqz	a0,.L149
 485:src/kernel/slabAllocator.cpp ****     if(objp == nullptr)
 2439              		.loc 1 485 1 is_stmt 0
 2440 0efc 130101FE 		addi	sp,sp,-32
 2441              		.cfi_def_cfa_offset 32
 2442 0f00 233C1100 		sd	ra,24(sp)
 2443 0f04 23388100 		sd	s0,16(sp)
 2444 0f08 23349100 		sd	s1,8(sp)
 2445 0f0c 23302101 		sd	s2,0(sp)
 2446              		.cfi_offset 1, -8
 2447              		.cfi_offset 8, -16
 2448              		.cfi_offset 9, -24
 2449              		.cfi_offset 18, -32
 2450 0f10 13040102 		addi	s0,sp,32
 2451              		.cfi_def_cfa 8, 0
 2452 0f14 13090500 		mv	s2,a0
 2453              	.LBB24:
 487:src/kernel/slabAllocator.cpp ****         return;
 488:src/kernel/slabAllocator.cpp ****     slab_t* slab = nullptr;
 489:src/kernel/slabAllocator.cpp ****     for(size_t i = 0;i < CACHE_BUFFER_SIZE;i++)
 2454              		.loc 1 489 16
 2455 0f18 93040000 		li	s1,0
 2456              	.LBE24:
 488:src/kernel/slabAllocator.cpp ****     for(size_t i = 0;i < CACHE_BUFFER_SIZE;i++)
 2457              		.loc 1 488 13
 2458 0f1c 13050000 		li	a0,0
 2459              	.LVL249:
 2460              	.L147:
 2461              	.LBB25:
 2462              		.loc 1 489 24 is_stmt 1 discriminator 1
 2463 0f20 9307C000 		li	a5,12
 2464 0f24 63E89702 		bgtu	s1,a5,.L146
 490:src/kernel/slabAllocator.cpp ****     {
 491:src/kernel/slabAllocator.cpp ****         slab = findSlab(slabAllocator->cachesBuffers[i], objp);
 2465              		.loc 1 491 9
 2466              		.loc 1 491 24 is_stmt 0
 2467 0f28 93973400 		slli	a5,s1,3
 2468 0f2c 17070000 		ld	a4,.LANCHOR0
 2468      03370700 
 2469 0f34 B307F700 		add	a5,a4,a5
 2470 0f38 93050900 		mv	a1,s2
 2471 0f3c 03B58700 		ld	a0,8(a5)
 2472              	.LVL250:
 2473 0f40 97000000 		call	_Z8findSlabP12kmem_cache_sPKv
 2473      E7800000 
 2474              	.LVL251:
 492:src/kernel/slabAllocator.cpp ****         if(slab != nullptr) break;
 2475              		.loc 1 492 9 is_stmt 1
GAS LISTING /tmp/ccbdlM41.s 			page 58


 2476 0f48 63160500 		bnez	a0,.L146
 489:src/kernel/slabAllocator.cpp ****     {
 2477              		.loc 1 489 5 discriminator 2
 2478 0f4c 93841400 		addi	s1,s1,1
 2479              	.LVL252:
 2480 0f50 6FF01FFD 		j	.L147
 2481              	.L146:
 2482              	.LBE25:
 493:src/kernel/slabAllocator.cpp ****     }
 494:src/kernel/slabAllocator.cpp ****     if(slab != nullptr)
 2483              		.loc 1 494 5
 2484 0f54 63080500 		beqz	a0,.L144
 495:src/kernel/slabAllocator.cpp ****     {
 496:src/kernel/slabAllocator.cpp ****         free_slab_object(slab, objp);
 2485              		.loc 1 496 9
 2486              		.loc 1 496 25 is_stmt 0
 2487 0f58 93050900 		mv	a1,s2
 2488 0f5c 97000000 		call	_Z16free_slab_objectP6slab_sPKv
 2488      E7800000 
 2489              	.LVL253:
 2490              	.L144:
 497:src/kernel/slabAllocator.cpp ****     }
 498:src/kernel/slabAllocator.cpp **** }
 2491              		.loc 1 498 1
 2492 0f64 83308101 		ld	ra,24(sp)
 2493              		.cfi_restore 1
 2494 0f68 03340101 		ld	s0,16(sp)
 2495              		.cfi_restore 8
 2496              		.cfi_def_cfa 2, 32
 2497 0f6c 83348100 		ld	s1,8(sp)
 2498              		.cfi_restore 9
 2499              	.LVL254:
 2500 0f70 03390100 		ld	s2,0(sp)
 2501              		.cfi_restore 18
 2502              	.LVL255:
 2503 0f74 13010102 		addi	sp,sp,32
 2504              		.cfi_def_cfa_offset 0
 2505 0f78 67800000 		jr	ra
 2506              	.LVL256:
 2507              	.L149:
 2508 0f7c 67800000 		ret
 2509              		.cfi_endproc
 2510              	.LFE33:
 2512              		.align	2
 2513              		.globl	_Z18kmem_cache_destroyP12kmem_cache_s
 2515              	_Z18kmem_cache_destroyP12kmem_cache_s:
 2516              	.LFB34:
 499:src/kernel/slabAllocator.cpp **** 
 500:src/kernel/slabAllocator.cpp **** void kmem_cache_destroy(kmem_cache_t *cachep)
 501:src/kernel/slabAllocator.cpp **** {
 2517              		.loc 1 501 1 is_stmt 1
 2518              		.cfi_startproc
 2519              	.LVL257:
 2520 0f80 130101FE 		addi	sp,sp,-32
 2521              		.cfi_def_cfa_offset 32
 2522 0f84 233C1100 		sd	ra,24(sp)
 2523 0f88 23388100 		sd	s0,16(sp)
GAS LISTING /tmp/ccbdlM41.s 			page 59


 2524 0f8c 23349100 		sd	s1,8(sp)
 2525              		.cfi_offset 1, -8
 2526              		.cfi_offset 8, -16
 2527              		.cfi_offset 9, -24
 2528 0f90 13040102 		addi	s0,sp,32
 2529              		.cfi_def_cfa 8, 0
 2530 0f94 93040500 		mv	s1,a0
 502:src/kernel/slabAllocator.cpp ****     //if(cachep->slabs_partial != nullptr || cachep->slabs_full != nullptr)
 503:src/kernel/slabAllocator.cpp ****     //{
 504:src/kernel/slabAllocator.cpp ****     //    cachep->errors|=DESTROY_ERROR;
 505:src/kernel/slabAllocator.cpp ****     //    return;
 506:src/kernel/slabAllocator.cpp ****     //}
 507:src/kernel/slabAllocator.cpp ****     destroy_slab_list(&cachep->slabs_empty);
 2531              		.loc 1 507 5
 2532              		.loc 1 507 22 is_stmt 0
 2533 0f98 13050504 		addi	a0,a0,64
 2534              	.LVL258:
 2535 0f9c 97000000 		call	_Z17destroy_slab_listPP6slab_s
 2535      E7800000 
 2536              	.LVL259:
 508:src/kernel/slabAllocator.cpp ****     destroy_slab_list(&cachep->slabs_partial);
 2537              		.loc 1 508 5 is_stmt 1
 2538              		.loc 1 508 22 is_stmt 0
 2539 0fa4 13850405 		addi	a0,s1,80
 2540 0fa8 97000000 		call	_Z17destroy_slab_listPP6slab_s
 2540      E7800000 
 2541              	.LVL260:
 509:src/kernel/slabAllocator.cpp ****     destroy_slab_list(&cachep->slabs_full);
 2542              		.loc 1 509 5 is_stmt 1
 2543              		.loc 1 509 22 is_stmt 0
 2544 0fb0 13858404 		addi	a0,s1,72
 2545 0fb4 97000000 		call	_Z17destroy_slab_listPP6slab_s
 2545      E7800000 
 2546              	.LVL261:
 510:src/kernel/slabAllocator.cpp ****     kmem_cache_free(&slabAllocator->cacheOfCaches,cachep);
 2547              		.loc 1 510 5 is_stmt 1
 2548              		.loc 1 510 20 is_stmt 0
 2549 0fbc 93850400 		mv	a1,s1
 2550 0fc0 17050000 		ld	a0,.LANCHOR0
 2550      03350500 
 2551 0fc8 13050507 		addi	a0,a0,112
 2552 0fcc 97000000 		call	_Z15kmem_cache_freeP12kmem_cache_sPv
 2552      E7800000 
 2553              	.LVL262:
 511:src/kernel/slabAllocator.cpp **** }
 2554              		.loc 1 511 1
 2555 0fd4 83308101 		ld	ra,24(sp)
 2556              		.cfi_restore 1
 2557 0fd8 03340101 		ld	s0,16(sp)
 2558              		.cfi_restore 8
 2559              		.cfi_def_cfa 2, 32
 2560 0fdc 83348100 		ld	s1,8(sp)
 2561              		.cfi_restore 9
 2562              	.LVL263:
 2563 0fe0 13010102 		addi	sp,sp,32
 2564              		.cfi_def_cfa_offset 0
 2565 0fe4 67800000 		jr	ra
GAS LISTING /tmp/ccbdlM41.s 			page 60


 2566              		.cfi_endproc
 2567              	.LFE34:
 2569              		.align	2
 2570              		.globl	_Z17kmem_cache_shrinkP12kmem_cache_s
 2572              	_Z17kmem_cache_shrinkP12kmem_cache_s:
 2573              	.LFB35:
 512:src/kernel/slabAllocator.cpp **** 
 513:src/kernel/slabAllocator.cpp **** int kmem_cache_shrink(kmem_cache_t *cachep)
 514:src/kernel/slabAllocator.cpp **** {
 2574              		.loc 1 514 1 is_stmt 1
 2575              		.cfi_startproc
 2576              	.LVL264:
 515:src/kernel/slabAllocator.cpp ****     if(cachep == nullptr)
 2577              		.loc 1 515 5
 2578 0fe8 63080502 		beqz	a0,.L156
 514:src/kernel/slabAllocator.cpp ****     if(cachep == nullptr)
 2579              		.loc 1 514 1 is_stmt 0
 2580 0fec 130101FF 		addi	sp,sp,-16
 2581              		.cfi_def_cfa_offset 16
 2582 0ff0 23341100 		sd	ra,8(sp)
 2583 0ff4 23308100 		sd	s0,0(sp)
 2584              		.cfi_offset 1, -8
 2585              		.cfi_offset 8, -16
 2586 0ff8 13040101 		addi	s0,sp,16
 2587              		.cfi_def_cfa 8, 0
 516:src/kernel/slabAllocator.cpp ****         return 0;
 517:src/kernel/slabAllocator.cpp ****     int totalBlocks = destroy_slab_list(&cachep->slabs_empty);
 2588              		.loc 1 517 5 is_stmt 1
 2589              		.loc 1 517 40 is_stmt 0
 2590 0ffc 13050504 		addi	a0,a0,64
 2591              	.LVL265:
 2592 1000 97000000 		call	_Z17destroy_slab_listPP6slab_s
 2592      E7800000 
 2593              	.LVL266:
 518:src/kernel/slabAllocator.cpp ****     return totalBlocks;
 2594              		.loc 1 518 5 is_stmt 1
 519:src/kernel/slabAllocator.cpp **** }
 2595              		.loc 1 519 1 is_stmt 0
 2596 1008 83308100 		ld	ra,8(sp)
 2597              		.cfi_restore 1
 2598 100c 03340100 		ld	s0,0(sp)
 2599              		.cfi_restore 8
 2600              		.cfi_def_cfa 2, 16
 2601 1010 13010101 		addi	sp,sp,16
 2602              		.cfi_def_cfa_offset 0
 2603 1014 67800000 		jr	ra
 2604              	.LVL267:
 2605              	.L156:
 516:src/kernel/slabAllocator.cpp ****         return 0;
 2606              		.loc 1 516 16
 2607 1018 13050000 		li	a0,0
 2608              	.LVL268:
 2609              		.loc 1 519 1
 2610 101c 67800000 		ret
 2611              		.cfi_endproc
 2612              	.LFE35:
 2614              		.section	.rodata.str1.8
GAS LISTING /tmp/ccbdlM41.s 			page 61


 2615              		.align	3
 2616              	.LC22:
 2617 0240 45585041 		.string	"EXPAND ERROR\n"
 2617      4E442045 
 2617      52524F52 
 2617      0A00
 2618 024e 0000     		.align	3
 2619              	.LC23:
 2620 0250 44455354 		.string	"DESTROY ERROR"
 2620      524F5920 
 2620      4552524F 
 2620      5200
 2621              		.text
 2622              		.align	2
 2623              		.globl	_Z16kmem_cache_errorP12kmem_cache_s
 2625              	_Z16kmem_cache_errorP12kmem_cache_s:
 2626              	.LFB36:
 520:src/kernel/slabAllocator.cpp **** 
 521:src/kernel/slabAllocator.cpp **** int kmem_cache_error(kmem_cache_t *cachep)
 522:src/kernel/slabAllocator.cpp **** {
 2627              		.loc 1 522 1 is_stmt 1
 2628              		.cfi_startproc
 2629              	.LVL269:
 523:src/kernel/slabAllocator.cpp ****     if(cachep == nullptr)
 2630              		.loc 1 523 5
 2631 1020 630A0506 		beqz	a0,.L165
 522:src/kernel/slabAllocator.cpp ****     if(cachep == nullptr)
 2632              		.loc 1 522 1 is_stmt 0
 2633 1024 130101FE 		addi	sp,sp,-32
 2634              		.cfi_def_cfa_offset 32
 2635 1028 233C1100 		sd	ra,24(sp)
 2636 102c 23388100 		sd	s0,16(sp)
 2637 1030 23349100 		sd	s1,8(sp)
 2638              		.cfi_offset 1, -8
 2639              		.cfi_offset 8, -16
 2640              		.cfi_offset 9, -24
 2641 1034 13040102 		addi	s0,sp,32
 2642              		.cfi_def_cfa 8, 0
 2643 1038 93040500 		mv	s1,a0
 524:src/kernel/slabAllocator.cpp ****         return 0;
 525:src/kernel/slabAllocator.cpp **** 
 526:src/kernel/slabAllocator.cpp ****     if(cachep->errors & EXPAND_ERROR)
 2644              		.loc 1 526 5 is_stmt 1
 2645              		.loc 1 526 16 is_stmt 0
 2646 103c 83278507 		lw	a5,120(a0)
 2647              		.loc 1 526 23
 2648 1040 93F71700 		andi	a5,a5,1
 2649              		.loc 1 526 5
 2650 1044 63940702 		bnez	a5,.L170
 2651              	.LVL270:
 2652              	.L163:
 527:src/kernel/slabAllocator.cpp ****         KConsole::trapPrintString("EXPAND ERROR\n");
 528:src/kernel/slabAllocator.cpp ****     if(cachep->errors & DESTROY_ERROR)
 2653              		.loc 1 528 5 is_stmt 1
 2654              		.loc 1 528 16 is_stmt 0
 2655 1048 83A78407 		lw	a5,120(s1)
 2656              		.loc 1 528 23
GAS LISTING /tmp/ccbdlM41.s 			page 62


 2657 104c 93F72700 		andi	a5,a5,2
 2658              		.loc 1 528 5
 2659 1050 63980702 		bnez	a5,.L171
 2660              	.L164:
 529:src/kernel/slabAllocator.cpp ****         KConsole::trapPrintString("DESTROY ERROR");
 530:src/kernel/slabAllocator.cpp **** 
 531:src/kernel/slabAllocator.cpp ****     return cachep->errors;
 2661              		.loc 1 531 5 is_stmt 1
 2662              		.loc 1 531 20 is_stmt 0
 2663 1054 03A58407 		lw	a0,120(s1)
 532:src/kernel/slabAllocator.cpp **** }
 2664              		.loc 1 532 1
 2665 1058 83308101 		ld	ra,24(sp)
 2666              		.cfi_remember_state
 2667              		.cfi_restore 1
 2668 105c 03340101 		ld	s0,16(sp)
 2669              		.cfi_restore 8
 2670              		.cfi_def_cfa 2, 32
 2671 1060 83348100 		ld	s1,8(sp)
 2672              		.cfi_restore 9
 2673              	.LVL271:
 2674 1064 13010102 		addi	sp,sp,32
 2675              		.cfi_def_cfa_offset 0
 2676 1068 67800000 		jr	ra
 2677              	.LVL272:
 2678              	.L170:
 2679              		.cfi_restore_state
 527:src/kernel/slabAllocator.cpp ****         KConsole::trapPrintString("EXPAND ERROR\n");
 2680              		.loc 1 527 9 is_stmt 1
 527:src/kernel/slabAllocator.cpp ****         KConsole::trapPrintString("EXPAND ERROR\n");
 2681              		.loc 1 527 34 is_stmt 0
 2682 106c 17050000 		lla	a0,.LC22
 2682      13050500 
 2683 1074 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2683      E7800000 
 2684              	.LVL273:
 2685 107c 6FF0DFFC 		j	.L163
 2686              	.L171:
 529:src/kernel/slabAllocator.cpp ****         KConsole::trapPrintString("DESTROY ERROR");
 2687              		.loc 1 529 9 is_stmt 1
 529:src/kernel/slabAllocator.cpp ****         KConsole::trapPrintString("DESTROY ERROR");
 2688              		.loc 1 529 34 is_stmt 0
 2689 1080 17050000 		lla	a0,.LC23
 2689      13050500 
 2690 1088 97000000 		call	_ZN8KConsole15trapPrintStringEPKc@plt
 2690      E7800000 
 2691              	.LVL274:
 2692 1090 6FF05FFC 		j	.L164
 2693              	.LVL275:
 2694              	.L165:
 2695              		.cfi_def_cfa_register 2
 2696              		.cfi_restore 1
 2697              		.cfi_restore 8
 2698              		.cfi_restore 9
 524:src/kernel/slabAllocator.cpp **** 
 2699              		.loc 1 524 16
 2700 1094 13050000 		li	a0,0
GAS LISTING /tmp/ccbdlM41.s 			page 63


 2701              	.LVL276:
 2702              		.loc 1 532 1
 2703 1098 67800000 		ret
 2704              		.cfi_endproc
 2705              	.LFE36:
 2707              		.bss
 2708              		.align	3
 2709              		.set	.LANCHOR0,. + 0
 2712              	_ZL13slabAllocator:
 2713 0000 00000000 		.zero	8
 2713      00000000 
 2714              		.text
 2715              	.Letext0:
 2716              		.file 2 "src/kernel/../../h/../lib/hw.h"
 2717              		.file 3 "src/kernel/../../h/slabAllocator.hpp"
 2718              		.file 4 "src/kernel/../../h/buddyAllocator.hpp"
 2719              		.file 5 "src/kernel/../../h/PCB.hpp"
 2720              		.file 6 "src/kernel/../../h/KSemaphore.hpp"
 2721              		.file 7 "src/kernel/../../h/KConsole.hpp"
GAS LISTING /tmp/ccbdlM41.s 			page 64


DEFINED SYMBOLS
                            *ABS*:0000000000000000 slabAllocator.cpp
     /tmp/ccbdlM41.s:9      .text:0000000000000000 _Z6strcpyPKcPc
     /tmp/ccbdlM41.s:13     .text:0000000000000000 .L0 
     /tmp/ccbdlM41.s:15     .text:0000000000000000 .L0 
     /tmp/ccbdlM41.s:16     .text:0000000000000004 .L0 
     /tmp/ccbdlM41.s:18     .text:0000000000000008 .L0 
     /tmp/ccbdlM41.s:20     .text:000000000000000c .L0 
     /tmp/ccbdlM41.s:23     .text:000000000000000c .L0 
     /tmp/ccbdlM41.s:24     .text:000000000000000c .L0 
     /tmp/ccbdlM41.s:25     .text:000000000000000c .L0 
     /tmp/ccbdlM41.s:27     .text:0000000000000010 .L0 
     /tmp/ccbdlM41.s:29     .text:0000000000000014 .L0 
     /tmp/ccbdlM41.s:30     .text:0000000000000014 .L0 
     /tmp/ccbdlM41.s:32     .text:0000000000000018 .L0 
     /tmp/ccbdlM41.s:33     .text:0000000000000018 .L0 
     /tmp/ccbdlM41.s:36     .text:000000000000001c .L0 
     /tmp/ccbdlM41.s:37     .text:000000000000001c .L0 
     /tmp/ccbdlM41.s:40     .text:0000000000000020 .L0 
     /tmp/ccbdlM41.s:43     .text:0000000000000024 .L0 
     /tmp/ccbdlM41.s:44     .text:0000000000000024 .L0 
     /tmp/ccbdlM41.s:46     .text:0000000000000028 .L0 
     /tmp/ccbdlM41.s:47     .text:000000000000002c .L0 
     /tmp/ccbdlM41.s:48     .text:000000000000002c .L0 
     /tmp/ccbdlM41.s:50     .text:0000000000000030 .L0 
     /tmp/ccbdlM41.s:52     .text:0000000000000034 .L0 
     /tmp/ccbdlM41.s:58     .text:0000000000000034 _Z17destroy_slab_listPP6slab_s
     /tmp/ccbdlM41.s:61     .text:0000000000000034 .L0 
     /tmp/ccbdlM41.s:63     .text:0000000000000034 .L0 
     /tmp/ccbdlM41.s:64     .text:0000000000000038 .L0 
     /tmp/ccbdlM41.s:71     .text:0000000000000050 .L0 
     /tmp/ccbdlM41.s:72     .text:0000000000000050 .L0 
     /tmp/ccbdlM41.s:73     .text:0000000000000050 .L0 
     /tmp/ccbdlM41.s:74     .text:0000000000000050 .L0 
     /tmp/ccbdlM41.s:75     .text:0000000000000050 .L0 
     /tmp/ccbdlM41.s:76     .text:0000000000000050 .L0 
     /tmp/ccbdlM41.s:78     .text:0000000000000054 .L0 
     /tmp/ccbdlM41.s:80     .text:0000000000000054 .L0 
     /tmp/ccbdlM41.s:81     .text:0000000000000054 .L0 
     /tmp/ccbdlM41.s:83     .text:0000000000000058 .L0 
     /tmp/ccbdlM41.s:86     .text:0000000000000060 .L0 
     /tmp/ccbdlM41.s:87     .text:0000000000000060 .L0 
     /tmp/ccbdlM41.s:89     .text:0000000000000064 .L0 
     /tmp/ccbdlM41.s:92     .text:0000000000000068 .L0 
     /tmp/ccbdlM41.s:93     .text:0000000000000068 .L0 
     /tmp/ccbdlM41.s:97     .text:000000000000006c .L0 
     /tmp/ccbdlM41.s:98     .text:000000000000006c .L0 
     /tmp/ccbdlM41.s:99     .text:000000000000006c .L0 
     /tmp/ccbdlM41.s:101    .text:0000000000000070 .L0 
     /tmp/ccbdlM41.s:104    .text:0000000000000074 .L0 
     /tmp/ccbdlM41.s:105    .text:0000000000000074 .L0 
     /tmp/ccbdlM41.s:108    .text:0000000000000078 .L0 
     /tmp/ccbdlM41.s:109    .text:0000000000000078 .L0 
     /tmp/ccbdlM41.s:115    .text:0000000000000090 .L0 
     /tmp/ccbdlM41.s:116    .text:0000000000000090 .L0 
     /tmp/ccbdlM41.s:118    .text:0000000000000094 .L0 
     /tmp/ccbdlM41.s:119    .text:0000000000000094 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 65


     /tmp/ccbdlM41.s:123    .text:0000000000000098 .L0 
     /tmp/ccbdlM41.s:127    .text:000000000000009c .L0 
     /tmp/ccbdlM41.s:131    .text:00000000000000a0 .L0 
     /tmp/ccbdlM41.s:133    .text:00000000000000a8 .L0 
     /tmp/ccbdlM41.s:135    .text:00000000000000ac .L0 
     /tmp/ccbdlM41.s:136    .text:00000000000000ac .L0 
     /tmp/ccbdlM41.s:138    .text:00000000000000b0 .L0 
     /tmp/ccbdlM41.s:140    .text:00000000000000b4 .L0 
     /tmp/ccbdlM41.s:142    .text:00000000000000b8 .L0 
     /tmp/ccbdlM41.s:144    .text:00000000000000bc .L0 
     /tmp/ccbdlM41.s:146    .text:00000000000000c0 .L0 
     /tmp/ccbdlM41.s:148    .text:00000000000000c4 .L0 
     /tmp/ccbdlM41.s:154    .text:00000000000000c4 _Z10init_cacheP12kmem_cache_sPKcmmPFvPvES5_
     /tmp/ccbdlM41.s:157    .text:00000000000000c4 .L0 
     /tmp/ccbdlM41.s:159    .text:00000000000000c4 .L0 
     /tmp/ccbdlM41.s:160    .text:00000000000000c8 .L0 
     /tmp/ccbdlM41.s:168    .text:00000000000000e4 .L0 
     /tmp/ccbdlM41.s:169    .text:00000000000000e4 .L0 
     /tmp/ccbdlM41.s:170    .text:00000000000000e4 .L0 
     /tmp/ccbdlM41.s:171    .text:00000000000000e4 .L0 
     /tmp/ccbdlM41.s:172    .text:00000000000000e4 .L0 
     /tmp/ccbdlM41.s:173    .text:00000000000000e4 .L0 
     /tmp/ccbdlM41.s:174    .text:00000000000000e4 .L0 
     /tmp/ccbdlM41.s:176    .text:00000000000000e8 .L0 
     /tmp/ccbdlM41.s:185    .text:0000000000000100 .L0 
     /tmp/ccbdlM41.s:186    .text:0000000000000100 .L0 
     /tmp/ccbdlM41.s:191    .text:000000000000010c .L0 
     /tmp/ccbdlM41.s:192    .text:000000000000010c .L0 
     /tmp/ccbdlM41.s:194    .text:0000000000000110 .L0 
     /tmp/ccbdlM41.s:195    .text:0000000000000110 .L0 
     /tmp/ccbdlM41.s:197    .text:0000000000000114 .L0 
     /tmp/ccbdlM41.s:198    .text:0000000000000114 .L0 
     /tmp/ccbdlM41.s:200    .text:0000000000000118 .L0 
     /tmp/ccbdlM41.s:201    .text:0000000000000118 .L0 
     /tmp/ccbdlM41.s:203    .text:000000000000011c .L0 
     /tmp/ccbdlM41.s:204    .text:000000000000011c .L0 
     /tmp/ccbdlM41.s:206    .text:0000000000000120 .L0 
     /tmp/ccbdlM41.s:208    .text:0000000000000124 .L0 
     /tmp/ccbdlM41.s:210    .text:0000000000000128 .L0 
     /tmp/ccbdlM41.s:211    .text:0000000000000128 .L0 
     /tmp/ccbdlM41.s:213    .text:000000000000012c .L0 
     /tmp/ccbdlM41.s:214    .text:0000000000000130 .L0 
     /tmp/ccbdlM41.s:216    .text:0000000000000134 .L0 
     /tmp/ccbdlM41.s:217    .text:0000000000000134 .L0 
     /tmp/ccbdlM41.s:219    .text:0000000000000138 .L0 
     /tmp/ccbdlM41.s:222    .text:000000000000013c .L0 
     /tmp/ccbdlM41.s:225    .text:0000000000000140 .L0 
     /tmp/ccbdlM41.s:228    .text:0000000000000144 .L0 
     /tmp/ccbdlM41.s:231    .text:0000000000000148 .L0 
     /tmp/ccbdlM41.s:234    .text:000000000000014c .L0 
     /tmp/ccbdlM41.s:236    .text:0000000000000150 .L0 
     /tmp/ccbdlM41.s:247    .text:0000000000000150 _Z19slab_allocator_initP14buddyAllocator
     /tmp/ccbdlM41.s:250    .text:0000000000000150 .L0 
     /tmp/ccbdlM41.s:252    .text:0000000000000150 .L0 
     /tmp/ccbdlM41.s:253    .text:0000000000000154 .L0 
     /tmp/ccbdlM41.s:257    .text:0000000000000160 .L0 
     /tmp/ccbdlM41.s:258    .text:0000000000000160 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 66


     /tmp/ccbdlM41.s:259    .text:0000000000000160 .L0 
     /tmp/ccbdlM41.s:261    .text:0000000000000164 .L0 
     /tmp/ccbdlM41.s:263    .text:0000000000000164 .L0 
     /tmp/ccbdlM41.s:264    .text:0000000000000164 .L0 
     /tmp/ccbdlM41.s:267    .text:0000000000000168 .L0 
     /tmp/ccbdlM41.s:268    .text:0000000000000168 .L0 
     /tmp/ccbdlM41.s:272    .text:000000000000016c .L0 
     /tmp/ccbdlM41.s:273    .text:000000000000016c .L0 
     /tmp/ccbdlM41.s:278    .text:0000000000000174 .L0 
     /tmp/ccbdlM41.s:279    .text:0000000000000174 .L0 
     /tmp/ccbdlM41.s:283    .text:0000000000000180 .L0 
     /tmp/ccbdlM41.s:287    .text:0000000000000184 .L0 
     /tmp/ccbdlM41.s:291    .text:000000000000018c .L0 
     /tmp/ccbdlM41.s:292    .text:000000000000018c .L0 
     /tmp/ccbdlM41.s:303    .text:00000000000001b0 .L0 
     /tmp/ccbdlM41.s:304    .text:00000000000001b0 .L0 
     /tmp/ccbdlM41.s:306    .text:00000000000001b8 .L0 
     /tmp/ccbdlM41.s:308    .text:00000000000001bc .L0 
     /tmp/ccbdlM41.s:309    .text:00000000000001bc .L0 
     /tmp/ccbdlM41.s:311    .text:00000000000001c0 .L0 
     /tmp/ccbdlM41.s:314    .text:00000000000001c4 .L0 
     /tmp/ccbdlM41.s:316    .text:00000000000001c8 .L0 
     /tmp/ccbdlM41.s:322    .text:00000000000001c8 _Z13checkSetIndexP6slab_si
     /tmp/ccbdlM41.s:325    .text:00000000000001c8 .L0 
     /tmp/ccbdlM41.s:327    .text:00000000000001c8 .L0 
     /tmp/ccbdlM41.s:328    .text:00000000000001cc .L0 
     /tmp/ccbdlM41.s:330    .text:00000000000001d0 .L0 
     /tmp/ccbdlM41.s:332    .text:00000000000001d4 .L0 
     /tmp/ccbdlM41.s:334    .text:00000000000001d4 .L0 
     /tmp/ccbdlM41.s:335    .text:00000000000001d4 .L0 
     /tmp/ccbdlM41.s:341    .text:00000000000001e4 .L0 
     /tmp/ccbdlM41.s:344    .text:00000000000001e8 .L0 
     /tmp/ccbdlM41.s:346    .text:00000000000001ec .L0 
     /tmp/ccbdlM41.s:349    .text:00000000000001f4 .L0 
     /tmp/ccbdlM41.s:351    .text:00000000000001f8 .L0 
     /tmp/ccbdlM41.s:353    .text:0000000000000200 .L0 
     /tmp/ccbdlM41.s:354    .text:0000000000000200 .L0 
     /tmp/ccbdlM41.s:356    .text:0000000000000204 .L0 
     /tmp/ccbdlM41.s:358    .text:0000000000000208 .L0 
     /tmp/ccbdlM41.s:364    .text:0000000000000208 _Z17setAllocatedIndexP6slab_si
     /tmp/ccbdlM41.s:367    .text:0000000000000208 .L0 
     /tmp/ccbdlM41.s:369    .text:0000000000000208 .L0 
     /tmp/ccbdlM41.s:370    .text:000000000000020c .L0 
     /tmp/ccbdlM41.s:372    .text:0000000000000210 .L0 
     /tmp/ccbdlM41.s:374    .text:0000000000000214 .L0 
     /tmp/ccbdlM41.s:376    .text:0000000000000214 .L0 
     /tmp/ccbdlM41.s:377    .text:0000000000000214 .L0 
     /tmp/ccbdlM41.s:383    .text:0000000000000224 .L0 
     /tmp/ccbdlM41.s:386    .text:0000000000000228 .L0 
     /tmp/ccbdlM41.s:388    .text:000000000000022c .L0 
     /tmp/ccbdlM41.s:391    .text:0000000000000234 .L0 
     /tmp/ccbdlM41.s:394    .text:000000000000023c .L0 
     /tmp/ccbdlM41.s:396    .text:0000000000000240 .L0 
     /tmp/ccbdlM41.s:398    .text:0000000000000244 .L0 
     /tmp/ccbdlM41.s:399    .text:0000000000000248 .L0 
     /tmp/ccbdlM41.s:400    .text:0000000000000248 .L0 
     /tmp/ccbdlM41.s:402    .text:000000000000024c .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 67


     /tmp/ccbdlM41.s:404    .text:0000000000000250 .L0 
     /tmp/ccbdlM41.s:410    .text:0000000000000250 _Z14allocateObjectP6slab_s
     /tmp/ccbdlM41.s:413    .text:0000000000000250 .L0 
     /tmp/ccbdlM41.s:415    .text:0000000000000250 .L0 
     /tmp/ccbdlM41.s:416    .text:0000000000000254 .L0 
     /tmp/ccbdlM41.s:422    .text:0000000000000268 .L0 
     /tmp/ccbdlM41.s:423    .text:0000000000000268 .L0 
     /tmp/ccbdlM41.s:424    .text:0000000000000268 .L0 
     /tmp/ccbdlM41.s:425    .text:0000000000000268 .L0 
     /tmp/ccbdlM41.s:426    .text:0000000000000268 .L0 
     /tmp/ccbdlM41.s:428    .text:000000000000026c .L0 
     /tmp/ccbdlM41.s:431    .text:0000000000000270 .L0 
     /tmp/ccbdlM41.s:434    .text:0000000000000274 .L0 
     /tmp/ccbdlM41.s:438    .text:0000000000000278 .L0 
     /tmp/ccbdlM41.s:439    .text:0000000000000278 .L0 
     /tmp/ccbdlM41.s:441    .text:000000000000027c .L0 
     /tmp/ccbdlM41.s:443    .text:0000000000000280 .L0 
     /tmp/ccbdlM41.s:444    .text:0000000000000280 .L0 
     /tmp/ccbdlM41.s:450    .text:0000000000000294 .L0 
     /tmp/ccbdlM41.s:452    .text:0000000000000298 .L0 
     /tmp/ccbdlM41.s:457    .text:00000000000002a0 .L0 
     /tmp/ccbdlM41.s:458    .text:00000000000002a0 .L0 
     /tmp/ccbdlM41.s:460    .text:00000000000002a4 .L0 
     /tmp/ccbdlM41.s:462    .text:00000000000002a8 .L0 
     /tmp/ccbdlM41.s:465    .text:00000000000002ac .L0 
     /tmp/ccbdlM41.s:469    .text:00000000000002b4 .L0 
     /tmp/ccbdlM41.s:470    .text:00000000000002b4 .L0 
     /tmp/ccbdlM41.s:475    .text:00000000000002b8 .L0 
     /tmp/ccbdlM41.s:478    .text:00000000000002bc .L0 
     /tmp/ccbdlM41.s:482    .text:00000000000002c0 .L0 
     /tmp/ccbdlM41.s:484    .text:00000000000002c4 .L0 
     /tmp/ccbdlM41.s:485    .text:00000000000002c4 .L0 
     /tmp/ccbdlM41.s:490    .text:00000000000002d4 .L0 
     /tmp/ccbdlM41.s:491    .text:00000000000002d4 .L0 
     /tmp/ccbdlM41.s:493    .text:00000000000002d8 .L0 
     /tmp/ccbdlM41.s:498    .text:00000000000002e0 .L0 
     /tmp/ccbdlM41.s:499    .text:00000000000002e0 .L0 
     /tmp/ccbdlM41.s:501    .text:00000000000002e8 .L0 
     /tmp/ccbdlM41.s:502    .text:00000000000002e8 .L0 
     /tmp/ccbdlM41.s:504    .text:00000000000002ec .L0 
     /tmp/ccbdlM41.s:505    .text:00000000000002ec .L0 
     /tmp/ccbdlM41.s:507    .text:00000000000002f0 .L0 
     /tmp/ccbdlM41.s:509    .text:00000000000002f4 .L0 
     /tmp/ccbdlM41.s:512    .text:00000000000002f8 .L0 
     /tmp/ccbdlM41.s:514    .text:00000000000002fc .L0 
     /tmp/ccbdlM41.s:518    .text:0000000000000300 .L0 
     /tmp/ccbdlM41.s:520    .text:0000000000000300 .L0 
     /tmp/ccbdlM41.s:522    .text:0000000000000308 .L0 
     /tmp/ccbdlM41.s:528    .text:0000000000000308 _Z4fullP6slab_s
     /tmp/ccbdlM41.s:531    .text:0000000000000308 .L0 
     /tmp/ccbdlM41.s:533    .text:0000000000000308 .L0 
     /tmp/ccbdlM41.s:534    .text:000000000000030c .L0 
     /tmp/ccbdlM41.s:536    .text:0000000000000310 .L0 
     /tmp/ccbdlM41.s:538    .text:0000000000000314 .L0 
     /tmp/ccbdlM41.s:540    .text:0000000000000314 .L0 
     /tmp/ccbdlM41.s:541    .text:0000000000000314 .L0 
     /tmp/ccbdlM41.s:543    .text:0000000000000318 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 68


     /tmp/ccbdlM41.s:547    .text:0000000000000320 .L0 
     /tmp/ccbdlM41.s:549    .text:0000000000000328 .L0 
     /tmp/ccbdlM41.s:550    .text:0000000000000328 .L0 
     /tmp/ccbdlM41.s:552    .text:000000000000032c .L0 
     /tmp/ccbdlM41.s:554    .text:0000000000000330 .L0 
     /tmp/ccbdlM41.s:560    .text:0000000000000330 _Z5emptyP6slab_s
     /tmp/ccbdlM41.s:563    .text:0000000000000330 .L0 
     /tmp/ccbdlM41.s:565    .text:0000000000000330 .L0 
     /tmp/ccbdlM41.s:566    .text:0000000000000334 .L0 
     /tmp/ccbdlM41.s:568    .text:0000000000000338 .L0 
     /tmp/ccbdlM41.s:570    .text:000000000000033c .L0 
     /tmp/ccbdlM41.s:572    .text:000000000000033c .L0 
     /tmp/ccbdlM41.s:573    .text:000000000000033c .L0 
     /tmp/ccbdlM41.s:576    .text:0000000000000340 .L0 
     /tmp/ccbdlM41.s:578    .text:0000000000000348 .L0 
     /tmp/ccbdlM41.s:579    .text:0000000000000348 .L0 
     /tmp/ccbdlM41.s:581    .text:000000000000034c .L0 
     /tmp/ccbdlM41.s:583    .text:0000000000000350 .L0 
     /tmp/ccbdlM41.s:589    .text:0000000000000350 _Z18insertIntoSlabListP6slab_sPS0_
     /tmp/ccbdlM41.s:592    .text:0000000000000350 .L0 
     /tmp/ccbdlM41.s:594    .text:0000000000000350 .L0 
     /tmp/ccbdlM41.s:595    .text:0000000000000354 .L0 
     /tmp/ccbdlM41.s:597    .text:0000000000000358 .L0 
     /tmp/ccbdlM41.s:599    .text:000000000000035c .L0 
     /tmp/ccbdlM41.s:601    .text:000000000000035c .L0 
     /tmp/ccbdlM41.s:603    .text:0000000000000360 .L0 
     /tmp/ccbdlM41.s:604    .text:0000000000000360 .L0 
     /tmp/ccbdlM41.s:606    .text:0000000000000364 .L0 
     /tmp/ccbdlM41.s:607    .text:0000000000000364 .L0 
     /tmp/ccbdlM41.s:609    .text:0000000000000368 .L0 
     /tmp/ccbdlM41.s:611    .text:000000000000036c .L0 
     /tmp/ccbdlM41.s:613    .text:0000000000000370 .L0 
     /tmp/ccbdlM41.s:614    .text:0000000000000370 .L0 
     /tmp/ccbdlM41.s:617    .text:0000000000000374 .L0 
     /tmp/ccbdlM41.s:618    .text:0000000000000374 .L0 
     /tmp/ccbdlM41.s:621    .text:0000000000000378 .L0 
     /tmp/ccbdlM41.s:622    .text:000000000000037c .L0 
     /tmp/ccbdlM41.s:623    .text:000000000000037c .L0 
     /tmp/ccbdlM41.s:625    .text:0000000000000380 .L0 
     /tmp/ccbdlM41.s:627    .text:0000000000000384 .L0 
     /tmp/ccbdlM41.s:633    .text:0000000000000384 _Z18removeFromSlabListP6slab_sPS0_
     /tmp/ccbdlM41.s:636    .text:0000000000000384 .L0 
     /tmp/ccbdlM41.s:638    .text:0000000000000384 .L0 
     /tmp/ccbdlM41.s:639    .text:0000000000000388 .L0 
     /tmp/ccbdlM41.s:641    .text:000000000000038c .L0 
     /tmp/ccbdlM41.s:643    .text:0000000000000390 .L0 
     /tmp/ccbdlM41.s:645    .text:0000000000000390 .L0 
     /tmp/ccbdlM41.s:646    .text:0000000000000390 .L0 
     /tmp/ccbdlM41.s:648    .text:0000000000000394 .L0 
     /tmp/ccbdlM41.s:650    .text:0000000000000398 .L0 
     /tmp/ccbdlM41.s:651    .text:0000000000000398 .L0 
     /tmp/ccbdlM41.s:653    .text:000000000000039c .L0 
     /tmp/ccbdlM41.s:655    .text:00000000000003a0 .L0 
     /tmp/ccbdlM41.s:657    .text:00000000000003a4 .L0 
     /tmp/ccbdlM41.s:658    .text:00000000000003a4 .L0 
     /tmp/ccbdlM41.s:660    .text:00000000000003a8 .L0 
     /tmp/ccbdlM41.s:663    .text:00000000000003ac .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 69


     /tmp/ccbdlM41.s:664    .text:00000000000003ac .L0 
     /tmp/ccbdlM41.s:666    .text:00000000000003b0 .L0 
     /tmp/ccbdlM41.s:669    .text:00000000000003b4 .L0 
     /tmp/ccbdlM41.s:670    .text:00000000000003b8 .L0 
     /tmp/ccbdlM41.s:671    .text:00000000000003b8 .L0 
     /tmp/ccbdlM41.s:672    .text:00000000000003b8 .L0 
     /tmp/ccbdlM41.s:674    .text:00000000000003bc .L0 
     /tmp/ccbdlM41.s:677    .text:00000000000003c0 .L0 
     /tmp/ccbdlM41.s:679    .text:00000000000003c0 .L0 
     /tmp/ccbdlM41.s:680    .text:00000000000003c0 .L0 
     /tmp/ccbdlM41.s:682    .text:00000000000003c4 .L0 
     /tmp/ccbdlM41.s:684    .text:00000000000003c8 .L0 
     /tmp/ccbdlM41.s:685    .text:00000000000003c8 .L0 
     /tmp/ccbdlM41.s:688    .text:00000000000003cc .L0 
     /tmp/ccbdlM41.s:689    .text:00000000000003cc .L0 
     /tmp/ccbdlM41.s:691    .text:00000000000003d0 .L0 
     /tmp/ccbdlM41.s:693    .text:00000000000003d4 .L0 
     /tmp/ccbdlM41.s:694    .text:00000000000003d4 .L0 
     /tmp/ccbdlM41.s:696    .text:00000000000003d8 .L0 
     /tmp/ccbdlM41.s:698    .text:00000000000003e0 .L0 
     /tmp/ccbdlM41.s:704    .text:00000000000003e0 _Z16putPartialToFullP12kmem_cache_s
     /tmp/ccbdlM41.s:707    .text:00000000000003e0 .L0 
     /tmp/ccbdlM41.s:709    .text:00000000000003e0 .L0 
     /tmp/ccbdlM41.s:710    .text:00000000000003e4 .L0 
     /tmp/ccbdlM41.s:715    .text:00000000000003f4 .L0 
     /tmp/ccbdlM41.s:716    .text:00000000000003f4 .L0 
     /tmp/ccbdlM41.s:717    .text:00000000000003f4 .L0 
     /tmp/ccbdlM41.s:718    .text:00000000000003f4 .L0 
     /tmp/ccbdlM41.s:720    .text:00000000000003f8 .L0 
     /tmp/ccbdlM41.s:723    .text:00000000000003fc .L0 
     /tmp/ccbdlM41.s:724    .text:00000000000003fc .L0 
     /tmp/ccbdlM41.s:727    .text:0000000000000400 .L0 
     /tmp/ccbdlM41.s:728    .text:0000000000000400 .L0 
     /tmp/ccbdlM41.s:734    .text:0000000000000410 .L0 
     /tmp/ccbdlM41.s:735    .text:0000000000000410 .L0 
     /tmp/ccbdlM41.s:740    .text:0000000000000420 .L0 
     /tmp/ccbdlM41.s:741    .text:0000000000000424 .L0 
     /tmp/ccbdlM41.s:743    .text:0000000000000428 .L0 
     /tmp/ccbdlM41.s:744    .text:0000000000000428 .L0 
     /tmp/ccbdlM41.s:746    .text:000000000000042c .L0 
     /tmp/ccbdlM41.s:749    .text:0000000000000430 .L0 
     /tmp/ccbdlM41.s:752    .text:0000000000000434 .L0 
     /tmp/ccbdlM41.s:754    .text:0000000000000438 .L0 
     /tmp/ccbdlM41.s:760    .text:0000000000000438 _Z17putEmptyToPartialP12kmem_cache_s
     /tmp/ccbdlM41.s:763    .text:0000000000000438 .L0 
     /tmp/ccbdlM41.s:765    .text:0000000000000438 .L0 
     /tmp/ccbdlM41.s:766    .text:000000000000043c .L0 
     /tmp/ccbdlM41.s:771    .text:000000000000044c .L0 
     /tmp/ccbdlM41.s:772    .text:000000000000044c .L0 
     /tmp/ccbdlM41.s:773    .text:000000000000044c .L0 
     /tmp/ccbdlM41.s:774    .text:000000000000044c .L0 
     /tmp/ccbdlM41.s:776    .text:0000000000000450 .L0 
     /tmp/ccbdlM41.s:779    .text:0000000000000454 .L0 
     /tmp/ccbdlM41.s:780    .text:0000000000000454 .L0 
     /tmp/ccbdlM41.s:783    .text:0000000000000458 .L0 
     /tmp/ccbdlM41.s:784    .text:0000000000000458 .L0 
     /tmp/ccbdlM41.s:790    .text:0000000000000468 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 70


     /tmp/ccbdlM41.s:791    .text:0000000000000468 .L0 
     /tmp/ccbdlM41.s:796    .text:0000000000000478 .L0 
     /tmp/ccbdlM41.s:797    .text:000000000000047c .L0 
     /tmp/ccbdlM41.s:799    .text:0000000000000480 .L0 
     /tmp/ccbdlM41.s:800    .text:0000000000000480 .L0 
     /tmp/ccbdlM41.s:802    .text:0000000000000484 .L0 
     /tmp/ccbdlM41.s:805    .text:0000000000000488 .L0 
     /tmp/ccbdlM41.s:808    .text:000000000000048c .L0 
     /tmp/ccbdlM41.s:810    .text:0000000000000490 .L0 
     /tmp/ccbdlM41.s:816    .text:0000000000000490 _Z14removeFullSlabP12kmem_cache_sP6slab_s
     /tmp/ccbdlM41.s:819    .text:0000000000000490 .L0 
     /tmp/ccbdlM41.s:821    .text:0000000000000490 .L0 
     /tmp/ccbdlM41.s:822    .text:0000000000000494 .L0 
     /tmp/ccbdlM41.s:827    .text:00000000000004a4 .L0 
     /tmp/ccbdlM41.s:828    .text:00000000000004a4 .L0 
     /tmp/ccbdlM41.s:829    .text:00000000000004a4 .L0 
     /tmp/ccbdlM41.s:830    .text:00000000000004a4 .L0 
     /tmp/ccbdlM41.s:832    .text:00000000000004a8 .L0 
     /tmp/ccbdlM41.s:836    .text:00000000000004b0 .L0 
     /tmp/ccbdlM41.s:837    .text:00000000000004b0 .L0 
     /tmp/ccbdlM41.s:844    .text:00000000000004c0 .L0 
     /tmp/ccbdlM41.s:845    .text:00000000000004c0 .L0 
     /tmp/ccbdlM41.s:850    .text:00000000000004d0 .L0 
     /tmp/ccbdlM41.s:851    .text:00000000000004d4 .L0 
     /tmp/ccbdlM41.s:853    .text:00000000000004d8 .L0 
     /tmp/ccbdlM41.s:854    .text:00000000000004d8 .L0 
     /tmp/ccbdlM41.s:856    .text:00000000000004dc .L0 
     /tmp/ccbdlM41.s:859    .text:00000000000004e0 .L0 
     /tmp/ccbdlM41.s:862    .text:00000000000004e4 .L0 
     /tmp/ccbdlM41.s:864    .text:00000000000004e8 .L0 
     /tmp/ccbdlM41.s:870    .text:00000000000004e8 _Z17removePartialSlabP12kmem_cache_sP6slab_s
     /tmp/ccbdlM41.s:873    .text:00000000000004e8 .L0 
     /tmp/ccbdlM41.s:875    .text:00000000000004e8 .L0 
     /tmp/ccbdlM41.s:876    .text:00000000000004ec .L0 
     /tmp/ccbdlM41.s:881    .text:00000000000004fc .L0 
     /tmp/ccbdlM41.s:882    .text:00000000000004fc .L0 
     /tmp/ccbdlM41.s:883    .text:00000000000004fc .L0 
     /tmp/ccbdlM41.s:884    .text:00000000000004fc .L0 
     /tmp/ccbdlM41.s:886    .text:0000000000000500 .L0 
     /tmp/ccbdlM41.s:890    .text:0000000000000508 .L0 
     /tmp/ccbdlM41.s:891    .text:0000000000000508 .L0 
     /tmp/ccbdlM41.s:898    .text:0000000000000518 .L0 
     /tmp/ccbdlM41.s:899    .text:0000000000000518 .L0 
     /tmp/ccbdlM41.s:904    .text:0000000000000528 .L0 
     /tmp/ccbdlM41.s:905    .text:000000000000052c .L0 
     /tmp/ccbdlM41.s:907    .text:0000000000000530 .L0 
     /tmp/ccbdlM41.s:908    .text:0000000000000530 .L0 
     /tmp/ccbdlM41.s:910    .text:0000000000000534 .L0 
     /tmp/ccbdlM41.s:913    .text:0000000000000538 .L0 
     /tmp/ccbdlM41.s:916    .text:000000000000053c .L0 
     /tmp/ccbdlM41.s:918    .text:0000000000000540 .L0 
     /tmp/ccbdlM41.s:924    .text:0000000000000540 _Z12allocateSlabP12kmem_cache_s
     /tmp/ccbdlM41.s:927    .text:0000000000000540 .L0 
     /tmp/ccbdlM41.s:929    .text:0000000000000540 .L0 
     /tmp/ccbdlM41.s:930    .text:0000000000000544 .L0 
     /tmp/ccbdlM41.s:936    .text:0000000000000558 .L0 
     /tmp/ccbdlM41.s:937    .text:0000000000000558 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 71


     /tmp/ccbdlM41.s:938    .text:0000000000000558 .L0 
     /tmp/ccbdlM41.s:939    .text:0000000000000558 .L0 
     /tmp/ccbdlM41.s:940    .text:0000000000000558 .L0 
     /tmp/ccbdlM41.s:942    .text:000000000000055c .L0 
     /tmp/ccbdlM41.s:945    .text:0000000000000560 .L0 
     /tmp/ccbdlM41.s:946    .text:0000000000000560 .L0 
     /tmp/ccbdlM41.s:953    .text:0000000000000578 .L0 
     /tmp/ccbdlM41.s:956    .text:0000000000000580 .L0 
     /tmp/ccbdlM41.s:957    .text:0000000000000580 .L0 
     /tmp/ccbdlM41.s:959    .text:0000000000000584 .L0 
     /tmp/ccbdlM41.s:961    .text:0000000000000588 .L0 
     /tmp/ccbdlM41.s:963    .text:000000000000058c .L0 
     /tmp/ccbdlM41.s:964    .text:000000000000058c .L0 
     /tmp/ccbdlM41.s:968    .text:0000000000000590 .L0 
     /tmp/ccbdlM41.s:969    .text:0000000000000590 .L0 
     /tmp/ccbdlM41.s:971    .text:0000000000000594 .L0 
     /tmp/ccbdlM41.s:972    .text:0000000000000594 .L0 
     /tmp/ccbdlM41.s:974    .text:0000000000000598 .L0 
     /tmp/ccbdlM41.s:975    .text:0000000000000598 .L0 
     /tmp/ccbdlM41.s:977    .text:000000000000059c .L0 
     /tmp/ccbdlM41.s:978    .text:000000000000059c .L0 
     /tmp/ccbdlM41.s:980    .text:00000000000005a0 .L0 
     /tmp/ccbdlM41.s:981    .text:00000000000005a0 .L0 
     /tmp/ccbdlM41.s:983    .text:00000000000005a4 .L0 
     /tmp/ccbdlM41.s:986    .text:00000000000005a8 .L0 
     /tmp/ccbdlM41.s:987    .text:00000000000005a8 .L0 
     /tmp/ccbdlM41.s:990    .text:00000000000005ac .L0 
     /tmp/ccbdlM41.s:992    .text:00000000000005b0 .L0 
     /tmp/ccbdlM41.s:995    .text:00000000000005b4 .L0 
     /tmp/ccbdlM41.s:999    .text:00000000000005b8 .L0 
     /tmp/ccbdlM41.s:1000   .text:00000000000005b8 .L0 
     /tmp/ccbdlM41.s:1004   .text:00000000000005bc .L0 
     /tmp/ccbdlM41.s:1005   .text:00000000000005bc .L0 
     /tmp/ccbdlM41.s:1007   .text:00000000000005c0 .L0 
     /tmp/ccbdlM41.s:1009   .text:00000000000005c4 .L0 
     /tmp/ccbdlM41.s:1011   .text:00000000000005c8 .L0 
     /tmp/ccbdlM41.s:1012   .text:00000000000005c8 .L0 
     /tmp/ccbdlM41.s:1015   .text:00000000000005d0 .L0 
     /tmp/ccbdlM41.s:1022   .text:00000000000005d8 .L0 
     /tmp/ccbdlM41.s:1023   .text:00000000000005d8 .L0 
     /tmp/ccbdlM41.s:1025   .text:00000000000005dc .L0 
     /tmp/ccbdlM41.s:1028   .text:00000000000005e0 .L0 
     /tmp/ccbdlM41.s:1032   .text:00000000000005e4 .L0 
     /tmp/ccbdlM41.s:1033   .text:00000000000005e4 .L0 
     /tmp/ccbdlM41.s:1035   .text:00000000000005e8 .L0 
     /tmp/ccbdlM41.s:1037   .text:00000000000005ec .L0 
     /tmp/ccbdlM41.s:1038   .text:00000000000005ec .L0 
     /tmp/ccbdlM41.s:1040   .text:00000000000005f0 .L0 
     /tmp/ccbdlM41.s:1042   .text:00000000000005f4 .L0 
     /tmp/ccbdlM41.s:1044   .text:00000000000005f8 .L0 
     /tmp/ccbdlM41.s:1046   .text:00000000000005fc .L0 
     /tmp/ccbdlM41.s:1048   .text:0000000000000600 .L0 
     /tmp/ccbdlM41.s:1052   .text:0000000000000608 .L0 
     /tmp/ccbdlM41.s:1060   .text:0000000000000610 .L0 
     /tmp/ccbdlM41.s:1061   .text:0000000000000614 .L0 
     /tmp/ccbdlM41.s:1063   .text:0000000000000618 .L0 
     /tmp/ccbdlM41.s:1064   .text:0000000000000618 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 72


     /tmp/ccbdlM41.s:1066   .text:000000000000061c .L0 
     /tmp/ccbdlM41.s:1068   .text:0000000000000620 .L0 
     /tmp/ccbdlM41.s:1070   .text:0000000000000624 .L0 
     /tmp/ccbdlM41.s:1073   .text:0000000000000628 .L0 
     /tmp/ccbdlM41.s:1075   .text:000000000000062c .L0 
     /tmp/ccbdlM41.s:1081   .text:000000000000062c _Z18getOptimalSlabSizem
     /tmp/ccbdlM41.s:1084   .text:000000000000062c .L0 
     /tmp/ccbdlM41.s:1086   .text:000000000000062c .L0 
     /tmp/ccbdlM41.s:1087   .text:0000000000000630 .L0 
     /tmp/ccbdlM41.s:1089   .text:0000000000000634 .L0 
     /tmp/ccbdlM41.s:1091   .text:0000000000000638 .L0 
     /tmp/ccbdlM41.s:1094   .text:0000000000000638 .L0 
     /tmp/ccbdlM41.s:1095   .text:0000000000000638 .L0 
     /tmp/ccbdlM41.s:1099   .text:000000000000063c .L0 
     /tmp/ccbdlM41.s:1100   .text:000000000000063c .L0 
     /tmp/ccbdlM41.s:1101   .text:000000000000063c .L0 
     /tmp/ccbdlM41.s:1103   .text:0000000000000640 .L0 
     /tmp/ccbdlM41.s:1105   .text:0000000000000644 .L0 
     /tmp/ccbdlM41.s:1106   .text:0000000000000644 .L0 
     /tmp/ccbdlM41.s:1109   .text:0000000000000648 .L0 
     /tmp/ccbdlM41.s:1112   .text:000000000000064c .L0 
     /tmp/ccbdlM41.s:1113   .text:000000000000064c .L0 
     /tmp/ccbdlM41.s:1115   .text:0000000000000650 .L0 
     /tmp/ccbdlM41.s:1118   .text:0000000000000654 .L0 
     /tmp/ccbdlM41.s:1119   .text:0000000000000654 .L0 
     /tmp/ccbdlM41.s:1121   .text:0000000000000654 .L0 
     /tmp/ccbdlM41.s:1122   .text:0000000000000654 .L0 
     /tmp/ccbdlM41.s:1127   .text:000000000000065c .L0 
     /tmp/ccbdlM41.s:1131   .text:0000000000000660 .L0 
     /tmp/ccbdlM41.s:1135   .text:0000000000000668 .L0 
     /tmp/ccbdlM41.s:1136   .text:0000000000000668 .L0 
     /tmp/ccbdlM41.s:1139   .text:000000000000066c .L0 
     /tmp/ccbdlM41.s:1140   .text:000000000000066c .L0 
     /tmp/ccbdlM41.s:1142   .text:0000000000000670 .L0 
     /tmp/ccbdlM41.s:1145   .text:0000000000000674 .L0 
     /tmp/ccbdlM41.s:1146   .text:0000000000000674 .L0 
     /tmp/ccbdlM41.s:1149   .text:0000000000000678 .L0 
     /tmp/ccbdlM41.s:1151   .text:000000000000067c .L0 
     /tmp/ccbdlM41.s:1154   .text:0000000000000684 .L0 
     /tmp/ccbdlM41.s:1157   .text:0000000000000688 .L0 
     /tmp/ccbdlM41.s:1165   .text:0000000000000690 .L0 
     /tmp/ccbdlM41.s:1166   .text:0000000000000690 .L0 
     /tmp/ccbdlM41.s:1169   .text:0000000000000698 .L0 
     /tmp/ccbdlM41.s:1170   .text:0000000000000698 .L0 
     /tmp/ccbdlM41.s:1172   .text:000000000000069c .L0 
     /tmp/ccbdlM41.s:1174   .text:00000000000006a0 .L0 
     /tmp/ccbdlM41.s:1180   .text:00000000000006a0 _Z8findSlabP12kmem_cache_sPKv
     /tmp/ccbdlM41.s:1183   .text:00000000000006a0 .L0 
     /tmp/ccbdlM41.s:1185   .text:00000000000006a0 .L0 
     /tmp/ccbdlM41.s:1186   .text:00000000000006a4 .L0 
     /tmp/ccbdlM41.s:1188   .text:00000000000006a8 .L0 
     /tmp/ccbdlM41.s:1190   .text:00000000000006ac .L0 
     /tmp/ccbdlM41.s:1193   .text:00000000000006b0 .L0 
     /tmp/ccbdlM41.s:1195   .text:00000000000006b4 .L0 
     /tmp/ccbdlM41.s:1197   .text:00000000000006b8 .L0 
     /tmp/ccbdlM41.s:1198   .text:00000000000006b8 .L0 
     /tmp/ccbdlM41.s:1205   .text:00000000000006c0 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 73


     /tmp/ccbdlM41.s:1206   .text:00000000000006c0 .L0 
     /tmp/ccbdlM41.s:1211   .text:00000000000006c4 .L0 
     /tmp/ccbdlM41.s:1212   .text:00000000000006c4 .L0 
     /tmp/ccbdlM41.s:1215   .text:00000000000006c8 .L0 
     /tmp/ccbdlM41.s:1216   .text:00000000000006c8 .L0 
     /tmp/ccbdlM41.s:1218   .text:00000000000006cc .L0 
     /tmp/ccbdlM41.s:1220   .text:00000000000006d0 .L0 
     /tmp/ccbdlM41.s:1222   .text:00000000000006d4 .L0 
     /tmp/ccbdlM41.s:1224   .text:00000000000006d8 .L0 
     /tmp/ccbdlM41.s:1226   .text:00000000000006dc .L0 
     /tmp/ccbdlM41.s:1229   .text:00000000000006e0 .L0 
     /tmp/ccbdlM41.s:1231   .text:00000000000006e4 .L0 
     /tmp/ccbdlM41.s:1236   .text:00000000000006e8 .L0 
     /tmp/ccbdlM41.s:1237   .text:00000000000006ec .L0 
     /tmp/ccbdlM41.s:1238   .text:00000000000006ec .L0 
     /tmp/ccbdlM41.s:1239   .text:00000000000006ec .L0 
     /tmp/ccbdlM41.s:1241   .text:00000000000006f0 .L0 
     /tmp/ccbdlM41.s:1245   .text:00000000000006f4 .L0 
     /tmp/ccbdlM41.s:1247   .text:00000000000006f4 .L0 
     /tmp/ccbdlM41.s:1248   .text:00000000000006f4 .L0 
     /tmp/ccbdlM41.s:1255   .text:00000000000006fc .L0 
     /tmp/ccbdlM41.s:1256   .text:00000000000006fc .L0 
     /tmp/ccbdlM41.s:1261   .text:0000000000000700 .L0 
     /tmp/ccbdlM41.s:1262   .text:0000000000000700 .L0 
     /tmp/ccbdlM41.s:1265   .text:0000000000000704 .L0 
     /tmp/ccbdlM41.s:1266   .text:0000000000000704 .L0 
     /tmp/ccbdlM41.s:1268   .text:0000000000000708 .L0 
     /tmp/ccbdlM41.s:1270   .text:000000000000070c .L0 
     /tmp/ccbdlM41.s:1272   .text:0000000000000710 .L0 
     /tmp/ccbdlM41.s:1274   .text:0000000000000714 .L0 
     /tmp/ccbdlM41.s:1276   .text:0000000000000718 .L0 
     /tmp/ccbdlM41.s:1279   .text:000000000000071c .L0 
     /tmp/ccbdlM41.s:1281   .text:0000000000000720 .L0 
     /tmp/ccbdlM41.s:1287   .text:0000000000000728 .L0 
     /tmp/ccbdlM41.s:1290   .text:0000000000000730 .L0 
     /tmp/ccbdlM41.s:1296   .text:0000000000000730 _Z19resetAllocatedIndexP6slab_si
     /tmp/ccbdlM41.s:1299   .text:0000000000000730 .L0 
     /tmp/ccbdlM41.s:1301   .text:0000000000000730 .L0 
     /tmp/ccbdlM41.s:1302   .text:0000000000000734 .L0 
     /tmp/ccbdlM41.s:1304   .text:0000000000000738 .L0 
     /tmp/ccbdlM41.s:1306   .text:000000000000073c .L0 
     /tmp/ccbdlM41.s:1308   .text:000000000000073c .L0 
     /tmp/ccbdlM41.s:1309   .text:000000000000073c .L0 
     /tmp/ccbdlM41.s:1315   .text:000000000000074c .L0 
     /tmp/ccbdlM41.s:1318   .text:0000000000000750 .L0 
     /tmp/ccbdlM41.s:1320   .text:0000000000000754 .L0 
     /tmp/ccbdlM41.s:1323   .text:000000000000075c .L0 
     /tmp/ccbdlM41.s:1326   .text:0000000000000764 .L0 
     /tmp/ccbdlM41.s:1329   .text:000000000000076c .L0 
     /tmp/ccbdlM41.s:1331   .text:0000000000000770 .L0 
     /tmp/ccbdlM41.s:1332   .text:0000000000000774 .L0 
     /tmp/ccbdlM41.s:1333   .text:0000000000000774 .L0 
     /tmp/ccbdlM41.s:1335   .text:0000000000000778 .L0 
     /tmp/ccbdlM41.s:1337   .text:000000000000077c .L0 
     /tmp/ccbdlM41.s:1357   .text:000000000000077c _Z13printSlabInfoP6slab_s
     /tmp/ccbdlM41.s:1360   .text:000000000000077c .L0 
     /tmp/ccbdlM41.s:1362   .text:000000000000077c .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 74


     /tmp/ccbdlM41.s:1363   .text:0000000000000780 .L0 
     /tmp/ccbdlM41.s:1367   .text:000000000000078c .L0 
     /tmp/ccbdlM41.s:1368   .text:000000000000078c .L0 
     /tmp/ccbdlM41.s:1369   .text:000000000000078c .L0 
     /tmp/ccbdlM41.s:1371   .text:0000000000000790 .L0 
     /tmp/ccbdlM41.s:1374   .text:0000000000000794 .L0 
     /tmp/ccbdlM41.s:1375   .text:0000000000000794 .L0 
     /tmp/ccbdlM41.s:1380   .text:00000000000007a4 .L0 
     /tmp/ccbdlM41.s:1381   .text:00000000000007a4 .L0 
     /tmp/ccbdlM41.s:1387   .text:00000000000007bc .L0 
     /tmp/ccbdlM41.s:1388   .text:00000000000007bc .L0 
     /tmp/ccbdlM41.s:1394   .text:00000000000007d4 .L0 
     /tmp/ccbdlM41.s:1395   .text:00000000000007d4 .L0 
     /tmp/ccbdlM41.s:1401   .text:00000000000007ec .L0 
     /tmp/ccbdlM41.s:1402   .text:00000000000007f0 .L0 
     /tmp/ccbdlM41.s:1404   .text:00000000000007f4 .L0 
     /tmp/ccbdlM41.s:1405   .text:00000000000007f4 .L0 
     /tmp/ccbdlM41.s:1407   .text:00000000000007f8 .L0 
     /tmp/ccbdlM41.s:1410   .text:00000000000007fc .L0 
     /tmp/ccbdlM41.s:1412   .text:0000000000000800 .L0 
     /tmp/ccbdlM41.s:1418   .text:0000000000000800 _Z16free_slab_objectP6slab_sPKv
     /tmp/ccbdlM41.s:1421   .text:0000000000000800 .L0 
     /tmp/ccbdlM41.s:1423   .text:0000000000000800 .L0 
     /tmp/ccbdlM41.s:1424   .text:0000000000000800 .L0 
     /tmp/ccbdlM41.s:1426   .text:0000000000000804 .L0 
     /tmp/ccbdlM41.s:1427   .text:0000000000000808 .L0 
     /tmp/ccbdlM41.s:1434   .text:0000000000000820 .L0 
     /tmp/ccbdlM41.s:1435   .text:0000000000000820 .L0 
     /tmp/ccbdlM41.s:1436   .text:0000000000000820 .L0 
     /tmp/ccbdlM41.s:1437   .text:0000000000000820 .L0 
     /tmp/ccbdlM41.s:1438   .text:0000000000000820 .L0 
     /tmp/ccbdlM41.s:1439   .text:0000000000000820 .L0 
     /tmp/ccbdlM41.s:1441   .text:0000000000000824 .L0 
     /tmp/ccbdlM41.s:1445   .text:000000000000082c .L0 
     /tmp/ccbdlM41.s:1447   .text:0000000000000830 .L0 
     /tmp/ccbdlM41.s:1448   .text:0000000000000830 .L0 
     /tmp/ccbdlM41.s:1451   .text:0000000000000838 .L0 
     /tmp/ccbdlM41.s:1453   .text:000000000000083c .L0 
     /tmp/ccbdlM41.s:1455   .text:0000000000000840 .L0 
     /tmp/ccbdlM41.s:1457   .text:0000000000000844 .L0 
     /tmp/ccbdlM41.s:1460   .text:0000000000000848 .L0 
     /tmp/ccbdlM41.s:1461   .text:0000000000000848 .L0 
     /tmp/ccbdlM41.s:1463   .text:000000000000084c .L0 
     /tmp/ccbdlM41.s:1466   .text:0000000000000854 .L0 
     /tmp/ccbdlM41.s:1468   .text:0000000000000858 .L0 
     /tmp/ccbdlM41.s:1469   .text:0000000000000858 .L0 
     /tmp/ccbdlM41.s:1474   .text:0000000000000864 .L0 
     /tmp/ccbdlM41.s:1477   .text:0000000000000868 .L0 
     /tmp/ccbdlM41.s:1478   .text:0000000000000868 .L0 
     /tmp/ccbdlM41.s:1479   .text:0000000000000868 .L0 
     /tmp/ccbdlM41.s:1481   .text:000000000000086c .L0 
     /tmp/ccbdlM41.s:1483   .text:0000000000000870 .L0 
     /tmp/ccbdlM41.s:1484   .text:0000000000000870 .L0 
     /tmp/ccbdlM41.s:1489   .text:0000000000000878 .L0 
     /tmp/ccbdlM41.s:1490   .text:0000000000000878 .L0 
     /tmp/ccbdlM41.s:1492   .text:000000000000087c .L0 
     /tmp/ccbdlM41.s:1494   .text:0000000000000880 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 75


     /tmp/ccbdlM41.s:1495   .text:0000000000000880 .L0 
     /tmp/ccbdlM41.s:1500   .text:0000000000000888 .L0 
     /tmp/ccbdlM41.s:1501   .text:0000000000000888 .L0 
     /tmp/ccbdlM41.s:1506   .text:0000000000000898 .L0 
     /tmp/ccbdlM41.s:1507   .text:0000000000000898 .L0 
     /tmp/ccbdlM41.s:1509   .text:000000000000089c .L0 
     /tmp/ccbdlM41.s:1511   .text:00000000000008a0 .L0 
     /tmp/ccbdlM41.s:1513   .text:00000000000008a4 .L0 
     /tmp/ccbdlM41.s:1516   .text:00000000000008ac .L0 
     /tmp/ccbdlM41.s:1517   .text:00000000000008ac .L0 
     /tmp/ccbdlM41.s:1522   .text:00000000000008b4 .L0 
     /tmp/ccbdlM41.s:1523   .text:00000000000008b8 .L0 
     /tmp/ccbdlM41.s:1524   .text:00000000000008b8 .L0 
     /tmp/ccbdlM41.s:1526   .text:00000000000008bc .L0 
     /tmp/ccbdlM41.s:1527   .text:00000000000008bc .L0 
     /tmp/ccbdlM41.s:1529   .text:00000000000008c0 .L0 
     /tmp/ccbdlM41.s:1532   .text:00000000000008c4 .L0 
     /tmp/ccbdlM41.s:1534   .text:00000000000008c8 .L0 
     /tmp/ccbdlM41.s:1537   .text:00000000000008cc .L0 
     /tmp/ccbdlM41.s:1539   .text:00000000000008d0 .L0 
     /tmp/ccbdlM41.s:1543   .text:00000000000008d4 .L0 
     /tmp/ccbdlM41.s:1545   .text:00000000000008d4 .L0 
     /tmp/ccbdlM41.s:1546   .text:00000000000008d4 .L0 
     /tmp/ccbdlM41.s:1551   .text:00000000000008e4 .L0 
     /tmp/ccbdlM41.s:1552   .text:00000000000008e4 .L0 
     /tmp/ccbdlM41.s:1554   .text:00000000000008e8 .L0 
     /tmp/ccbdlM41.s:1557   .text:00000000000008f0 .L0 
     /tmp/ccbdlM41.s:1558   .text:00000000000008f0 .L0 
     /tmp/ccbdlM41.s:1562   .text:00000000000008fc .L0 
     /tmp/ccbdlM41.s:1564   .text:0000000000000900 .L0 
     /tmp/ccbdlM41.s:1565   .text:0000000000000900 .L0 
     /tmp/ccbdlM41.s:1572   .text:0000000000000914 .L0 
     /tmp/ccbdlM41.s:1573   .text:0000000000000914 .L0 
     /tmp/ccbdlM41.s:1578   .text:0000000000000924 .L0 
     /tmp/ccbdlM41.s:1579   .text:0000000000000924 .L0 
     /tmp/ccbdlM41.s:1581   .text:0000000000000928 .L0 
     /tmp/ccbdlM41.s:1586   .text:0000000000000934 .L0 
     /tmp/ccbdlM41.s:1587   .text:0000000000000934 .L0 
     /tmp/ccbdlM41.s:1588   .text:0000000000000934 .L0 
     /tmp/ccbdlM41.s:1589   .text:0000000000000934 .L0 
     /tmp/ccbdlM41.s:1590   .text:0000000000000934 .L0 
     /tmp/ccbdlM41.s:1591   .text:0000000000000934 .L0 
     /tmp/ccbdlM41.s:1592   .text:0000000000000934 .L0 
     /tmp/ccbdlM41.s:1594   .text:0000000000000938 .L0 
     /tmp/ccbdlM41.s:1600   .text:0000000000000938 _Z9kmem_initPvi
     /tmp/ccbdlM41.s:1603   .text:0000000000000938 .L0 
     /tmp/ccbdlM41.s:1605   .text:0000000000000938 .L0 
     /tmp/ccbdlM41.s:1606   .text:000000000000093c .L0 
     /tmp/ccbdlM41.s:1609   .text:0000000000000944 .L0 
     /tmp/ccbdlM41.s:1610   .text:0000000000000944 .L0 
     /tmp/ccbdlM41.s:1612   .text:0000000000000948 .L0 
     /tmp/ccbdlM41.s:1614   .text:0000000000000948 .L0 
     /tmp/ccbdlM41.s:1615   .text:0000000000000948 .L0 
     /tmp/ccbdlM41.s:1618   .text:0000000000000950 .L0 
     /tmp/ccbdlM41.s:1619   .text:0000000000000950 .L0 
     /tmp/ccbdlM41.s:1622   .text:0000000000000958 .L0 
     /tmp/ccbdlM41.s:1624   .text:0000000000000960 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 76


     /tmp/ccbdlM41.s:1625   .text:0000000000000964 .L0 
     /tmp/ccbdlM41.s:1627   .text:0000000000000968 .L0 
     /tmp/ccbdlM41.s:1628   .text:0000000000000968 .L0 
     /tmp/ccbdlM41.s:1630   .text:000000000000096c .L0 
     /tmp/ccbdlM41.s:1632   .text:0000000000000970 .L0 
     /tmp/ccbdlM41.s:1638   .text:0000000000000970 _Z16kmem_cache_allocP12kmem_cache_s
     /tmp/ccbdlM41.s:1641   .text:0000000000000970 .L0 
     /tmp/ccbdlM41.s:1643   .text:0000000000000970 .L0 
     /tmp/ccbdlM41.s:1644   .text:0000000000000974 .L0 
     /tmp/ccbdlM41.s:1649   .text:0000000000000984 .L0 
     /tmp/ccbdlM41.s:1650   .text:0000000000000984 .L0 
     /tmp/ccbdlM41.s:1651   .text:0000000000000984 .L0 
     /tmp/ccbdlM41.s:1652   .text:0000000000000984 .L0 
     /tmp/ccbdlM41.s:1654   .text:0000000000000988 .L0 
     /tmp/ccbdlM41.s:1657   .text:000000000000098c .L0 
     /tmp/ccbdlM41.s:1660   .text:0000000000000990 .L0 
     /tmp/ccbdlM41.s:1661   .text:0000000000000990 .L0 
     /tmp/ccbdlM41.s:1664   .text:0000000000000994 .L0 
     /tmp/ccbdlM41.s:1669   .text:0000000000000998 .L0 
     /tmp/ccbdlM41.s:1670   .text:0000000000000998 .L0 
     /tmp/ccbdlM41.s:1672   .text:000000000000099c .L0 
     /tmp/ccbdlM41.s:1675   .text:00000000000009a0 .L0 
     /tmp/ccbdlM41.s:1676   .text:00000000000009a0 .L0 
     /tmp/ccbdlM41.s:1681   .text:00000000000009ac .L0 
     /tmp/ccbdlM41.s:1682   .text:00000000000009ac .L0 
     /tmp/ccbdlM41.s:1687   .text:00000000000009b8 .L0 
     /tmp/ccbdlM41.s:1689   .text:00000000000009bc .L0 
     /tmp/ccbdlM41.s:1690   .text:00000000000009bc .L0 
     /tmp/ccbdlM41.s:1694   .text:00000000000009c8 .L0 
     /tmp/ccbdlM41.s:1695   .text:00000000000009c8 .L0 
     /tmp/ccbdlM41.s:1699   .text:00000000000009d4 .L0 
     /tmp/ccbdlM41.s:1701   .text:00000000000009d8 .L0 
     /tmp/ccbdlM41.s:1702   .text:00000000000009d8 .L0 
     /tmp/ccbdlM41.s:1706   .text:00000000000009e4 .L0 
     /tmp/ccbdlM41.s:1707   .text:00000000000009e4 .L0 
     /tmp/ccbdlM41.s:1714   .text:00000000000009e8 .L0 
     /tmp/ccbdlM41.s:1715   .text:00000000000009e8 .L0 
     /tmp/ccbdlM41.s:1720   .text:00000000000009f4 .L0 
     /tmp/ccbdlM41.s:1721   .text:00000000000009f4 .L0 
     /tmp/ccbdlM41.s:1726   .text:0000000000000a00 .L0 
     /tmp/ccbdlM41.s:1732   .text:0000000000000a04 .L0 
     /tmp/ccbdlM41.s:1734   .text:0000000000000a0c .L0 
     /tmp/ccbdlM41.s:1735   .text:0000000000000a0c .L0 
     /tmp/ccbdlM41.s:1737   .text:0000000000000a10 .L0 
     /tmp/ccbdlM41.s:1738   .text:0000000000000a10 .L0 
     /tmp/ccbdlM41.s:1740   .text:0000000000000a14 .L0 
     /tmp/ccbdlM41.s:1743   .text:0000000000000a18 .L0 
     /tmp/ccbdlM41.s:1745   .text:0000000000000a1c .L0 
     /tmp/ccbdlM41.s:1749   .text:0000000000000a20 .L0 
     /tmp/ccbdlM41.s:1753   .text:0000000000000a20 .L0 
     /tmp/ccbdlM41.s:1754   .text:0000000000000a20 .L0 
     /tmp/ccbdlM41.s:1758   .text:0000000000000a2c .L0 
     /tmp/ccbdlM41.s:1759   .text:0000000000000a2c .L0 
     /tmp/ccbdlM41.s:1766   .text:0000000000000a30 .L0 
     /tmp/ccbdlM41.s:1767   .text:0000000000000a30 .L0 
     /tmp/ccbdlM41.s:1771   .text:0000000000000a3c .L0 
     /tmp/ccbdlM41.s:1772   .text:0000000000000a3c .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 77


     /tmp/ccbdlM41.s:1774   .text:0000000000000a40 .L0 
     /tmp/ccbdlM41.s:1776   .text:0000000000000a44 .L0 
     /tmp/ccbdlM41.s:1777   .text:0000000000000a44 .L0 
     /tmp/ccbdlM41.s:1783   .text:0000000000000a54 .L0 
     /tmp/ccbdlM41.s:1784   .text:0000000000000a54 .L0 
     /tmp/ccbdlM41.s:1789   .text:0000000000000a60 .L0 
     /tmp/ccbdlM41.s:1791   .text:0000000000000a64 .L0 
     /tmp/ccbdlM41.s:1792   .text:0000000000000a64 .L0 
     /tmp/ccbdlM41.s:1796   .text:0000000000000a70 .L0 
     /tmp/ccbdlM41.s:1797   .text:0000000000000a70 .L0 
     /tmp/ccbdlM41.s:1801   .text:0000000000000a7c .L0 
     /tmp/ccbdlM41.s:1803   .text:0000000000000a80 .L0 
     /tmp/ccbdlM41.s:1804   .text:0000000000000a80 .L0 
     /tmp/ccbdlM41.s:1808   .text:0000000000000a8c .L0 
     /tmp/ccbdlM41.s:1809   .text:0000000000000a8c .L0 
     /tmp/ccbdlM41.s:1813   .text:0000000000000a90 .L0 
     /tmp/ccbdlM41.s:1814   .text:0000000000000a90 .L0 
     /tmp/ccbdlM41.s:1818   .text:0000000000000a9c .L0 
     /tmp/ccbdlM41.s:1819   .text:0000000000000a9c .L0 
     /tmp/ccbdlM41.s:1825   .text:0000000000000aa0 .L0 
     /tmp/ccbdlM41.s:1827   .text:0000000000000aa8 .L0 
     /tmp/ccbdlM41.s:1833   .text:0000000000000aa8 _Z17kmem_cache_createPKcmPFvPvES3_
     /tmp/ccbdlM41.s:1836   .text:0000000000000aa8 .L0 
     /tmp/ccbdlM41.s:1838   .text:0000000000000aa8 .L0 
     /tmp/ccbdlM41.s:1839   .text:0000000000000aac .L0 
     /tmp/ccbdlM41.s:1847   .text:0000000000000ac8 .L0 
     /tmp/ccbdlM41.s:1848   .text:0000000000000ac8 .L0 
     /tmp/ccbdlM41.s:1849   .text:0000000000000ac8 .L0 
     /tmp/ccbdlM41.s:1850   .text:0000000000000ac8 .L0 
     /tmp/ccbdlM41.s:1851   .text:0000000000000ac8 .L0 
     /tmp/ccbdlM41.s:1852   .text:0000000000000ac8 .L0 
     /tmp/ccbdlM41.s:1853   .text:0000000000000ac8 .L0 
     /tmp/ccbdlM41.s:1855   .text:0000000000000acc .L0 
     /tmp/ccbdlM41.s:1861   .text:0000000000000adc .L0 
     /tmp/ccbdlM41.s:1862   .text:0000000000000adc .L0 
     /tmp/ccbdlM41.s:1870   .text:0000000000000af4 .L0 
     /tmp/ccbdlM41.s:1872   .text:0000000000000af8 .L0 
     /tmp/ccbdlM41.s:1873   .text:0000000000000af8 .L0 
     /tmp/ccbdlM41.s:1886   .text:0000000000000b24 .L0 
     /tmp/ccbdlM41.s:1887   .text:0000000000000b24 .L0 
     /tmp/ccbdlM41.s:1889   .text:0000000000000b2c .L0 
     /tmp/ccbdlM41.s:1891   .text:0000000000000b30 .L0 
     /tmp/ccbdlM41.s:1892   .text:0000000000000b30 .L0 
     /tmp/ccbdlM41.s:1894   .text:0000000000000b34 .L0 
     /tmp/ccbdlM41.s:1897   .text:0000000000000b38 .L0 
     /tmp/ccbdlM41.s:1900   .text:0000000000000b3c .L0 
     /tmp/ccbdlM41.s:1903   .text:0000000000000b40 .L0 
     /tmp/ccbdlM41.s:1906   .text:0000000000000b44 .L0 
     /tmp/ccbdlM41.s:1909   .text:0000000000000b48 .L0 
     /tmp/ccbdlM41.s:1911   .text:0000000000000b4c .L0 
     /tmp/ccbdlM41.s:1917   .text:0000000000000b4c _Z15kmem_cache_freeP12kmem_cache_sPv
     /tmp/ccbdlM41.s:1920   .text:0000000000000b4c .L0 
     /tmp/ccbdlM41.s:1922   .text:0000000000000b4c .L0 
     /tmp/ccbdlM41.s:1923   .text:0000000000000b4c .L0 
     /tmp/ccbdlM41.s:1925   .text:0000000000000b50 .L0 
     /tmp/ccbdlM41.s:1926   .text:0000000000000b54 .L0 
     /tmp/ccbdlM41.s:1930   .text:0000000000000b60 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 78


     /tmp/ccbdlM41.s:1931   .text:0000000000000b60 .L0 
     /tmp/ccbdlM41.s:1932   .text:0000000000000b60 .L0 
     /tmp/ccbdlM41.s:1934   .text:0000000000000b64 .L0 
     /tmp/ccbdlM41.s:1937   .text:0000000000000b68 .L0 
     /tmp/ccbdlM41.s:1939   .text:0000000000000b6c .L0 
     /tmp/ccbdlM41.s:1940   .text:0000000000000b6c .L0 
     /tmp/ccbdlM41.s:1943   .text:0000000000000b74 .L0 
     /tmp/ccbdlM41.s:1945   .text:0000000000000b78 .L0 
     /tmp/ccbdlM41.s:1946   .text:0000000000000b78 .L0 
     /tmp/ccbdlM41.s:1951   .text:0000000000000b84 .L0 
     /tmp/ccbdlM41.s:1952   .text:0000000000000b88 .L0 
     /tmp/ccbdlM41.s:1954   .text:0000000000000b8c .L0 
     /tmp/ccbdlM41.s:1955   .text:0000000000000b8c .L0 
     /tmp/ccbdlM41.s:1957   .text:0000000000000b90 .L0 
     /tmp/ccbdlM41.s:1960   .text:0000000000000b94 .L0 
     /tmp/ccbdlM41.s:1965   .text:0000000000000b9c .L0 
     /tmp/ccbdlM41.s:2003   .text:0000000000000b9c _Z15kmem_cache_infoP12kmem_cache_s
     /tmp/ccbdlM41.s:2006   .text:0000000000000b9c .L0 
     /tmp/ccbdlM41.s:2008   .text:0000000000000b9c .L0 
     /tmp/ccbdlM41.s:2009   .text:0000000000000b9c .L0 
     /tmp/ccbdlM41.s:2011   .text:0000000000000ba0 .L0 
     /tmp/ccbdlM41.s:2012   .text:0000000000000ba4 .L0 
     /tmp/ccbdlM41.s:2017   .text:0000000000000bb4 .L0 
     /tmp/ccbdlM41.s:2018   .text:0000000000000bb4 .L0 
     /tmp/ccbdlM41.s:2019   .text:0000000000000bb4 .L0 
     /tmp/ccbdlM41.s:2020   .text:0000000000000bb4 .L0 
     /tmp/ccbdlM41.s:2022   .text:0000000000000bb8 .L0 
     /tmp/ccbdlM41.s:2025   .text:0000000000000bbc .L0 
     /tmp/ccbdlM41.s:2026   .text:0000000000000bbc .L0 
     /tmp/ccbdlM41.s:2031   .text:0000000000000bcc .L0 
     /tmp/ccbdlM41.s:2032   .text:0000000000000bcc .L0 
     /tmp/ccbdlM41.s:2036   .text:0000000000000bdc .L0 
     /tmp/ccbdlM41.s:2037   .text:0000000000000bdc .L0 
     /tmp/ccbdlM41.s:2041   .text:0000000000000bec .L0 
     /tmp/ccbdlM41.s:2042   .text:0000000000000bec .L0 
     /tmp/ccbdlM41.s:2046   .text:0000000000000bf8 .L0 
     /tmp/ccbdlM41.s:2047   .text:0000000000000bf8 .L0 
     /tmp/ccbdlM41.s:2051   .text:0000000000000c08 .L0 
     /tmp/ccbdlM41.s:2052   .text:0000000000000c08 .L0 
     /tmp/ccbdlM41.s:2058   .text:0000000000000c20 .L0 
     /tmp/ccbdlM41.s:2059   .text:0000000000000c20 .L0 
     /tmp/ccbdlM41.s:2065   .text:0000000000000c38 .L0 
     /tmp/ccbdlM41.s:2066   .text:0000000000000c38 .L0 
     /tmp/ccbdlM41.s:2070   .text:0000000000000c48 .L0 
     /tmp/ccbdlM41.s:2071   .text:0000000000000c48 .L0 
     /tmp/ccbdlM41.s:2075   .text:0000000000000c58 .L0 
     /tmp/ccbdlM41.s:2076   .text:0000000000000c58 .L0 
     /tmp/ccbdlM41.s:2080   .text:0000000000000c5c .L0 
     /tmp/ccbdlM41.s:2081   .text:0000000000000c5c .L0 
     /tmp/ccbdlM41.s:2083   .text:0000000000000c60 .L0 
     /tmp/ccbdlM41.s:2084   .text:0000000000000c60 .L0 
     /tmp/ccbdlM41.s:2088   .text:0000000000000c6c .L0 
     /tmp/ccbdlM41.s:2089   .text:0000000000000c6c .L0 
     /tmp/ccbdlM41.s:2092   .text:0000000000000c70 .L0 
     /tmp/ccbdlM41.s:2095   .text:0000000000000c74 .L0 
     /tmp/ccbdlM41.s:2096   .text:0000000000000c74 .L0 
     /tmp/ccbdlM41.s:2100   .text:0000000000000c84 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 79


     /tmp/ccbdlM41.s:2101   .text:0000000000000c84 .L0 
     /tmp/ccbdlM41.s:2105   .text:0000000000000c88 .L0 
     /tmp/ccbdlM41.s:2106   .text:0000000000000c88 .L0 
     /tmp/ccbdlM41.s:2108   .text:0000000000000c8c .L0 
     /tmp/ccbdlM41.s:2109   .text:0000000000000c8c .L0 
     /tmp/ccbdlM41.s:2113   .text:0000000000000c98 .L0 
     /tmp/ccbdlM41.s:2114   .text:0000000000000c98 .L0 
     /tmp/ccbdlM41.s:2117   .text:0000000000000c9c .L0 
     /tmp/ccbdlM41.s:2120   .text:0000000000000ca0 .L0 
     /tmp/ccbdlM41.s:2121   .text:0000000000000ca0 .L0 
     /tmp/ccbdlM41.s:2125   .text:0000000000000cb0 .L0 
     /tmp/ccbdlM41.s:2126   .text:0000000000000cb0 .L0 
     /tmp/ccbdlM41.s:2130   .text:0000000000000cb4 .L0 
     /tmp/ccbdlM41.s:2131   .text:0000000000000cb4 .L0 
     /tmp/ccbdlM41.s:2133   .text:0000000000000cb8 .L0 
     /tmp/ccbdlM41.s:2134   .text:0000000000000cb8 .L0 
     /tmp/ccbdlM41.s:2138   .text:0000000000000cc4 .L0 
     /tmp/ccbdlM41.s:2139   .text:0000000000000cc4 .L0 
     /tmp/ccbdlM41.s:2142   .text:0000000000000cc8 .L0 
     /tmp/ccbdlM41.s:2145   .text:0000000000000ccc .L0 
     /tmp/ccbdlM41.s:2146   .text:0000000000000ccc .L0 
     /tmp/ccbdlM41.s:2150   .text:0000000000000cdc .L0 
     /tmp/ccbdlM41.s:2151   .text:0000000000000ce0 .L0 
     /tmp/ccbdlM41.s:2153   .text:0000000000000ce4 .L0 
     /tmp/ccbdlM41.s:2154   .text:0000000000000ce4 .L0 
     /tmp/ccbdlM41.s:2156   .text:0000000000000ce8 .L0 
     /tmp/ccbdlM41.s:2159   .text:0000000000000cec .L0 
     /tmp/ccbdlM41.s:2162   .text:0000000000000cf0 .L0 
     /tmp/ccbdlM41.s:2167   .text:0000000000000cf8 .L0 
     /tmp/ccbdlM41.s:2193   .text:0000000000000cf8 _Z22printSlabAllocatorInfov
     /tmp/ccbdlM41.s:2196   .text:0000000000000cf8 .L0 
     /tmp/ccbdlM41.s:2197   .text:0000000000000cf8 .L0 
     /tmp/ccbdlM41.s:2198   .text:0000000000000cfc .L0 
     /tmp/ccbdlM41.s:2202   .text:0000000000000d08 .L0 
     /tmp/ccbdlM41.s:2203   .text:0000000000000d08 .L0 
     /tmp/ccbdlM41.s:2204   .text:0000000000000d08 .L0 
     /tmp/ccbdlM41.s:2206   .text:0000000000000d0c .L0 
     /tmp/ccbdlM41.s:2208   .text:0000000000000d0c .L0 
     /tmp/ccbdlM41.s:2209   .text:0000000000000d0c .L0 
     /tmp/ccbdlM41.s:2213   .text:0000000000000d1c .L0 
     /tmp/ccbdlM41.s:2214   .text:0000000000000d1c .L0 
     /tmp/ccbdlM41.s:2218   .text:0000000000000d2c .L0 
     /tmp/ccbdlM41.s:2219   .text:0000000000000d2c .L0 
     /tmp/ccbdlM41.s:2222   .text:0000000000000d38 .L0 
     /tmp/ccbdlM41.s:2228   .text:0000000000000d50 .L0 
     /tmp/ccbdlM41.s:2229   .text:0000000000000d50 .L0 
     /tmp/ccbdlM41.s:2235   .text:0000000000000d68 .L0 
     /tmp/ccbdlM41.s:2236   .text:0000000000000d68 .L0 
     /tmp/ccbdlM41.s:2240   .text:0000000000000d78 .L0 
     /tmp/ccbdlM41.s:2241   .text:0000000000000d78 .L0 
     /tmp/ccbdlM41.s:2243   .text:0000000000000d7c .L0 
     /tmp/ccbdlM41.s:2247   .text:0000000000000d88 .L0 
     /tmp/ccbdlM41.s:2248   .text:0000000000000d88 .L0 
     /tmp/ccbdlM41.s:2253   .text:0000000000000d98 .L0 
     /tmp/ccbdlM41.s:2254   .text:0000000000000d98 .L0 
     /tmp/ccbdlM41.s:2259   .text:0000000000000da0 .L0 
     /tmp/ccbdlM41.s:2260   .text:0000000000000da0 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 80


     /tmp/ccbdlM41.s:2264   .text:0000000000000da8 .L0 
     /tmp/ccbdlM41.s:2268   .text:0000000000000dac .L0 
     /tmp/ccbdlM41.s:2271   .text:0000000000000db4 .L0 
     /tmp/ccbdlM41.s:2272   .text:0000000000000db4 .L0 
     /tmp/ccbdlM41.s:2277   .text:0000000000000dc8 .L0 
     /tmp/ccbdlM41.s:2282   .text:0000000000000dd0 .L0 
     /tmp/ccbdlM41.s:2283   .text:0000000000000dd0 .L0 
     /tmp/ccbdlM41.s:2287   .text:0000000000000de0 .L0 
     /tmp/ccbdlM41.s:2288   .text:0000000000000de4 .L0 
     /tmp/ccbdlM41.s:2290   .text:0000000000000de8 .L0 
     /tmp/ccbdlM41.s:2291   .text:0000000000000de8 .L0 
     /tmp/ccbdlM41.s:2293   .text:0000000000000dec .L0 
     /tmp/ccbdlM41.s:2296   .text:0000000000000df0 .L0 
     /tmp/ccbdlM41.s:2298   .text:0000000000000df4 .L0 
     /tmp/ccbdlM41.s:2309   .text:0000000000000df4 _Z7kmallocm
     /tmp/ccbdlM41.s:2312   .text:0000000000000df4 .L0 
     /tmp/ccbdlM41.s:2314   .text:0000000000000df4 .L0 
     /tmp/ccbdlM41.s:2315   .text:0000000000000df8 .L0 
     /tmp/ccbdlM41.s:2321   .text:0000000000000e0c .L0 
     /tmp/ccbdlM41.s:2322   .text:0000000000000e0c .L0 
     /tmp/ccbdlM41.s:2323   .text:0000000000000e0c .L0 
     /tmp/ccbdlM41.s:2324   .text:0000000000000e0c .L0 
     /tmp/ccbdlM41.s:2325   .text:0000000000000e0c .L0 
     /tmp/ccbdlM41.s:2327   .text:0000000000000e10 .L0 
     /tmp/ccbdlM41.s:2329   .text:0000000000000e10 .L0 
     /tmp/ccbdlM41.s:2330   .text:0000000000000e10 .L0 
     /tmp/ccbdlM41.s:2333   .text:0000000000000e18 .L0 
     /tmp/ccbdlM41.s:2336   .text:0000000000000e20 .L0 
     /tmp/ccbdlM41.s:2339   .text:0000000000000e28 .L0 
     /tmp/ccbdlM41.s:2343   .text:0000000000000e30 .L0 
     /tmp/ccbdlM41.s:2347   .text:0000000000000e34 .L0 
     /tmp/ccbdlM41.s:2348   .text:0000000000000e34 .L0 
     /tmp/ccbdlM41.s:2352   .text:0000000000000e3c .L0 
     /tmp/ccbdlM41.s:2353   .text:0000000000000e3c .L0 
     /tmp/ccbdlM41.s:2356   .text:0000000000000e40 .L0 
     /tmp/ccbdlM41.s:2357   .text:0000000000000e40 .L0 
     /tmp/ccbdlM41.s:2362   .text:0000000000000e54 .L0 
     /tmp/ccbdlM41.s:2365   .text:0000000000000e58 .L0 
     /tmp/ccbdlM41.s:2366   .text:0000000000000e58 .L0 
     /tmp/ccbdlM41.s:2377   .text:0000000000000e78 .L0 
     /tmp/ccbdlM41.s:2379   .text:0000000000000e80 .L0 
     /tmp/ccbdlM41.s:2380   .text:0000000000000e80 .L0 
     /tmp/ccbdlM41.s:2382   .text:0000000000000e84 .L0 
     /tmp/ccbdlM41.s:2383   .text:0000000000000e84 .L0 
     /tmp/ccbdlM41.s:2385   .text:0000000000000e88 .L0 
     /tmp/ccbdlM41.s:2387   .text:0000000000000e8c .L0 
     /tmp/ccbdlM41.s:2389   .text:0000000000000e90 .L0 
     /tmp/ccbdlM41.s:2391   .text:0000000000000e94 .L0 
     /tmp/ccbdlM41.s:2395   .text:0000000000000e98 .L0 
     /tmp/ccbdlM41.s:2397   .text:0000000000000e98 .L0 
     /tmp/ccbdlM41.s:2398   .text:0000000000000e98 .L0 
     /tmp/ccbdlM41.s:2402   .text:0000000000000ea4 .L0 
     /tmp/ccbdlM41.s:2406   .text:0000000000000eb0 .L0 
     /tmp/ccbdlM41.s:2407   .text:0000000000000eb0 .L0 
     /tmp/ccbdlM41.s:2411   .text:0000000000000ec0 .L0 
     /tmp/ccbdlM41.s:2413   .text:0000000000000ec4 .L0 
     /tmp/ccbdlM41.s:2414   .text:0000000000000ec4 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 81


     /tmp/ccbdlM41.s:2426   .text:0000000000000ef8 .L0 
     /tmp/ccbdlM41.s:2432   .text:0000000000000ef8 _Z5kfreePKv
     /tmp/ccbdlM41.s:2435   .text:0000000000000ef8 .L0 
     /tmp/ccbdlM41.s:2437   .text:0000000000000ef8 .L0 
     /tmp/ccbdlM41.s:2438   .text:0000000000000ef8 .L0 
     /tmp/ccbdlM41.s:2440   .text:0000000000000efc .L0 
     /tmp/ccbdlM41.s:2441   .text:0000000000000f00 .L0 
     /tmp/ccbdlM41.s:2446   .text:0000000000000f10 .L0 
     /tmp/ccbdlM41.s:2447   .text:0000000000000f10 .L0 
     /tmp/ccbdlM41.s:2448   .text:0000000000000f10 .L0 
     /tmp/ccbdlM41.s:2449   .text:0000000000000f10 .L0 
     /tmp/ccbdlM41.s:2451   .text:0000000000000f14 .L0 
     /tmp/ccbdlM41.s:2455   .text:0000000000000f18 .L0 
     /tmp/ccbdlM41.s:2458   .text:0000000000000f1c .L0 
     /tmp/ccbdlM41.s:2463   .text:0000000000000f20 .L0 
     /tmp/ccbdlM41.s:2466   .text:0000000000000f28 .L0 
     /tmp/ccbdlM41.s:2467   .text:0000000000000f28 .L0 
     /tmp/ccbdlM41.s:2476   .text:0000000000000f48 .L0 
     /tmp/ccbdlM41.s:2478   .text:0000000000000f4c .L0 
     /tmp/ccbdlM41.s:2484   .text:0000000000000f54 .L0 
     /tmp/ccbdlM41.s:2486   .text:0000000000000f58 .L0 
     /tmp/ccbdlM41.s:2487   .text:0000000000000f58 .L0 
     /tmp/ccbdlM41.s:2492   .text:0000000000000f64 .L0 
     /tmp/ccbdlM41.s:2493   .text:0000000000000f68 .L0 
     /tmp/ccbdlM41.s:2495   .text:0000000000000f6c .L0 
     /tmp/ccbdlM41.s:2496   .text:0000000000000f6c .L0 
     /tmp/ccbdlM41.s:2498   .text:0000000000000f70 .L0 
     /tmp/ccbdlM41.s:2501   .text:0000000000000f74 .L0 
     /tmp/ccbdlM41.s:2504   .text:0000000000000f78 .L0 
     /tmp/ccbdlM41.s:2509   .text:0000000000000f80 .L0 
     /tmp/ccbdlM41.s:2515   .text:0000000000000f80 _Z18kmem_cache_destroyP12kmem_cache_s
     /tmp/ccbdlM41.s:2518   .text:0000000000000f80 .L0 
     /tmp/ccbdlM41.s:2520   .text:0000000000000f80 .L0 
     /tmp/ccbdlM41.s:2521   .text:0000000000000f84 .L0 
     /tmp/ccbdlM41.s:2525   .text:0000000000000f90 .L0 
     /tmp/ccbdlM41.s:2526   .text:0000000000000f90 .L0 
     /tmp/ccbdlM41.s:2527   .text:0000000000000f90 .L0 
     /tmp/ccbdlM41.s:2529   .text:0000000000000f94 .L0 
     /tmp/ccbdlM41.s:2532   .text:0000000000000f98 .L0 
     /tmp/ccbdlM41.s:2533   .text:0000000000000f98 .L0 
     /tmp/ccbdlM41.s:2538   .text:0000000000000fa4 .L0 
     /tmp/ccbdlM41.s:2539   .text:0000000000000fa4 .L0 
     /tmp/ccbdlM41.s:2543   .text:0000000000000fb0 .L0 
     /tmp/ccbdlM41.s:2544   .text:0000000000000fb0 .L0 
     /tmp/ccbdlM41.s:2548   .text:0000000000000fbc .L0 
     /tmp/ccbdlM41.s:2549   .text:0000000000000fbc .L0 
     /tmp/ccbdlM41.s:2555   .text:0000000000000fd4 .L0 
     /tmp/ccbdlM41.s:2556   .text:0000000000000fd8 .L0 
     /tmp/ccbdlM41.s:2558   .text:0000000000000fdc .L0 
     /tmp/ccbdlM41.s:2559   .text:0000000000000fdc .L0 
     /tmp/ccbdlM41.s:2561   .text:0000000000000fe0 .L0 
     /tmp/ccbdlM41.s:2564   .text:0000000000000fe4 .L0 
     /tmp/ccbdlM41.s:2566   .text:0000000000000fe8 .L0 
     /tmp/ccbdlM41.s:2572   .text:0000000000000fe8 _Z17kmem_cache_shrinkP12kmem_cache_s
     /tmp/ccbdlM41.s:2575   .text:0000000000000fe8 .L0 
     /tmp/ccbdlM41.s:2577   .text:0000000000000fe8 .L0 
     /tmp/ccbdlM41.s:2578   .text:0000000000000fe8 .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 82


     /tmp/ccbdlM41.s:2580   .text:0000000000000fec .L0 
     /tmp/ccbdlM41.s:2581   .text:0000000000000ff0 .L0 
     /tmp/ccbdlM41.s:2584   .text:0000000000000ff8 .L0 
     /tmp/ccbdlM41.s:2585   .text:0000000000000ff8 .L0 
     /tmp/ccbdlM41.s:2587   .text:0000000000000ffc .L0 
     /tmp/ccbdlM41.s:2589   .text:0000000000000ffc .L0 
     /tmp/ccbdlM41.s:2590   .text:0000000000000ffc .L0 
     /tmp/ccbdlM41.s:2595   .text:0000000000001008 .L0 
     /tmp/ccbdlM41.s:2596   .text:0000000000001008 .L0 
     /tmp/ccbdlM41.s:2597   .text:000000000000100c .L0 
     /tmp/ccbdlM41.s:2599   .text:0000000000001010 .L0 
     /tmp/ccbdlM41.s:2600   .text:0000000000001010 .L0 
     /tmp/ccbdlM41.s:2602   .text:0000000000001014 .L0 
     /tmp/ccbdlM41.s:2607   .text:0000000000001018 .L0 
     /tmp/ccbdlM41.s:2610   .text:000000000000101c .L0 
     /tmp/ccbdlM41.s:2611   .text:0000000000001020 .L0 
     /tmp/ccbdlM41.s:2625   .text:0000000000001020 _Z16kmem_cache_errorP12kmem_cache_s
     /tmp/ccbdlM41.s:2628   .text:0000000000001020 .L0 
     /tmp/ccbdlM41.s:2630   .text:0000000000001020 .L0 
     /tmp/ccbdlM41.s:2631   .text:0000000000001020 .L0 
     /tmp/ccbdlM41.s:2633   .text:0000000000001024 .L0 
     /tmp/ccbdlM41.s:2634   .text:0000000000001028 .L0 
     /tmp/ccbdlM41.s:2638   .text:0000000000001034 .L0 
     /tmp/ccbdlM41.s:2639   .text:0000000000001034 .L0 
     /tmp/ccbdlM41.s:2640   .text:0000000000001034 .L0 
     /tmp/ccbdlM41.s:2642   .text:0000000000001038 .L0 
     /tmp/ccbdlM41.s:2645   .text:000000000000103c .L0 
     /tmp/ccbdlM41.s:2646   .text:000000000000103c .L0 
     /tmp/ccbdlM41.s:2648   .text:0000000000001040 .L0 
     /tmp/ccbdlM41.s:2650   .text:0000000000001044 .L0 
     /tmp/ccbdlM41.s:2654   .text:0000000000001048 .L0 
     /tmp/ccbdlM41.s:2655   .text:0000000000001048 .L0 
     /tmp/ccbdlM41.s:2657   .text:000000000000104c .L0 
     /tmp/ccbdlM41.s:2659   .text:0000000000001050 .L0 
     /tmp/ccbdlM41.s:2662   .text:0000000000001054 .L0 
     /tmp/ccbdlM41.s:2663   .text:0000000000001054 .L0 
     /tmp/ccbdlM41.s:2665   .text:0000000000001058 .L0 
     /tmp/ccbdlM41.s:2666   .text:000000000000105c .L0 
     /tmp/ccbdlM41.s:2667   .text:000000000000105c .L0 
     /tmp/ccbdlM41.s:2669   .text:0000000000001060 .L0 
     /tmp/ccbdlM41.s:2670   .text:0000000000001060 .L0 
     /tmp/ccbdlM41.s:2672   .text:0000000000001064 .L0 
     /tmp/ccbdlM41.s:2675   .text:0000000000001068 .L0 
     /tmp/ccbdlM41.s:2679   .text:000000000000106c .L0 
     /tmp/ccbdlM41.s:2681   .text:000000000000106c .L0 
     /tmp/ccbdlM41.s:2682   .text:000000000000106c .L0 
     /tmp/ccbdlM41.s:2688   .text:0000000000001080 .L0 
     /tmp/ccbdlM41.s:2689   .text:0000000000001080 .L0 
     /tmp/ccbdlM41.s:2695   .text:0000000000001094 .L0 
     /tmp/ccbdlM41.s:2696   .text:0000000000001094 .L0 
     /tmp/ccbdlM41.s:2697   .text:0000000000001094 .L0 
     /tmp/ccbdlM41.s:2698   .text:0000000000001094 .L0 
     /tmp/ccbdlM41.s:2700   .text:0000000000001094 .L0 
     /tmp/ccbdlM41.s:2703   .text:0000000000001098 .L0 
     /tmp/ccbdlM41.s:2704   .text:000000000000109c .L0 
     /tmp/ccbdlM41.s:2709   .bss:0000000000000000 .LANCHOR0
     /tmp/ccbdlM41.s:2712   .bss:0000000000000000 _ZL13slabAllocator
GAS LISTING /tmp/ccbdlM41.s 			page 83


     /tmp/ccbdlM41.s:2722   .text:000000000000109c .L0 
     /tmp/ccbdlM41.s:110    .text:000000000000007c .L0 
     /tmp/ccbdlM41.s:241    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccbdlM41.s:297    .text:000000000000019c .L0 
     /tmp/ccbdlM41.s:947    .text:0000000000000564 .L0 
     /tmp/ccbdlM41.s:1342   .rodata.str1.8:0000000000000010 .LC1
     /tmp/ccbdlM41.s:1375   .text:0000000000000794 .L0 
     /tmp/ccbdlM41.s:1345   .rodata.str1.8:0000000000000028 .LC2
     /tmp/ccbdlM41.s:1383   .text:00000000000007ac .L0 
     /tmp/ccbdlM41.s:1348   .rodata.str1.8:0000000000000038 .LC3
     /tmp/ccbdlM41.s:1390   .text:00000000000007c4 .L0 
     /tmp/ccbdlM41.s:1351   .rodata.str1.8:0000000000000058 .LC4
     /tmp/ccbdlM41.s:1397   .text:00000000000007dc .L0 
     /tmp/ccbdlM41.s:1622   .text:0000000000000958 .L0 
     /tmp/ccbdlM41.s:1862   .text:0000000000000adc .L0 
     /tmp/ccbdlM41.s:1970   .rodata.str1.8:0000000000000070 .LC5
     /tmp/ccbdlM41.s:2026   .text:0000000000000bbc .L0 
     /tmp/ccbdlM41.s:1973   .rodata.str1.8:0000000000000080 .LC6
     /tmp/ccbdlM41.s:2032   .text:0000000000000bcc .L0 
     /tmp/ccbdlM41.s:1976   .rodata.str1.8:00000000000000b8 .LC7
     /tmp/ccbdlM41.s:2037   .text:0000000000000bdc .L0 
     /tmp/ccbdlM41.s:1979   .rodata.str1.8:00000000000000c8 .LC8
     /tmp/ccbdlM41.s:2047   .text:0000000000000bf8 .L0 
     /tmp/ccbdlM41.s:1982   .rodata.str1.8:00000000000000d0 .LC9
     /tmp/ccbdlM41.s:2054   .text:0000000000000c10 .L0 
     /tmp/ccbdlM41.s:1985   .rodata.str1.8:00000000000000f0 .LC10
     /tmp/ccbdlM41.s:2061   .text:0000000000000c28 .L0 
     /tmp/ccbdlM41.s:1988   .rodata.str1.8:0000000000000110 .LC11
     /tmp/ccbdlM41.s:2066   .text:0000000000000c38 .L0 
     /tmp/ccbdlM41.s:1991   .rodata.str1.8:0000000000000130 .LC12
     /tmp/ccbdlM41.s:2071   .text:0000000000000c48 .L0 
     /tmp/ccbdlM41.s:1994   .rodata.str1.8:0000000000000140 .LC13
     /tmp/ccbdlM41.s:2096   .text:0000000000000c74 .L0 
     /tmp/ccbdlM41.s:1997   .rodata.str1.8:0000000000000150 .LC14
     /tmp/ccbdlM41.s:2121   .text:0000000000000ca0 .L0 
     /tmp/ccbdlM41.s:2146   .text:0000000000000ccc .L0 
     /tmp/ccbdlM41.s:2172   .rodata.str1.8:0000000000000160 .LC15
     /tmp/ccbdlM41.s:2209   .text:0000000000000d0c .L0 
     /tmp/ccbdlM41.s:2175   .rodata.str1.8:0000000000000170 .LC16
     /tmp/ccbdlM41.s:2214   .text:0000000000000d1c .L0 
     /tmp/ccbdlM41.s:2219   .text:0000000000000d2c .L0 
     /tmp/ccbdlM41.s:2178   .rodata.str1.8:00000000000001c0 .LC17
     /tmp/ccbdlM41.s:2224   .text:0000000000000d40 .L0 
     /tmp/ccbdlM41.s:2181   .rodata.str1.8:00000000000001e0 .LC18
     /tmp/ccbdlM41.s:2231   .text:0000000000000d58 .L0 
     /tmp/ccbdlM41.s:2184   .rodata.str1.8:00000000000001f8 .LC19
     /tmp/ccbdlM41.s:2236   .text:0000000000000d68 .L0 
     /tmp/ccbdlM41.s:2187   .rodata.str1.8:0000000000000210 .LC20
     /tmp/ccbdlM41.s:2248   .text:0000000000000d88 .L0 
     /tmp/ccbdlM41.s:2273   .text:0000000000000db8 .L0 
     /tmp/ccbdlM41.s:2283   .text:0000000000000dd0 .L0 
     /tmp/ccbdlM41.s:2357   .text:0000000000000e40 .L0 
     /tmp/ccbdlM41.s:2367   .text:0000000000000e5c .L0 
     /tmp/ccbdlM41.s:2407   .text:0000000000000eb0 .L0 
     /tmp/ccbdlM41.s:2303   .rodata.str1.8:0000000000000228 .LC21
     /tmp/ccbdlM41.s:2421   .text:0000000000000ee0 .L0 
     /tmp/ccbdlM41.s:2468   .text:0000000000000f2c .L0 
GAS LISTING /tmp/ccbdlM41.s 			page 84


     /tmp/ccbdlM41.s:2550   .text:0000000000000fc0 .L0 
     /tmp/ccbdlM41.s:2616   .rodata.str1.8:0000000000000240 .LC22
     /tmp/ccbdlM41.s:2682   .text:000000000000106c .L0 
     /tmp/ccbdlM41.s:2619   .rodata.str1.8:0000000000000250 .LC23
     /tmp/ccbdlM41.s:2689   .text:0000000000001080 .L0 
     /tmp/ccbdlM41.s:41     .text:0000000000000024 .L2
     /tmp/ccbdlM41.s:21     .text:000000000000000c .L3
     /tmp/ccbdlM41.s:125    .text:000000000000009c .L8
     /tmp/ccbdlM41.s:129    .text:00000000000000a0 .L6
     /tmp/ccbdlM41.s:95     .text:000000000000006c .L7
     /tmp/ccbdlM41.s:285    .text:0000000000000184 .L14
     /tmp/ccbdlM41.s:276    .text:0000000000000174 .L16
     /tmp/ccbdlM41.s:517    .text:0000000000000300 .L26
     /tmp/ccbdlM41.s:472    .text:00000000000002b8 .L27
     /tmp/ccbdlM41.s:455    .text:00000000000002a0 .L29
     /tmp/ccbdlM41.s:436    .text:0000000000000278 .L25
     /tmp/ccbdlM41.s:479    .text:00000000000002c0 .L23
     /tmp/ccbdlM41.s:497    .text:00000000000002e0 .L21
     /tmp/ccbdlM41.s:619    .text:0000000000000378 .L34
     /tmp/ccbdlM41.s:615    .text:0000000000000374 .L36
     /tmp/ccbdlM41.s:676    .text:00000000000003c0 .L44
     /tmp/ccbdlM41.s:661    .text:00000000000003ac .L42
     /tmp/ccbdlM41.s:686    .text:00000000000003cc .L40
     /tmp/ccbdlM41.s:667    .text:00000000000003b4 .L38
     /tmp/ccbdlM41.s:1056   .text:0000000000000610 .L53
     /tmp/ccbdlM41.s:966    .text:0000000000000590 .L55
     /tmp/ccbdlM41.s:1018   .text:00000000000005d8 .L56
     /tmp/ccbdlM41.s:1002   .text:00000000000005bc .L57
     /tmp/ccbdlM41.s:1030   .text:00000000000005e4 .L58
     /tmp/ccbdlM41.s:1110   .text:000000000000064c .L61
     /tmp/ccbdlM41.s:1097   .text:000000000000063c .L62
     /tmp/ccbdlM41.s:1129   .text:0000000000000660 .L65
     /tmp/ccbdlM41.s:1161   .text:0000000000000690 .L63
     /tmp/ccbdlM41.s:1125   .text:000000000000065c .L64
     /tmp/ccbdlM41.s:1233   .text:00000000000006e8 .L68
     /tmp/ccbdlM41.s:1284   .text:0000000000000728 .L76
     /tmp/ccbdlM41.s:1208   .text:00000000000006c4 .L72
     /tmp/ccbdlM41.s:1244   .text:00000000000006f4 .L70
     /tmp/ccbdlM41.s:1202   .text:00000000000006c0 .L71
     /tmp/ccbdlM41.s:1258   .text:0000000000000700 .L74
     /tmp/ccbdlM41.s:1252   .text:00000000000006fc .L73
     /tmp/ccbdlM41.s:1585   .text:0000000000000934 .L89
     /tmp/ccbdlM41.s:1520   .text:00000000000008b4 .L82
     /tmp/ccbdlM41.s:1487   .text:0000000000000878 .L84
     /tmp/ccbdlM41.s:1498   .text:0000000000000888 .L85
     /tmp/ccbdlM41.s:1542   .text:00000000000008d4 .L92
     /tmp/ccbdlM41.s:1570   .text:0000000000000914 .L93
     /tmp/ccbdlM41.s:1820   .text:0000000000000aa0 .L104
     /tmp/ccbdlM41.s:1709   .text:00000000000009e8 .L106
     /tmp/ccbdlM41.s:1761   .text:0000000000000a30 .L100
     /tmp/ccbdlM41.s:1728   .text:0000000000000a04 .L96
     /tmp/ccbdlM41.s:1748   .text:0000000000000a20 .L107
     /tmp/ccbdlM41.s:1811   .text:0000000000000a90 .L108
     /tmp/ccbdlM41.s:1885   .text:0000000000000b24 .L109
     /tmp/ccbdlM41.s:1963   .text:0000000000000b98 .L115
     /tmp/ccbdlM41.s:1949   .text:0000000000000b84 .L112
     /tmp/ccbdlM41.s:2165   .text:0000000000000cf4 .L127
GAS LISTING /tmp/ccbdlM41.s 			page 85


     /tmp/ccbdlM41.s:2093   .text:0000000000000c74 .L120
     /tmp/ccbdlM41.s:2078   .text:0000000000000c5c .L121
     /tmp/ccbdlM41.s:2118   .text:0000000000000ca0 .L122
     /tmp/ccbdlM41.s:2103   .text:0000000000000c88 .L123
     /tmp/ccbdlM41.s:2143   .text:0000000000000ccc .L124
     /tmp/ccbdlM41.s:2128   .text:0000000000000cb4 .L125
     /tmp/ccbdlM41.s:2266   .text:0000000000000dac .L133
     /tmp/ccbdlM41.s:2279   .text:0000000000000dd0 .L131
     /tmp/ccbdlM41.s:2257   .text:0000000000000da0 .L135
     /tmp/ccbdlM41.s:2262   .text:0000000000000da8 .L132
     /tmp/ccbdlM41.s:2341   .text:0000000000000e30 .L140
     /tmp/ccbdlM41.s:2345   .text:0000000000000e34 .L137
     /tmp/ccbdlM41.s:2375   .text:0000000000000e78 .L136
     /tmp/ccbdlM41.s:2394   .text:0000000000000e98 .L143
     /tmp/ccbdlM41.s:2363   .text:0000000000000e58 .L139
     /tmp/ccbdlM41.s:2507   .text:0000000000000f7c .L149
     /tmp/ccbdlM41.s:2481   .text:0000000000000f54 .L146
     /tmp/ccbdlM41.s:2460   .text:0000000000000f20 .L147
     /tmp/ccbdlM41.s:2490   .text:0000000000000f64 .L144
     /tmp/ccbdlM41.s:2605   .text:0000000000001018 .L156
     /tmp/ccbdlM41.s:2694   .text:0000000000001094 .L165
     /tmp/ccbdlM41.s:2678   .text:000000000000106c .L170
     /tmp/ccbdlM41.s:2686   .text:0000000000001080 .L171
     /tmp/ccbdlM41.s:2652   .text:0000000000001048 .L163
     /tmp/ccbdlM41.s:2660   .text:0000000000001054 .L164
     /tmp/ccbdlM41.s:6259   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccbdlM41.s:8743   .debug_str:00000000000005c1 .LASF311
     /tmp/ccbdlM41.s:8845   .debug_str:00000000000009d9 .LASF312
     /tmp/ccbdlM41.s:8741   .debug_str:00000000000005a3 .LASF313
     /tmp/ccbdlM41.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccbdlM41.s:2715   .text:000000000000109c .Letext0
     /tmp/ccbdlM41.s:8557   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccbdlM41.s:8779   .debug_str:00000000000007d5 .LASF0
     /tmp/ccbdlM41.s:8809   .debug_str:00000000000008dd .LASF1
     /tmp/ccbdlM41.s:8963   .debug_str:0000000000000e33 .LASF2
     /tmp/ccbdlM41.s:8707   .debug_str:00000000000004af .LASF3
     /tmp/ccbdlM41.s:8979   .debug_str:0000000000000eb2 .LASF4
     /tmp/ccbdlM41.s:8791   .debug_str:0000000000000824 .LASF5
     /tmp/ccbdlM41.s:8579   .debug_str:00000000000000be .LASF6
     /tmp/ccbdlM41.s:8915   .debug_str:0000000000000c7b .LASF7
     /tmp/ccbdlM41.s:8801   .debug_str:000000000000088e .LASF8
     /tmp/ccbdlM41.s:8737   .debug_str:0000000000000589 .LASF9
     /tmp/ccbdlM41.s:8751   .debug_str:00000000000006c4 .LASF10
     /tmp/ccbdlM41.s:8639   .debug_str:00000000000002fb .LASF11
     /tmp/ccbdlM41.s:9029   .debug_str:0000000000001076 .LASF12
     /tmp/ccbdlM41.s:8723   .debug_str:0000000000000516 .LASF13
     /tmp/ccbdlM41.s:8657   .debug_str:0000000000000357 .LASF14
     /tmp/ccbdlM41.s:8637   .debug_str:00000000000002eb .LASF15
     /tmp/ccbdlM41.s:9033   .debug_str:00000000000010ab .LASF16
     /tmp/ccbdlM41.s:8695   .debug_str:000000000000045d .LASF17
     /tmp/ccbdlM41.s:9019   .debug_str:0000000000001007 .LASF18
     /tmp/ccbdlM41.s:8719   .debug_str:00000000000004f8 .LASF19
     /tmp/ccbdlM41.s:8717   .debug_str:00000000000004eb .LASF30
     /tmp/ccbdlM41.s:8739   .debug_str:0000000000000599 .LASF20
     /tmp/ccbdlM41.s:8715   .debug_str:00000000000004df .LASF21
     /tmp/ccbdlM41.s:8865   .debug_str:0000000000000ab7 .LASF22
     /tmp/ccbdlM41.s:8745   .debug_str:0000000000000691 .LASF23
GAS LISTING /tmp/ccbdlM41.s 			page 86


     /tmp/ccbdlM41.s:9011   .debug_str:0000000000000fd2 .LASF24
     /tmp/ccbdlM41.s:9131   .debug_str:00000000000013dc .LASF25
     /tmp/ccbdlM41.s:8843   .debug_str:00000000000009d4 .LASF26
     /tmp/ccbdlM41.s:8777   .debug_str:00000000000007d0 .LASF27
     /tmp/ccbdlM41.s:8787   .debug_str:000000000000080b .LASF28
     /tmp/ccbdlM41.s:9051   .debug_str:00000000000010ff .LASF29
     /tmp/ccbdlM41.s:8919   .debug_str:0000000000000c96 .LASF31
     /tmp/ccbdlM41.s:8641   .debug_str:000000000000030a .LASF32
     /tmp/ccbdlM41.s:8949   .debug_str:0000000000000db1 .LASF33
     /tmp/ccbdlM41.s:9045   .debug_str:00000000000010e8 .LASF34
     /tmp/ccbdlM41.s:8823   .debug_str:000000000000093a .LASF35
     /tmp/ccbdlM41.s:8839   .debug_str:00000000000009bb .LASF36
     /tmp/ccbdlM41.s:8849   .debug_str:0000000000000a05 .LASF37
     /tmp/ccbdlM41.s:9061   .debug_str:000000000000112d .LASF38
     /tmp/ccbdlM41.s:9107   .debug_str:00000000000012f5 .LASF39
     /tmp/ccbdlM41.s:8813   .debug_str:00000000000008fb .LASF40
     /tmp/ccbdlM41.s:8711   .debug_str:00000000000004c3 .LASF41
     /tmp/ccbdlM41.s:9055   .debug_str:000000000000110f .LASF314
     /tmp/ccbdlM41.s:9047   .debug_str:00000000000010ee .LASF42
     /tmp/ccbdlM41.s:9001   .debug_str:0000000000000f6d .LASF43
     /tmp/ccbdlM41.s:8649   .debug_str:000000000000032d .LASF44
     /tmp/ccbdlM41.s:8617   .debug_str:0000000000000212 .LASF45
     /tmp/ccbdlM41.s:8917   .debug_str:0000000000000c8e .LASF46
     /tmp/ccbdlM41.s:8647   .debug_str:0000000000000324 .LASF47
     /tmp/ccbdlM41.s:9043   .debug_str:00000000000010e0 .LASF48
     /tmp/ccbdlM41.s:8769   .debug_str:000000000000078c .LASF49
     /tmp/ccbdlM41.s:8581   .debug_str:00000000000000c5 .LASF55
     /tmp/ccbdlM41.s:9095   .debug_str:0000000000001271 .LASF315
     /tmp/ccbdlM41.s:8899   .debug_str:0000000000000c13 .LASF50
     /tmp/ccbdlM41.s:8807   .debug_str:00000000000008d8 .LASF51
     /tmp/ccbdlM41.s:9169   .debug_str:00000000000014fb .LASF53
     /tmp/ccbdlM41.s:9161   .debug_str:00000000000014c9 .LASF52
     /tmp/ccbdlM41.s:9071   .debug_str:0000000000001195 .LASF54
     /tmp/ccbdlM41.s:8681   .debug_str:0000000000000418 .LASF78
     /tmp/ccbdlM41.s:8593   .debug_str:000000000000013e .LASF80
     /tmp/ccbdlM41.s:9059   .debug_str:0000000000001125 .LASF56
     /tmp/ccbdlM41.s:8989   .debug_str:0000000000000f0c .LASF57
     /tmp/ccbdlM41.s:8817   .debug_str:0000000000000910 .LASF60
     /tmp/ccbdlM41.s:8831   .debug_str:000000000000096a .LASF62
     /tmp/ccbdlM41.s:9177   .debug_str:0000000000001564 .LASF58
     /tmp/ccbdlM41.s:8703   .debug_str:0000000000000496 .LASF59
     /tmp/ccbdlM41.s:8571   .debug_str:000000000000007d .LASF104
     /tmp/ccbdlM41.s:8669   .debug_str:00000000000003cf .LASF106
     /tmp/ccbdlM41.s:8993   .debug_str:0000000000000f29 .LASF61
     /tmp/ccbdlM41.s:8869   .debug_str:0000000000000ac8 .LASF63
     /tmp/ccbdlM41.s:8973   .debug_str:0000000000000e78 .LASF64
     /tmp/ccbdlM41.s:9027   .debug_str:000000000000105a .LASF65
     /tmp/ccbdlM41.s:8871   .debug_str:0000000000000adb .LASF66
     /tmp/ccbdlM41.s:8565   .debug_str:000000000000003f .LASF67
     /tmp/ccbdlM41.s:9151   .debug_str:0000000000001485 .LASF68
     /tmp/ccbdlM41.s:8913   .debug_str:0000000000000c61 .LASF69
     /tmp/ccbdlM41.s:9017   .debug_str:0000000000000ff9 .LASF70
     /tmp/ccbdlM41.s:8931   .debug_str:0000000000000cf0 .LASF71
     /tmp/ccbdlM41.s:8675   .debug_str:00000000000003f6 .LASF72
     /tmp/ccbdlM41.s:8727   .debug_str:000000000000053b .LASF73
     /tmp/ccbdlM41.s:8957   .debug_str:0000000000000e04 .LASF74
     /tmp/ccbdlM41.s:9153   .debug_str:0000000000001494 .LASF75
GAS LISTING /tmp/ccbdlM41.s 			page 87


     /tmp/ccbdlM41.s:9155   .debug_str:00000000000014a3 .LASF76
     /tmp/ccbdlM41.s:8793   .debug_str:0000000000000836 .LASF77
     /tmp/ccbdlM41.s:9013   .debug_str:0000000000000fdc .LASF79
     /tmp/ccbdlM41.s:9167   .debug_str:00000000000014e5 .LASF81
     /tmp/ccbdlM41.s:8755   .debug_str:00000000000006fb .LASF82
     /tmp/ccbdlM41.s:8725   .debug_str:0000000000000525 .LASF83
     /tmp/ccbdlM41.s:8985   .debug_str:0000000000000ee9 .LASF84
     /tmp/ccbdlM41.s:8781   .debug_str:00000000000007e2 .LASF85
     /tmp/ccbdlM41.s:8879   .debug_str:0000000000000b15 .LASF86
     /tmp/ccbdlM41.s:8663   .debug_str:00000000000003a7 .LASF87
     /tmp/ccbdlM41.s:8939   .debug_str:0000000000000d42 .LASF88
     /tmp/ccbdlM41.s:9189   .debug_str:00000000000015d0 .LASF89
     /tmp/ccbdlM41.s:8885   .debug_str:0000000000000b5e .LASF90
     /tmp/ccbdlM41.s:8971   .debug_str:0000000000000e65 .LASF91
     /tmp/ccbdlM41.s:8995   .debug_str:0000000000000f32 .LASF92
     /tmp/ccbdlM41.s:9117   .debug_str:0000000000001337 .LASF93
     /tmp/ccbdlM41.s:8857   .debug_str:0000000000000a66 .LASF94
     /tmp/ccbdlM41.s:9099   .debug_str:00000000000012b3 .LASF95
     /tmp/ccbdlM41.s:9025   .debug_str:000000000000103a .LASF96
     /tmp/ccbdlM41.s:8907   .debug_str:0000000000000c35 .LASF97
     /tmp/ccbdlM41.s:8889   .debug_str:0000000000000bab .LASF98
     /tmp/ccbdlM41.s:8689   .debug_str:000000000000043b .LASF99
     /tmp/ccbdlM41.s:8783   .debug_str:00000000000007f6 .LASF100
     /tmp/ccbdlM41.s:8861   .debug_str:0000000000000aa3 .LASF101
     /tmp/ccbdlM41.s:9075   .debug_str:00000000000011b0 .LASF102
     /tmp/ccbdlM41.s:8731   .debug_str:0000000000000551 .LASF103
     /tmp/ccbdlM41.s:9159   .debug_str:00000000000014bb .LASF105
     /tmp/ccbdlM41.s:8603   .debug_str:00000000000001a0 .LASF107
     /tmp/ccbdlM41.s:8713   .debug_str:00000000000004ca .LASF108
     /tmp/ccbdlM41.s:8631   .debug_str:00000000000002ac .LASF109
     /tmp/ccbdlM41.s:9149   .debug_str:000000000000147e .LASF110
     /tmp/ccbdlM41.s:8627   .debug_str:0000000000000276 .LASF111
     /tmp/ccbdlM41.s:8569   .debug_str:0000000000000078 .LASF112
     /tmp/ccbdlM41.s:9113   .debug_str:0000000000001326 .LASF113
     /tmp/ccbdlM41.s:8837   .debug_str:00000000000009b3 .LASF114
     /tmp/ccbdlM41.s:8687   .debug_str:0000000000000435 .LASF115
     /tmp/ccbdlM41.s:9093   .debug_str:0000000000001269 .LASF116
     /tmp/ccbdlM41.s:8615   .debug_str:0000000000000201 .LASF117
     /tmp/ccbdlM41.s:9081   .debug_str:00000000000011db .LASF118
     /tmp/ccbdlM41.s:8945   .debug_str:0000000000000d81 .LASF119
     /tmp/ccbdlM41.s:8747   .debug_str:000000000000069f .LASF120
     /tmp/ccbdlM41.s:8967   .debug_str:0000000000000e4d .LASF121
     /tmp/ccbdlM41.s:8943   .debug_str:0000000000000d6d .LASF122
     /tmp/ccbdlM41.s:8683   .debug_str:0000000000000421 .LASF123
     /tmp/ccbdlM41.s:9009   .debug_str:0000000000000fbb .LASF124
     /tmp/ccbdlM41.s:9037   .debug_str:00000000000010ca .LASF125
     /tmp/ccbdlM41.s:8875   .debug_str:0000000000000af3 .LASF126
     /tmp/ccbdlM41.s:8561   .debug_str:000000000000000f .LASF127
     /tmp/ccbdlM41.s:8969   .debug_str:0000000000000e59 .LASF128
     /tmp/ccbdlM41.s:8851   .debug_str:0000000000000a11 .LASF129
     /tmp/ccbdlM41.s:8961   .debug_str:0000000000000e1e .LASF130
     /tmp/ccbdlM41.s:8643   .debug_str:000000000000030f .LASF131
     /tmp/ccbdlM41.s:8651   .debug_str:0000000000000337 .LASF132
     /tmp/ccbdlM41.s:8873   .debug_str:0000000000000aea .LASF133
     /tmp/ccbdlM41.s:8977   .debug_str:0000000000000ea7 .LASF134
     /tmp/ccbdlM41.s:8559   .debug_str:0000000000000000 .LASF135
     /tmp/ccbdlM41.s:8763   .debug_str:0000000000000749 .LASF136
GAS LISTING /tmp/ccbdlM41.s 			page 88


     /tmp/ccbdlM41.s:9091   .debug_str:000000000000125a .LASF137
     /tmp/ccbdlM41.s:9031   .debug_str:0000000000001089 .LASF138
     /tmp/ccbdlM41.s:8997   .debug_str:0000000000000f50 .LASF139
     /tmp/ccbdlM41.s:8661   .debug_str:0000000000000383 .LASF140
     /tmp/ccbdlM41.s:8897   .debug_str:0000000000000c03 .LASF141
     /tmp/ccbdlM41.s:8935   .debug_str:0000000000000d0e .LASF142
     /tmp/ccbdlM41.s:8895   .debug_str:0000000000000bfd .LASF143
     /tmp/ccbdlM41.s:9181   .debug_str:0000000000001597 .LASF144
     /tmp/ccbdlM41.s:8573   .debug_str:000000000000008d .LASF145
     /tmp/ccbdlM41.s:8835   .debug_str:0000000000000999 .LASF146
     /tmp/ccbdlM41.s:9175   .debug_str:0000000000001554 .LASF147
     /tmp/ccbdlM41.s:8981   .debug_str:0000000000000eb9 .LASF148
     /tmp/ccbdlM41.s:9035   .debug_str:00000000000010b7 .LASF149
     /tmp/ccbdlM41.s:8975   .debug_str:0000000000000e81 .LASF150
     /tmp/ccbdlM41.s:9183   .debug_str:00000000000015af .LASF151
     /tmp/ccbdlM41.s:8805   .debug_str:00000000000008b4 .LASF152
     /tmp/ccbdlM41.s:8877   .debug_str:0000000000000b0c .LASF153
     /tmp/ccbdlM41.s:8613   .debug_str:00000000000001f1 .LASF154
     /tmp/ccbdlM41.s:9083   .debug_str:00000000000011e0 .LASF155
     /tmp/ccbdlM41.s:8983   .debug_str:0000000000000edc .LASF156
     /tmp/ccbdlM41.s:8567   .debug_str:0000000000000059 .LASF157
     /tmp/ccbdlM41.s:8601   .debug_str:000000000000018d .LASF158
     /tmp/ccbdlM41.s:8891   .debug_str:0000000000000bca .LASF159
     /tmp/ccbdlM41.s:8909   .debug_str:0000000000000c49 .LASF160
     /tmp/ccbdlM41.s:8767   .debug_str:0000000000000778 .LASF161
     /tmp/ccbdlM41.s:8901   .debug_str:0000000000000c18 .LASF162
     /tmp/ccbdlM41.s:8811   .debug_str:00000000000008f0 .LASF163
     /tmp/ccbdlM41.s:8929   .debug_str:0000000000000ce6 .LASF164
     /tmp/ccbdlM41.s:9119   .debug_str:000000000000134a .LASF165
     /tmp/ccbdlM41.s:9041   .debug_str:00000000000010d7 .LASF166
     /tmp/ccbdlM41.s:9053   .debug_str:0000000000001104 .LASF167
     /tmp/ccbdlM41.s:9115   .debug_str:000000000000132b .LASF168
     /tmp/ccbdlM41.s:9129   .debug_str:00000000000013cf .LASF169
     /tmp/ccbdlM41.s:8863   .debug_str:0000000000000aab .LASF170
     /tmp/ccbdlM41.s:8927   .debug_str:0000000000000cda .LASF171
     /tmp/ccbdlM41.s:9015   .debug_str:0000000000000fe7 .LASF174
     /tmp/ccbdlM41.s:9003   .debug_str:0000000000000f75 .LASF176
     /tmp/ccbdlM41.s:9105   .debug_str:00000000000012e3 .LASF172
     /tmp/ccbdlM41.s:9147   .debug_str:000000000000145c .LASF173
     /tmp/ccbdlM41.s:9103   .debug_str:00000000000012d1 .LASF175
     /tmp/ccbdlM41.s:8585   .debug_str:00000000000000f0 .LASF177
     /tmp/ccbdlM41.s:8803   .debug_str:00000000000008a1 .LASF178
     /tmp/ccbdlM41.s:8625   .debug_str:0000000000000253 .LASF179
     /tmp/ccbdlM41.s:8693   .debug_str:000000000000044a .LASF180
     /tmp/ccbdlM41.s:8619   .debug_str:000000000000021b .LASF181
     /tmp/ccbdlM41.s:8595   .debug_str:0000000000000151 .LASF182
     /tmp/ccbdlM41.s:9127   .debug_str:00000000000013c0 .LASF183
     /tmp/ccbdlM41.s:8859   .debug_str:0000000000000a84 .LASF184
     /tmp/ccbdlM41.s:9145   .debug_str:0000000000001443 .LASF185
     /tmp/ccbdlM41.s:8795   .debug_str:0000000000000843 .LASF186
     /tmp/ccbdlM41.s:8821   .debug_str:0000000000000922 .LASF187
     /tmp/ccbdlM41.s:9171   .debug_str:0000000000001507 .LASF188
     /tmp/ccbdlM41.s:8721   .debug_str:0000000000000505 .LASF189
     /tmp/ccbdlM41.s:9137   .debug_str:000000000000140b .LASF190
     /tmp/ccbdlM41.s:8733   .debug_str:000000000000055d .LASF191
     /tmp/ccbdlM41.s:9157   .debug_str:00000000000014ae .LASF192
     /tmp/ccbdlM41.s:8759   .debug_str:0000000000000727 .LASF193
GAS LISTING /tmp/ccbdlM41.s 			page 89


     /tmp/ccbdlM41.s:8587   .debug_str:0000000000000112 .LASF194
     /tmp/ccbdlM41.s:8825   .debug_str:000000000000093f .LASF195
     /tmp/ccbdlM41.s:8893   .debug_str:0000000000000bf1 .LASF196
     /tmp/ccbdlM41.s:8597   .debug_str:000000000000016c .LASF197
     /tmp/ccbdlM41.s:9067   .debug_str:000000000000117c .LASF198
     /tmp/ccbdlM41.s:8599   .debug_str:0000000000000188 .LASF199
     /tmp/ccbdlM41.s:9039   .debug_str:00000000000010d1 .LASF200
     /tmp/ccbdlM41.s:8959   .debug_str:0000000000000e11 .LASF201
     /tmp/ccbdlM41.s:8575   .debug_str:0000000000000095 .LASF202
     /tmp/ccbdlM41.s:8883   .debug_str:0000000000000b54 .LASF203
     /tmp/ccbdlM41.s:8697   .debug_str:0000000000000473 .LASF204
     /tmp/ccbdlM41.s:8797   .debug_str:000000000000086c .LASF205
     /tmp/ccbdlM41.s:8867   .debug_str:0000000000000ac2 .LASF206
     /tmp/ccbdlM41.s:8941   .debug_str:0000000000000d5f .LASF207
     /tmp/ccbdlM41.s:8925   .debug_str:0000000000000ccc .LASF208
     /tmp/ccbdlM41.s:8799   .debug_str:000000000000087d .LASF209
     /tmp/ccbdlM41.s:9139   .debug_str:000000000000141d .LASF210
     /tmp/ccbdlM41.s:9163   .debug_str:00000000000014cf .LASF211
     /tmp/ccbdlM41.s:9173   .debug_str:0000000000001530 .LASF213
     /tmp/ccbdlM41.s:2626   .text:0000000000001020 .LFB36
     /tmp/ccbdlM41.s:2705   .text:000000000000109c .LFE36
     /tmp/ccbdlM41.s:8771   .debug_str:0000000000000792 .LASF215
     /tmp/ccbdlM41.s:7261   .debug_loc:0000000000000000 .LLST83
     /tmp/ccbdlM41.s:2684   .text:000000000000107c .LVL273
     /tmp/ccbdlM41.s:2691   .text:0000000000001090 .LVL274
     /tmp/ccbdlM41.s:9007   .debug_str:0000000000000fa9 .LASF212
     /tmp/ccbdlM41.s:9123   .debug_str:0000000000001378 .LASF214
     /tmp/ccbdlM41.s:2573   .text:0000000000000fe8 .LFB35
     /tmp/ccbdlM41.s:2612   .text:0000000000001020 .LFE35
     /tmp/ccbdlM41.s:7294   .debug_loc:0000000000000088 .LLST81
     /tmp/ccbdlM41.s:8991   .debug_str:0000000000000f1d .LASF216
     /tmp/ccbdlM41.s:7325   .debug_loc:00000000000000ff .LLST82
     /tmp/ccbdlM41.s:2593   .text:0000000000001008 .LVL266
     /tmp/ccbdlM41.s:8699   .debug_str:000000000000047a .LASF217
     /tmp/ccbdlM41.s:9179   .debug_str:0000000000001571 .LASF219
     /tmp/ccbdlM41.s:2516   .text:0000000000000f80 .LFB34
     /tmp/ccbdlM41.s:2567   .text:0000000000000fe8 .LFE34
     /tmp/ccbdlM41.s:7332   .debug_loc:0000000000000122 .LLST80
     /tmp/ccbdlM41.s:2536   .text:0000000000000fa4 .LVL259
     /tmp/ccbdlM41.s:2541   .text:0000000000000fb0 .LVL260
     /tmp/ccbdlM41.s:2546   .text:0000000000000fbc .LVL261
     /tmp/ccbdlM41.s:2553   .text:0000000000000fd4 .LVL262
     /tmp/ccbdlM41.s:8729   .debug_str:000000000000054b .LASF218
     /tmp/ccbdlM41.s:8815   .debug_str:0000000000000904 .LASF220
     /tmp/ccbdlM41.s:2433   .text:0000000000000ef8 .LFB33
     /tmp/ccbdlM41.s:2510   .text:0000000000000f80 .LFE33
     /tmp/ccbdlM41.s:8829   .debug_str:0000000000000965 .LASF221
     /tmp/ccbdlM41.s:7350   .debug_loc:000000000000016e .LLST77
     /tmp/ccbdlM41.s:8911   .debug_str:0000000000000c5c .LASF222
     /tmp/ccbdlM41.s:7372   .debug_loc:00000000000001cd .LLST78
     /tmp/ccbdlM41.s:8531   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccbdlM41.s:7383   .debug_loc:0000000000000203 .LLST79
     /tmp/ccbdlM41.s:2474   .text:0000000000000f48 .LVL251
     /tmp/ccbdlM41.s:2489   .text:0000000000000f64 .LVL253
     /tmp/ccbdlM41.s:9141   .debug_str:000000000000142b .LASF223
     /tmp/ccbdlM41.s:8965   .debug_str:0000000000000e41 .LASF224
     /tmp/ccbdlM41.s:2310   .text:0000000000000df4 .LFB32
GAS LISTING /tmp/ccbdlM41.s 			page 90


     /tmp/ccbdlM41.s:2427   .text:0000000000000ef8 .LFE32
     /tmp/ccbdlM41.s:8667   .debug_str:00000000000003ca .LASF225
     /tmp/ccbdlM41.s:7390   .debug_loc:0000000000000226 .LLST74
     /tmp/ccbdlM41.s:8691   .debug_str:0000000000000444 .LASF226
     /tmp/ccbdlM41.s:7412   .debug_loc:0000000000000285 .LLST75
     /tmp/ccbdlM41.s:8611   .debug_str:00000000000001eb .LASF227
     /tmp/ccbdlM41.s:7419   .debug_loc:00000000000002a8 .LLST76
     /tmp/ccbdlM41.s:2331   .text:0000000000000e18 .LVL237
     /tmp/ccbdlM41.s:2372   .text:0000000000000e74 .LVL242
     /tmp/ccbdlM41.s:2400   .text:0000000000000ea4 .LVL245
     /tmp/ccbdlM41.s:2416   .text:0000000000000ed0 .LVL246
     /tmp/ccbdlM41.s:2424   .text:0000000000000ef4 .LVL247
     /tmp/ccbdlM41.s:9057   .debug_str:0000000000001115 .LASF228
     /tmp/ccbdlM41.s:8951   .debug_str:0000000000000dbc .LASF229
     /tmp/ccbdlM41.s:2004   .text:0000000000000b9c .LFB31
     /tmp/ccbdlM41.s:2168   .text:0000000000000cf8 .LFE31
     /tmp/ccbdlM41.s:7430   .debug_loc:00000000000002de .LLST71
     /tmp/ccbdlM41.s:7452   .debug_loc:000000000000033d .LLST72
     /tmp/ccbdlM41.s:2029   .text:0000000000000bcc .LVL200
     /tmp/ccbdlM41.s:2034   .text:0000000000000bdc .LVL201
     /tmp/ccbdlM41.s:2039   .text:0000000000000bec .LVL202
     /tmp/ccbdlM41.s:2044   .text:0000000000000bf8 .LVL203
     /tmp/ccbdlM41.s:2049   .text:0000000000000c08 .LVL204
     /tmp/ccbdlM41.s:2056   .text:0000000000000c20 .LVL205
     /tmp/ccbdlM41.s:2063   .text:0000000000000c38 .LVL206
     /tmp/ccbdlM41.s:2068   .text:0000000000000c48 .LVL207
     /tmp/ccbdlM41.s:2073   .text:0000000000000c58 .LVL208
     /tmp/ccbdlM41.s:2086   .text:0000000000000c6c .LVL210
     /tmp/ccbdlM41.s:2098   .text:0000000000000c84 .LVL212
     /tmp/ccbdlM41.s:2111   .text:0000000000000c98 .LVL214
     /tmp/ccbdlM41.s:2123   .text:0000000000000cb0 .LVL216
     /tmp/ccbdlM41.s:2136   .text:0000000000000cc4 .LVL218
     /tmp/ccbdlM41.s:2148   .text:0000000000000cdc .LVL220
     /tmp/ccbdlM41.s:8623   .debug_str:0000000000000243 .LASF230
     /tmp/ccbdlM41.s:8947   .debug_str:0000000000000d8c .LASF231
     /tmp/ccbdlM41.s:1918   .text:0000000000000b4c .LFB30
     /tmp/ccbdlM41.s:1966   .text:0000000000000b9c .LFE30
     /tmp/ccbdlM41.s:7459   .debug_loc:0000000000000360 .LLST68
     /tmp/ccbdlM41.s:7477   .debug_loc:00000000000003ac .LLST69
     /tmp/ccbdlM41.s:7499   .debug_loc:000000000000040b .LLST70
     /tmp/ccbdlM41.s:1941   .text:0000000000000b74 .LVL194
     /tmp/ccbdlM41.s:1948   .text:0000000000000b84 .LVL195
     /tmp/ccbdlM41.s:8665   .debug_str:00000000000003b9 .LASF232
     /tmp/ccbdlM41.s:8773   .debug_str:0000000000000799 .LASF233
     /tmp/ccbdlM41.s:1639   .text:0000000000000970 .LFB29
     /tmp/ccbdlM41.s:1828   .text:0000000000000aa8 .LFE29
     /tmp/ccbdlM41.s:7506   .debug_loc:000000000000042e .LLST59
     /tmp/ccbdlM41.s:8709   .debug_str:00000000000004b5 .LASF234
     /tmp/ccbdlM41.s:7528   .debug_loc:000000000000048d .LLST62
     /tmp/ccbdlM41.s:1716   .text:00000000000009f0 .LVL164
     /tmp/ccbdlM41.s:1724   .text:0000000000000a00 .LVL167
     /tmp/ccbdlM41.s:1756   .text:0000000000000a2c .LVL171
     /tmp/ccbdlM41.s:1673   .text:00000000000009a0 .LBB16
     /tmp/ccbdlM41.s:1710   .text:00000000000009e8 .LBE16
     /tmp/ccbdlM41.s:7543   .debug_loc:00000000000004d6 .LLST60
     /tmp/ccbdlM41.s:1677   .text:00000000000009a8 .LVL156
     /tmp/ccbdlM41.s:1685   .text:00000000000009b8 .LVL159
GAS LISTING /tmp/ccbdlM41.s 			page 91


     /tmp/ccbdlM41.s:1692   .text:00000000000009c8 .LVL160
     /tmp/ccbdlM41.s:1697   .text:00000000000009d4 .LVL161
     /tmp/ccbdlM41.s:1704   .text:00000000000009e4 .LVL162
     /tmp/ccbdlM41.s:1764   .text:0000000000000a30 .LBB17
     /tmp/ccbdlM41.s:1821   .text:0000000000000aa0 .LBE17
     /tmp/ccbdlM41.s:7554   .debug_loc:000000000000050c .LLST61
     /tmp/ccbdlM41.s:1769   .text:0000000000000a3c .LVL173
     /tmp/ccbdlM41.s:1779   .text:0000000000000a50 .LVL174
     /tmp/ccbdlM41.s:1787   .text:0000000000000a60 .LVL177
     /tmp/ccbdlM41.s:1794   .text:0000000000000a70 .LVL178
     /tmp/ccbdlM41.s:1799   .text:0000000000000a7c .LVL179
     /tmp/ccbdlM41.s:1806   .text:0000000000000a8c .LVL180
     /tmp/ccbdlM41.s:8955   .debug_str:0000000000000df2 .LASF235
     /tmp/ccbdlM41.s:9121   .debug_str:0000000000001355 .LASF236
     /tmp/ccbdlM41.s:1834   .text:0000000000000aa8 .LFB28
     /tmp/ccbdlM41.s:1912   .text:0000000000000b4c .LFE28
     /tmp/ccbdlM41.s:8819   .debug_str:000000000000091d .LASF237
     /tmp/ccbdlM41.s:7565   .debug_loc:0000000000000542 .LLST63
     /tmp/ccbdlM41.s:7583   .debug_loc:000000000000058e .LLST64
     /tmp/ccbdlM41.s:7601   .debug_loc:00000000000005da .LLST65
     /tmp/ccbdlM41.s:7619   .debug_loc:0000000000000626 .LLST66
     /tmp/ccbdlM41.s:9021   .debug_str:000000000000101d .LASF238
     /tmp/ccbdlM41.s:7637   .debug_loc:0000000000000672 .LLST67
     /tmp/ccbdlM41.s:1866   .text:0000000000000af0 .LVL184
     /tmp/ccbdlM41.s:1875   .text:0000000000000b04 .LVL186
     /tmp/ccbdlM41.s:1883   .text:0000000000000b24 .LVL187
     /tmp/ccbdlM41.s:8827   .debug_str:000000000000095b .LASF239
     /tmp/ccbdlM41.s:9143   .debug_str:0000000000001433 .LASF240
     /tmp/ccbdlM41.s:1601   .text:0000000000000938 .LFB27
     /tmp/ccbdlM41.s:1633   .text:0000000000000970 .LFE27
     /tmp/ccbdlM41.s:8609   .debug_str:00000000000001e5 .LASF241
     /tmp/ccbdlM41.s:7648   .debug_loc:00000000000006a8 .LLST56
     /tmp/ccbdlM41.s:9185   .debug_str:00000000000015bc .LASF242
     /tmp/ccbdlM41.s:7662   .debug_loc:00000000000006e1 .LLST57
     /tmp/ccbdlM41.s:7676   .debug_loc:000000000000071a .LLST58
     /tmp/ccbdlM41.s:1616   .text:0000000000000950 .LVL152
     /tmp/ccbdlM41.s:1620   .text:0000000000000958 .LVL153
     /tmp/ccbdlM41.s:8833   .debug_str:0000000000000982 .LASF243
     /tmp/ccbdlM41.s:8659   .debug_str:0000000000000367 .LASF244
     /tmp/ccbdlM41.s:2194   .text:0000000000000cf8 .LFB26
     /tmp/ccbdlM41.s:2299   .text:0000000000000df4 .LFE26
     /tmp/ccbdlM41.s:2252   .text:0000000000000d98 .LBB23
     /tmp/ccbdlM41.s:2280   .text:0000000000000dd0 .LBE23
     /tmp/ccbdlM41.s:7683   .debug_loc:000000000000073d .LLST73
     /tmp/ccbdlM41.s:2261   .text:0000000000000da8 .LVL232
     /tmp/ccbdlM41.s:2211   .text:0000000000000d1c .LVL224
     /tmp/ccbdlM41.s:2216   .text:0000000000000d2c .LVL225
     /tmp/ccbdlM41.s:2226   .text:0000000000000d50 .LVL226
     /tmp/ccbdlM41.s:2233   .text:0000000000000d68 .LVL227
     /tmp/ccbdlM41.s:2238   .text:0000000000000d78 .LVL228
     /tmp/ccbdlM41.s:2245   .text:0000000000000d88 .LVL229
     /tmp/ccbdlM41.s:2250   .text:0000000000000d98 .LVL230
     /tmp/ccbdlM41.s:2285   .text:0000000000000de0 .LVL234
     /tmp/ccbdlM41.s:8761   .debug_str:0000000000000738 .LASF245
     /tmp/ccbdlM41.s:8881   .debug_str:0000000000000b34 .LASF246
     /tmp/ccbdlM41.s:1419   .text:0000000000000800 .LFB25
     /tmp/ccbdlM41.s:1595   .text:0000000000000938 .LFE25
GAS LISTING /tmp/ccbdlM41.s 			page 92


     /tmp/ccbdlM41.s:7695   .debug_loc:0000000000000774 .LLST52
     /tmp/ccbdlM41.s:7721   .debug_loc:00000000000007e6 .LLST53
     /tmp/ccbdlM41.s:9133   .debug_str:00000000000013e5 .LASF247
     /tmp/ccbdlM41.s:7747   .debug_loc:0000000000000858 .LLST54
     /tmp/ccbdlM41.s:7758   .debug_loc:000000000000088e .LLST55
     /tmp/ccbdlM41.s:1472   .text:0000000000000864 .LVL137
     /tmp/ccbdlM41.s:1486   .text:0000000000000878 .LVL139
     /tmp/ccbdlM41.s:1497   .text:0000000000000888 .LVL140
     /tmp/ccbdlM41.s:1504   .text:0000000000000898 .LVL141
     /tmp/ccbdlM41.s:1549   .text:00000000000008e4 .LVL146
     /tmp/ccbdlM41.s:1560   .text:00000000000008fc .LVL147
     /tmp/ccbdlM41.s:1568   .text:0000000000000910 .LVL148
     /tmp/ccbdlM41.s:1576   .text:0000000000000924 .LVL149
     /tmp/ccbdlM41.s:8591   .debug_str:0000000000000130 .LASF248
     /tmp/ccbdlM41.s:9109   .debug_str:0000000000001305 .LASF249
     /tmp/ccbdlM41.s:1358   .text:000000000000077c .LFB24
     /tmp/ccbdlM41.s:1413   .text:0000000000000800 .LFE24
     /tmp/ccbdlM41.s:7769   .debug_loc:00000000000008c4 .LLST51
     /tmp/ccbdlM41.s:1378   .text:00000000000007a4 .LVL129
     /tmp/ccbdlM41.s:1385   .text:00000000000007bc .LVL130
     /tmp/ccbdlM41.s:1392   .text:00000000000007d4 .LVL131
     /tmp/ccbdlM41.s:1399   .text:00000000000007ec .LVL132
     /tmp/ccbdlM41.s:9023   .debug_str:0000000000001026 .LASF250
     /tmp/ccbdlM41.s:8757   .debug_str:0000000000000706 .LASF251
     /tmp/ccbdlM41.s:1297   .text:0000000000000730 .LFB23
     /tmp/ccbdlM41.s:1338   .text:000000000000077c .LFE23
     /tmp/ccbdlM41.s:7787   .debug_loc:0000000000000910 .LLST49
     /tmp/ccbdlM41.s:7801   .debug_loc:0000000000000949 .LLST50
     /tmp/ccbdlM41.s:8701   .debug_str:000000000000048d .LASF252
     /tmp/ccbdlM41.s:9089   .debug_str:000000000000123c .LASF255
     /tmp/ccbdlM41.s:1181   .text:00000000000006a0 .LFB22
     /tmp/ccbdlM41.s:1291   .text:0000000000000730 .LFE22
     /tmp/ccbdlM41.s:7815   .debug_loc:0000000000000982 .LLST45
     /tmp/ccbdlM41.s:7834   .debug_loc:00000000000009de .LLST46
     /tmp/ccbdlM41.s:8633   .debug_str:00000000000002d8 .LASF253
     /tmp/ccbdlM41.s:7845   .debug_loc:0000000000000a14 .LLST47
     /tmp/ccbdlM41.s:7856   .debug_loc:0000000000000a4a .LLST48
     /tmp/ccbdlM41.s:8953   .debug_str:0000000000000ddf .LASF254
     /tmp/ccbdlM41.s:9135   .debug_str:00000000000013f3 .LASF256
     /tmp/ccbdlM41.s:1082   .text:000000000000062c .LFB21
     /tmp/ccbdlM41.s:1175   .text:00000000000006a0 .LFE21
     /tmp/ccbdlM41.s:7867   .debug_loc:0000000000000a80 .LLST38
     /tmp/ccbdlM41.s:8677   .debug_str:0000000000000406 .LASF257
     /tmp/ccbdlM41.s:7881   .debug_loc:0000000000000ab9 .LLST39
     /tmp/ccbdlM41.s:8705   .debug_str:00000000000004a2 .LASF258
     /tmp/ccbdlM41.s:7898   .debug_loc:0000000000000b05 .LLST40
     /tmp/ccbdlM41.s:9073   .debug_str:00000000000011a5 .LASF259
     /tmp/ccbdlM41.s:8841   .debug_str:00000000000009ca .LASF260
     /tmp/ccbdlM41.s:1120   .text:0000000000000654 .LBB8
     /tmp/ccbdlM41.s:1163   .text:0000000000000690 .LBE8
     /tmp/ccbdlM41.s:7909   .debug_loc:0000000000000b3b .LLST41
     /tmp/ccbdlM41.s:1133   .text:0000000000000668 .LBB9
     /tmp/ccbdlM41.s:1162   .text:0000000000000690 .LBE9
     /tmp/ccbdlM41.s:8921   .debug_str:0000000000000ca1 .LASF261
     /tmp/ccbdlM41.s:7921   .debug_loc:0000000000000b72 .LLST42
     /tmp/ccbdlM41.s:8679   .debug_str:000000000000040f .LASF262
     /tmp/ccbdlM41.s:7932   .debug_loc:0000000000000ba8 .LLST43
GAS LISTING /tmp/ccbdlM41.s 			page 93


     /tmp/ccbdlM41.s:9187   .debug_str:00000000000015c6 .LASF263
     /tmp/ccbdlM41.s:7943   .debug_loc:0000000000000bde .LLST44
     /tmp/ccbdlM41.s:8765   .debug_str:000000000000076b .LASF264
     /tmp/ccbdlM41.s:8583   .debug_str:00000000000000d0 .LASF268
     /tmp/ccbdlM41.s:925    .text:0000000000000540 .LFB20
     /tmp/ccbdlM41.s:1076   .text:000000000000062c .LFE20
     /tmp/ccbdlM41.s:7954   .debug_loc:0000000000000c14 .LLST33
     /tmp/ccbdlM41.s:8903   .debug_str:0000000000000c22 .LASF265
     /tmp/ccbdlM41.s:7972   .debug_loc:0000000000000c60 .LLST34
     /tmp/ccbdlM41.s:8645   .debug_str:0000000000000318 .LASF266
     /tmp/ccbdlM41.s:7983   .debug_loc:0000000000000c96 .LLST35
     /tmp/ccbdlM41.s:998    .text:00000000000005b8 .LBB5
     /tmp/ccbdlM41.s:1019   .text:00000000000005d8 .LBE5
     /tmp/ccbdlM41.s:8008   .debug_loc:0000000000000cea .LLST36
     /tmp/ccbdlM41.s:1026   .text:00000000000005e0 .LBB7
     /tmp/ccbdlM41.s:1057   .text:0000000000000610 .LBE7
     /tmp/ccbdlM41.s:8020   .debug_loc:0000000000000d21 .LLST37
     /tmp/ccbdlM41.s:951    .text:0000000000000578 .LVL84
     /tmp/ccbdlM41.s:8933   .debug_str:0000000000000cfc .LASF267
     /tmp/ccbdlM41.s:8855   .debug_str:0000000000000a39 .LASF269
     /tmp/ccbdlM41.s:871    .text:00000000000004e8 .LFB19
     /tmp/ccbdlM41.s:919    .text:0000000000000540 .LFE19
     /tmp/ccbdlM41.s:8027   .debug_loc:0000000000000d44 .LLST31
     /tmp/ccbdlM41.s:8045   .debug_loc:0000000000000d90 .LLST32
     /tmp/ccbdlM41.s:896    .text:0000000000000518 .LVL78
     /tmp/ccbdlM41.s:902    .text:0000000000000528 .LVL79
     /tmp/ccbdlM41.s:8685   .debug_str:0000000000000426 .LASF270
     /tmp/ccbdlM41.s:9097   .debug_str:0000000000001289 .LASF271
     /tmp/ccbdlM41.s:817    .text:0000000000000490 .LFB18
     /tmp/ccbdlM41.s:865    .text:00000000000004e8 .LFE18
     /tmp/ccbdlM41.s:8063   .debug_loc:0000000000000ddc .LLST29
     /tmp/ccbdlM41.s:8081   .debug_loc:0000000000000e28 .LLST30
     /tmp/ccbdlM41.s:842    .text:00000000000004c0 .LVL71
     /tmp/ccbdlM41.s:848    .text:00000000000004d0 .LVL72
     /tmp/ccbdlM41.s:8789   .debug_str:0000000000000812 .LASF272
     /tmp/ccbdlM41.s:8629   .debug_str:0000000000000287 .LASF273
     /tmp/ccbdlM41.s:761    .text:0000000000000438 .LFB17
     /tmp/ccbdlM41.s:811    .text:0000000000000490 .LFE17
     /tmp/ccbdlM41.s:8099   .debug_loc:0000000000000e74 .LLST27
     /tmp/ccbdlM41.s:8117   .debug_loc:0000000000000ec0 .LLST28
     /tmp/ccbdlM41.s:788    .text:0000000000000468 .LVL64
     /tmp/ccbdlM41.s:794    .text:0000000000000478 .LVL65
     /tmp/ccbdlM41.s:8607   .debug_str:00000000000001d4 .LASF274
     /tmp/ccbdlM41.s:8563   .debug_str:000000000000001b .LASF275
     /tmp/ccbdlM41.s:705    .text:00000000000003e0 .LFB16
     /tmp/ccbdlM41.s:755    .text:0000000000000438 .LFE16
     /tmp/ccbdlM41.s:8124   .debug_loc:0000000000000ee3 .LLST25
     /tmp/ccbdlM41.s:8142   .debug_loc:0000000000000f2f .LLST26
     /tmp/ccbdlM41.s:732    .text:0000000000000410 .LVL57
     /tmp/ccbdlM41.s:738    .text:0000000000000420 .LVL58
     /tmp/ccbdlM41.s:8577   .debug_str:00000000000000ab .LASF276
     /tmp/ccbdlM41.s:9125   .debug_str:000000000000139d .LASF277
     /tmp/ccbdlM41.s:634    .text:0000000000000384 .LFB15
     /tmp/ccbdlM41.s:699    .text:00000000000003e0 .LFE15
     /tmp/ccbdlM41.s:8785   .debug_str:0000000000000801 .LASF278
     /tmp/ccbdlM41.s:8775   .debug_str:00000000000007bd .LASF279
     /tmp/ccbdlM41.s:9065   .debug_str:0000000000001159 .LASF280
GAS LISTING /tmp/ccbdlM41.s 			page 94


     /tmp/ccbdlM41.s:590    .text:0000000000000350 .LFB14
     /tmp/ccbdlM41.s:628    .text:0000000000000384 .LFE14
     /tmp/ccbdlM41.s:8653   .debug_str:0000000000000341 .LASF281
     /tmp/ccbdlM41.s:8749   .debug_str:00000000000006b3 .LASF282
     /tmp/ccbdlM41.s:561    .text:0000000000000330 .LFB13
     /tmp/ccbdlM41.s:584    .text:0000000000000350 .LFE13
     /tmp/ccbdlM41.s:8149   .debug_loc:0000000000000f52 .LLST24
     /tmp/ccbdlM41.s:9165   .debug_str:00000000000014e0 .LASF283
     /tmp/ccbdlM41.s:8655   .debug_str:0000000000000347 .LASF284
     /tmp/ccbdlM41.s:529    .text:0000000000000308 .LFB12
     /tmp/ccbdlM41.s:555    .text:0000000000000330 .LFE12
     /tmp/ccbdlM41.s:8163   .debug_loc:0000000000000f8b .LLST23
     /tmp/ccbdlM41.s:8847   .debug_str:00000000000009f6 .LASF285
     /tmp/ccbdlM41.s:9085   .debug_str:0000000000001202 .LASF286
     /tmp/ccbdlM41.s:411    .text:0000000000000250 .LFB11
     /tmp/ccbdlM41.s:523    .text:0000000000000308 .LFE11
     /tmp/ccbdlM41.s:8177   .debug_loc:0000000000000fc4 .LLST19
     /tmp/ccbdlM41.s:8199   .debug_loc:0000000000001023 .LLST20
     /tmp/ccbdlM41.s:8621   .debug_str:000000000000023e .LASF287
     /tmp/ccbdlM41.s:8210   .debug_loc:0000000000001059 .LLST21
     /tmp/ccbdlM41.s:432    .text:0000000000000274 .LBB4
     /tmp/ccbdlM41.s:473    .text:00000000000002b8 .LBE4
     /tmp/ccbdlM41.s:8221   .debug_loc:000000000000108f .LLST22
     /tmp/ccbdlM41.s:448    .text:0000000000000294 .LVL37
     /tmp/ccbdlM41.s:488    .text:00000000000002d4 .LVL44
     /tmp/ccbdlM41.s:9005   .debug_str:0000000000000f97 .LASF288
     /tmp/ccbdlM41.s:9087   .debug_str:000000000000121d .LASF289
     /tmp/ccbdlM41.s:365    .text:0000000000000208 .LFB10
     /tmp/ccbdlM41.s:405    .text:0000000000000250 .LFE10
     /tmp/ccbdlM41.s:8232   .debug_loc:00000000000010c5 .LLST17
     /tmp/ccbdlM41.s:8246   .debug_loc:00000000000010fe .LLST18
     /tmp/ccbdlM41.s:9079   .debug_str:00000000000011cd .LASF290
     /tmp/ccbdlM41.s:8987   .debug_str:0000000000000ef1 .LASF291
     /tmp/ccbdlM41.s:323    .text:00000000000001c8 .LFB9
     /tmp/ccbdlM41.s:359    .text:0000000000000208 .LFE9
     /tmp/ccbdlM41.s:8260   .debug_loc:0000000000001137 .LLST15
     /tmp/ccbdlM41.s:8274   .debug_loc:0000000000001170 .LLST16
     /tmp/ccbdlM41.s:8853   .debug_str:0000000000000a25 .LASF292
     /tmp/ccbdlM41.s:8753   .debug_str:00000000000006d2 .LASF293
     /tmp/ccbdlM41.s:248    .text:0000000000000150 .LFB8
     /tmp/ccbdlM41.s:317    .text:00000000000001c8 .LFE8
     /tmp/ccbdlM41.s:8288   .debug_loc:00000000000011a9 .LLST12
     /tmp/ccbdlM41.s:9077   .debug_str:00000000000011ba .LASF294
     /tmp/ccbdlM41.s:8313   .debug_loc:000000000000120e .LLST13
     /tmp/ccbdlM41.s:271    .text:000000000000016c .LBB3
     /tmp/ccbdlM41.s:289    .text:000000000000018c .LBE3
     /tmp/ccbdlM41.s:8324   .debug_loc:0000000000001244 .LLST14
     /tmp/ccbdlM41.s:301    .text:00000000000001b0 .LVL27
     /tmp/ccbdlM41.s:9049   .debug_str:00000000000010f4 .LASF295
     /tmp/ccbdlM41.s:8887   .debug_str:0000000000000b7f .LASF296
     /tmp/ccbdlM41.s:155    .text:00000000000000c4 .LFB7
     /tmp/ccbdlM41.s:237    .text:0000000000000150 .LFE7
     /tmp/ccbdlM41.s:8336   .debug_loc:000000000000127b .LLST6
     /tmp/ccbdlM41.s:8905   .debug_str:0000000000000c2a .LASF297
     /tmp/ccbdlM41.s:8354   .debug_loc:00000000000012c7 .LLST7
     /tmp/ccbdlM41.s:8372   .debug_loc:0000000000001313 .LLST8
     /tmp/ccbdlM41.s:8391   .debug_loc:0000000000001360 .LLST9
GAS LISTING /tmp/ccbdlM41.s 			page 95


     /tmp/ccbdlM41.s:8410   .debug_loc:00000000000013ad .LLST10
     /tmp/ccbdlM41.s:8429   .debug_loc:00000000000013fa .LLST11
     /tmp/ccbdlM41.s:189    .text:000000000000010c .LVL14
     /tmp/ccbdlM41.s:9069   .debug_str:0000000000001183 .LASF298
     /tmp/ccbdlM41.s:8735   .debug_str:000000000000056a .LASF299
     /tmp/ccbdlM41.s:59     .text:0000000000000034 .LFB6
     /tmp/ccbdlM41.s:149    .text:00000000000000c4 .LFE6
     /tmp/ccbdlM41.s:8448   .debug_loc:0000000000001447 .LLST2
     /tmp/ccbdlM41.s:8470   .debug_loc:00000000000014a6 .LLST3
     /tmp/ccbdlM41.s:8477   .debug_loc:00000000000014c9 .LLST4
     /tmp/ccbdlM41.s:102    .text:0000000000000074 .LBB2
     /tmp/ccbdlM41.s:121    .text:0000000000000098 .LBE2
     /tmp/ccbdlM41.s:9101   .debug_str:00000000000012c8 .LASF300
     /tmp/ccbdlM41.s:8489   .debug_loc:0000000000001500 .LLST5
     /tmp/ccbdlM41.s:113    .text:0000000000000090 .LVL7
     /tmp/ccbdlM41.s:9111   .debug_str:000000000000131f .LASF301
     /tmp/ccbdlM41.s:8673   .debug_str:00000000000003e7 .LASF302
     /tmp/ccbdlM41.s:10     .text:0000000000000000 .LFB5
     /tmp/ccbdlM41.s:53     .text:0000000000000034 .LFE5
     /tmp/ccbdlM41.s:8496   .debug_loc:0000000000001523 .LLST0
     /tmp/ccbdlM41.s:8507   .debug_loc:0000000000001559 .LLST1
     /tmp/ccbdlM41.s:8937   .debug_str:0000000000000d31 .LASF303
     /tmp/ccbdlM41.s:8605   .debug_str:00000000000001c8 .LASF305
     /tmp/ccbdlM41.s:8589   .debug_str:000000000000011e .LASF304
     /tmp/ccbdlM41.s:8635   .debug_str:00000000000002e0 .LASF306
     /tmp/ccbdlM41.s:9063   .debug_str:0000000000001137 .LASF307
     /tmp/ccbdlM41.s:8999   .debug_str:0000000000000f61 .LASF308
     /tmp/ccbdlM41.s:8923   .debug_str:0000000000000ca9 .LASF309
     /tmp/ccbdlM41.s:8671   .debug_str:00000000000003dc .LASF310
     /tmp/ccbdlM41.s:2629   .text:0000000000001020 .LVL269
     /tmp/ccbdlM41.s:2651   .text:0000000000001048 .LVL270
     /tmp/ccbdlM41.s:2673   .text:0000000000001064 .LVL271
     /tmp/ccbdlM41.s:2677   .text:000000000000106c .LVL272
     /tmp/ccbdlM41.s:2693   .text:0000000000001094 .LVL275
     /tmp/ccbdlM41.s:2701   .text:0000000000001098 .LVL276
     /tmp/ccbdlM41.s:2576   .text:0000000000000fe8 .LVL264
     /tmp/ccbdlM41.s:2591   .text:0000000000001000 .LVL265
     /tmp/ccbdlM41.s:2604   .text:0000000000001018 .LVL267
     /tmp/ccbdlM41.s:2608   .text:000000000000101c .LVL268
     /tmp/ccbdlM41.s:2519   .text:0000000000000f80 .LVL257
     /tmp/ccbdlM41.s:2534   .text:0000000000000f9c .LVL258
     /tmp/ccbdlM41.s:2562   .text:0000000000000fe0 .LVL263
     /tmp/ccbdlM41.s:2436   .text:0000000000000ef8 .LVL248
     /tmp/ccbdlM41.s:2459   .text:0000000000000f20 .LVL249
     /tmp/ccbdlM41.s:2502   .text:0000000000000f74 .LVL255
     /tmp/ccbdlM41.s:2506   .text:0000000000000f7c .LVL256
     /tmp/ccbdlM41.s:2472   .text:0000000000000f40 .LVL250
     /tmp/ccbdlM41.s:2499   .text:0000000000000f70 .LVL254
     /tmp/ccbdlM41.s:2313   .text:0000000000000df4 .LVL236
     /tmp/ccbdlM41.s:2350   .text:0000000000000e3c .LVL239
     /tmp/ccbdlM41.s:2374   .text:0000000000000e78 .LVL243
     /tmp/ccbdlM41.s:2393   .text:0000000000000e98 .LVL244
     /tmp/ccbdlM41.s:2344   .text:0000000000000e34 .LVL238
     /tmp/ccbdlM41.s:2354   .text:0000000000000e40 .LVL240
     /tmp/ccbdlM41.s:2368   .text:0000000000000e64 .LVL241
     /tmp/ccbdlM41.s:2007   .text:0000000000000b9c .LVL198
     /tmp/ccbdlM41.s:2027   .text:0000000000000bc4 .LVL199
GAS LISTING /tmp/ccbdlM41.s 			page 96


     /tmp/ccbdlM41.s:2160   .text:0000000000000cec .LVL222
     /tmp/ccbdlM41.s:2164   .text:0000000000000cf4 .LVL223
     /tmp/ccbdlM41.s:2077   .text:0000000000000c5c .LVL209
     /tmp/ccbdlM41.s:2157   .text:0000000000000ce8 .LVL221
     /tmp/ccbdlM41.s:1921   .text:0000000000000b4c .LVL193
     /tmp/ccbdlM41.s:1962   .text:0000000000000b98 .LVL197
     /tmp/ccbdlM41.s:1958   .text:0000000000000b90 .LVL196
     /tmp/ccbdlM41.s:1642   .text:0000000000000970 .LVL154
     /tmp/ccbdlM41.s:1662   .text:0000000000000994 .LVL155
     /tmp/ccbdlM41.s:1741   .text:0000000000000a14 .LVL169
     /tmp/ccbdlM41.s:1747   .text:0000000000000a20 .LVL170
     /tmp/ccbdlM41.s:1718   .text:00000000000009f4 .LVL165
     /tmp/ccbdlM41.s:1722   .text:00000000000009f8 .LVL166
     /tmp/ccbdlM41.s:1727   .text:0000000000000a04 .LVL168
     /tmp/ccbdlM41.s:1760   .text:0000000000000a30 .LVL172
     /tmp/ccbdlM41.s:1679   .text:00000000000009ac .LVL157
     /tmp/ccbdlM41.s:1683   .text:00000000000009b0 .LVL158
     /tmp/ccbdlM41.s:1708   .text:00000000000009e8 .LVL163
     /tmp/ccbdlM41.s:1781   .text:0000000000000a54 .LVL175
     /tmp/ccbdlM41.s:1785   .text:0000000000000a58 .LVL176
     /tmp/ccbdlM41.s:1810   .text:0000000000000a90 .LVL181
     /tmp/ccbdlM41.s:1837   .text:0000000000000aa8 .LVL182
     /tmp/ccbdlM41.s:1863   .text:0000000000000ae4 .LVL183
     /tmp/ccbdlM41.s:1901   .text:0000000000000b3c .LVL190
     /tmp/ccbdlM41.s:1898   .text:0000000000000b38 .LVL189
     /tmp/ccbdlM41.s:1904   .text:0000000000000b40 .LVL191
     /tmp/ccbdlM41.s:1907   .text:0000000000000b44 .LVL192
     /tmp/ccbdlM41.s:1868   .text:0000000000000af4 .LVL185
     /tmp/ccbdlM41.s:1895   .text:0000000000000b34 .LVL188
     /tmp/ccbdlM41.s:1604   .text:0000000000000938 .LVL151
     /tmp/ccbdlM41.s:2256   .text:0000000000000da0 .LVL231
     /tmp/ccbdlM41.s:2294   .text:0000000000000dec .LVL235
     /tmp/ccbdlM41.s:1422   .text:0000000000000800 .LVL134
     /tmp/ccbdlM41.s:1530   .text:00000000000008c0 .LVL143
     /tmp/ccbdlM41.s:1541   .text:00000000000008d4 .LVL145
     /tmp/ccbdlM41.s:1584   .text:0000000000000934 .LVL150
     /tmp/ccbdlM41.s:1470   .text:000000000000085c .LVL136
     /tmp/ccbdlM41.s:1535   .text:00000000000008c8 .LVL144
     /tmp/ccbdlM41.s:1458   .text:0000000000000848 .LVL135
     /tmp/ccbdlM41.s:1519   .text:00000000000008b4 .LVL142
     /tmp/ccbdlM41.s:1476   .text:0000000000000868 .LVL138
     /tmp/ccbdlM41.s:1361   .text:000000000000077c .LVL127
     /tmp/ccbdlM41.s:1376   .text:000000000000079c .LVL128
     /tmp/ccbdlM41.s:1408   .text:00000000000007f8 .LVL133
     /tmp/ccbdlM41.s:1300   .text:0000000000000730 .LVL124
     /tmp/ccbdlM41.s:1316   .text:0000000000000750 .LVL126
     /tmp/ccbdlM41.s:1312   .text:0000000000000748 .LVL125
     /tmp/ccbdlM41.s:1184   .text:00000000000006a0 .LVL111
     /tmp/ccbdlM41.s:1199   .text:00000000000006bc .LVL112
     /tmp/ccbdlM41.s:1283   .text:0000000000000728 .LVL122
     /tmp/ccbdlM41.s:1288   .text:000000000000072c .LVL123
     /tmp/ccbdlM41.s:1232   .text:00000000000006e8 .LVL116
     /tmp/ccbdlM41.s:1243   .text:00000000000006f4 .LVL117
     /tmp/ccbdlM41.s:1201   .text:00000000000006c0 .LVL113
     /tmp/ccbdlM41.s:1207   .text:00000000000006c4 .LVL114
     /tmp/ccbdlM41.s:1227   .text:00000000000006e0 .LVL115
     /tmp/ccbdlM41.s:1251   .text:00000000000006fc .LVL119
GAS LISTING /tmp/ccbdlM41.s 			page 97


     /tmp/ccbdlM41.s:1257   .text:0000000000000700 .LVL120
     /tmp/ccbdlM41.s:1277   .text:000000000000071c .LVL121
     /tmp/ccbdlM41.s:1085   .text:000000000000062c .LVL97
     /tmp/ccbdlM41.s:1167   .text:0000000000000694 .LVL110
     /tmp/ccbdlM41.s:1093   .text:0000000000000638 .LVL98
     /tmp/ccbdlM41.s:1096   .text:000000000000063c .LVL99
     /tmp/ccbdlM41.s:1158   .text:000000000000068c .LVL108
     /tmp/ccbdlM41.s:1160   .text:0000000000000690 .LVL109
     /tmp/ccbdlM41.s:1116   .text:0000000000000654 .LVL101
     /tmp/ccbdlM41.s:1155   .text:0000000000000688 .LVL107
     /tmp/ccbdlM41.s:1124   .text:000000000000065c .LVL102
     /tmp/ccbdlM41.s:1128   .text:0000000000000660 .LVL103
     /tmp/ccbdlM41.s:1137   .text:000000000000066c .LVL104
     /tmp/ccbdlM41.s:1143   .text:0000000000000674 .LVL105
     /tmp/ccbdlM41.s:1147   .text:0000000000000678 .LVL106
     /tmp/ccbdlM41.s:928    .text:0000000000000540 .LVL82
     /tmp/ccbdlM41.s:949    .text:0000000000000570 .LVL83
     /tmp/ccbdlM41.s:1071   .text:0000000000000624 .LVL96
     /tmp/ccbdlM41.s:965    .text:0000000000000590 .LVL85
     /tmp/ccbdlM41.s:1055   .text:0000000000000610 .LVL95
     /tmp/ccbdlM41.s:984    .text:00000000000005a8 .LVL86
     /tmp/ccbdlM41.s:988    .text:00000000000005ac .LVL87
     /tmp/ccbdlM41.s:993    .text:00000000000005b4 .LVL88
     /tmp/ccbdlM41.s:996    .text:00000000000005b8 .LVL89
     /tmp/ccbdlM41.s:1001   .text:00000000000005bc .LVL90
     /tmp/ccbdlM41.s:1029   .text:00000000000005e4 .LVL92
     /tmp/ccbdlM41.s:874    .text:00000000000004e8 .LVL75
     /tmp/ccbdlM41.s:894    .text:0000000000000510 .LVL77
     /tmp/ccbdlM41.s:914    .text:0000000000000538 .LVL81
     /tmp/ccbdlM41.s:892    .text:000000000000050c .LVL76
     /tmp/ccbdlM41.s:911    .text:0000000000000534 .LVL80
     /tmp/ccbdlM41.s:820    .text:0000000000000490 .LVL68
     /tmp/ccbdlM41.s:840    .text:00000000000004b8 .LVL70
     /tmp/ccbdlM41.s:860    .text:00000000000004e0 .LVL74
     /tmp/ccbdlM41.s:838    .text:00000000000004b4 .LVL69
     /tmp/ccbdlM41.s:857    .text:00000000000004dc .LVL73
     /tmp/ccbdlM41.s:764    .text:0000000000000438 .LVL61
     /tmp/ccbdlM41.s:786    .text:0000000000000460 .LVL63
     /tmp/ccbdlM41.s:803    .text:0000000000000484 .LVL66
     /tmp/ccbdlM41.s:781    .text:0000000000000458 .LVL62
     /tmp/ccbdlM41.s:806    .text:0000000000000488 .LVL67
     /tmp/ccbdlM41.s:708    .text:00000000000003e0 .LVL54
     /tmp/ccbdlM41.s:730    .text:0000000000000408 .LVL56
     /tmp/ccbdlM41.s:747    .text:000000000000042c .LVL59
     /tmp/ccbdlM41.s:725    .text:0000000000000400 .LVL55
     /tmp/ccbdlM41.s:750    .text:0000000000000430 .LVL60
     /tmp/ccbdlM41.s:564    .text:0000000000000330 .LVL50
     /tmp/ccbdlM41.s:574    .text:0000000000000340 .LVL51
     /tmp/ccbdlM41.s:532    .text:0000000000000308 .LVL48
     /tmp/ccbdlM41.s:544    .text:000000000000031c .LVL49
     /tmp/ccbdlM41.s:414    .text:0000000000000250 .LVL35
     /tmp/ccbdlM41.s:435    .text:0000000000000278 .LVL36
     /tmp/ccbdlM41.s:510    .text:00000000000002f4 .LVL46
     /tmp/ccbdlM41.s:516    .text:0000000000000300 .LVL47
     /tmp/ccbdlM41.s:467    .text:00000000000002b4 .LVL40
     /tmp/ccbdlM41.s:471    .text:00000000000002b8 .LVL41
     /tmp/ccbdlM41.s:480    .text:00000000000002c0 .LVL43
GAS LISTING /tmp/ccbdlM41.s 			page 98


     /tmp/ccbdlM41.s:496    .text:00000000000002e0 .LVL45
     /tmp/ccbdlM41.s:463    .text:00000000000002ac .LVL39
     /tmp/ccbdlM41.s:476    .text:00000000000002bc .LVL42
     /tmp/ccbdlM41.s:368    .text:0000000000000208 .LVL32
     /tmp/ccbdlM41.s:384    .text:0000000000000228 .LVL34
     /tmp/ccbdlM41.s:380    .text:0000000000000220 .LVL33
     /tmp/ccbdlM41.s:326    .text:00000000000001c8 .LVL29
     /tmp/ccbdlM41.s:342    .text:00000000000001e8 .LVL31
     /tmp/ccbdlM41.s:338    .text:00000000000001e0 .LVL30
     /tmp/ccbdlM41.s:251    .text:0000000000000150 .LVL20
     /tmp/ccbdlM41.s:299    .text:00000000000001a8 .LVL26
     /tmp/ccbdlM41.s:312    .text:00000000000001c0 .LVL28
     /tmp/ccbdlM41.s:265    .text:0000000000000168 .LVL21
     /tmp/ccbdlM41.s:270    .text:000000000000016c .LVL22
     /tmp/ccbdlM41.s:275    .text:0000000000000174 .LVL23
     /tmp/ccbdlM41.s:293    .text:0000000000000190 .LVL25
     /tmp/ccbdlM41.s:158    .text:00000000000000c4 .LVL11
     /tmp/ccbdlM41.s:179    .text:00000000000000f0 .LVL12
     /tmp/ccbdlM41.s:220    .text:0000000000000138 .LVL15
     /tmp/ccbdlM41.s:187    .text:0000000000000104 .LVL13
     /tmp/ccbdlM41.s:232    .text:0000000000000148 .LVL19
     /tmp/ccbdlM41.s:229    .text:0000000000000144 .LVL18
     /tmp/ccbdlM41.s:226    .text:0000000000000140 .LVL17
     /tmp/ccbdlM41.s:223    .text:000000000000013c .LVL16
     /tmp/ccbdlM41.s:62     .text:0000000000000034 .LVL3
     /tmp/ccbdlM41.s:94     .text:000000000000006c .LVL5
     /tmp/ccbdlM41.s:124    .text:000000000000009c .LVL9
     /tmp/ccbdlM41.s:128    .text:00000000000000a0 .LVL10
     /tmp/ccbdlM41.s:90     .text:0000000000000068 .LVL4
     /tmp/ccbdlM41.s:120    .text:0000000000000098 .LVL8
     /tmp/ccbdlM41.s:106    .text:0000000000000078 .LVL6
     /tmp/ccbdlM41.s:14     .text:0000000000000000 .LVL0
     /tmp/ccbdlM41.s:34     .text:000000000000001c .LVL1
     /tmp/ccbdlM41.s:38     .text:0000000000000020 .LVL2
     /tmp/ccbdlM41.s:2723   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccbdlM41.s:1203   .text:00000000000006c0 .LBB10
     /tmp/ccbdlM41.s:1209   .text:00000000000006c4 .LBE10
     /tmp/ccbdlM41.s:1213   .text:00000000000006c8 .LBB11
     /tmp/ccbdlM41.s:1234   .text:00000000000006e8 .LBE11
     /tmp/ccbdlM41.s:1253   .text:00000000000006fc .LBB12
     /tmp/ccbdlM41.s:1259   .text:0000000000000700 .LBE12
     /tmp/ccbdlM41.s:1263   .text:0000000000000704 .LBB13
     /tmp/ccbdlM41.s:1285   .text:0000000000000728 .LBE13
     /tmp/ccbdlM41.s:1712   .text:00000000000009e8 .LBB18
     /tmp/ccbdlM41.s:1729   .text:0000000000000a04 .LBE18
     /tmp/ccbdlM41.s:1751   .text:0000000000000a20 .LBB19
     /tmp/ccbdlM41.s:1762   .text:0000000000000a30 .LBE19
     /tmp/ccbdlM41.s:2453   .text:0000000000000f18 .LBB24
     /tmp/ccbdlM41.s:2456   .text:0000000000000f1c .LBE24
     /tmp/ccbdlM41.s:2461   .text:0000000000000f20 .LBB25
     /tmp/ccbdlM41.s:2482   .text:0000000000000f54 .LBE25

UNDEFINED SYMBOLS
_Z10buddy_freeP14buddyAllocatorPvm
_Z11buddy_allocP14buddyAllocatorm
_ZN8KConsole15trapPrintStringEPKc
_ZN8KConsole18trapPrintStringIntEPKcmi
GAS LISTING /tmp/ccbdlM41.s 			page 99


_Z10buddy_initPvm
_Z11getDeg2Ceilm
